{
  "hash": "9586b7850bb16628324c98562d4a0b1a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"新時代の MCMC を迎えるために\"\nsubtitle: \"連続時間アルゴリズムへの進化\"\nimage: ../../../static/Posters/ISM-OH2024.jpg\nauthor: \n    - name: \"司馬博文\"\n      orcid: 0009-0007-8251-1224\n      affiliation:\n        - name: 総合研究大学院大学先端学術院（統計科学コース）\n          url: https://www.ism.ac.jp/senkou/\n          group: ５年一貫博士課程\ndate: 5/24/2024\nkeywords:\n    - マルコフ連鎖モンテカルロ法（MCMC）\n    - 連続時間 MCMC\n    - ハミルトニアンモンテカルロ法（HMC）\n    - \"区分的確定的マルコフ過程（PDMP: piecewise deterministic Markov process）\"\ncategories: [MCMC, Simulation, Poster]\nbibliography: \n    - ../../../mathematics.bib\n    - ../../../bib.bib\ncsl: ../../../apa.csl\nabstract-title: 概要\nabstract: 物質科学を震源地とする MCMC のイノベーションが，統計力学と統計学の分野に波及して来ています．その結果，ここ 10 年で急激に MCMC 手法の革新が起こりました．従来 MCMC が離散時間ベースだったところが，イベントベースかつ連続時間ベースなものにとって替わられようとしているのです．これら連続時間 MCMC はどのような手法なのか？従来法を超えるのか？どのような場面で使えるのか？……等々疑問は尽きません．この新たな手法を正しく受け止めるために，現状の MCMC への理解から，新手法がどのように生まれたかの軌跡を辿り，現状の理解を確かめます．\ncopyright: \"Copyright Hirofumi Shiba 2024. All Rights Reserved\"\ntoc-title: 目次\n---\n\n::: {.hidden}\n\nA Blog Entry on Bayesian Computation by an Applied Mathematician\n\n$$\n\\usepackage[all]{xy}\\usepackage{amsmath}\\newcommand{\\y}{\\b{y}}\\newcommand{\\mi}{\\,|\\,}\\newcommand{\\Mark}{\\mathrm{Mark}}\n\n%%% 演算子\n\\DeclareMathOperator{\\grad}{\\mathrm{grad}}\\DeclareMathOperator{\\rot}{\\mathrm{rot}}\\DeclareMathOperator{\\divergence}{\\mathrm{div}}\\DeclareMathOperator{\\tr}{tr}\\DeclareMathOperator{\\Tr}{Tr}\\newcommand{\\pr}{\\mathrm{pr}}\n\\newcommand{\\Map}{\\mathrm{Map}}\\newcommand{\\dom}{\\mathrm{Dom}\\;}\\newcommand{\\cod}{\\mathrm{Cod}\\;}\\newcommand{\\supp}{\\mathrm{supp}\\;}\n\n\n%%% 線型代数学\n\\newcommand{\\vctr}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\vctrr}[3]{\\begin{pmatrix}#1\\\\#2\\\\#3\\end{pmatrix}}\\newcommand{\\mtrx}[4]{\\begin{pmatrix}#1&#2\\\\#3&#4\\end{pmatrix}}\\newcommand{\\smtrx}[4]{\\paren{\\begin{smallmatrix}#1&#2\\\\#3&#4\\end{smallmatrix}}}\\newcommand{\\Ker}{\\mathrm{Ker}\\;}\\newcommand{\\Coker}{\\mathrm{Coker}\\;}\\newcommand{\\Coim}{\\mathrm{Coim}\\;}\\DeclareMathOperator{\\rank}{\\mathrm{rank}}\\newcommand{\\lcm}{\\mathrm{lcm}}\\newcommand{\\GL}{\\mathrm{GL}}\\newcommand{\\SL}{\\mathrm{SL}}\\newcommand{\\alt}{\\mathrm{alt}}\\DeclareMathOperator{\\sgn}{sgn}\n%%% 複素解析学\n\\renewcommand{\\Re}{\\mathrm{Re}\\;}\\renewcommand{\\Im}{\\mathrm{Im}\\,}\\newcommand{\\Gal}{\\mathrm{Gal}}\\newcommand{\\PGL}{\\mathrm{PGL}}\\newcommand{\\PSL}{\\mathrm{PSL}}\\newcommand{\\Log}{\\mathrm{Log}\\,}\\newcommand{\\Res}{\\mathrm{Res}\\,}\\newcommand{\\on}{\\mathrm{on}\\;}\\newcommand{\\hatC}{\\widehat{\\C}}\\newcommand{\\hatR}{\\hat{\\R}}\\newcommand{\\PV}{\\mathrm{P.V.}}\\newcommand{\\diam}{\\mathrm{diam}}\\newcommand{\\Area}{\\mathrm{Area}}\\newcommand{\\Lap}{\\Laplace}\\newcommand{\\f}{\\mathbf{f}}\\newcommand{\\cR}{\\mathcal{R}}\\newcommand{\\const}{\\mathrm{const.}}\\newcommand{\\Om}{\\Omega}\\newcommand{\\Cinf}{C^\\infty}\\newcommand{\\ep}{\\epsilon}\\newcommand{\\dist}{\\mathrm{dist}}\\newcommand{\\opart}{\\o{\\partial}}\\newcommand{\\Length}{\\mathrm{Length}}\n%%% 集合と位相\n\\newcommand{\\cA}{\\mathcal{A}}\\newcommand{\\cO}{\\mathcal{O}}\\newcommand{\\cW}{\\mathcal{W}}\\renewcommand{\\O}{\\mathcal{O}}\\renewcommand{\\S}{\\mathcal{S}}\\newcommand{\\U}{\\mathcal{U}}\\newcommand{\\V}{\\mathrm{V}}\\renewcommand{\\P}{\\operatorname{P}}\\newcommand{\\R}{\\mathbb{R}}\\newcommand{\\N}{\\mathbb{N}}\\newcommand{\\bN}{\\mathbb{N}}\\newcommand{\\C}{\\mathrm{C}}\\newcommand{\\bC}{\\mathbb{C}}\\newcommand{\\Z}{\\mathcal{Z}}\\newcommand{\\Q}{\\mathbb{Q}}\\newcommand{\\bQ}{\\mathbb{Q}}\\newcommand{\\TV}{\\mathrm{TV}}\\newcommand{\\ORD}{\\mathrm{ORD}}\\newcommand{\\Card}{\\mathrm{Card}\\,}\\newcommand{\\Top}{\\mathrm{Top}}\\newcommand{\\Disc}{\\mathrm{Disc}}\\newcommand{\\Codisc}{\\mathrm{Codisc}}\\newcommand{\\CoDisc}{\\mathrm{CoDisc}}\\newcommand{\\Ult}{\\mathrm{Ult}}\\newcommand{\\ord}{\\mathrm{ord}}\\DeclareMathOperator{\\maj}{\\mathrm{maj}}\\newcommand{\\bS}{\\mathbb{S}}\\newcommand{\\PConn}{\\mathrm{PConn}}\n\n%%% 形式言語理論\n\\newcommand{\\REGEX}{\\mathrm{REGEX}}\\newcommand{\\RE}{\\mathbf{RE}}\n%%% Graph Theory\n\\newcommand{\\SimpGph}{\\mathrm{SimpGph}}\\newcommand{\\Gph}{\\mathrm{Gph}}\\newcommand{\\mult}{\\mathrm{mult}}\\newcommand{\\inv}{\\mathrm{inv}}\n\n%%% 多様体\n\\newcommand{\\Der}{\\mathrm{Der}}\\newcommand{\\osub}{\\overset{\\mathrm{open}}{\\subset}}\\newcommand{\\osup}{\\overset{\\mathrm{open}}{\\supset}}\\newcommand{\\al}{\\alpha}\\newcommand{\\K}{\\mathbb{K}}\\newcommand{\\Sp}{\\mathrm{Sp}}\\newcommand{\\g}{\\mathfrak{g}}\\newcommand{\\h}{\\mathfrak{h}}\\newcommand{\\Imm}{\\mathrm{Imm}}\\newcommand{\\Imb}{\\mathrm{Imb}}\\newcommand{\\Gr}{\\mathrm{Gr}}\n\\DeclareMathOperator{\\Exp}{Exp}\\DeclareMathOperator{\\codim}{codim}\n%%% 代数\n\\newcommand{\\Ad}{\\mathrm{Ad}}\\newcommand{\\finsupp}{\\mathrm{fin\\;supp}}\\newcommand{\\SO}{\\mathrm{SO}}\\newcommand{\\SU}{\\mathrm{SU}}\\newcommand{\\acts}{\\curvearrowright}\\newcommand{\\mono}{\\hookrightarrow}\\newcommand{\\epi}{\\twoheadrightarrow}\\newcommand{\\Stab}{\\mathrm{Stab}}\\newcommand{\\nor}{\\mathrm{nor}}\\newcommand{\\T}{\\mathbb{T}}\\newcommand{\\Aff}{\\mathrm{Aff}}\\newcommand{\\rsub}{\\triangleleft}\\newcommand{\\rsup}{\\triangleright}\\newcommand{\\subgrp}{\\overset{\\mathrm{subgrp}}{\\subset}}\\newcommand{\\Ext}{\\mathrm{Ext}}\\newcommand{\\sbs}{\\subset}\\newcommand{\\sps}{\\supset}\\newcommand{\\In}{\\mathrm{in}\\;}\\newcommand{\\Tor}{\\mathrm{Tor}}\\newcommand{\\p}{\\b{p}}\\newcommand{\\q}{\\mathfrak{q}}\\newcommand{\\m}{\\mathfrak{m}}\\newcommand{\\cS}{\\mathcal{S}}\\newcommand{\\Frac}{\\mathrm{Frac}\\,}\\newcommand{\\Spec}{\\mathrm{Spec}\\,}\\newcommand{\\bA}{\\mathbb{A}}\\newcommand{\\Sym}{\\mathrm{Sym}}\\newcommand{\\Ann}{\\mathrm{Ann}}\\newcommand{\\Her}{\\mathrm{Her}}\\newcommand{\\Bil}{\\mathrm{Bil}}\\newcommand{\\Ses}{\\mathrm{Ses}}\\newcommand{\\FVS}{\\mathrm{FVS}}\n%%% 代数的位相幾何学\n\\newcommand{\\Ho}{\\mathrm{Ho}}\\newcommand{\\CW}{\\mathrm{CW}}\\newcommand{\\lc}{\\mathrm{lc}}\\newcommand{\\cg}{\\mathrm{cg}}\\newcommand{\\Fib}{\\mathrm{Fib}}\\newcommand{\\Cyl}{\\mathrm{Cyl}}\\newcommand{\\Ch}{\\mathrm{Ch}}\n%%% 微分幾何学\n\\newcommand{\\rP}{\\mathrm{P}}\\newcommand{\\rE}{\\mathrm{E}}\\newcommand{\\e}{\\b{e}}\\renewcommand{\\k}{\\b{k}}\\newcommand{\\Christ}[2]{\\begin{Bmatrix}#1\\\\#2\\end{Bmatrix}}\\renewcommand{\\Vec}[1]{\\overrightarrow{\\mathrm{#1}}}\\newcommand{\\hen}[1]{\\mathrm{#1}}\\renewcommand{\\b}[1]{\\boldsymbol{#1}}\n\n%%% 函数解析\n\\newcommand{\\Inc}{\\mathrm{Inc}}\\newcommand{\\aInc}{\\mathrm{aInc}}\\newcommand{\\HS}{\\mathrm{HS}}\\newcommand{\\loc}{\\mathrm{loc}}\\newcommand{\\Lh}{\\mathrm{L.h.}}\\newcommand{\\Epi}{\\mathrm{Epi}}\\newcommand{\\slim}{\\mathrm{slim}}\\newcommand{\\Ban}{\\mathrm{Ban}}\\newcommand{\\Hilb}{\\mathrm{Hilb}}\\newcommand{\\Ex}{\\mathrm{Ex}}\\newcommand{\\Co}{\\mathrm{Co}}\\newcommand{\\sa}{\\mathrm{sa}}\\newcommand{\\nnorm}[1]{{\\left\\vert\\kern-0.25ex\\left\\vert\\kern-0.25ex\\left\\vert #1 \\right\\vert\\kern-0.25ex\\right\\vert\\kern-0.25ex\\right\\vert}}\\newcommand{\\dvol}{\\mathrm{dvol}}\\newcommand{\\Sconv}{\\mathrm{Sconv}}\\newcommand{\\I}{\\mathcal{I}}\\newcommand{\\nonunital}{\\mathrm{nu}}\\newcommand{\\cpt}{\\mathrm{cpt}}\\newcommand{\\lcpt}{\\mathrm{lcpt}}\\newcommand{\\com}{\\mathrm{com}}\\newcommand{\\Haus}{\\mathrm{Haus}}\\newcommand{\\proper}{\\mathrm{proper}}\\newcommand{\\infinity}{\\mathrm{inf}}\\newcommand{\\TVS}{\\mathrm{TVS}}\\newcommand{\\ess}{\\mathrm{ess}}\\newcommand{\\ext}{\\mathrm{ext}}\\newcommand{\\Index}{\\mathrm{Index}\\;}\\newcommand{\\SSR}{\\mathrm{SSR}}\\newcommand{\\vs}{\\mathrm{vs.}}\\newcommand{\\fM}{\\mathfrak{M}}\\newcommand{\\EDM}{\\mathrm{EDM}}\\newcommand{\\Tw}{\\mathrm{Tw}}\\newcommand{\\fC}{\\mathfrak{C}}\\newcommand{\\bn}{\\boldsymbol{n}}\\newcommand{\\br}{\\boldsymbol{r}}\\newcommand{\\Lam}{\\Lambda}\\newcommand{\\lam}{\\lambda}\\newcommand{\\one}{\\mathbf{1}}\\newcommand{\\dae}{\\text{-a.e.}}\\newcommand{\\das}{\\text{-a.s.}}\\newcommand{\\td}{\\text{-}}\\newcommand{\\RM}{\\mathrm{RM}}\\newcommand{\\BV}{\\mathrm{BV}}\\newcommand{\\normal}{\\mathrm{normal}}\\newcommand{\\lub}{\\mathrm{lub}\\;}\\newcommand{\\Graph}{\\mathrm{Graph}}\\newcommand{\\Ascent}{\\mathrm{Ascent}}\\newcommand{\\Descent}{\\mathrm{Descent}}\\newcommand{\\BIL}{\\mathrm{BIL}}\\newcommand{\\fL}{\\mathfrak{L}}\\newcommand{\\De}{\\Delta}\n%%% 積分論\n\\newcommand{\\calA}{\\mathcal{A}}\\newcommand{\\calB}{\\mathcal{B}}\\newcommand{\\D}{\\mathcal{D}}\\newcommand{\\Y}{\\mathcal{Y}}\\newcommand{\\calC}{\\mathcal{C}}\\renewcommand{\\ae}{\\mathrm{a.e.}\\;}\\newcommand{\\cZ}{\\mathcal{Z}}\\newcommand{\\fF}{\\mathfrak{F}}\\newcommand{\\fI}{\\mathfrak{I}}\\newcommand{\\E}{\\operatorname{E}}\\newcommand{\\rV}{\\mathrm{V}}\\newcommand{\\cE}{\\mathcal{E}}\\newcommand{\\sMap}{\\sigma\\textrm{-}\\mathrm{Map}}\\DeclareMathOperator*{\\argmax}{arg\\,max}\\DeclareMathOperator*{\\argmin}{arg\\,min}\\newcommand{\\cC}{\\mathcal{C}}\\newcommand{\\comp}{\\complement}\\newcommand{\\J}{\\mathcal{J}}\\newcommand{\\sumN}[1]{\\sum_{#1\\in\\N}}\\newcommand{\\cupN}[1]{\\cup_{#1\\in\\N}}\\newcommand{\\capN}[1]{\\cap_{#1\\in\\N}}\\newcommand{\\Sum}[1]{\\sum_{#1=1}^\\infty}\\newcommand{\\sumn}{\\sum_{n=1}^\\infty}\\newcommand{\\summ}{\\sum_{m=1}^\\infty}\\newcommand{\\sumk}{\\sum_{k=1}^\\infty}\\newcommand{\\sumi}{\\sum_{i=1}^\\infty}\\newcommand{\\sumj}{\\sum_{j=1}^\\infty}\\newcommand{\\cupn}{\\cup_{n=1}^\\infty}\\newcommand{\\capn}{\\cap_{n=1}^\\infty}\\newcommand{\\cupk}{\\cup_{k=1}^\\infty}\\newcommand{\\cupi}{\\cup_{i=1}^\\infty}\\newcommand{\\cupj}{\\cup_{j=1}^\\infty}\\newcommand{\\limn}{\\lim_{n\\to\\infty}}\\renewcommand{\\L}{\\mathcal{L}}\\newcommand{\\cL}{\\mathcal{L}}\\newcommand{\\Cl}{\\mathrm{Cl}}\\newcommand{\\cN}{\\mathcal{N}}\\newcommand{\\Ae}{\\textrm{-a.e.}\\;}\\newcommand{\\csub}{\\overset{\\textrm{closed}}{\\subset}}\\newcommand{\\csup}{\\overset{\\textrm{closed}}{\\supset}}\\newcommand{\\wB}{\\wt{B}}\\newcommand{\\cG}{\\mathcal{G}}\\newcommand{\\Lip}{\\mathrm{Lip}}\\DeclareMathOperator{\\Dom}{\\mathrm{Dom}}\\newcommand{\\AC}{\\mathrm{AC}}\\newcommand{\\Mol}{\\mathrm{Mol}}\n%%% Fourier解析\n\\newcommand{\\Pe}{\\mathrm{Pe}}\\newcommand{\\wR}{\\wh{\\mathbb{\\R}}}\\newcommand*{\\Laplace}{\\mathop{}\\!\\mathbin\\bigtriangleup}\\newcommand*{\\DAlambert}{\\mathop{}\\!\\mathbin\\Box}\\newcommand{\\bT}{\\mathbb{T}}\\newcommand{\\dx}{\\dslash x}\\newcommand{\\dt}{\\dslash t}\\newcommand{\\ds}{\\dslash s}\n%%% 数値解析\n\\newcommand{\\round}{\\mathrm{round}}\\newcommand{\\cond}{\\mathrm{cond}}\\newcommand{\\diag}{\\mathrm{diag}}\n\\newcommand{\\Adj}{\\mathrm{Adj}}\\newcommand{\\Pf}{\\mathrm{Pf}}\\newcommand{\\Sg}{\\mathrm{Sg}}\n\n%%% 確率論\n\\newcommand{\\aseq}{\\overset{\\text{a.s.}}{=}}\\newcommand{\\deq}{\\overset{\\text{d}}{=}}\\newcommand{\\cV}{\\mathcal{V}}\\newcommand{\\FM}{\\mathrm{FM}}\\newcommand{\\KR}{\\mathrm{KR}}\\newcommand{\\rba}{\\mathrm{rba}}\\newcommand{\\rca}{\\mathrm{rca}}\\newcommand{\\Prob}{\\mathrm{Prob}}\\newcommand{\\X}{\\mathcal{X}}\\newcommand{\\Meas}{\\mathrm{Meas}}\\newcommand{\\as}{\\;\\text{a.s.}}\\newcommand{\\io}{\\;\\mathrm{i.o.}}\\newcommand{\\fe}{\\;\\text{f.e.}}\\newcommand{\\F}{\\mathcal{F}}\\newcommand{\\bF}{\\mathbb{F}}\\newcommand{\\W}{\\mathcal{W}}\\newcommand{\\Pois}{\\mathrm{Pois}}\\newcommand{\\iid}{\\text{i.i.d.}}\\newcommand{\\wconv}{\\rightsquigarrow}\\newcommand{\\Var}{\\mathrm{Var}}\\newcommand{\\xrightarrown}{\\xrightarrow{n\\to\\infty}}\\newcommand{\\au}{\\mathrm{au}}\\newcommand{\\cT}{\\mathcal{T}}\\newcommand{\\wto}{\\overset{\\text{w}}{\\to}}\\newcommand{\\dto}{\\overset{\\text{d}}{\\to}}\\newcommand{\\sto}{\\overset{\\text{s}}{\\to}}\\newcommand{\\pto}{\\overset{\\text{p}}{\\to}}\\newcommand{\\mto}{\\overset{\\text{m}}{\\to}}\\newcommand{\\vto}{\\overset{v}{\\to}}\\newcommand{\\Cont}{\\mathrm{Cont}}\\newcommand{\\stably}{\\mathrm{stably}}\\newcommand{\\Np}{\\mathbb{N}^+}\\newcommand{\\oM}{\\overline{\\mathcal{M}}}\\newcommand{\\fP}{\\mathfrak{P}}\\newcommand{\\sign}{\\mathrm{sign}}\n\\DeclareMathOperator{\\Ent}{Ent}\\DeclareMathOperator{\\Polya}{Polya}\\newcommand{\\Borel}{\\mathrm{Borel}}\\newcommand{\\Mid}{\\,|\\,}\\newcommand{\\middleMid}{\\;\\middle|\\;}\\DeclareMathOperator{\\LR}{LR}\\newcommand{\\CP}{\\mathrm{CP}}\\newcommand{\\bD}{\\mathbb{D}}\\newcommand{\\bL}{\\mathbb{L}}\\newcommand{\\fW}{\\mathfrak{W}}\\newcommand{\\DL}{\\mathcal{D}\\mathcal{L}}\\renewcommand{\\r}[1]{\\mathrm{#1}}\\newcommand{\\rC}{\\mathrm{C}}\\newcommand{\\qqquad}{\\qquad\\quad}\n%%% 情報理論\n\\newcommand{\\bit}{\\mathrm{bit}}\\DeclareMathOperator{\\sinc}{sinc}\n%%% 量子論\n\\newcommand{\\err}{\\mathrm{err}}\n%%% 最適化\n\\newcommand{\\varparallel}{\\mathbin{\\!/\\mkern-5mu/\\!}}\\DeclareMathOperator{\\minimize}{minimize}\\DeclareMathOperator{\\subjectto}{subject to}\\newcommand{\\Ri}{\\mathrm{Ri}}\\newcommand{\\Cone}{\\mathrm{Cone}}\\newcommand{\\Int}{\\mathrm{Int}}\n%%% 数理ファイナンス\n\\newcommand{\\pre}{\\mathrm{pre}}\\newcommand{\\om}{\\omega}\n\n%%% 偏微分方程式\n\\DeclareMathOperator{\\div}{div}\n\\newcommand{\\del}{\\partial}\n\\newcommand{\\LHS}{\\mathrm{LHS}}\\newcommand{\\RHS}{\\mathrm{RHS}}\\newcommand{\\bnu}{\\boldsymbol{\\nu}}\\newcommand{\\interior}{\\mathrm{in}\\;}\\newcommand{\\SH}{\\mathrm{SH}}\\renewcommand{\\v}{\\boldsymbol{\\nu}}\\newcommand{\\n}{\\mathbf{n}}\\newcommand{\\ssub}{\\Subset}\\newcommand{\\curl}{\\mathrm{curl}}\n%%% 常微分方程式\n\\newcommand{\\Ei}{\\mathrm{Ei}}\\newcommand{\\sn}{\\mathrm{sn}}\\newcommand{\\wgamma}{\\widetilde{\\gamma}}\n%%% 統計力学\n\\newcommand{\\Ens}{\\mathrm{Ens}}\n%%% 解析力学\n\\newcommand{\\cl}{\\mathrm{cl}}\\newcommand{\\x}{\\boldsymbol{x}}\n\n%%% 統計的因果推論\n\\newcommand{\\Do}{\\mathrm{Do}}\\newcommand{\\IV}{\\mathrm{IV}}\n%%% 応用統計学\n\\DeclareMathOperator{\\pl}{pl}\\newcommand{\\AIC}{\\mathrm{AIC}}\\newcommand{\\mrl}{\\mathrm{mrl}}\\newcommand{\\dotx}{\\dot{x}}\\newcommand{\\UMV}{\\mathrm{UMV}}\\newcommand{\\BLU}{\\mathrm{BLU}}\n%%% 数理統計\n\\DeclareMathOperator{\\arctanh}{arctanh}\\newcommand{\\comb}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\bP}{\\mathbb{P}}\\newcommand{\\compsub}{\\overset{\\textrm{cpt}}{\\subset}}\\newcommand{\\lip}{\\textrm{lip}}\\newcommand{\\BL}{\\mathrm{BL}}\\newcommand{\\G}{\\mathbb{G}}\\newcommand{\\NB}{\\mathrm{NB}}\\newcommand{\\oR}{\\ov{\\R}}\\newcommand{\\liminfn}{\\liminf_{n\\to\\infty}}\\newcommand{\\limsupn}{\\limsup_{n\\to\\infty}}\\newcommand{\\esssup}{\\mathrm{ess.sup}}\\newcommand{\\asto}{\\xrightarrow{\\as}}\\newcommand{\\Cov}{\\mathrm{Cov}}\\newcommand{\\cQ}{\\mathcal{Q}}\\newcommand{\\VC}{\\mathrm{VC}}\\newcommand{\\mb}{\\mathrm{mb}}\\newcommand{\\Avar}{\\mathrm{Avar}}\\newcommand{\\bB}{\\mathbb{B}}\\newcommand{\\bW}{\\mathbb{W}}\\newcommand{\\sd}{\\mathrm{sd}}\\newcommand{\\w}[1]{\\widehat{#1}}\\newcommand{\\bZ}{\\mathbb{Z}}\\newcommand{\\Bernoulli}{\\mathrm{Ber}}\\newcommand{\\Ber}{\\mathrm{Ber}}\\newcommand{\\Mult}{\\mathrm{Mult}}\\newcommand{\\BPois}{\\mathrm{BPois}}\\newcommand{\\fraks}{\\mathfrak{s}}\\newcommand{\\frakk}{\\mathfrak{k}}\\newcommand{\\IF}{\\mathrm{IF}}\\newcommand{\\bX}{\\boldsymbol{X}}\\newcommand{\\bx}{\\boldsymbol{x}}\\newcommand{\\indep}{\\perp\\!\\!\\!\\perp}\\newcommand{\\IG}{\\mathrm{IG}}\\newcommand{\\Levy}{\\mathrm{Levy}}\\newcommand{\\MP}{\\mathrm{MP}}\\newcommand{\\Hermite}{\\mathrm{Hermite}}\\newcommand{\\Skellam}{\\mathrm{Skellam}}\\newcommand{\\Dirichlet}{\\mathrm{Dirichlet}}\\newcommand{\\Beta}{\\mathrm{Beta}}\\newcommand{\\bE}{\\mathbb{E}}\\newcommand{\\bG}{\\mathbb{G}}\\newcommand{\\MISE}{\\mathrm{MISE}}\\newcommand{\\logit}{\\mathtt{logit}}\\newcommand{\\expit}{\\mathtt{expit}}\\newcommand{\\cK}{\\mathcal{K}}\\newcommand{\\dl}{\\dot{l}}\\newcommand{\\dotp}{\\dot{p}}\\newcommand{\\wl}{\\wt{l}}\\newcommand{\\Gauss}{\\mathrm{Gauss}}\\newcommand{\\fA}{\\mathfrak{A}}\\newcommand{\\under}{\\mathrm{under}\\;}\\newcommand{\\whtheta}{\\wh{\\theta}}\\newcommand{\\Em}{\\mathrm{Em}}\\newcommand{\\ztheta}{{\\theta_0}}\n\\newcommand{\\rO}{\\mathrm{O}}\\newcommand{\\Bin}{\\mathrm{Bin}}\\newcommand{\\rW}{\\mathrm{W}}\\newcommand{\\rG}{\\mathrm{G}}\\newcommand{\\rB}{\\mathrm{B}}\\DeclareMathOperator{\\rN}{N}\\newcommand{\\rU}{\\mathrm{U}}\\newcommand{\\HG}{\\mathrm{HG}}\\newcommand{\\GAMMA}{\\mathrm{Gamma}}\\newcommand{\\Cauchy}{\\mathrm{Cauchy}}\\newcommand{\\rt}{\\mathrm{t}}\\newcommand{\\rF}{\\mathrm{F}}\n\\DeclareMathOperator{\\erf}{erf}\n%%% 計量経済学\n\\newcommand{\\FE}{\\mathrm{FE}}\\newcommand{\\bV}{\\boldsymbol{V}}\\newcommand{\\GLS}{\\mathrm{GLS}}\\newcommand{\\be}{\\boldsymbol{e}}\\newcommand{\\POOL}{\\mathrm{POOL}}\\newcommand{\\GMM}{\\mathrm{GMM}}\\newcommand{\\MM}{\\mathrm{MM}}\\newcommand{\\SSIV}{\\mathrm{SSIV}}\\newcommand{\\JIV}{\\mathrm{JIV}}\\newcommand{\\AR}{\\mathrm{AR}}\\newcommand{\\ILS}{\\mathrm{ILS}}\\newcommand{\\SLS}{\\mathrm{SLS}}\\newcommand{\\LIML}{\\mathrm{LIML}}\n\n%%% 無限次元統計模型の理論\n\\newcommand{\\Rad}{\\mathrm{Rad}}\\newcommand{\\bY}{\\boldsymbol{Y}}\\newcommand{\\pone}{{(1)}}\\newcommand{\\ptwo}{{(2)}}\\newcommand{\\ps}[1]{{(#1)}}\\newcommand{\\fsub}{\\overset{\\text{finite}}{\\subset}}\n%%% Banach Lattices\n\\newcommand{\\Slv}{\\mathrm{Slv}}\\newcommand{\\Hypo}{\\mathrm{Hypo}}\\newcommand{\\CL}{\\mathrm{CL}}\\DeclareMathOperator{\\ba}{ba}\\DeclareMathOperator{\\ca}{ca}\n\n%%% 圏\n\\newcommand{\\varlim}{\\varprojlim}\\newcommand{\\Hom}{\\mathrm{Hom}}\\newcommand{\\Iso}{\\mathrm{Iso}}\\newcommand{\\Mor}{\\mathrm{Mor}}\\newcommand{\\Isom}{\\mathrm{Isom}}\\newcommand{\\Aut}{\\mathrm{Aut}}\\newcommand{\\End}{\\mathrm{End}}\\newcommand{\\op}{\\mathrm{op}}\\newcommand{\\ev}{\\mathrm{ev}}\\newcommand{\\Ob}{\\mathrm{Ob}}\\newcommand{\\Ar}{\\mathrm{Ar}}\\newcommand{\\Arr}{\\mathrm{Arr}}\\newcommand{\\Set}{\\mathrm{Set}}\\newcommand{\\Grp}{\\mathrm{Grp}}\\newcommand{\\Cat}{\\mathrm{Cat}}\\newcommand{\\Mon}{\\mathrm{Mon}}\\newcommand{\\Ring}{\\mathrm{Ring}}\\newcommand{\\CRing}{\\mathrm{CRing}}\\newcommand{\\Ab}{\\mathrm{Ab}}\\newcommand{\\Pos}{\\mathrm{Pos}}\\newcommand{\\Vect}{\\mathrm{Vect}}\\newcommand{\\FinVect}{\\mathrm{FinVect}}\\newcommand{\\FinSet}{\\mathrm{FinSet}}\\newcommand{\\FinMeas}{\\mathrm{FinMeas}}\\newcommand{\\OmegaAlg}{\\Omega\\text{-}\\mathrm{Alg}}\\newcommand{\\OmegaEAlg}{(\\Omega,E)\\text{-}\\mathrm{Alg}}\\newcommand{\\Fun}{\\mathrm{Fun}}\\newcommand{\\Func}{\\mathrm{Func}}\\newcommand{\\Alg}{\\mathrm{Alg}} %代数の圏\n\\newcommand{\\Met}{\\mathrm{Met}} %Metric space & Contraction maps\n\\newcommand{\\Stoch}{\\mathrm{Stoch}}\\newcommand{\\FinStoch}{\\mathrm{FinStoch}}\\newcommand{\\Copy}{\\mathrm{copy}}\\newcommand{\\Delete}{\\mathrm{delete}} %確率空間とMarkov核の圏\n\\newcommand{\\Bool}{\\mathrm{Bool}}\\newcommand{\\CABool}{\\mathrm{CABool}}\\newcommand{\\CompBoolAlg}{\\mathrm{CompBoolAlg}}\\newcommand{\\BoolAlg}{\\mathrm{BoolAlg}}\\newcommand{\\BoolRng}{\\mathrm{BoolRng}}\\newcommand{\\HeytAlg}{\\mathrm{HeytAlg}}\\newcommand{\\CompHeytAlg}{\\mathrm{CompHeytAlg}}\\newcommand{\\Lat}{\\mathrm{Lat}}\\newcommand{\\CompLat}{\\mathrm{CompLat}}\\newcommand{\\SemiLat}{\\mathrm{SemiLat}}\\newcommand{\\Stone}{\\mathrm{Stone}}\\newcommand{\\Mfd}{\\mathrm{Mfd}}\\newcommand{\\LieAlg}{\\mathrm{LieAlg}}\n\\newcommand{\\Sob}{\\mathrm{Sob}} %Sober space & continuous map\n\\newcommand{\\Op}{\\mathrm{Op}} %Category of open subsets\n\\newcommand{\\Sh}{\\mathrm{Sh}} %Category of sheave\n\\newcommand{\\PSh}{\\mathrm{PSh}} %Category of presheave, PSh(C)=[C^op,set]のこと\n\\DeclareMathOperator{\\Conv}{Conv} %Convergence spaceの圏\n\\newcommand{\\Unif}{\\mathrm{Unif}} %一様空間と一様連続写像の圏\n\\newcommand{\\Frm}{\\mathrm{Frm}} %フレームとフレームの射\n\\newcommand{\\Locale}{\\mathrm{Locale}} %その反対圏\n\\newcommand{\\Diff}{\\mathrm{Diff}} %滑らかな多様体の圏\n\\newcommand{\\Quiv}{\\mathrm{Quiv}} %Quiverの圏\n\\newcommand{\\B}{\\mathcal{B}}\\newcommand{\\cB}{\\mathcal{B}}\\newcommand{\\Span}{\\mathrm{Span}}\\newcommand{\\Corr}{\\mathrm{Corr}}\\newcommand{\\Decat}{\\mathrm{Decat}}\\newcommand{\\Rep}{\\mathrm{Rep}}\\newcommand{\\Grpd}{\\mathrm{Grpd}}\\newcommand{\\sSet}{\\mathrm{sSet}}\\newcommand{\\Mod}{\\mathrm{Mod}}\\newcommand{\\SmoothMnf}{\\mathrm{SmoothMnf}}\\newcommand{\\coker}{\\mathrm{coker}}\\newcommand{\\Ord}{\\mathrm{Ord}}\\newcommand{\\eq}{\\mathrm{eq}}\\newcommand{\\coeq}{\\mathrm{coeq}}\\newcommand{\\act}{\\mathrm{act}}\n\n%%% SMC\n\\newcommand{\\apf}{\\mathrm{apf}}\\newcommand{\\opt}{\\mathrm{opt}}\\newcommand{\\IS}{\\mathrm{IS}}\\newcommand{\\IR}{\\mathrm{IR}}\\newcommand{\\iidsim}{\\overset{\\text{iid}}{\\sim}}\\DeclareMathOperator{\\KL}{KL}\\DeclareMathOperator{\\JS}{JS}\\DeclareMathOperator{\\ESS}{ESS}\\DeclareMathOperator{\\MSE}{MSE}\\newcommand{\\propt}{\\,\\propto\\,}\\newcommand{\\bM}{\\mathbb{M}}\\newcommand{\\cX}{\\mathcal{X}}\\newcommand{\\cY}{\\mathcal{Y}}\\newcommand{\\cP}{\\mathcal{P}}\\newcommand{\\ola}[1]{\\overleftarrow{#1}}\n\n%%% 括弧類\n\\newcommand{\\abs}[1]{\\lvert#1\\rvert}\\newcommand{\\Abs}[1]{\\left|#1\\right|}\\newcommand{\\ABs}[1]{\\biggl|#1\\biggr|}\\newcommand{\\norm}[1]{\\|#1\\|}\\newcommand{\\Norm}[1]{\\left\\|#1\\right\\|}\\newcommand{\\NOrm}[1]{\\biggl\\|#1\\biggr\\|}\\newcommand{\\Brace}[1]{\\left\\{#1\\right\\}}\\newcommand{\\BRace}[1]{\\biggl\\{#1\\biggr\\}}\\newcommand{\\paren}[1]{\\left(#1\\right)}\\newcommand{\\Paren}[1]{\\biggr(#1\\biggl)}\\newcommand{\\bracket}[1]{\\langle#1\\rangle}\\newcommand{\\brac}[1]{\\langle#1\\rangle}\\newcommand{\\Bracket}[1]{\\left\\langle#1\\right\\rangle}\\newcommand{\\Brac}[1]{\\left\\langle#1\\right\\rangle}\\newcommand{\\bra}[1]{\\left\\langle#1\\right|}\\newcommand{\\ket}[1]{\\left|#1\\right\\rangle}\\newcommand{\\Square}[1]{\\left[#1\\right]}\\newcommand{\\SQuare}[1]{\\biggl[#1\\biggr]}\n\\newcommand{\\ov}[1]{\\overline{#1}}\\newcommand{\\un}[1]{\\underline{#1}}\\newcommand{\\wt}[1]{\\widetilde{#1}}\\newcommand{\\wh}[1]{\\widehat{#1}}\n\\newcommand{\\pp}[2]{\\frac{\\partial #1}{\\partial #2}}\\newcommand{\\ppp}[3]{\\frac{\\partial #1}{\\partial #2\\partial #3}}\\newcommand{\\dd}[2]{\\frac{d #1}{d #2}}\n\\newcommand{\\floor}[1]{\\lfloor#1\\rfloor}\\newcommand{\\Floor}[1]{\\left\\lfloor#1\\right\\rfloor}\\newcommand{\\ceil}[1]{\\lceil#1\\rceil}\n\\newcommand{\\ocinterval}[1]{(#1]}\\newcommand{\\cointerval}[1]{[#1)}\\newcommand{\\COinterval}[1]{\\left[#1\\right)}\n\n%%% 予約語\n\\renewcommand{\\iff}{\\;\\mathrm{iff}\\;}\n\\newcommand{\\False}{\\mathrm{False}}\\newcommand{\\True}{\\mathrm{True}}\n\\newcommand{\\otherwise}{\\mathrm{otherwise}}\n\\newcommand{\\suchthat}{\\;\\mathrm{s.t.}\\;}\n\n%%% 略記\n\\newcommand{\\cM}{\\mathcal{M}}\\newcommand{\\M}{\\mathbb{M}}\\newcommand{\\cF}{\\mathcal{F}}\\newcommand{\\cD}{\\mathcal{D}}\\newcommand{\\fX}{\\mathfrak{X}}\\newcommand{\\fY}{\\mathfrak{Y}}\\newcommand{\\fZ}{\\mathfrak{Z}}\\renewcommand{\\H}{\\mathcal{H}}\\newcommand{\\cH}{\\mathcal{H}}\\newcommand{\\fH}{\\mathfrak{H}}\\newcommand{\\bH}{\\mathbb{H}}\\newcommand{\\id}{\\mathrm{id}}\\newcommand{\\A}{\\mathcal{A}}\n\\newcommand{\\lmd}{\\lambda}\n\\newcommand{\\Lmd}{\\Lambda}\n\\newcommand{\\cI}{\\mathcal{I}}\n\n%%% 矢印類\n\\newcommand{\\iso}{\\overset{\\sim}{\\to}}\n\\newcommand{\\Lrarrow}{\\;\\;\\Leftrightarrow\\;\\;}\n$$\n:::\n\n\n\n[![「新時代の MCMC を迎えるために」統数研オープンハウス（タップで PDF 閲覧）](../../../static/Posters/ISM-OH2024.jpg){width=50%}](../../../static/Posters/ISM-OH2024.pdf)\n\n::: {.callout-tip appearance=\"minimal\"}\n以下は，5月24日 10:30~12:30 （コアタイム：10:30~11:10）に行われた [2024年度統数研オープンハウス](../../../static/Sessions.qmd#sec-ISM-openhouse2024) ポスターセッション（掲載 No. E1）に於て発表されたポスターに関する解説記事です．\n:::\n\n## 導入\n\n### MCMC 小史\n\n現状，HMC (Hamiltonian Monte Carlo) という約 40 年前に提案された MCMC 手法が，Stan などの確率的プログラミング言語のデフォルト MCMC 手法として採用されています．^[Hamiltonian Monte Carlo の名称は [@Neal2011-HMC] からで，元々は Hybrid Monte Carlo と呼ばれていました．分子動力学法 (Molecular Dynamics) と MCMC のハイブリッド，という意味でした．Stan で実装されている MCMC アルゴリズムについては [こちら](https://mc-stan.org/docs/reference-manual/mcmc.html) を参照．]\n\nこの手法はもともと [@Duane+1987] が場の量子論に特化した Monte Carlo 法として提案したものであったところを，[@Neal1994] が一般の統計モデルに適用可能な形式に翻訳する形で提案されたものでした．\n\nということで，HMC は，オリジナルの MCMC が物理学者 [@Metropolis+1953] に由るように，物理学において着想された MCMC 手法であったのです．\n\n**そのHMC が，提案から 40 年目を迎える前に，更なる効率的な手法によって代替されようとしています**．\n\nそのきっかけ [@Peters-deWith2012] も，やはり，物理学（正確には物質科学）からの着想でした．\n\n### MCMC とは何か？\n\nMCMC とは，確率変数をシミュレーションする際に用いられる汎用的アルゴリズムです．\n\n一様分布や正規分布などの名前がついた分布ではない場合，どのようにすればその分布に従う確率変数をシミュレーションできるのか？は，古くからの問題でした．\n\n実際，「MCMC では空間を探索するマルコフ連鎖を構成し，その足跡を辿るとちょうど確率変数のシミュレーションになっている」と種明かしを聞いても，「なぜそのような回りくどい方法を使うのか？」「もっと良い方法はないのか？」と思っても当然でしょう．\n\nですが，MCMC を，発明された経緯を辿り，物理学の問題意識から見てみると，実は極めて自然な発想に思えてくるかもしれません．\n\n以降，MCMC の起源である物理系のシミュレーション（第 [-@sec-origin] 節）を例に取り，分子動力学法（第 [-@sec-MD] 節），Metropolis 法（第 [-@sec-MH] 節）を復習します．\n\n::: {layout-ncol=2}\n![分子動力学法の出力（第 [-@sec-MD] 節）^[特に収束が遅く，他の手法と比べてイテレーション数を 10　倍にしています．]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-md-output-1.png)\n\n![Metropolis 法の出力（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-output-1.png)\n:::\n\nこれを基礎として，近年提案された非対称な MCMC 手法（第 [-@sec-LMH] 章），そして最新の連続時間 MCMC 手法（第 [-@sec-PDMP] 章）を紹介します．\n\n::: {layout-ncol=2}\n![非対称 MCMC 法（Lifted Metropolis 法）の出力（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-output-1.png)\n\n![連続時間 MCMC 法（Zig-Zag サンプラー）の出力（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-output-1.png)\n:::\n\n### 自己相関・軌跡の一覧 {#sec-figs}\n\n::: {layout-ncol=3}\n![Metropolis 法の自己相関関数（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-auto-output-1.png)\n\n![非対称 MCMC 法（Lifted Metropolis 法）の自己相関関数（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-auto-output-1.png)\n\n![連続時間 MCMC 法（Zig-Zag サンプラー）の自己相関関数（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-auto-output-1.png)\n:::\n\n::: {layout-ncol=3}\n![Metropolis 法の軌跡（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png)\n\n![非対称 MCMC 法（Lifted Metropolis 法）の軌跡（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png)\n\n![連続時間 MCMC 法（Zig-Zag サンプラー）の軌跡（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-6-output-1.png)\n:::\n\n<!--\n\n### Comparison\n\n::: {layout-ncol=3}\n![Autocorrelation of the random walk Metropolis algorithm from section [-@sec-MH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-auto-output-1.png)\n\n![Autocorrelation of the lifted Metropolis algorithm from chapter [-@sec-LMH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-auto-output-1.png)\n\n![Autocorrelation of the Zig-Zag sampler from chapter [-@sec-PDMP]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-auto-output-1.png)\n:::\n\n::: {layout-ncol=3}\n![Trajectory of the random walk Metropolis algorithm from section [-@sec-MH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png)\n\n![Trajectory of the lifted Metropolis algorithm from chapter [-@sec-LMH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png)\n\n![Trajectory of the Zig-Zag sampler from chapter [-@sec-PDMP]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-6-output-1.png)\n:::\n\n-->\n\n## MCMC の起源 {#sec-origin}\n\n::: {.callout-caution title=\"よりみち：どうして MCMC が必要だったのか？\" collapse=\"true\"}\n\n[@Metropolis+1953] では，温度 $T$ 一定の条件下で $N$ 粒子系をシミュレートし，任意の物理量 $F$ に対してその相空間上の平均\n$$\n\\brac{F}=\\frac{\\int Fe^{-\\frac{E}{kT}}dp}{\\int e^{-\\frac{E}{kT}}dp}\n$$\nを効率的に計算する汎用アルゴリズムが提案された．これが現在では Metropolis 法と呼ばれている．^[統計学界隈では [@Hastings1970] を入れて，Metropolis-Hastings 法とも呼ばれる．]\n\n[@Metropolis+1953] では $N$ が数百になる場合を考えており（時代を感じるスケール感），当然愚直な数値積分は現代の計算機でも実行可能ではない．そこで Monte Carlo 法を考えることになるが，当時 Monte Carlo 法といえば，一様乱数を用いた計算法の全般を指し，具体的には $\\brac{F}$ を重点サンプリング推定量\n$$\n\\wh{F}=\\frac{\\sum_{n=1}^NF(\\om)e^{-\\frac{E(\\om)}{kT}}}{\\sum_{n=1}^Ne^{-\\frac{E(\\om)}{kT}}}\n$$\nで推定することを指した．^[ただし，配置 $\\om\\in\\Om$ は空間内にランダム（一様）に粒子 $N$ 個を配置することで生成することとする．]\n\nしかしこれでは，高エネルギーな状態・低エネルギーな状態を全く区別せず，状態 $\\om\\in\\Om$ を完全に一様に生成するため，その分だけ非効率である．\n\nこれを低減することが出来れば Monte Carlo 法の更なる効率改善に繋がる．こうして，Gibbs 分布 $\\frac{1}{Z}e^{-\\frac{E}{kT}}$ から直接的サンプリングする方法が模索されたのである．\n\n:::\n\n[@Metropolis+1953] では，エネルギー $E$ を持つ系の Boltzmann-Gibbs 分布 $\\frac{1}{Z}e^{-\\frac{E}{kT}}$ から直接サンプリングする方法が探求されました．\n\nここでは簡単のため，１粒子が次のようなポテンシャル\n$$\nU(x)=\\frac{x^2}{2}+\\frac{x^4}{4}\n$$\nに従って運動する場合を考えましょう：\n\n![ポテンシャル $U$ のプロット](Files/potential.svg){width=50% #fig-2}\n\nこのポテンシャルに関する Boltzmann-Gibbs 分布 $\\pi\\propt e^{-\\beta U}$ は次のような形になります：^[１粒子系なので相互作用はなく，$E=U$．]\n\n![ポテンシャル $U$ が定める Botlzmann-Gibbs 分布のプロット](Files/Gibbs.svg){width=50% #fig-3}\n\n<!--\n```\n\\begin{tikzpicture}\n\\begin{axis}[\n    axis lines = middle,\n    axis line style={->},\n    xlabel = $x$,\n    ylabel = {$e^{-\\beta U(x)}$},\n    xlabel style={at={(ticklabel* cs:1)}, anchor=north west},\n    ylabel style={at={(ticklabel* cs:1)}, anchor=south west},\n    xmin=-1.2, xmax=1.2,\n    ymin=0, ymax=1,\n    xtick distance=1,\n    ytick=\\empty,\n    grid=both,\n    grid style={gray!30, dashed},\n    minor tick num=1,\n    width=10cm,\n    height=8cm,\n    legend pos=north east,\n    legend cell align=left,\n    legend style={fill=white, fill opacity=0.8, draw opacity=1, text opacity=1, font=\\small},\n]\n\\addplot[domain=-2:2, samples=100, smooth, thick, minty] {exp(-x^2 - x^4)};\n\\addlegendentry{$y = e^{-\\frac{U(x)}{kT}}$}\n\\end{axis}\n\\end{tikzpicture}\n```\n-->\n\n２つのプロットを見比べると，低エネルギー状態ほど出現確率が高く，エネルギーが上がるにつれて急激に出現確率が下がることがわかります．以降，$\\beta=1$ としましょう．^[$\\beta=1$ と約束することは，系の温度を $T=k_B^{-1}$ に固定することにあたります．]\n\n### 分子動力学法 {#sec-MD}\n\n統計力学によれば，$\\beta=1$ で定まる温度とポテンシャル $U$ を持つ Boltzmann-Gibbs 分布 $e^{-U}$ は，温度 $T=\\frac{1}{k_B\\beta}$ を持つ熱浴に接している力学系を，長時間シミュレーションして時間平均を取ることでサンプリングできるはずです．\n\nこのように，力学に基づいて物理過程を数値シミュレーションをすることを通じてサンプリングを達成する方法を [**分子動力学法**](https://ja.wikipedia.org/wiki/%E5%88%86%E5%AD%90%E5%8B%95%E5%8A%9B%E5%AD%A6%E6%B3%95) といいます．\n\nこれを実際にやってみます．図 [-@fig-2] で定めたポテンシャルを持つ粒子を考えます．^[図 [-@fig-2] で定めたポテンシャルを持つ力学系には，代表的なものは（非調和）振動子や，あるいは $U$ の形をした谷を行ったり来たりするボールを考えても構いません．]\n\n続いてこれを温度 $T=\\frac{1}{k_B\\beta}$ を持つ熱浴と相互作用させます．例えば，ポテンシャル [-@fig-2] の $x=0$ の位置に半透性の壁を置き，確率 $1/2$ でこの温度 $T$ の壁の粒子と弾性衝突するとします．（残りの確率 $1/2$ では衝突せずに通過する）．\n\n壁の粒子の速度は Maxwell の境界条件から与えられるものとすれば，次のようにして粒子の位置 $x$ がシミュレートできます：^[詳しい議論は [@Tartero-Krauth2023] をご参照ください．大変教育的な入門です．]\n\n::: {#e59f334e .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\n\nnp.random.seed(2024)\n\ndef U(x):\n    return x**2/2 + x**4/4\n\ndef pi(x):\n    return np.exp(-U(x))\n\ndef md(num_samples, initial_state, initial_velocity, timestep=0.1):\n    samples = [initial_state]\n    current_state = initial_state\n    current_velocity = initial_velocity\n    current_time = 0\n\n    for _ in range(num_samples - 1):\n        proposed_state = current_state + current_velocity * timestep\n        current_time += timestep\n        if current_state * proposed_state < 0 and np.random.rand() < 1/2:\n            current_velocity = (-1) * np.sign(current_velocity) * np.sqrt(-2 * np.log(np.random.rand() + 1e-7))\n        else:\n            current_velocity = current_velocity - ( current_state + current_state ** 3 ) * timestep\n            current_state = proposed_state\n        samples.append(current_state)\n\n    return np.array(samples)\n\n# サンプル数と初期条件を固定\nnum_samples = 10000\ninitial_state = 0.0\ninitial_velocity = 1.0\n\nsamples_MD = md(num_samples * 10, initial_state, initial_velocity, timestep=0.01)\n```\n:::\n\n\n\n\n::: {#cell-fig-MD .cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![分子動力学法からのサンプル](MCMC_files/figure-html/fig-md-output-1.png){#fig-md width=310 height=263}\n:::\n:::\n\n\nこの方法は極めて収束が遅く，イテレーション数を 100000 以上に取らないと目標分布 $e^{-U}$ の良い近似とならないことを思い知りました．なお，以降の MCMC 法ではいずれもイテレーション数は一桁少ない 10000 としています．\n\n### Metropolis 法 {#sec-MH}\n\nもちろん，分布 $e^{-U}$ をサンプリングするために，必ずしも背景にある物理過程まで戻ってシミュレーションをする必要はありません．\n\nそこで，シミュレーションは簡単なランダムウォークで行い，その結果を適切に修正することで目標分布に収束させる方法が [@Metropolis+1953] で考えられました．\n\n[@Metropolis+1953] の手法は，現在では random walk Metropolis-Hastings 法と呼ばれます．\n\nこの背後の物理現象から離陸する一歩が，分子動力学法と MCMC 法とを分けるものでした．\n\n::: {#23df8efd .cell execution_count=4}\n``` {.python .cell-code}\ndef metropolis(num_samples, initial_state, verbose=False):\n    samples = [initial_state]\n    current_state = initial_state\n\n    accept = []\n\n    for _ in range(num_samples - 1):\n        proposed_state = current_state + np.random.uniform(-2,2)\n        acceptance_ratio = pi(proposed_state) / pi(current_state)\n        if np.random.rand() < acceptance_ratio:\n            current_state = proposed_state\n            accept.append(True)\n        samples.append(current_state)\n\n    if verbose:\n        rate = len(accept) / num_samples\n        print(f'acceptance rate : {rate}')\n\n    return np.array(samples)\n```\n:::\n\n\n::: {#cell-fig-MH .cell execution_count=5}\n\n::: {.cell-output .cell-output-display}\n![Metropolis 法からのサンプル](MCMC_files/figure-html/fig-mh-output-1.png){#fig-mh width=310 height=263}\n:::\n:::\n\n\nサンプル数は分子動力学法の $1/10$ であるにも拘らず，目標分布 $e^{-U}$ の良い近似を得ています．\n\n一般に，MCMC からのサンプルの質の良さは，[自己相関関数](https://ja.wikipedia.org/wiki/%E8%87%AA%E5%B7%B1%E7%9B%B8%E9%96%A2) を見ることで評価できます．^[自己相関関数がどのような意味を持つか，筆者はわかりやすい説明をできかねますが，例えば自己相関関数の裾が重すぎると，中心極限定理が成り立たなくなります．]\n\nMetropolis 法の自己相関関数を計算してみると，横軸の Lag が大きくなればなるほど Autocorrelation の値は小さくなっています．\n\n::: {#cell-fig-MH-auto .cell execution_count=6}\n\n::: {.cell-output .cell-output-display}\n![Metropolis 法の自己相関関数](MCMC_files/figure-html/fig-mh-auto-output-1.png){#fig-mh-auto width=328 height=302}\n:::\n:::\n\n\n::: {#cell-fig-1 .cell execution_count=7}\n\n::: {.cell-output .cell-output-display}\n![Metropolis 法の軌跡](MCMC_files/figure-html/fig-1-output-1.png){#fig-1 width=324 height=302}\n:::\n:::\n\n\n上図は Metropolis 法で構成される Markov 連鎖の軌跡を表しています．行ったり来たりしているのがわかります．棄却率は５割弱です．^[一般には，ランダムウォーク MH 法において，採択率を $0.2\\le\\al\\le0.4$ 前後に抑えるのが良いとされています [@Roberts+1997]．これは状態空間の次元が無限に漸近する設定下での，漸近論的な結果ですが，低次元の場合でも極めて良い指標になることが [@Gelman+1996] で実証されています．また今回も，１次元であるにも拘らず，たしかに棄却率が半分を越さないほうが，自己相関が小さくなる傾向が確認されました．しかし今回は対象分布の裾が極めて軽いので，あまり大きなムーブは要らず，ステップサイズの最大値を $2$，採択率は $0.5$ 近くにしました．他の手法，LMH と Zig-Zag もステップサイズの最大値が $2$ になるように統一しました．]\n\n### 統計学への応用\n\nこうして MCMC が発明されれば，すぐにイノベーションとして理解されたかというとそうではありませんでした．\n\nこの Metropolis の手法が極めて賢いシミュレーション手法であることは一目瞭然でも，一般の確率分布からのサンプリングに使える汎用アルゴリズムになっているという抽象的な観点が得られるまでには時間を要しました．これを成し遂げたのが [@Hastings1970] でした．^[\"While [@Metropolis+1953] proposed the use of MCMC sampling to compute particular integrals in statistical mechanics, **it was the Hastings paper that elevated the concept to a general one, and introduced it to the broader statistics community**.\" [@Martin+2023-history p.7] 3.5節．]\n\nさらに，Hastings のこの結果も見過ごされたと言って良いでしょう．真にMCMC を統計学界隈に広め，現代におけるベイズ統計学の興隆の契機となったのは階層モデリングにおける Gibbs サンプリングの有用性を強調した [@Gelfand-Smith1990] だと言われます．^[[@Martin+2023-history p.8] 4節，[@Robert-Casella2011 p.102] など．]\n\n当時，代替手法としては複雑な数値アルゴリズムしかなかったベイズ統計学において，MCMC は汎用的で実装も容易であることが周知され，ベイズ統計学が普及するきっかけとなりました．\n\n## 非対称化への試み {#sec-LMH}\n\n### 対称性という制約\n\nここでもう一度 Metropolis 法の軌跡 @fig-1 を見てみましょう．\n\n![@fig-1 Metropolis 法の軌跡](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png){width=230pt}\n\n最初の 50 サンプルしか表示していませんから，運が悪いとうまく見つからないかもしれませんが，「一度歩んだルートを，その後すぐに逆に戻ってしまう」という事象が発生しやすいことが観察できますでしょうか？\n\nこれを **対称性** (reversibility) または **可逆性** と言います．\n\nMetropolis 法は構成上，この対称性を持つことが必要ですが，対称であるが故に一箇所に長時間とどまってしまうことが多く，対称分布が複雑である場合はもっといろんなモード（峰）からもサンプリングをしてほしいのに，なかなかそうなってくれないことがあります．\n\nコーヒーに砂糖を溶かすことを考えてみましょう．砂糖の粒が拡散するのに任せておくと，最終的には均一に溶けるでしょうが，莫大な時間がかかります．スプーンで混ぜるなどして，砂糖が元の場所にとどまらずに移動し続けるようにすれば，はるかに速く平衡状態に到達できるでしょう．\n\nこれが **非対称化** のアイデアです．数ある Metropolis 法の改良の方向の中でも，この対称性を破るという試みは特に注目されてきました．\n\n### リフティング\n\nMetropolis 法を非対称化するアプローチに，**リフティング** [@Chen+1999] と呼ばれる方法があります．\n\nこれは，元々の状態空間を２つの「モード」$+1$ と $-1$ に分裂させ，$+1$ のモードではひたすら右側に，$-1$ のモードではひたすら左側に移動するようする方法です．\n\n２つのモード $+1,-1$ の間を遷移する確率を調整することで，最終的な不変分布は変わらないようにすることができます．\n\nこうすることで，対称性を破り，一度「この方向に行く！」と決めたら行き続けるようにしながら，収束先は変わらないように変更することが出来るのです．\n\n実際に Metropolis 法に適用した Lifted Metropolis-Hastings 法 [@Turitsyn+2011] を実装してみましょう：\n\n::: {#1eb05bee .cell execution_count=8}\n``` {.python .cell-code}\ndef lifted_metropolis(num_samples, initial_state, verbose=False):\n    samples = [initial_state]\n    current_state = initial_state\n    lifting_variable = 1\n    accept = []\n\n    for _ in range(num_samples - 1):\n        delta = np.random.uniform(0,2)\n        proposed_state = current_state + lifting_variable * delta\n        acceptance_ratio = pi(proposed_state) / pi(current_state)\n\n        if np.random.rand() < acceptance_ratio:\n            current_state = proposed_state\n            accept.append(True)\n        else:\n            lifting_variable = (-1) * lifting_variable\n\n        samples.append(current_state)\n    \n    if verbose:\n        rate = len(accept) / num_samples\n        print(f'acceptance rate : {rate}')\n\n    return np.array(samples)\n```\n:::\n\n\n新しく追加されたリフティング変数 $\\sigma\\in\\{\\pm1\\}$ に依存して，$\\sigma=+1$ の場合には右方向に，$\\sigma=-1$ の場合は左方向にしか提案を出さない MH 法と見れます．\n\n::: {#cell-fig-LMH .cell execution_count=9}\n\n::: {.cell-output .cell-output-display}\n![非対称 Metropolis 法からのサンプル](MCMC_files/figure-html/fig-lmh-output-1.png){#fig-lmh width=310 height=263}\n:::\n:::\n\n\n::: {#cell-fig-LMH-auto .cell execution_count=10}\n\n::: {.cell-output .cell-output-display}\n![非対称 Metropolis 法の自己相関関数](MCMC_files/figure-html/fig-lmh-auto-output-1.png){#fig-lmh-auto width=340 height=302}\n:::\n:::\n\n\n自己相関関数を見ると，Metropolis 法よりも急速に減衰していることがわかります．むしろ，過減衰のように自己相関関数が負になっていることもあります．\n\nこれは，一度「この方向に行く！」と決めたら行き続けるように設計したために，正の値が出たしばらくあとは負の値が，負の値が出たしばらくあとは正の値が出やすいようになってしまっているためです．\n\nしたがってこれは１次元の分布を考えていることに起因するため，殊更問題とすべきではないでしょう．\n\n::: {#cell-fig-4 .cell execution_count=11}\n\n::: {.cell-output .cell-output-display}\n![非対称 Metropolis 法の軌跡](MCMC_files/figure-html/fig-4-output-1.png){#fig-4 width=324 height=302}\n:::\n:::\n\n\n### リフティングの有用性\n\n今回のような単純なポテンシャル $U$ （図 [-@fig-2]） だけでなく，統計力学における磁性体のモデルである Curie-Weiss モデルのハミルトニアン\n\n$$\nH_n(x)=-\\frac{d\\beta}{2n}\\sum_{i,j=1}^nx_ix_j-h\\sum_{i=1}^nx_i,\n$$\n$$\nh\\in\\R,x\\in\\{\\pm1\\}^n,\\quad n,d=1,2,\\cdots\n$$\n\nが定める Boltzmann-Gibbs 分布 $e^{-H}$ に対する Lifted Metropolis-Hastings も，単純な Metropolis-Hastings 法よりも効率的であることが知られています．\n\n具体的には，モデルのパラメータ数 $n$ に対して，緩和時間を $\\sqrt{n}$ のオーダーだけ改善することが，[@Turitsyn+2011] では数値実験で，[@Bierkens-Roberts2017] では理論的に検証されているのです．\n\n<!--\n\n### HMC\n\nHamiltonian Monte Carlo 法も一種のリフティングと見ることができ，\n\n-->\n\n## 新たな MCMC {#sec-PDMP}\n\n<!--\n\nこうして MCMC は物理学者から物質科学者，そして統計学者から機械学習家まで，多くの人が幅広く用いる手法になりました．\n\nその結果，多くの同一の手法が違う名前で呼ばれていることも多く，現状の最先端ではどのようなことが起こっているのか見極めるのが困難です．\n\nここでは，上述のすべての分野に渡って共通して起こりつつある大きな地殻変動を紹介します．キーワードは **連続時間 MCMC** です．^[[@Fearnhead+2018-PDMC] から取った用語です．コンピュータシミュレーションである以上，結局は離散化するのですが，粒子の動きは（従来の Metropolis-Hastings 法のような）Markov 連鎖であるというより，連続時間確率過程のような動きをする手法群であることには間違いありません．]\n\n-->\n\n### 背後の物理現象からの更なる離陸\n\n第 [-@sec-origin] 章で，分子動力学法（第 [-@sec-MD] 節）から，提案分布を背後の物理現象とは全く関係ないランダムウォークとすることで，Metropolis 法（第 [-@sec-MH] 節）は一気に効率的なサンプリング法となったことを見ました．\n\nしかし，Metropolis 法はまだ思考が物理に引っ張られているのかも知れません．平衡統計力学において，ミクロの状態は等価で，ミクロなダイナミクスは可逆と考えられます．その前提が，知らず知らずのうちにまだ埋め込まれたままだと言えるでしょう．\n\nそこで，スプーンでかき混ぜるように，遷移を非対称にすることで，より効率的なサンプリング法となることを前章 [-@sec-LMH] で見ました．\n\nここでは，さらに暗黙の思い込みから解き放たれようとします．それは，**シミュレーションするにあたって，必ずしも離散時間ステップに囚われる必要はない** ということです．\n\nもう一度，Lifted Metropolis-Hastings 法の軌跡を見てみましょう：\n\n![@fig-4 非対称 Metropolis 法の軌跡](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png){width=230pt}\n\nこの軌跡から得られる情報のほとんどは，「どこで折り返したか？」です．\n\nですから，この軌跡をシミュレーションするにあたって，一歩一歩採択-棄却のステップを繰り返す必要はなく，「どこで折り返すか？」を先に計算できてしまえば，あとは好きなステップサイズで切り出してサンプルとすれば良いのです．\n\n実は，「折り返す地点だけを効率的に計算する」ことが可能であり，それが **連続時間 MCMC** のアイデアです．\n\n### 連続時間 MCMC\n\nLifted Metropolis-Hastings の適切な連続時間極限 $\\Delta t\\to0$ を考えることで，「折り返す」という事象（が起こった回数）は Poisson 過程に従うことが導けます．\n\nすると，「折り返す」事象が起こるまでの待ち時間 (interarrival time) は指数分布に従うことがわかります．これに基づいて，「折り返す」事象が起こる時刻を計算し，そこまでの軌跡を直線で補間すれば，Lifted Metropolis-Hastings 法（の連続時間極限）の軌跡が模倣できることになります．\n\n最終的に得られる過程は，ランダムな時刻に「折り返す」事象が起こり，その間は確定的な動き（等速直線運動）をするというもので，このような過程を **区分確定的 Markov 過程** (PDMP: Piecewise Deterministic Markov Process) と呼びます．\n\nこのような PDMP は，Lifted Metropolis-Hastings 以外にも種々の MCMC 法の極限から見つかっており，その中でも特に有名なのが次の **Zig-Zag sampler** です：\n\n::: {#1a88044b .cell execution_count=12}\n``` {.python .cell-code}\nimport math\n\ndef zigzag(num_samples, initial_state, step=1):\n    samples = [initial_state]\n    trajectory = [initial_state]\n    current_state = initial_state\n    lifting_variable = 1\n    t = 0\n\n    while t < num_samples * step:\n        state_event = lifting_variable * np.sqrt(-1 + np.sqrt( 1 - 4 * np.log(np.random.rand()) ))\n        t_event = t + np.abs(state_event - current_state)\n        for _ in np.arange(np.ceil(t/step)*step, np.ceil(t_event/step)*step, step):\n              samples.append(current_state + lifting_variable * (_ - t))\n        current_state = state_event\n        trajectory.append(current_state)\n        lifting_variable = (-1) * lifting_variable\n        t = t_event\n\n    return np.array(samples), np.array(trajectory)\n```\n:::\n\n\n<!--\n自己相関関数こんなに spiky になるっけ？\nいや，多分この設定だと zig-zag は普通に悪いんだろうな．\n棄却率が高くて７割くらいある LMH に負けるのが「正しい」のかも知れない．\n\nそして１次元なのに等間隔でサンプリングしているから，自己相関関数は sine curve に（むしろ）なるべきなのか！\n-->\n\n::: {#cell-fig-PDMP .cell execution_count=13}\n``` {.python .cell-code}\nsamples_zigzag, trajectory_zigzag = zigzag(num_samples, initial_state, step=2)\nplt.figure(figsize=(3.5, 3))\nplt.hist(samples_zigzag, bins=50, density=True, alpha=0.7, color=minty)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Zig-Zag サンプラーからのサンプル](MCMC_files/figure-html/fig-pdmp-output-1.png){#fig-pdmp width=310 height=263}\n:::\n:::\n\n\n::: {#cell-fig-PDMP-auto .cell execution_count=14}\n\n::: {.cell-output .cell-output-display}\n![Zig-Zag サンプラーの自己相関関数](MCMC_files/figure-html/fig-pdmp-auto-output-1.png){#fig-pdmp-auto width=340 height=302}\n:::\n:::\n\n\n自己相関関数は，Lifted Metropolis-Hastings 法と同様に急激に下がって負の値に突き抜けたあとは，少し振動が残っているのがわかります．\n\n全３サンプラーの比較は第 [-@sec-figs] 節をご覧ください．\n\n次の軌跡を見て分かる通り，モードである $x=0$ を中心に激しく往復するので，直後のサンプルとは負の相関が出やすいようです．\n\n::: {#cell-fig-6 .cell execution_count=15}\n\n::: {.cell-output .cell-output-display}\n![Zig-Zag サンプラーの軌跡](MCMC_files/figure-html/fig-6-output-1.png){#fig-6 width=324 height=302}\n:::\n:::\n\n\n連続時間極限 $\\Delta t\\to0$ をとっているということは，「極めて小さいステップサイズでの random walk Metropolis 法（第 [-@sec-MH] 節）」に相当します．従って，一度折り返したら，原点 $x=0$ を超えるまでは絶対に棄却されません．\n\nそのため，このように往復するような軌跡が得られます．\n\n### 連続時間 MCMC の美点 {#sec-PDMP-advantages}\n\n前節では，必ずしも PDMP 法である Zig-Zag sampler が，Lifted Metropolis-Hastings 法より，自己相関関数の観点で良いとは言い切れないことを見ました．\n\nしかし，今回の設定は１次元という特殊な条件下であることを考慮に入れる必要があります．\n\n１次元なので Zig-Zag サンプラーは行き来することしか出来ていませんが，^[今回は対象分布の減衰が極めて激しかったために差が現れにくかったのだと考えられます．Zig-Zag サンプラーは１次元でも，（広い設定の下で）（そして特に目標分布の裾が重いときに）ランダムウォーク・メトロポリス法や Metripolis-adjusted Langevin algorithm よりも速い収束レートを持ちます [@Vasdekis-Roberts2022]，] ２次元以上，特に高次元の場合は，Zig-Zag サンプラーは極めて効率的に状態空間を探索できることが期待されます．\n\n例えば，標準正規分布に対する２次元での軌跡は次の通りです：\n\n![Zig-Zag Sampler in $\\R^2$](./Files/ZigZag_2d.png){#fig-5}\n\nそして何より，軌道が効率的な空間の探索に有利であるだけでなく，正確なサブサンプリングを取り入れることが可能です．すなわち，ほとんどの他手法と違って，**バイアスを導入することなく**，データの一部のみを用いてアルゴリズムを走らせることができます．\n\nしたがって，従来の MCMC 法が採択-棄却のステップにおいて尤度を評価する必要があり，データサイズ $n$ に対して $O(n)$ の計算量を要するのに対して，$O(n)$ に比例する焼き入れのステップを除けば，$O(1)$ の複雑でほとんど i.i.d. なサンプルを得ることができます [@Bierkens+2019]．\n\n<!-- \n\n### 筆者の目標：新時代のサンプラーの開発\n\n情報通信機器の発達によりデータが複雑で大規模化する現代では，モデルも同様に大規模で複雑化していく必要があります．OpenAI の ChatGPT や Sora，Anthropic の Claude-3 などの **基盤モデル** はその象徴と言えるでしょう．\n\n筆者は，その中で **新時代の MCMC** の開発を目標としています．\n\n高次元空間上の複雑な分布からも効率的にサンプリングできる MCMC 手法が開発された際には，多くの人が自分のノートパソコンで気軽にできるベイズ統計分析の幅が大きく広がることでしょう．\n\nそれこそ，ニューラルネットワークの表現力をフルに活用するだけでなく，ベイズ手法の強みも併せて，小規模データでも鮮やかな分析が簡単に出来るようになるかもしれません．\n\nそのような世界線こそ，AI 技術の民主化と呼ぶにふさわしい，来るべき未来だと筆者は信じています．\n\nまた，基盤モデルの Bayes 的な理解を進めることも，実は壮大ながらも，筆者の最終的な目標の一つであります．\n\n-->\n\n## 終わりに {.appendix}\n\nこうみると，MCMC は物理学の問題意識から生まれた手法でありながら，背後の物理現象を模倣することから離れていくことで，計算手法としての効率を高めていく一途を辿っていることがわかります．\n\nそう見ると，新時代の大規模データと大規模モデルが課す MCMC の次なる脱皮は，連続時間 MCMC で間違いないような気がしてくるのですが……．まだ筆者にははっきりとは見えてきません．\n\nまた本稿では１つの流れしか取り上げておらず，例えば HMC とその非対称化がどのような位置づけにあるかもまだ考慮中です．\n\n統計力学，統計学，機械学習が交差するなんとも面白いテーマです．\n\n### 執筆のきっかけ {.appendix}\n\n本ポスター，そして本解説記事の執筆のきっかけは，[MLSS でのポスター発表](../Particles/PF.qmd) で連続時間 MCMC のことが機械学習の界隈では全く知られていないことを知ったことと，情報統計力学の研究集会に出席し，連続時間 MCMC が物理学の方からも研究されていることを知ったことでした．\n\n統計界隈では（本稿で解説しました通り） PDMP や連続時間 MCMC と呼ばれる手法は，物理学界隈では event-based simulation，rejection-free と呼ばれる手法群の１つとして活発に研究されていました．\n\n全く同じ問題を解こうとしているのに，用語法が全く異なることに驚かされました．\n\n２つの分野の相互理解と知見の交換が進むことを目指し，これからも研究していきたいと考えます．\n\n### アルゴリズムのステップサイズについて {.appendix}\n\nコードからわかります通り，提案分布のスケールは次のようになっています：\n\n| 手法 | 提案分布 | 平均移動距離^[提案分布の．実際の軌跡の１ステップでの移動距離とは違う．] |\n|:----:|:----:|:----:|\n| MH | $\\rU([-2,2])$ | $1$ |\n| LMH | $\\rU([0,2])$ | $1$ |\n| Zig-Zag | なし | $2$ |\n\n: ３手法のスケーリング {.striped .hover .responsive-sm tbl-colwidths=\"[20,20,20]\"}\n\nですので，平均した隣接（提案）サンプル間距離について，Zig-Zag サンプラーはズルをしているともいえます．\n\nしかし，必ずしもアンフェアな比較をしていたわけではありません．\n\nもし，３手法で計算量を揃えるならば，Zig-Zag サンプラーにとっての１回のループは方向転換をするまでであり，２つの方向転換の間の平均距離はだいたい $1.93$ になります．\n\n::: {#15677ff9 .cell execution_count=16}\n``` {.python .cell-code}\ndiffs = np.diff(trajectory_zigzag)\nabs_diffs = np.abs(diffs)\nmean_abs_diff = np.mean(abs_diffs)\nprint(mean_abs_diff)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1.9270562918470246\n```\n:::\n:::\n\n\nMH, LMH については，ほとんど最適なスケーリングになるように調節してありますが，Zig-Zag サンプラーにおいては最適なスケーリングという概念は存在しません．あらかじめ @fig-6 の軌跡があり，どれくらい距離を空けてサンプルとするか，という問題しかありません．\n\nここでは，アルゴリズムのループ１回が１回のサンプリングになるように，３つの手法を揃えて比較の根拠としました．\n\nなお，このように，Zig-Zag サンプラーなどの連続時間 MCMC と，従来の離散時間 MCMC の直接の性能比較は，微妙な問題が多く，筆者もまだ十分に説明できる準備はありません．\n\nしかし，次年度以降のオープンハウスで，より詳細な解説を行う予定です．\n\n::: {#46b541fa .cell execution_count=17}\n\n::: {.cell-output .cell-output-display}\n![](MCMC_files/figure-html/cell-18-output-1.png){width=574 height=278}\n:::\n:::\n\n\nZig-Zag サンプラーのサンプリングステップを $1$ や $1.5$ にすると，たしかに自己相関は悪化します．\n\n## 参考文献 {.appendix}\n\n本稿では，用いたコードの導出を一切触れませんでした．これについては，文献 [@Tartero-Krauth2023] をご参照ください．非調和振動子を系にとり，正準集団とみなすことで，分子動力学法，メトロポリス法からそのリフティングまで，種々のサンプラーを同じ題材で比較するアイデアをもらいました．こんなにわかりやすい解析ができるのかと心底驚きました．\n\n続いて，Metropolis-Hastings 法 → 非対称 MCMC → 連続時間 MCMC という発展の過程を，背後の物理過程の模倣からの離陸という視点で統一的に捉えることが出来るということは，[@Turitsyn+2011] の魅力的なイントロダクションで気付かされました．本文献はリフティングによる MCMC の非可逆化を抽象的に定式化して数値実験で検証したものであり，「ねじれ詳細釣り合い条件」を導入した点で，アイデアの宝庫といえます．\n\nリフティングによる Metropolis 法の非対称化について，[@酒井佑士2017] は貴重な日本語文献です．当該文献の第３章（の第２節）にここで紹介した内容が詳しくまとめられています．\n\n第 [-@sec-PDMP-advantages] 節で紹介しましたように，Zig-Zag サンプラーを用いたサンプリングではそのスケーラビリティが魅力です．この点については，Zig-Zag サンプラーが提案された論文 [@Bierkens+2019] でも，前面に押し出して解説されています．\n\n",
    "supporting": [
      "MCMC_files"
    ],
    "filters": [],
    "includes": {}
  }
}