{
  "hash": "9fb51b1e902b4465c4d069adf13dae5b",
  "result": {
    "markdown": "---\ntitle: \"Quartoはじめて良かった | Quarto Basics in Japanese\"\nauthor: \"Hirofumi Shiba\"\ndate: \"11/4/2023\"\ncategories: [Quarto, Lifestyle]\nabstract: Quartoのチュートリアル＋紹介＋おすすめポイント\nabstract-title: 概要\ntoc: true\nnumber-sections: true\nwebsite:\n    twitter-card: true\ncode-block-bg: true\ncode-block-border-left: \"#31BAE9\"\n---\n\n筆者はQuartoを，「TeXにような使用感で数式・コードが併存する文章を書き，RStudioのような使用感でコードの実行やプレゼンができる，等号開発環境」と理解した．\n前述のTeX, RStudioに慣れている人にとっては極めて低い限界コストで莫大な利益を得るだろう．\n\n## デモページ\n\n:::{.callout-note}\nNote: The followings were pasted from the [official documentation](https://quarto.org/docs/get-started/hello/vscode.html).^[This is footnote. What a great feature!]\n:::\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 4 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](QuartoBasics_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n## 使い方の概要\n\nQuartoではこのようなNotebook-likeなドキュメントが，極めて簡単に＋凡ゆるフォーマットで作成できる．\n特にVSCodeの拡張機能と組み合わせれば，`RStudio`のような隙のない統合開発環境が得られる．またVSCodeでは[ビジュアルモードでの編集](https://quarto.org/docs/visual-editor/vscode/)もサポートされており，Jupyter Notebookと全く同じ使用感で始められる．\n\n基本的な仕組みとして，自分で作成するのは `.qmd`ファイルのみである．その後は`quarto render`コマンドにより，コードブロックはJupyterによって処理され，全体はmarkdownに変換され，Pandocによって`pdf`, `html`, `word` など好きな形式に最終出力できる．\n\n拡張機能をオンにしたVSCodeでは`Run Cell`ボタンもあるので，ノートブック全体を毎度ビルドせずとも，コードブロックごとに実行して結果を見ることもできる．`Ctrl+Enter`で１行ごとに実行できる操作感は`RStudio`と同じである．\n\n各ファイルの冒頭にYAML blockを用意することで，ノートブックの詳細を調整できる（参照：[HTML Options](https://quarto.org/docs/reference/formats/html.html)）．\n\n\n```{YAML}\n---\ntitle: \"Quarto Basics\"\nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n```\n\n\n本文はmarkdown記法で書く．数式も使える：\n$$\\mathrm{P}[|\\xi|<t]\\le2e^{-\\frac{t^2}{2\\sigma^2}},\\qquad t>0.$$\n\nまた，コードブロックにもコメントアウトと接頭辞の組み合わせ`#|`を前につけることでYAMLで指示が出せる（参照：[指示のリスト](https://quarto.org/docs/reference/cells/cells-jupyter.html)）．上のコードブロックには\n\n\n```{YAML}\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n```\n\n\nと追加されているために，出力された図にラベリングとキャプションが付いているのである．\n\n## 美点\n\n* レンダリングがとんでもなく速い．体感でTeXの10分の1である．\n* それでいて数式とコードブロックを併在させることが出来る．なお，明かにTeXを意識していることがわかる使用感になっているし，[本の作成も可能](https://quarto.org/docs/books/)としている．\n* ローカル環境で動く．Jupyter Notebookが続かない筆者にとって，この点は肝要である．\n* 私用の勉強ノートとしても使えると同時に，内容そのままブログとして公開できる．\n* [プレゼンテーションにも使える](https://quarto.org/docs/presentations/)．\n* すごい細かいが，例えば`project type`を`website`としたリポジトリで`quarto render`をしても，不要なファイルが自動で削除される．このような点がライトユーザーでもとにかく使いやすい．\n* さらに[インタラクティブな機能](https://quarto.org/docs/interactive/)を実現してみたい．\n\n## Website Hostingのやり方\n\n[公式Guide](https://quarto.org/docs/publishing/github-pages.html)を参考．\n\n### Source Branchを`main`と別ける\n\nまず`gh-pages`という全く新しいブランチを作成する．既存のリポジトリのコミット履歴とは独立している新しいブランチを作るときは`--orphan`オプションが利用される．\n\n```{.bash filename=\"Terminal\"}\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\ngit checkout main\n```\n\n基本`gh-pages`ブランチには自分では立ち入らない．\n\n### `Publish`コマンドによるサイトの公開\n\n`main`ブランチにいることを確認して，\n```{.bash filename=\"Terminal\"}\nquarto publish gh-pages\n```\nを実行．\n\nGitHubの方の設定**Settings: Pages**で，Sourceを`gh-pages`ブランチの`/(root)`にしていることを確認すれば，これで無事サイトが公開されていることが確認できる．\n\n### GitHub Actionの使用\n\nさらに，ローカル上で`render`するのではなく，コミットする度にGitHub上でレンダリングしてもらえるように自動化することもできる．こうするとスマホからも自分のサイトが更新できる．\n\nまず次の内容のファイルを`.github/workflows/publish.yml`に書き込む：\n\n```{.yml filename=\".github/workflows/publish.yml\"}\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\n",
    "supporting": [
      "QuartoBasics_files"
    ],
    "filters": [],
    "includes": {}
  }
}