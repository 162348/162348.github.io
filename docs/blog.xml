<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Hirofumi Shiba</title>
<link>https://162348.github.io/blog.html</link>
<atom:link href="https://162348.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>A Blog by a Bayesian Computation Researcher</description>
<image>
<url>https://162348.github.io/assets/categories.png</url>
<title>Hirofumi Shiba</title>
<link>https://162348.github.io/blog.html</link>
</image>
<generator>quarto-1.4.552</generator>
<lastBuildDate>Wed, 18 Sep 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>R 上の Stan インターフェイス</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/R/Stan2.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<div id="listing-lst-stan" class="listing quarto-float quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Process,MCMC,R,Stan,YUIMA,Bayesian" data-listing-date-sort="1715439600000" data-listing-file-modified-sort="1726820816255" data-listing-date-modified-sort="1726758000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="952">
<a href="../../../posts/2024/R/adastan.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/R/Files/adastan1.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
SDE のベイズ推定入門
</h5>
<div class="card-subtitle listing-subtitle">
YUIMA と Stan を用いた確率過程のベイズ推定入門
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-05-12
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Bayesian,Computation,Stan" data-listing-date-sort="1715871600000" data-listing-file-modified-sort="1726819084011" data-listing-date-modified-sort="1726498800000" data-listing-reading-time-sort="3" data-listing-word-count-sort="554">
<a href="../../../posts/2024/R/Stan1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/R/Files/Stan.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
Stan 入門
</h5>
<div class="card-subtitle listing-subtitle">
rstan による Stan の利用
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-05-17
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Stan,R,YUIMA,Process" data-listing-date-sort="1715871600000" data-listing-file-modified-sort="1726725668671" data-listing-date-modified-sort="1726498800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="859">
<a href="../../../posts/2024/R/YUIMA.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top"><img src="https://162348.github.io/posts/2024/R/Files/YUIMA.png" style="height: 150px;" class="thumbnail-image card-img"></p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
YUIMA 入門
</h5>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-05-17
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<section id="概観" class="level2 unlisted unnumbered">
<h2 class="unlisted unnumbered anchored" data-anchor-id="概観">概観</h2>
<p><code>RStan</code> は <code>Rcpp</code> や <code>inline</code> といったパッケージにより C++ を R から呼び出すことで，Stan とのインターフェイスを実現している．</p>
<p>一方で <code>CmdStanR</code> は <code>CmdStan</code> という Stan のコマンドラインインターフェイスを R から呼び出すことで，Stan とのインターフェイスを実現している．</p>
</section>
<section id="rstan-パッケージ" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="rstan-パッケージ"><span class="header-section-number">1</span> <code>RStan</code> パッケージ</h2>
<section id="はじめるために" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめるために"><span class="header-section-number">1.1</span> はじめるために</h3>
<p><a href="https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started">RStan Getting Started</a> に従って実行します．</p>
<section id="インストール" class="level4" data-number="1.1.1">
<h4 data-number="1.1.1" class="anchored" data-anchor-id="インストール"><span class="header-section-number">1.1.1</span> インストール</h4>
<div class="callout callout-style-default callout-caution no-icon callout-titled" title="すでにインストールされており，再インストールしたい場合">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
すでにインストールされており，再インストールしたい場合
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageVersion</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>)</span></code></pre></div>
<p>を実行してすでに存在する場合は，次を実行します</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>)</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".RData"</span>)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".RData"</span>)</span></code></pre></div>
</div>
</div>
</div>
<p>ほとんどの場合，次の１行でインストールできます：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cloud.r-project.org/"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dependencies =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</section>
<section id="rstan-の利用のためにはc-コンパイラが必要" class="level4" data-number="1.1.2">
<h4 data-number="1.1.2" class="anchored" data-anchor-id="rstan-の利用のためにはc-コンパイラが必要"><span class="header-section-number">1.1.2</span> <code>RStan</code> の利用のためには，<code>c++</code> コンパイラが必要</h4>
<p>XCode コマンドラインツールをインストールすることにより，<code>/Library/Developer/CommandLineTools/usr/bin</code> に <code>clang++</code> がインストールされます．</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clang</span>++ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-E</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-x</span> c++ /dev/null</span></code></pre></div>
<p>現在では，<a href="https://mac.thecoatlessprofessor.com/macrtools/"><code>macrtools</code></a> を通じて <code>C++</code> コンパイラを R 内でインストールすることもできます．</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled" title="コンパイラ最適化 (MacOS)">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
コンパイラ最適化 (MacOS)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><a href="https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started">RStan Getting Started</a> の <a href="https://github.com/stan-dev/rstan/wiki/Configuring-C---Toolchain-for-Mac">Configuring C Toolchain for Mac</a> では，次のようなコンパイラの最適化が推奨されています：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">dotR <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HOME"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".R"</span>)</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(dotR)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dir.create</span>(dotR)</span>
<span id="cb5-3">M <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(dotR, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Makevars"</span>)</span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(M)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.create</span>(M)</span>
<span id="cb5-5">arch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(R.version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>arch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arm64"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64"</span>)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CXX17FLAGS += -O3 -mtune=native -arch"</span>, arch, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-ftemplate-depth-256"</span>),</span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> M, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">append =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>これにより <code>~/.R/Makevars</code> に次のような行が追加されます：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CXX17FLAGS</span> += <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-mtune</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>native <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-arch</span> arm64 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ftemplate-depth-256</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="検証" class="level4" data-number="1.1.3">
<h4 data-number="1.1.3" class="anchored" data-anchor-id="検証"><span class="header-section-number">1.1.3</span> 検証</h4>
<p>次のコードが実行されれば，インストールは成功しています．</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">example</span>(stan_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstan"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">run.dontrun =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</section>
</section>
<section id="stan-関数" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="stan-関数"><span class="header-section-number">1.2</span> <code>stan</code> 関数</h3>
<p>RStan パッケージの本体は <code>stan</code> 関数である：</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stan</span>(file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anon_model"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_code =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pars =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb8-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warmup =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(iter<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">init =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"random"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample.int</span>(.Machine<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>integer.max, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">algorithm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NUTS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HMC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fixed_param"</span>),</span>
<span id="cb8-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diagnostic_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb8-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">save_dso =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">include =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb8-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mc.cores"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L),</span>
<span id="cb8-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open_progress =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interactive</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isatty</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stdout</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span></span>
<span id="cb8-10">                  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RSTUDIO"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>),</span>
<span id="cb8-11">  ...,</span>
<span id="cb8-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boost_lib =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eigen_lib =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb8-13">  )</span></code></pre></div>
<section id="モデルの受け渡し" class="level4" data-number="1.2.1">
<h4 data-number="1.2.1" class="anchored" data-anchor-id="モデルの受け渡し"><span class="header-section-number">1.2.1</span> モデルの受け渡し</h4>
<p><code>model_code=""</code> が Stan モデルを定義するコードを，文字列として直接受け渡すための引数である．</p>
<p>返り値はフィット済みの <code>stanfit</code> オブジェクトである．</p>
<p>他の方法は次のとおり：</p>
<ul>
<li><code>file</code> としてファイルへのパスを渡す</li>
<li>フィット済みの <code>stanfit</code> オブジェクトを <code>fit</code> 引数として渡す</li>
</ul>
</section>
<section id="重要な引数" class="level4" data-number="1.2.2">
<h4 data-number="1.2.2" class="anchored" data-anchor-id="重要な引数"><span class="header-section-number">1.2.2</span> 重要な引数</h4>
<ul>
<li><code>data</code>：データを与える．<code>list</code> 型．</li>
<li><code>iter</code>：繰り返し回数．デフォルトは <code>2000</code>．</li>
<li><code>chains</code>：チェイン数．デフォルトは <code>4</code>．</li>
</ul>
</section>
<section id="stanfit-オブジェクト" class="level4" data-number="1.2.3">
<h4 data-number="1.2.3" class="anchored" data-anchor-id="stanfit-オブジェクト"><span class="header-section-number">1.2.3</span> <code>stanfit</code> オブジェクト</h4>
<p><code>stan</code> 関数は Stan モデルを C++ に変換して実行し，結果を <code>stanfit</code> オブジェクトとして返す．</p>
<p>これに対して <code>print</code>, <code>summary</code>, <code>plot</code> などのメソッドが利用可能である．</p>
<p>さらに，次の様にして MCMC サンプルを取り出すことができる：</p>
<ul>
<li><code>as.array</code> メソッドを用いて MCMC サンプルを <code>array</code> 型で取り出す</li>
<li><code>extract</code> メソッドを用いて MCMC サンプルを <code>list</code> 型で取り出す</li>
<li><code>posterior</code> ライブラリの <code>as_draws_df</code> メソッドを用いて MCMC サンプルを <code>df</code> 型で取り出す．種々のデータ型 <code>&lt;format&gt;</code> に対して <code>as_draws_&lt;format&gt;</code> が存在する．</li>
</ul>
<p>取り出した MCMC サンプルは <code>bayesplot</code> パッケージの <code>mcmc_trace</code>, <code>mcmc_dens</code> などの関数を用いて可視化することができる．</p>
</section>
<section id="例１軌道と事後分布の可視化" class="level4" data-number="1.2.4">
<h4 data-number="1.2.4" class="anchored" data-anchor-id="例１軌道と事後分布の可視化"><span class="header-section-number">1.2.4</span> 例１：軌道と事後分布の可視化</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">scode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb9-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  array[2] real y;</span></span>
<span id="cb9-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb9-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  y[1] ~ normal(0, 1);</span></span>
<span id="cb9-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  y[2] ~ double_exponential(0, 2);</span></span>
<span id="cb9-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-10">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_code =</span> scode, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(bayesplot)</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mcmc_trace</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y[1]"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y[2]"</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption>軌道のプロット</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mcmc_dens</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y[1]"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y[2]"</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption>密度のプロット</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="例２確率過程の統計推測" class="level4" data-number="1.2.5">
<h4 data-number="1.2.5" class="anchored" data-anchor-id="例２確率過程の統計推測"><span class="header-section-number">1.2.5</span> 例２：確率過程の統計推測</h4>
<p>OU 過程</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AdX_t=%5Ctheta(%5Cmu-X_t)%5C,dt+%5Csigma%5C,dW_t%0A"></p>
<p>に対して，<code>stan</code> 関数でベイズ推定を実行してみます．</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(yuima)</span>
<span id="cb12-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setModel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drift =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta*(mu-X)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diffusion =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state.variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>)</span></code></pre></div>
</div>
<p>パラメータは <span id="eq-sde-param"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bpmatrix%7D%5Ctheta%5C%5C%5Cmu%5C%5C%5Csigma%5Cend%7Bpmatrix%7D%0A=%0A%5Cbegin%7Bpmatrix%7D1%5C%5C0%5C%5C0.5%5Cend%7Bpmatrix%7D%0A%5Ctag%7B1%7D"></span> として YUIMA を用いてシミュレーションをし，そのデータを与えてパラメータが復元できるかをみます．</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rstan)</span>
<span id="cb13-2">excode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data {</span></span>
<span id="cb13-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            int N;</span></span>
<span id="cb13-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            real x[N+1];</span></span>
<span id="cb13-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            real h;</span></span>
<span id="cb13-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          parameters {</span></span>
<span id="cb13-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            real theta;</span></span>
<span id="cb13-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            real mu;</span></span>
<span id="cb13-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            real&lt;lower=0&gt; sigma;</span></span>
<span id="cb13-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb13-13"></span>
<span id="cb13-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          model {</span></span>
<span id="cb13-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            x[1] ~ normal(0,1);</span></span>
<span id="cb13-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            for(n in 2:(N+1)){</span></span>
<span id="cb13-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              x[n] ~ normal(x[n-1] + theta * (mu - x[n-1]) * h,  sqrt(h) * sigma);</span></span>
<span id="cb13-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb13-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }"</span></span>
<span id="cb13-20"></span>
<span id="cb13-21">sampling <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSampling</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Initial =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Terminal =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb13-22">yuima <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setYuima</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sampling =</span> sampling)</span>
<span id="cb13-23">simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate</span>(yuima, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true.parameter =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xinit =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb13-24">sde_dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span>  yuima<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>sampling<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>n,</span>
<span id="cb13-25">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(simulation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>original.data),</span>
<span id="cb13-26">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h=</span>yuima<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>sampling<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>Terminal<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>yuima<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>sampling<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>n)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># シミュレーション結果</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(simulation)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="576"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ベイズ推定</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rstan_options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">auto_write =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mc.cores =</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>())</span>
<span id="cb15-4"></span>
<span id="cb15-5">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_code=</span>excode, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sde_dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Inference for Stan model: anon_model.
4 chains, each with iter=1000; warmup=500; thin=1; 
post-warmup draws per chain=500, total post-warmup draws=2000.

         mean se_mean   sd    2.5%     25%     50%     75%   97.5% n_eff Rhat
theta    0.89    0.25 1.01   -0.44    0.07    0.59    1.70    3.27    17 1.14
mu       0.02    0.27 3.59   -5.90   -0.15    0.12    0.42    7.23   178 1.02
sigma    0.50    0.00 0.01    0.48    0.49    0.50    0.51    0.52   108 1.07
lp__  3105.37    0.14 1.23 3102.48 3104.76 3105.46 3106.29 3107.15    80 1.06

Samples were drawn using NUTS(diag_e) at Thu Sep 19 16:46:14 2024.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).</code></pre>
</div>
</div>
<p>パラメータ (1) がよく推定できていることがわかる．特に <img src="https://latex.codecogs.com/png.latex?%5Csigma"> が安定して推定できている：</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(fit)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>ci_level: 0.8 (80% intervals)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>outer_level: 0.95 (95% intervals)</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="576"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bayesplot"</span>)</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rstanarm"</span>)</span>
<span id="cb21-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span>
<span id="cb21-4"></span>
<span id="cb21-5">posterior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(fit)</span>
<span id="cb21-6">plot_title <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Posterior distributions"</span>,</span>
<span id="cb21-7">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with medians and 80% intervals"</span>)</span>
<span id="cb21-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mcmc_areas</span>(posterior,</span>
<span id="cb21-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>),</span>
<span id="cb21-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_title</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="576"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="トラブルシューティング" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="トラブルシューティング"><span class="header-section-number">1.3</span> トラブルシューティング</h3>
<section id="cmath-が見つからない" class="level4" data-number="1.3.1">
<h4 data-number="1.3.1" class="anchored" data-anchor-id="cmath-が見つからない"><span class="header-section-number">1.3.1</span> <code>cmath</code> が見つからない</h4>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">Quitting from lines <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">329-343</span> (adastan.qmd) </span>
<span id="cb22-2"></span>
<span id="cb22-3"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compileCode</span>(f, code, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">language =</span> language, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> verbose) でエラー<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> </span>
<span id="cb22-4">  using C<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> compiler<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ‘Apple clang version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> (clang<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1600</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">26.3</span>)’using C<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>using SDK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ‘MacOSX15.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>sdk’In file included from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>built<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>In file included from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Frameworks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R.framework<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Versions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arm64<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Resources<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>StanHeaders<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>include<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>stan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>math<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>prim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>fun<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Eigen.hpp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>In file included from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Frameworks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R.framework<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Versions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arm64<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Resources<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>RcppEigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>include<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Eigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Dense<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>In file included from <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Frameworks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R.framework<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Versions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arm64<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Resources<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>RcppEigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>include<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Eigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Core<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>Library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Frameworks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R.framework<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Versions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arm64<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Resources<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>library<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>RcppEigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>include<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Eigen<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>src<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Core<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>util<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Macros.h<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">679</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> fatal error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cmath'</span> file not found  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">679</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#include &lt;cmath&gt;      |          ^~~~~~~1 error generated.make: *** [file2546221168fc.o] Error 1</span></span>
<span id="cb22-5"> 呼び出し<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  .main ... cxxfunctionplus <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>Anonymous<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> cxxfunction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> compileCode</span>
<span id="cb22-6"> 追加情報<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  警告メッセージ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> </span>
<span id="cb22-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  パッケージ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rstan'</span> はバージョン <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span> の R の下で造られました  </span>
<span id="cb22-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  パッケージ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bayesplot'</span> はバージョン <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span> の R の下で造られました  </span>
<span id="cb22-9"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  パッケージ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rstanarm'</span> はバージョン <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span> の R の下で造られました  </span>
<span id="cb22-10"></span>
<span id="cb22-11"></span>
<span id="cb22-12">Quitting from lines <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">329-343</span> (adastan.qmd) </span>
<span id="cb22-13"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sink</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>) でエラー<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  コネクションが不正です </span>
<span id="cb22-14"> 呼び出し<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  .main ... eval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> stan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> stan_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> cxxfunctionplus <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> sink</span>
<span id="cb22-15"> 実行が停止されました </span></code></pre></div>
<p>大変長く書いてあるが，要は <code>fatal error: 'cmath' file not found</code> である．</p>
<p>筆者の場合は純粋な <code>clang++</code> の問題であった：</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb23-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❯</span> echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#include &lt;cmath&gt;</span></span>
<span id="cb23-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">#include &lt;iostream&gt;</span></span>
<span id="cb23-3"></span>
<span id="cb23-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">int main() {</span></span>
<span id="cb23-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    double result = std::sqrt(16.0);</span></span>
<span id="cb23-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    std::cout &lt;&lt; "The square root of 16 is " &lt;&lt; result &lt;&lt; std::endl;</span></span>
<span id="cb23-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    return 0;</span></span>
<span id="cb23-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> test.cpp</span>
<span id="cb23-9"></span>
<span id="cb23-10"></span>
<span id="cb23-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~</span></span>
<span id="cb23-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❯</span> clang++ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-std</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>c++17 test.cpp <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> test</span>
<span id="cb23-13"></span>
<span id="cb23-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test.cpp:1:10:</span> fatal error: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cmath'</span> file not found</span>
<span id="cb23-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#include &lt;cmath&gt;</span></span>
<span id="cb23-16">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span>          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^~~~~~~</span></span>
<span id="cb23-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span> error generated.</span></code></pre></div>
<p>このような場合は，まず Xcode の再インストールをすると良い．</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb24-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softwareupdate</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--list</span></span></code></pre></div>
<p>の出力を用いて，次のようにする：</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb25-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softwareupdate</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Command Line Tools (macOS High Sierra version 10.13) for Xcode-10.1"</span></span></code></pre></div>
<p>または次のようにする：</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /Library/Developer/CommandLineTools</span>
<span id="cb26-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xcode-select</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span></span></code></pre></div>
</section>
</section>
</section>
<section id="cmdstanr-パッケージ" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="cmdstanr-パッケージ"><span class="header-section-number">2</span> <code>CmdStanR</code> パッケージ</h2>
<p><code>CmdStanPy</code>, <code>CmdStanR</code> はいずれも Stan のインターフェースである．</p>
<p><code>CmdStanR</code> は <code>R6</code> オブジェクトを用いており，大変現代的な実装を持っている．</p>
<section id="はじめるために-1" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="はじめるために-1"><span class="header-section-number">2.1</span> はじめるために</h3>
<p><a href="https://mc-stan.org/cmdstanr/articles/cmdstanr.html">Getting Started with CmdStanR</a> に従って実行します．</p>
<section id="インストール-1" class="level4" data-number="2.1.1">
<h4 data-number="2.1.1" class="anchored" data-anchor-id="インストール-1"><span class="header-section-number">2.1.1</span> インストール</h4>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://stan-dev.r-universe.dev'</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"repos"</span>)))</span></code></pre></div>
</section>
<section id="cmdstanr-の利用のためにはcmdstan-が必要" class="level4" data-number="2.1.2">
<h4 data-number="2.1.2" class="anchored" data-anchor-id="cmdstanr-の利用のためにはcmdstan-が必要"><span class="header-section-number">2.1.2</span> <code>CmdStanR</code> の利用のためには，<code>CmdStan</code> が必要</h4>
<p><code>CmdStanR</code> を<a href="../../../posts/2024/R/Stan1.html#sec-installing-cmdstan">直接インストールすることもできます</a>が，<code>CmdStanR</code> 内部からインストールすることもできます．</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_cmdstan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_version</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2.35.0"</code></pre>
</div>
</div>
<p>多くの場合，自動で <code>CMDSTAN</code> 環境変数にパスが設定されます．次のいずれかの方法で確認できます：</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.getenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMDSTAN"</span>)</span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_path</span>()</span></code></pre></div>
<p><code>CmdStanR</code> の美点の一つは，<code>install_cmdstan()</code> により <code>CmdStan</code> をアップデートすることで最新の Stan を R から簡単に利用できることである．</p>
<p>一方で <code>RStan</code> はパッケージ自体のアップデートを待つ必要がある．</p>
</section>
</section>
<section id="モデル定義" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="モデル定義"><span class="header-section-number">2.2</span> モデル定義</h3>
<p><code>cmdstan_model()</code> 関数は，Stan 言語による記述されたモデル定義を，C++ コードにコンパイルし，その結果を <code>R6</code> オブジェクトとして返す．<sup>1</sup></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stan_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exe_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">compile =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, ...)</span></code></pre></div>
<p>返り値は <code>CmdStanModel</code> オブジェクトである．ただし <code>R6</code> オブジェクトでもあり，<code>R6</code> 流のメソッドの呼び方 <code>$</code> が使える．</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_path</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"examples"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bernoulli"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bernoulli.stan"</span>)</span>
<span id="cb33-2">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(file)</span></code></pre></div>
</div>
<p>Stan 言語による定義は次のようにして確認できる：</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">mod<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>data {
  int&lt;lower=0&gt; N;
  array[N] int&lt;lower=0, upper=1&gt; y;
}
parameters {
  real&lt;lower=0, upper=1&gt; theta;
}
model {
  theta ~ beta(1, 1); // uniform prior on interval 0,1
  y ~ bernoulli(theta);
}</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(mod<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span>())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "parameters"             "included_files"         "data"                  
[4] "transformed_parameters" "generated_quantities"  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(mod<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>transformed_parameters)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>character(0)</code></pre>
</div>
</div>
<p>元となったファイルのパスも <code>stan_file()</code>, <code>exe_file()</code> で確認できる．</p>
</section>
<section id="stan-コードの操作" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="stan-コードの操作"><span class="header-section-number">2.3</span> Stan コードの操作</h3>
<p><code>write_stan_file()</code> 関数は Stan コードをファイルに書き出すことができる：</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(</span>
<span id="cb40-2">  code,</span>
<span id="cb40-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOption</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr_write_stan_file_dir"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempdir</span>()),</span>
<span id="cb40-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">basename =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb40-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">force_overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb40-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hash_salt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb40-7">)</span></code></pre></div>
<p>グローバル環境変数が設定されていない限り，<code>tempdir()</code> で一時ファイルが作成される．これは R セッションの終了とともに削除される．</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1">stan_file_variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb41-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data {</span></span>
<span id="cb41-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower=1&gt; J;</span></span>
<span id="cb41-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector&lt;lower=0&gt;[J] sigma;</span></span>
<span id="cb41-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[J] y;</span></span>
<span id="cb41-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb41-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real mu;</span></span>
<span id="cb41-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower=0&gt; tau;</span></span>
<span id="cb41-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[J] theta_raw;</span></span>
<span id="cb41-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters {</span></span>
<span id="cb41-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[J] theta = mu + tau * theta_raw;</span></span>
<span id="cb41-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb41-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  target += normal_lpdf(tau | 0, 10);</span></span>
<span id="cb41-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  target += normal_lpdf(mu | 0, 10);</span></span>
<span id="cb41-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  target += normal_lpdf(theta_raw | 0, 1);</span></span>
<span id="cb41-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  target += normal_lpdf(y | theta, sigma);</span></span>
<span id="cb41-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb41-22">mod_v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(stan_file_variables)</span>
<span id="cb41-23">variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mod_v<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span>()</span></code></pre></div>
</section>
<section id="サンプリング" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="サンプリング"><span class="header-section-number">2.4</span> サンプリング</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb42-2"></span>
<span id="cb42-3">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mod<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb42-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list,</span>
<span id="cb42-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>,</span>
<span id="cb42-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb42-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb42-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print update every 1000 iters</span></span>
<span id="cb42-9">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.0 seconds.
Chain 2 finished in 0.0 seconds.
Chain 3 finished in 0.0 seconds.
Chain 4 finished in 0.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.0 seconds.
Total execution time: 0.2 seconds.</code></pre>
</div>
</div>
<p>返り値 <code>fit</code> は <code>CmdStanMCMC</code> オブジェクトであり，<code>summary()</code> などのメソッドが使用可能である．</p>
<p><code>summary()</code> メソッドは，<code>posterior</code> パッケージのメソッド <code>summarise_draws()</code> を自動で使うようになっている．</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1">fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 10
  variable   mean median    sd   mad      q5    q95  rhat ess_bulk ess_tail
  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;
1 lp__     -7.30  -7.00  0.797 0.345 -8.86   -6.75   1.00    1923.    2017.
2 theta     0.257  0.241 0.124 0.127  0.0800  0.485  1.00    1232.    1477.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lp__"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  variable   mean    sd
  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;
1 theta     0.257 0.124
2 lp__     -7.30  0.797</code></pre>
</div>
</div>
<p>同様にして <code>draws()</code> メソッドで <code>bayesplot</code> パッケージが呼び出される．</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mcmc_hist</span>(fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theta"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/R/Stan2_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="576"></p>
</figure>
</div>
</div>
</div>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="文献紹介" class="level2 appendix" data-number="3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">3</span> 文献紹介</h2><div class="quarto-appendix-contents">




</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>実際には，最初に <code>CmdStanModel</code> オブジェクトを生成し，<code>compile()</code> メソッドを呼び出している．これが <code>compile = TRUE</code> フラッグの存在意義である．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Bayesian</category>
  <category>Computation</category>
  <category>Stan</category>
  <category>R</category>
  <guid>https://162348.github.io/posts/2024/R/Stan2.html</guid>
  <pubDate>Wed, 18 Sep 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/R/Files/adastan.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>拡散過程の時間反転</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/DD1.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="命題" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="命題"><span class="header-section-number">1</span> 命題</h2>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="[命題 @Haussmann-Pardoux1986]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="citation" data-cites="Haussmann-Pardoux1986">(命題 Haussmann and Pardoux, 1986)</span>
</div>
</div>
<div class="callout-body-container callout-body">
<p>Brown 運動 <img src="https://latex.codecogs.com/png.latex?%5C%7BB_t%5C%7D%5Csubset%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Ed)"> と可測関数 <img src="https://latex.codecogs.com/png.latex?b:%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ed%5Cto%5Cmathbb%7BR%7D%5Ed,%5Csigma:%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ed%5Cto%20M_d(%5Cmathbb%7BR%7D)"> に関して， <img src="https://latex.codecogs.com/png.latex?%0AdX_t=b_t(X_t)%5C,dt+%5Csigma_t(X_t)%5C,dB_t,%5Cqquad%20t%5Cin%5B0,1%5D,%0A"> を Markov 過程とする．さらに次の３条件を仮定する：</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?b_t,%5Csigma_t"> は <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> 上局所 Lipschitz 連続で，線型増大条件を満たす： <img src="https://latex.codecogs.com/png.latex?%0A%20%20%5Clvert%20b_t(x)%5Crvert+%5Clvert%5Csigma_t(x)%5Crvert%5Cle%20K(1+%5Clvert%20x%5Crvert),%5Cqquad%20x%5Cin%5Cmathbb%7BR%7D%5Ed,K%3E0.%0A%20%20"></li>
<li><img src="https://latex.codecogs.com/png.latex?X_0"> は密度 <img src="https://latex.codecogs.com/png.latex?p_0"> をもち，ある <img src="https://latex.codecogs.com/png.latex?%5Clambda%3C0"> について次を満たす： <img src="https://latex.codecogs.com/png.latex?%0A%20%20p_0%5Cin%20L%5E2((1+%5Clvert%20x%5Crvert%5E2)%5E%5Clambda%5C,dx).%0A%20%20"></li>
<li><img src="https://latex.codecogs.com/png.latex?a:=%5Csigma%5Csigma%5E%5Ctop"> は一様に正定値である <img src="https://latex.codecogs.com/png.latex?%0A%20%20a_t(x)%5Cge%5Calpha%20I_d%0A%20%20"> であるか，<img src="https://latex.codecogs.com/png.latex?%5Calpha%5E%7Bij%7D_%7Bx_ix_j%7D%5Cin%20L%5E%5Cinfty((0,1)%5Ctimes%5Cmathbb%7BR%7D%5Ed)"> である．</li>
</ul>
<p>このとき，時間反転 <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BX%7D_t:=X_%7B1-t%7D"> の分布は次の SDE の解である： <img src="https://latex.codecogs.com/png.latex?%0Ad%5Coverline%7BX%7D_t=%5Coverline%7Bb%7D_t(%5Coverline%7BX%7D_t)%5C,dt+%5Coverline%7B%5Csigma%7D_t(%5Coverline%7BX%7D_t)%5C,d%5Coverline%7BB%7D_t,%5Cqquad%20t%5Cin%5B0,1%5D.%0A"> ただし，<img src="https://latex.codecogs.com/png.latex?(B_t)"> も Brown 運動で， <img src="https://latex.codecogs.com/png.latex?%0A%5Coverline%7Bb%7D%5Ei_t(x)=-b_%7B1-t%7D%5Ei(x)+%5Csum_%7Bj=1%7D%5Ed%5Cfrac%7B%5Cbiggr(a%5E%7Bij%7D_%7B1-t%7D(x)p_%7B1-t%7D(x)%5Cbiggl)_%7Bx_j%7D%7D%7Bp_%7B1-t%7D(x)%7D,%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Coverline%7Ba%7D%5E%7Bij%7D_t(x)=a%5E%7Bij%7D_%7B1-t%7D(x),%5Cqquad%5Coverline%7B%5Csigma%7D%5E%7Bij%7D_t(x)=%5Csigma%5E%7Bij%7D_%7B1-t%7D(x).%0A"></p>
</div>
</div>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="系">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
系
</div>
</div>
<div class="callout-body-container callout-body">
<p>前の命題の３条件を満たす，ドリフト係数 <img src="https://latex.codecogs.com/png.latex?%5Csigma"> が <img src="https://latex.codecogs.com/png.latex?x%5Cin%5Cmathbb%7BR%7D%5Ed"> に依らない SDE <img src="https://latex.codecogs.com/png.latex?%0AdX_t=b_t(X_t)%5C,dt+%5Csigma_t%5C,dB_t,%5Cqquad%20t%5Cin%5B0,1%5D,%0A"> を考える．この <img src="https://latex.codecogs.com/png.latex?(X)_%7Bt%5Cin%5B0,1%5D%7D"> の時間反転は，<img src="https://latex.codecogs.com/png.latex?a_t:=%5Csigma_t%5Csigma%5E%5Ctop_t"> に関して <img src="https://latex.codecogs.com/png.latex?%0Ad%5Coverline%7BX%7D_t=%5Cbiggr(-b_%7B1-t%7D(%5Coverline%7BX%7D_t)+a_%7B1-t%7D%5Cnabla_x%5Clog%20p_%7B1-t%7D(%5Coverline%7BX%7D_t)%5Cbiggl)%5C,dt+%5Csigma_%7B1-t%7D%5C,d%5Coverline%7BB%7D_t,%5Cqquad%5Coverline%7BX%7D_0=X_1,%0A"> と分布同等になる．</p>
</div>
</div>
<p>SGM <span class="citation" data-cites="Song-Ermon2019">(Song and Ermon, 2019)</span>, <span class="citation" data-cites="Song+2021ICLR">(Song et al., 2021)</span> は， <span id="eq-OU"><img src="https://latex.codecogs.com/png.latex?%0Ab_t(x)=-x,%5Cqquad%5Csigma_t=%5Csqrt%7B2%7D,%0A%5Ctag%7B1%7D"></span> と設定し，<img src="https://latex.codecogs.com/png.latex?(X_t)"> を OU 過程とした．これは <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BN%7D_d(0,I_d)"> に全変動距離・Wasserstein 距離・<img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2">-距離で<a href="../../../posts/2024/Process/Langevin.html">指数収束する</a>．</p>
<p>従って，この時間反転を <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BN%7D_d(0,I_d)"> からスタートさせることで，データ分布 <img src="https://latex.codecogs.com/png.latex?p_0"> からのサンプリングが可能になる．</p>
<p>しかしこのアイデアを実行するためには，スコア <img src="https://latex.codecogs.com/png.latex?%5Cnabla_x%5Clog%20p_%7B1-t%7D(X_t)"> の項を何らかの方法で推定する方法が必要である．</p>
</section>
<section id="スコアマッチングへの応用" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="スコアマッチングへの応用"><span class="header-section-number">2</span> スコアマッチングへの応用</h2>
<section id="はじめに" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">2.1</span> はじめに</h3>
<p><a href="../../../posts/2024/Samplers/EBM.html#sec-DSM">Denoising Score Matching</a> <span class="citation" data-cites="Vincent2011">(Vincent, 2011)</span> を初めとして，<a href="../../../posts/2024/Samplers/NF3.html#sec-GFM">Generalized Flow Matching</a> <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span> や Functional Flow Matching <span class="citation" data-cites="Kerrigan+2024">(Kerrigan et al., 2024)</span> は，次のような目的関数を持っている： <span id="eq-DSM-loss"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(%5Ctheta)=%5Coperatorname%7BE%7D%5Cbiggl%5B%5Cbiggl%7Cs_%5Ctheta(%5Cwidetilde%7BX%7D)-%5Cfrac%7BX-%5Cwidetilde%7BX%7D%7D%7B%5Csigma%5E2%7D%5Cbiggr%7C%5E2%5Cbiggr%5D,%5Cqquad%20X%5Csim%20p_0,%5Cwidetilde%7BX%7D%5Csim%20p_0*%5Cmathrm%7BN%7D(0,%5Csigma%5E2I_d).%0A%5Ctag%7B2%7D"></span></p>
<p>これはデータ <img src="https://latex.codecogs.com/png.latex?X%5Csim%20p_0"> と，それに独立な Gauss ノイズを印加したもの <img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7BX%7D"> との差分を目標としてスコアネットワーク <img src="https://latex.codecogs.com/png.latex?s_%5Ctheta"> を学習している．</p>
</section>
<section id="デノイジング過程としての見方" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="デノイジング過程としての見方"><span class="header-section-number">2.2</span> デノイジング過程としての見方</h3>
<p>データにノイズを印加する過程は，<img src="https://latex.codecogs.com/png.latex?b_t=0,%5Csigma_t=I_d"> とした SDE <img src="https://latex.codecogs.com/png.latex?%0AdX_t=dB_t,%5Cqquad%20t%5Cin%5B0,1%5D,X_0%5Csim%20p_0,%0A"> で <img src="https://latex.codecogs.com/png.latex?t=0"> から <img src="https://latex.codecogs.com/png.latex?t=%5Csigma%5E2"> まで輸送することにあたる： <img src="https://latex.codecogs.com/png.latex?%0AX_%5Csigma%5E2=X_0+(B_%7B%5Csigma%5E2%7D-B_0)%5Coverset%7B%5Ctext%7Bd%7D%7D%7B=%7D%5Cwidetilde%7BX%7D.%0A"> この時間反転は <img src="https://latex.codecogs.com/png.latex?%0Ad%5Coverline%7BX%7D_t=%5Cnabla_x%5Clog%20p_%7B1-t%7D(%5Coverline%7BX%7D_t)%5C,dt+d%5Coverline%7BB%7D_t,%5Cqquad%5Coverline%7BX%7D_0=X_1,%0A"> と分布同等になる．</p>
<p>この時間反転過程 <img src="https://latex.codecogs.com/png.latex?(%5Coverline%7BX%7D_t)"> は <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BX%7D_%7B1-%5Csigma%5E2%7D=%5Cwidetilde%7BX%7D"> を <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BX%7D_1=X"> まで運ぶが，この際に <img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cll1"> ならば次の関係を示唆する： <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20X&amp;%5Coverset%7B%5Ctext%7Bd%7D%7D%7B=%7D%5Cwidetilde%7BX%7D+%5Cint%5E1_%7B1-%5Csigma%5E2%7D%5Cnabla_x%5Clog%20p_%7B1-t%7D(%5Coverline%7BX%7D_t)%5C,dt+%5Cepsilon%5C%5C%0A%20%20%20%20&amp;%5Capprox%5Cwidetilde%7BX%7D+%5Csigma%5E2%5Cnabla_x%5Clog%20p_0(X)+%5Cepsilon,%5Cqquad%5Cepsilon%5Csim%5Cmathrm%7BN%7D(0,%5Csigma%5E2I_d).%0A%5Cend%7Balign*%7D"> <img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限で次の等号が成り立つ： <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7B%5Csigma%5Cto0%7D%5Cfrac%7BX-%5Cwidetilde%7BX%7D%7D%7B%5Csigma%5E2%7D%5Coverset%7B%5Ctext%7Bd%7D%7D%7B=%7D%5Cnabla_x%5Clog%20p_0(X).%0A"></p>
</section>
<section id="sec-Tweedie-formula" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="sec-Tweedie-formula"><span class="header-section-number">2.3</span> Tweedie の式</h3>
<p>実は同様の式は，<img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限で漸近的にではなく正の <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%3E0"> に関しても，次の意味で成り立つ：</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?X%5Csim%20p_0,%5Cwidetilde%7BX%7D%5Csim%20p_0*%5Cmathrm%7BN%7D(0,%5Csigma%5E2I_d)=:%5Cwidetilde%7Bp%7D_0"> とする．このとき，次が成り立つ： <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5BX%7C%5Cwidetilde%7BX%7D=%5Cwidetilde%7Bx%7D%5D=%5Cwidetilde%7Bx%7D+%5Csigma%5E2%5Cnabla_%7B%5Cwidetilde%7Bx%7D%7D%5Clog%20%5Cwidetilde%7Bp%7D_0(%5Cwidetilde%7Bx%7D).%0A"></p>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled" title="証明">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
証明
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>一般に，<img src="https://latex.codecogs.com/png.latex?%5Cphi_%5Csigma"> を <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BN%7D_d(0,%5Csigma%5E2I_d)"> の密度関数とすると， <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5BX%7C%5Cwidetilde%7BX%7D=%5Cwidetilde%7Bx%7D%5D=%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dxp_0(x)%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5C,dx%0A"> より， <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5BX%7C%5Cwidetilde%7BX%7D=%5Cwidetilde%7Bx%7D%5D-%5Cwidetilde%7Bx%7D=%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7D(x-%5Cwidetilde%7Bx%7D)p_0(x)%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5C,dx.%0A"></p>
<p>一方で， <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20&amp;%5Cqquad%5Cnabla_%7B%5Cwidetilde%7Bx%7D%7D%5Clog%5Cleft(%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dp_0(x)%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5C,dx%5Cright)%5C%5C%0A%20%20%20%20&amp;=%5Cfrac%7B%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dp_0(x)%5Cnabla_%7B%5Cwidetilde%7Bx%7D%7D%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5C,dx%7D%7B%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dp_0(x)%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5C,dx%7D%5C%5C%0A%20%20%20%20&amp;=%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dp_0(x)%5Cphi_%5Csigma(%5Cwidetilde%7Bx%7D-x)%5Cfrac%7Bx-%5Cwidetilde%7Bx%7D%7D%7B%5Csigma%5E2%7D%5C,dx%5C%5C%0A%20%20%20%20&amp;=%5Cfrac%7B%5Coperatorname%7BE%7D%5BX%7C%5Cwidetilde%7BX%7D=%5Cwidetilde%7Bx%7D%5D-%5Cwidetilde%7Bx%7D%7D%7B%5Csigma%5E2%7D.%0A%5Cend%7Balign*%7D"></p>
</div>
</div>
</div>
<p>すなわち，<img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7BX%7D"> から <img src="https://latex.codecogs.com/png.latex?X"> を不偏推定しようとすることで，スコア <img src="https://latex.codecogs.com/png.latex?%5Cnabla_%7B%5Cwidetilde%7Bx%7D%7D%5Clog%5Cwidetilde%7Bp%7D(%5Cwidetilde%7Bx%7D)"> を学習することができるのである．</p>
<p>ただし，学習されるスコアは，データ分布 <img src="https://latex.codecogs.com/png.latex?p_0"> のものではなく，ノイズ分布 <img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7Bp%7D_0"> のものであることに注意．</p>
<p>これが，デノイジングスコアマッチングの目的関数 (2) の背後にある動機付けである．</p>
</section>
</section>
<section id="確率的局所化" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="確率的局所化"><span class="header-section-number">3</span> 確率的局所化</h2>
<section id="ou-過程による-sgm" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="ou-過程による-sgm"><span class="header-section-number">3.1</span> OU 過程による SGM</h3>
<p>OU 過程の例 (1) に戻ろう．OU 過程 <img src="https://latex.codecogs.com/png.latex?%0AdX_t=-X_t%5C,dt+%5Csqrt%7B2%7D%5C,dB_t%0A"> の時間反転は次と分布同等である： <span id="eq-OU-reverse"><img src="https://latex.codecogs.com/png.latex?%0Ad%5Coverline%7BX%7D_t=%5Cbiggr(%5Coverline%7BX%7D_t+2%5Cnabla_x%5Clog%20p_%7B1-t%7D(%5Coverline%7BX%7D_t)%5Cbiggl)%5C,dt+%5Csqrt%7B2%7D%5C,d%5Coverline%7BB%7D_t,%5Cqquad%5Coverline%7BX%7D_0=X_1.%0A%5Ctag%7B3%7D"></span></p>
<p>OU 過程 <img src="https://latex.codecogs.com/png.latex?(X_t)"> は <img src="https://latex.codecogs.com/png.latex?%0AX_t%5Coverset%7B%5Ctext%7Bd%7D%7D%7B=%7De%5E%7B-t%7DX_0+%5Csqrt%7B1-e%5E%7B-2t%7D%7D%5Cepsilon,%5Cqquad%20X_0%5Csim%20p_0,%5Cepsilon%5Csim%5Cmathrm%7BN%7D_d(0,I_d)%0A"> という遷移半群を持っているため，<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D%5BX_t%5D=%5Cmathcal%7BL%7D%5Be%5E%7B-t%7DX_0%5D*%5Cmathrm%7BN%7D_d(0,1-e%5E%7B-2t%7D)"> であることから，Tweedie の式 2.3 より <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla_x%5Clog%20p_t(x_t)=%5Cfrac%7B%5Coperatorname%7BE%7D%5Be%5E%7B-t%7DX_0%7CX_t=x_t%5D-x_t%7D%7B1-e%5E%7B-2t%7D%7D%0A"> を得る．従ってこのスコアを式 (3) に代入し， <img src="https://latex.codecogs.com/png.latex?%0Am_t(x_t):=%5Coperatorname%7BE%7D%5BX_0%7CtX_0+%5Csqrt%7Bt%7D%5Cepsilon=x_t%5D,%5Cqquad%20X_0%5Csim%20p_0,%5Cepsilon%5Csim%5Cmathrm%7BN%7D_d(0,I_d),%0A"> とおき， <img src="https://latex.codecogs.com/png.latex?%0A%5Ctau(t)=%5Cfrac%7B1%7D%7Be%5E%7B2t%7D-1%7D%0A"> の変数変換を施すと OU 過程の時間反転 (3) は次のように書き直せる： <span id="eq-OU-reverse-2"><img src="https://latex.codecogs.com/png.latex?%0Ad%5Coverline%7BY%7D_%5Ctau=%5Cbiggr(-%5Cfrac%7B1+%5Ctau%7D%7B%5Ctau(1+%5Ctau)%7D%5Coverline%7BY%7D_%5Ctau+%5Cfrac%7B1%7D%7B%5Csqrt%7B%5Ctau(1+%5Ctau)%7D%7Dm_%5Ctau%5Cleft(%5Csqrt%7B%5Ctau(1+%5Ctau)%7D%5Coverline%7BY%7D_%5Ctau%5Cright)%5Cbiggl)%5C,d%5Ctau+%5Cfrac%7B1%7D%7B%5Csqrt%7B%5Ctau(1+%5Ctau)%7D%7D%5C,d%5Coverline%7BB%7D_%5Ctau.%0A%5Ctag%7B4%7D"></span></p>
<p>これが <a href="../../../posts/2024/Samplers/SB1.html">denoising diffusion</a> である．</p>
</section>
<section id="もう一つのサンプリング法" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="もう一つのサンプリング法"><span class="header-section-number">3.2</span> もう一つのサンプリング法</h3>
<p><strong>確率的局所化</strong> (stochastic localization) は初め，<span class="citation" data-cites="Eldan2013">(Eldan, 2013)</span> が高次元空間内の等方的な凸体上での等周不等式を示すために構成した半マルチンゲールが基になっている．</p>
<p>確率的局所化においては，<img src="https://latex.codecogs.com/png.latex?p_0"> からのあるサンプル <img src="https://latex.codecogs.com/png.latex?x_0"> に対して，その <strong>観測過程</strong> <img src="https://latex.codecogs.com/png.latex?(Y_t)"> と呼ばれる <img src="https://latex.codecogs.com/png.latex?x_0"> のノイズ付きの観測を考える．ただし，<img src="https://latex.codecogs.com/png.latex?Y_t"> は時間が進むごとに <img src="https://latex.codecogs.com/png.latex?x_0"> に関する情報量が増えるとする．<sup>1</sup></p>
<p>例えば <img src="https://latex.codecogs.com/png.latex?%0AY_t=tx_0+B_t,%5Cqquad%20t%5Cin%5Cmathbb%7BR%7D_+,%0A"> という場合である．<img src="https://latex.codecogs.com/png.latex?B_t"> というノイズは印加されているが，<img src="https://latex.codecogs.com/png.latex?x_0"> というメッセージの内容がどんどん大きくなるため，Signal-to-noise 比は増大していく．</p>
<p>この場合については，<img src="https://latex.codecogs.com/png.latex?p_0"> が有限な二次の積率を持つならば， <img src="https://latex.codecogs.com/png.latex?%0AdY_%5Ctau=m_%5Ctau(Y_%5Ctau)%5C,d%5Ctau+dB'_%5Ctau%0A"> という SDE の解と分布同等である <span class="citation" data-cites="Liptser-Shiryaev2001-Statistics">(Liptser and Shiryaev, 2001)</span>．</p>
<p>これは式 (4) で与えた OU 過程の時間反転 <img src="https://latex.codecogs.com/png.latex?(%5Coverline%7BY%7D_%5Ctau)"> に関して，<img src="https://latex.codecogs.com/png.latex?Y_%5Ctau=%5Csqrt%7B%5Ctau(1+%5Ctau)%7D%5Coverline%7BY%7D_%5Ctau"> の関係を持つ．</p>
</section>
<section id="確率的局所化-1" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="確率的局所化-1"><span class="header-section-number">3.3</span> 確率的局所化</h3>
<p>実は <img src="https://latex.codecogs.com/png.latex?(Y_t)"> は， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_t:=%5Cmathcal%7BL%7D%5BX_0%7CY_t%5D%0A"> として定まる <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BP%7D(%5Cmathbb%7BR%7D%5Ed)">-値の確率過程 <img src="https://latex.codecogs.com/png.latex?%5C%7B%5Cmu_t%5C%7D%5Csubset%5Cmathcal%7BL%7D(%5COmega;%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed))"> について，次の性質を持つ： <img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_0=%5Cmathcal%7BL%7D%5BX_0%5D=p_0%5C,d%5Cell_d,%5Cqquad%5Cmu_t%5CRightarrow%5Cdelta_%7Bx_0%7D%5Cqquad%20t%5Cto%5Cinfty,%0A"></p>
<p>実は上述のサンプリング法は，このような <img src="https://latex.codecogs.com/png.latex?p_0%5C,d%5Cell_d"> から <img src="https://latex.codecogs.com/png.latex?%5Cdelta_%7BX_0%7D%5C;(X_0%5Csim%20p_0)"> への確率過程が与えられるごとに構成できる．</p>
<p>実際，最も簡単には，重心 <img src="https://latex.codecogs.com/png.latex?%0AM_t:=%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dx%5C,%5Cmu_t(dx)%0A"> を計算すれば，<img src="https://latex.codecogs.com/png.latex?M_t"> は <img src="https://latex.codecogs.com/png.latex?t%5Cto%5Cinfty"> の極限で <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D%5BX_0%5D"> に収束する．</p>
<p>これが <strong>確率的局所化</strong> である．</p>
<p>確率的局所化に基づいたサンプラーは <span class="citation" data-cites="Alaoui+2022">(Alaoui et al., 2022)</span> により <a href="../../../posts/2024/Nature/StatisticalMechanics1.html#sec-SK-model">Sherrington-Kirkpatrick 模型</a> の Gibbs 分布からのサンプリングに適用され，<span class="citation" data-cites="Montanari-Wu2024">(Montanari and Wu, 2023)</span> でさらにベイズ統計への応用のために拡張されている．</p>
<p>また，最良の雑音除去拡散モデルの収束証明は確率的局所化に基づいた証明によって与えられている <span class="citation" data-cites="Benton+2024">(Benton et al., 2024)</span>．</p>
</section>
</section>
<section id="関連ページ" class="level2 unnumbered unlisted">
<h2 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h2>
<div id="listing-lst-listing" class="listing quarto-float quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Process,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724338800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="826">
<a href="../../../posts/2024/Samplers/Diffusion.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/DDPM_outputs.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
拡散模型
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル６
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Process,Sampling,P(X)" data-listing-date-sort="1722610800000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724598000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="470">
<a href="../../../posts/2024/Samplers/SB1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top"><img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" style="height: 150px;" class="thumbnail-image card-img"></p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
分布道の学習としての生成モデリング
</h5>
<div class="card-subtitle listing-subtitle">
Denoising Diffusion から Schrödinger Bridge へ
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-03
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1725250592261" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="880">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>



<div id="quarto-appendix" class="default"><section id="文献紹介" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献紹介</h2><div class="quarto-appendix-contents">

<p><span class="citation" data-cites="Anderson1982">(Anderson, 1982)</span> では Fokker-Planck 方程式の解に対する条件の言葉で時間反転命題を与えている．また，時間反転も，元の Brown 運動 <img src="https://latex.codecogs.com/png.latex?B_t"> と独立な Brown 運動 <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BB%7D_t"> に関する SDE ではなく，その時間反転 <img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7BB%7D_t:=B_%7B1-t%7D"> に関する SDE で与えている．</p>
<p><a href="https://alexxthiery.github.io/posts/reverse_and_tweedie/reverse_and_tweedie.html#ref-efron2011tweedie">Aleandre Thiéry のブログ記事</a> や <a href="https://drive.google.com/file/d/1ipWPVNBpFy5GlQqXtSbbhB0gAJUld-yd/view">鈴木大慈氏のスライド</a>，<a href="https://metaphor.ethz.ch/x/2024/fs/401-4634-24L/">Montanari の講義資料</a> も参照．</p>
<p>Tweedie の式は <span class="citation" data-cites="Robbins1956">(Robbins, 1956)</span> によって命名されている．<span class="citation" data-cites="Efron2011">(Efron, 2011)</span> では選択バイアスが存在する状況における経験ベイズ法に応用している．</p>
<p>確率的局所化については <span class="citation" data-cites="Montanari2023">(Montanari, 2023)</span> を参考にした．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Alaoui+2022" class="csl-entry">
Alaoui, A. E., Montanari, A., and Sellke, M. (2022). <a href="https://doi.org/10.1109/FOCS54457.2022.00038">Sampling from the sherrington-kirkpatrick gibbs measure via algorithmic stochastic localization</a>. In <em>2022 IEEE 63rd annual symposium on foundations of computer science (FOCS)</em>, pages 323–334.
</div>
<div id="ref-Anderson1982" class="csl-entry">
Anderson, B. D. O. (1982). <a href="https://doi.org/10.1016/0304-4149(82)90051-5">Reverse-time diffusion equation models</a>. <em>Stochastic Processes and Their Applications</em>, <em>12</em>(3), 313–326.
</div>
<div id="ref-Benton+2024" class="csl-entry">
Benton, J., Bortoli, V. D., Doucet, A., and Deligiannidis, G. (2024). <a href="https://arxiv.org/abs/2308.03686">Nearly <img src="https://latex.codecogs.com/png.latex?d">-linear convergence bounds for diffusion models via stochastic localization</a>.
</div>
<div id="ref-Efron2011" class="csl-entry">
Efron, B. (2011). <a href="http://www.jstor.org/stable/23239562">Tweedie’s formula and selection bias</a>. <em>Journal of the American Statistical Association</em>, <em>106</em>(496), 1602–1614.
</div>
<div id="ref-Eldan2013" class="csl-entry">
Eldan, R. (2013). <a href="https://doi.org/10.1007/s00039-013-0214-y"><span class="nocase">Thin Shell Implies Spectral Gap Up to Polylog via a Stochastic Localization Scheme</span></a>. <em>Geometric and Functional Analysis</em>, <em>23</em>(2), 532–569.
</div>
<div id="ref-Haussmann-Pardoux1986" class="csl-entry">
Haussmann, U. G., and Pardoux, E. (1986). <a href="https://doi.org/10.1214/aop/1176992362"><span class="nocase">Time Reversal of Diffusions</span></a>. <em>The Annals of Probability</em>, <em>14</em>(4), 1188–1205.
</div>
<div id="ref-Isobe+2024" class="csl-entry">
Isobe, N., Koyama, M., Zhang, J., Hayashi, K., and Fukumizu, K. (2024). <a href="https://arxiv.org/abs/2402.18839">Extended flow matching: A method of conditional generation with generalized continuity equation</a>.
</div>
<div id="ref-Kerrigan+2024" class="csl-entry">
Kerrigan, G., Migliorini, G., and Smyth, P. (2024). <a href="https://proceedings.mlr.press/v238/kerrigan24a.html">Functional flow matching</a>. In S. Dasgupta, S. Mandt, and Y. Li, editors, <em>Proceedings of the 27th international conference on artificial intelligence and statistics</em>,Vol. 238, pages 3934–3942. PMLR.
</div>
<div id="ref-Liptser-Shiryaev2001-Statistics" class="csl-entry">
Liptser, R. S., and Shiryaev, A. N. (2001). <em>Statistics of random processes i: General theory</em>. Original Russian edition published by Nauka, Moscow, 1974; Springer Berlin, Heidelberg.
</div>
<div id="ref-Montanari2023" class="csl-entry">
Montanari, A. (2023). <a href="https://arxiv.org/abs/2305.10690">Sampling, diffusions, and stochastic localization</a>.
</div>
<div id="ref-Montanari-Wu2024" class="csl-entry">
Montanari, A., and Wu, Y. (2023). <a href="https://arxiv.org/abs/2304.11449">Posterior sampling from the spiked models via diffusion processes</a>.
</div>
<div id="ref-Robbins1956" class="csl-entry">
Robbins, H. (1956). <a href="https://projecteuclid.org/ebooks/berkeley-symposium-on-mathematical-statistics-and-probability/Proceedings-of-the-Third-Berkeley-Symposium-on-Mathematical-Statistics-and-Probability/chapter/An-Empirical-Bayes-Approach-to-Statistics/bsmsp/1200512992"><span class="nocase">An Empirical Bayes Approach to Statistics</span></a>. In <em>Proceedings of the third berkeley symposium on mathematical statistics and probability</em>,Vol. 1, pages 157–163.
</div>
<div id="ref-Song-Ermon2019" class="csl-entry">
Song, Y., and Ermon, S. (2019). <a href="https://proceedings.neurips.cc/paper_files/paper/2019/file/3001ef257407d5a371a96dcd947c7d93-Paper.pdf"><span class="nocase">Generative Modeling by Estimating Gradients of the Data Distribution</span></a>. In H. Wallach, H. Larochelle, A. Beygelzimer, F. dAlché-Buc, E. Fox, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 32. Curran Associates, Inc.
</div>
<div id="ref-Song+2021ICLR" class="csl-entry">
Song, Y., Sohl-Dickstein, J., Kingma, D. P., Kumar, A., Ermon, S., and Poole, B. (2021). <a href="https://openreview.net/forum?id=PxTIG12RRHS"><span class="nocase">Score-Based Generative Modeling through Stochastic Differential Equations</span></a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Vincent2011" class="csl-entry">
Vincent, P. (2011). <a href="https://direct.mit.edu/neco/article/23/7/1661/7677/A-Connection-Between-Score-Matching-and-Denoising">A connection between score matching and denoising autoencoders</a>. <em>Neural Computation</em>, <em>23</em>(7), 1661–1674.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>例えば，<img src="https://latex.codecogs.com/png.latex?x_*,Y_%7Bt_2%7D,Y_%7Bt_1%7D"> が長さ３の Markov 連鎖をなす，などの意味で．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Process</category>
  <category>Sampling</category>
  <guid>https://162348.github.io/posts/2024/Samplers/DD1.html</guid>
  <pubDate>Sun, 25 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/DSM.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Skilling-Hutchinson の跡推定量</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Probability/Trace.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="命題" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="命題"><span class="header-section-number">1</span> 命題</h2>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="[@Skilling1989]-[@Hutchinson1990]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="citation" data-cites="Skilling1989">(Skilling, 1989)</span>-<span class="citation" data-cites="Hutchinson1990">(Hutchinson, 1990)</span>
</div>
</div>
<div class="callout-body-container callout-body">
<p>任意の正方行列 <img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_n(%5Cmathbb%7BR%7D)"> と，<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BV%7D%5BX%5D=I_n"> を満たす確率ベクトル <img src="https://latex.codecogs.com/png.latex?X%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5En)"> について，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BTr%7D(A)=%5Coperatorname%7BE%7D%5BX%5E%5Ctop%20AX%5D.%0A"></p>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled" title="証明">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
証明
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%0AX%5E%5Ctop%20AX=%5Coperatorname%7BTr%7D(AXX%5E%5Ctop)%0A"> に注意する．これは，一般に <img src="https://latex.codecogs.com/png.latex?x,y%5Cin%5Cmathbb%7BR%7D%5En"> に対して <img src="https://latex.codecogs.com/png.latex?%0Ayx%5E%5Ctop=%5Cbegin%7Bpmatrix%7Dy_1%5C%5C%5Cvdots%5C%5Cy_n%5Cend%7Bpmatrix%7D(x_1%5C;%5Ccdots%5C;x_n)=%5Cbegin%7Bpmatrix%7Dy_1x_1&amp;%5Ccdots&amp;y_1x_n%5C%5C%5Cvdots&amp;%5Cddots&amp;%5Cvdots%5C%5Cy_nx_1&amp;%5Ccdots&amp;y_nx_n%5Cend%7Bpmatrix%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Ctherefore%5Cqquad%5Coperatorname%7BTr%7D(yx%5E%5Ctop)=x%5E%5Ctop%20y%0A"> が成り立つためである．</p>
<p>よって，次のように計算できる：</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20%5Coperatorname%7BE%7D%5BX%5E%5Ctop%20AX%5D&amp;=%5Coperatorname%7BE%7D%5B%5Coperatorname%7BTr%7D(AXX%5E%5Ctop)%5D%5C%5C%0A%20%20%20%20&amp;=%5Coperatorname%7BTr%7D(%5Coperatorname%7BE%7D%5BAXX%5E%5Ctop%5D)%5C%5C%0A%20%20%20%20&amp;=%5Coperatorname%7BTr%7D(A%5Coperatorname%7BE%7D%5BXX%5E%5Ctop%5D)=%5Coperatorname%7BTr%7D(A).%0A%5Cend%7Balign*%7D"></p>
</div>
</div>
</div>
<p><span class="citation" data-cites="Hutchinson1990">(Hutchinson, 1990)</span> では <img src="https://latex.codecogs.com/png.latex?A"> を対称行列に，<img src="https://latex.codecogs.com/png.latex?X"> を中心化された確率変数に限って示されている．</p>
<p><span class="citation" data-cites="Skilling1989">(Skilling, 1989)</span> では <span class="citation" data-cites="Hutchinson1990">(Hutchinson, 1990)</span> のように命題の形では提示していないが，同様の推定量を提案しており，これと一般化跡 (generalized trace) と Chebyshev 多項式の議論を通じて，<img src="https://latex.codecogs.com/png.latex?A"> のスペクトルのベイズ推定を議論している．</p>
</section>
<section id="推定量の性質" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="推定量の性質"><span class="header-section-number">2</span> 推定量の性質</h2>
<p>実用上，<img src="https://latex.codecogs.com/png.latex?X"> の分布は標準 Gauss や Rademacher 分布などが用いられる．</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題（推定量の分散）">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題（推定量の分散）
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?A%5Cin%20S_n(%5Cmathbb%7BR%7D)"> を対称行列とする．</p>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?X%5Csim%5Cmathrm%7BN%7D(0,I_n)"> のとき， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BV%7D%5BX%5E%5Ctop%20AX%5D=2%5Coperatorname%7BTr%7D(A%5E2)=2%5C%7CA%5C%7C%5E2_%5Cmathrm%7BHS%7D.%0A"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?X%5Csim%5Cmathrm%7BRad%7D%5E%7B%5Cotimes%20n%7D"> のとき， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BV%7D%5BX%5E%5Ctop%20AX%5D=2%5Csum_%7Bi%5Cne%20j%7Da_%7Bij%7D%5E2.%0A"></p></li>
</ol>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled" title="証明^[[@Hutchinson1990 p.437], [@Avron-Toledo2011 補題9], [@Adams+2018 命題4.2] も参照．]">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
証明<sup>1</sup>
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?A%5Cin%20S_n(%5Cmathbb%7BR%7D)"> が正定値対称であるとき，ある直交行列 <img src="https://latex.codecogs.com/png.latex?U%5Cin%20O_n(%5Cmathbb%7BR%7D)"> と対角行列 <img src="https://latex.codecogs.com/png.latex?%5CLambda=%5Cmathrm%7Bdiag%7D(%5Clambda_1,%5Cdots,%5Clambda_n)"> が存在して， <img src="https://latex.codecogs.com/png.latex?%0AA=U%5CLambda%20U%5E%5Ctop.%0A"> <img src="https://latex.codecogs.com/png.latex?Y:=U%5E%5Ctop%20X"> と定めるとやはり <img src="https://latex.codecogs.com/png.latex?Y%5Csim%5Cmathrm%7BN%7D(0,I_n)"> であり， <img src="https://latex.codecogs.com/png.latex?%0AX%5E%5Ctop%20AX=X%5E%5Ctop%20U%5CLambda%20U%5E%5Ctop%20X=Y%5E%5Ctop%5CLambda%20Y,%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Ctherefore%5Cqquad%5Cmathrm%7BV%7D%5BX%5E%5Ctop%20AX%5D=2%5Csum_%7Bi=1%7D%5En%5Clambda_i%5E2=2%5Coperatorname%7BTr%7D(%5CLambda%5E2)=2%5Coperatorname%7BTr%7D(A%5E2).%0A"></li>
<li>一般の <img src="https://latex.codecogs.com/png.latex?X%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5En)"> に関して， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BV%7D%5BX%5E%5Ctop%20AX%5D=%5Csum_%7Bi,j,k,l=1%7D%5Ena_%7Bij%7Da_%7Bkl%7D%5Cbiggr(%5Coperatorname%7BE%7D%5BX_iX_jX_kX_l%5D-%5Coperatorname%7BE%7D%5BX_iX_j%5D%5Coperatorname%7BE%7D%5BX_kX_l%5D%5Cbiggl).%0A"></li>
</ol>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="系">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
系
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?A"> が対称行列で <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BE%7D%5BX%5D=0"> であるとき，<img src="https://latex.codecogs.com/png.latex?X"> は Rademacher とした場合が最小分散不偏推定量を定める <span class="citation" data-cites="Hutchinson1990">(Hutchinson, 1990, p. 命題1)</span>．</p>
</div>
</div>
</section>
<section id="応用" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="応用"><span class="header-section-number">3</span> 応用</h2>
<div id="listing-lst-listing" class="listing quarto-float quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724296041207" data-listing-date-modified-sort="1723993200000" data-listing-reading-time-sort="3" data-listing-word-count-sort="442">
<a href="../../../posts/2024/Samplers/NF.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_result.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
正規化流
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル４
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724399755194" data-listing-date-modified-sort="1724252400000" data-listing-reading-time-sort="3" data-listing-word-count-sort="566">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1724295908775" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="871">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<ul>
<li><a href="../../../posts/2024/Samplers/NF.html#sec-Hutchinson">残差フロー (residual flow)</a> では Jacobian の推定が焦点になる．これに Skilling-Hutchinson の跡推定量を用いることができる．</li>
<li><a href="../../../posts/2024/Samplers/NF1.html">Neural ODE</a> において，Jacobian の跡 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BTr%7D(J_%7BF_t%7D(x_t))"> の計算は Skilling-Hutchinson の跡推定量を用いれば <img src="https://latex.codecogs.com/png.latex?O(d)"> で済む <span class="citation" data-cites="Grathwohl+2019">(Grathwohl et al., 2019)</span>．</li>
<li><a href="../../../posts/2024/Samplers/EBM.html#sec-SSM">Sliced Score Matching</a> の目的関数は，Skilling-Hutchinson の跡推定量により Jacobian <img src="https://latex.codecogs.com/png.latex?Ds_%5Ctheta"> を推定したスコアマッチングと解釈できる．</li>
</ul>
</section>



<div id="quarto-appendix" class="default"><section id="文献紹介" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献紹介</h2><div class="quarto-appendix-contents">

<!-- [@Grathwohl+2019] も参考にした． -->
<p><span class="citation" data-cites="Adams+2018">(Adams et al., 2018)</span> では <span class="citation" data-cites="Skilling1989">(Skilling, 1989)</span> の研究を踏襲し，大規模行列のスペクトル（密度）推定に向けて，Skilling-Hutchinson の跡推定量の拡張が議論されている．</p>
<p><span class="citation" data-cites="Meyer+2021">(Meyer et al., n.d.)</span> では Skilling-Hutchinson の跡推定量を改良したアルゴリズムが提案されている．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Adams+2018" class="csl-entry">
Adams, R. P., Pennington, J., Johnson, M. J., Smith, J., Ovadia, Y., Patton, B., and Saunderson, J. (2018). <a href="https://arxiv.org/abs/1802.03451">Estimating the spectral density of large implicit matrices</a>.
</div>
<div id="ref-Avron-Toledo2011" class="csl-entry">
Avron, H., and Toledo, S. (2011). <a href="https://doi.org/10.1145/1944345.1944349">Randomized algorithms for estimating the trace of an implicit symmetric positive semi-definite matrix</a>. <em>J. ACM</em>, <em>58</em>(2).
</div>
<div id="ref-Grathwohl+2019" class="csl-entry">
Grathwohl, W., Chen, R. T. Q., Bettencourt, J., and Duvenaud, D. (2019). <a href="https://openreview.net/forum?id=rJxgknCcK7">Scalable reversible generative models with free-form continuous dynamics</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Hutchinson1990" class="csl-entry">
Hutchinson, M. F. (1990). <a href="https://doi.org/10.1080/03610919008812866"><span class="nocase">A Stochastic Estimator of the Trace of the Influence Matrix for Laplacian Smoothing Splines</span></a>. <em>Communications in Statistics - Simulation and Computation</em>, <em>19</em>(2), 433–450. doi: 10.1080/03610919008812866.
</div>
<div id="ref-Meyer+2021" class="csl-entry">
Meyer, R. A., Musco, C., Musco, C., and Woodruff, D. P. (n.d.). <a href="https://doi.org/10.1137/1.9781611976496.16">Hutch++: Optimal stochastic trace estimation</a>. In <em>2021 symposium on simplicity in algorithms (SOSA)</em>, pages 142–155.
</div>
<div id="ref-Skilling1989" class="csl-entry">
Skilling, J. (1989). <a href="https://doi.org/10.1007/978-94-015-7860-8_48">The eigenvalues of mega-dimensional matrices</a>. In J. Skilling, editor, <em>Maximum entropy and bayesian methods: Cambridge, england, 1988</em>, pages 455–466. Dordrecht: Springer Netherlands.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><span class="citation" data-cites="Hutchinson1990">(Hutchinson, 1990, p. 437)</span>, <span class="citation" data-cites="Avron-Toledo2011">(Avron and Toledo, 2011, p. 補題9)</span>, <span class="citation" data-cites="Adams+2018">(Adams et al., 2018, p. 命題4.2)</span> も参照．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Probability</category>
  <category>Functional Analysis</category>
  <guid>https://162348.github.io/posts/2024/Probability/Trace.html</guid>
  <pubDate>Mon, 19 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Probability/Images/Skilling-Hutchinson.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>ニューラル常微分方程式</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/NF4.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="関連ページ" class="level3 unnumbered unlisted">
<h3 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h3>
<div id="listing-flow-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724737988724" data-listing-date-modified-sort="1723993200000" data-listing-reading-time-sort="3" data-listing-word-count-sort="450">
<a href="../../../posts/2024/Samplers/NF.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_result.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
正規化流
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル４
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724843393428" data-listing-date-modified-sort="1724770800000" data-listing-reading-time-sort="4" data-listing-word-count-sort="794">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Sampling,Python" data-listing-date-sort="1722610800000" data-listing-file-modified-sort="1724133417263" data-listing-date-modified-sort="1723993200000" data-listing-reading-time-sort="10" data-listing-word-count-sort="1863">
<a href="../../../posts/2024/Samplers/NF2.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NF/Glow_output.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
正規化流
</h5>
<div class="card-subtitle listing-subtitle">
<code>normflows</code> によるハンズオン
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-03
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>
<section id="事前準備" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="事前準備"><span class="header-section-number">1</span> 事前準備</h2>
<div id="3960ed9a" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> clear_output</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm_notebook <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tqdm</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-10">sns.color_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bright"</span>)</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Tensor</span>
<span id="cb1-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nn</span>
<span id="cb1-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.nn  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> F</span>
<span id="cb1-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.autograd <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Variable</span>
<span id="cb1-19"></span>
<span id="cb1-20">use_cuda <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cuda.is_available()</span></code></pre></div>
</details>
</div>
<p>まずは ODE ソルバーを用意する．これはどのようなものでも NODE のサブルーチンとして使うことができる．</p>
<div id="9c14e270" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ode_solve(z0, t0, t1, f):</span>
<span id="cb2-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Simplest Euler ODE initial value solver</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-5">    h_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb2-6">    n_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.ceil((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t0)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>h_max).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>().item())</span>
<span id="cb2-7"></span>
<span id="cb2-8">    h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t0)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n_steps</span>
<span id="cb2-9">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t0</span>
<span id="cb2-10">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z0</span>
<span id="cb2-11"></span>
<span id="cb2-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i_step <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_steps):</span>
<span id="cb2-13">        z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f(z, t)</span>
<span id="cb2-14">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> h</span>
<span id="cb2-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> z</span></code></pre></div>
</div>
<p>NODE では，<img src="https://latex.codecogs.com/png.latex?D_%7Bx%7DL_t"> と <img src="https://latex.codecogs.com/png.latex?D_%5Ctheta%20L_t"> とは随伴状態 <img src="https://latex.codecogs.com/png.latex?a(t)"> に関する ODE で得られる．</p>
<p>この ODE の係数を事前に自動微分を通じて計算しておくための親クラスを定義する：</p>
<div id="b003fdd6" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ODEF(nn.Module):</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward_with_grad(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, z, t, grad_outputs):</span>
<span id="cb3-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Compute f and a df/dz, a df/dp, a df/dt"""</span></span>
<span id="cb3-4">        batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-5"></span>
<span id="cb3-6">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.forward(z, t)</span>
<span id="cb3-7"></span>
<span id="cb3-8">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grad_outputs</span>
<span id="cb3-9">        adfdz, adfdt, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>adfdp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.autograd.grad(</span>
<span id="cb3-10">            (out,), (z, t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.parameters()), grad_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(a),</span>
<span id="cb3-11">            allow_unused<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, retain_graph<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-12">        )</span>
<span id="cb3-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grad method automatically sums gradients for batch items, we have to expand them back</span></span>
<span id="cb3-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> adfdp <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-15">            adfdp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat([p_grad.flatten() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p_grad <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> adfdp]).unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-16">            adfdp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdp.expand(batch_size, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batch_size</span>
<span id="cb3-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> adfdt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb3-18">            adfdt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdt.expand(batch_size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batch_size</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out, adfdz, adfdt, adfdp</span>
<span id="cb3-20"></span>
<span id="cb3-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> flatten_parameters(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-22">        p_shapes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-23">        flat_parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.parameters():</span>
<span id="cb3-25">            p_shapes.append(p.size())</span>
<span id="cb3-26">            flat_parameters.append(p.flatten())</span>
<span id="cb3-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> torch.cat(flat_parameters)</span></code></pre></div>
</div>
</section>
<section id="neural-ode-の実装" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="neural-ode-の実装"><span class="header-section-number">2</span> Neural ODE の実装</h2>
<p>Neural ODE では誤差逆伝播の代わりに随伴感度法を用いる．</p>
<p>これは <code>torch.nn.Module</code> を継承したクラスとしては定義できないため，<code>torch.autograd.Function</code> を継承したクラスとして定義する：</p>
<div id="02ec01a1" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ODEAdjoint(torch.autograd.Function):</span>
<span id="cb4-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@staticmethod</span></span>
<span id="cb4-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(ctx, z0, t, flat_parameters, func):</span>
<span id="cb4-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(func, ODEF)</span>
<span id="cb4-5">        bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z0.size()</span>
<span id="cb4-6">        time_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb4-9">            z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(time_len, bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape).to(z0)</span>
<span id="cb4-10">            z[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z0</span>
<span id="cb4-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i_t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(time_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb4-12">                z0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ode_solve(z0, t[i_t], t[i_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], func)</span>
<span id="cb4-13">                z[i_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z0</span>
<span id="cb4-14"></span>
<span id="cb4-15">        ctx.func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func</span>
<span id="cb4-16">        ctx.save_for_backward(t, z.clone(), flat_parameters)</span>
<span id="cb4-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> z</span>
<span id="cb4-18"></span>
<span id="cb4-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@staticmethod</span></span>
<span id="cb4-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> backward(ctx, dLdz):</span>
<span id="cb4-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        dLdz shape: time_len, batch_size, *z_shape</span></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-24">        func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ctx.func</span>
<span id="cb4-25">        t, z, flat_parameters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ctx.saved_tensors</span>
<span id="cb4-26">        time_len, bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z.size()</span>
<span id="cb4-27">        n_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.prod(z_shape)</span>
<span id="cb4-28">        n_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> flat_parameters.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-29"></span>
<span id="cb4-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dynamics of augmented system to be calculated backwards in time</span></span>
<span id="cb4-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> augmented_dynamics(aug_z_i, t_i):</span>
<span id="cb4-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            tensors here are temporal slices</span></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            t_i - is tensor with size: bs, 1</span></span>
<span id="cb4-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            aug_z_i - is tensor with size: bs, n_dim*2 + n_params + 1</span></span>
<span id="cb4-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            """</span></span>
<span id="cb4-37">            z_i, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aug_z_i[:, :n_dim], aug_z_i[:, n_dim:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_dim]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ignore parameters and time</span></span>
<span id="cb4-38"></span>
<span id="cb4-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unflatten z and a</span></span>
<span id="cb4-40">            z_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z_i.view(bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape)</span>
<span id="cb4-41">            a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.view(bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape)</span>
<span id="cb4-42">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.set_grad_enabled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>):</span>
<span id="cb4-43">                t_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t_i.detach().requires_grad_(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-44">                z_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z_i.detach().requires_grad_(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-45">                func_eval, adfdz, adfdt, adfdp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func.forward_with_grad(z_i, t_i, grad_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>a)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bs, *z_shape</span></span>
<span id="cb4-46">                adfdz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdz.to(z_i) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> adfdz <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> torch.zeros(bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape).to(z_i)</span>
<span id="cb4-47">                adfdp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdp.to(z_i) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> adfdp <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> torch.zeros(bs, n_params).to(z_i)</span>
<span id="cb4-48">                adfdt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdt.to(z_i) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> adfdt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> torch.zeros(bs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).to(z_i)</span>
<span id="cb4-49"></span>
<span id="cb4-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flatten f and adfdz</span></span>
<span id="cb4-51">            func_eval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_eval.view(bs, n_dim)</span>
<span id="cb4-52">            adfdz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adfdz.view(bs, n_dim)</span>
<span id="cb4-53">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> torch.cat((func_eval, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>adfdz, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>adfdp, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>adfdt), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-54"></span>
<span id="cb4-55">        dLdz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dLdz.view(time_len, bs, n_dim)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flatten dLdz for convenience</span></span>
<span id="cb4-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb4-57">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create placeholders for output gradients</span></span>
<span id="cb4-58">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prev computed backwards adjoints to be adjusted by direct gradients</span></span>
<span id="cb4-59">            adj_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(bs, n_dim).to(dLdz)</span>
<span id="cb4-60">            adj_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(bs, n_params).to(dLdz)</span>
<span id="cb4-61">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In contrast to z and p we need to return gradients for all times</span></span>
<span id="cb4-62">            adj_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(time_len, bs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).to(dLdz)</span>
<span id="cb4-63"></span>
<span id="cb4-64">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i_t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(time_len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb4-65">                z_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z[i_t]</span>
<span id="cb4-66">                t_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t[i_t]</span>
<span id="cb4-67">                f_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func(z_i, t_i).view(bs, n_dim)</span>
<span id="cb4-68"></span>
<span id="cb4-69">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute direct gradients</span></span>
<span id="cb4-70">                dLdz_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dLdz[i_t]</span>
<span id="cb4-71">                dLdt_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.bmm(torch.transpose(dLdz_i.unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), f_i.unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-72"></span>
<span id="cb4-73">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusting adjoints with direct gradients</span></span>
<span id="cb4-74">                adj_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dLdz_i</span>
<span id="cb4-75">                adj_t[i_t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adj_t[i_t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dLdt_i</span>
<span id="cb4-76"></span>
<span id="cb4-77">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pack augmented variable</span></span>
<span id="cb4-78">                aug_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat((z_i.view(bs, n_dim), adj_z, torch.zeros(bs, n_params).to(z), adj_t[i_t]), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-79"></span>
<span id="cb4-80">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Solve augmented system backwards</span></span>
<span id="cb4-81">                aug_ans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ode_solve(aug_z, t_i, t[i_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], augmented_dynamics)</span>
<span id="cb4-82"></span>
<span id="cb4-83">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack solved backwards augmented system</span></span>
<span id="cb4-84">                adj_z[:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aug_ans[:, n_dim:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_dim]</span>
<span id="cb4-85">                adj_p[:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> aug_ans[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_dim:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n_params]</span>
<span id="cb4-86">                adj_t[i_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aug_ans[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n_params:]</span>
<span id="cb4-87"></span>
<span id="cb4-88">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> aug_z, aug_ans</span>
<span id="cb4-89"></span>
<span id="cb4-90">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Adjust 0 time adjoint with direct gradients</span></span>
<span id="cb4-91">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute direct gradients</span></span>
<span id="cb4-92">            dLdz_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dLdz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-93">            dLdt_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.bmm(torch.transpose(dLdz_0.unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), f_i.unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-94"></span>
<span id="cb4-95">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust adjoints</span></span>
<span id="cb4-96">            adj_z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dLdz_0</span>
<span id="cb4-97">            adj_t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adj_t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dLdt_0</span>
<span id="cb4-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> adj_z.view(bs, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z_shape), adj_t, adj_p, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</div>
<p>これを <code>nn.Module</code> クラスとしてラップすることで，準備完了である：</p>
<div id="b47f65c3" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> NeuralODE(nn.Module):</span>
<span id="cb5-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, func):</span>
<span id="cb5-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(NeuralODE, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb5-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(func, ODEF)</span>
<span id="cb5-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func</span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, z0, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>]), return_whole_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb5-8">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.to(z0)</span>
<span id="cb5-9">        z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ODEAdjoint.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(z0, t, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.func.flatten_parameters(), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.func)</span>
<span id="cb5-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_whole_sequence:</span>
<span id="cb5-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> z</span>
<span id="cb5-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb5-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> z[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
</section>
<section id="ダイナミクスの再現" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="ダイナミクスの再現"><span class="header-section-number">3</span> ダイナミクスの再現</h2>
<section id="線型ダイナミクス" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="線型ダイナミクス"><span class="header-section-number">3.1</span> 線型ダイナミクス</h3>
<p>簡単な線型ダイナミクスを，線型なダイナミクスで学習する．</p>
<div id="5ff41c1d" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> LinearODEF(ODEF):</span>
<span id="cb6-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, W):</span>
<span id="cb6-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(LinearODEF, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb6-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb6-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin.weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Parameter(W)</span>
<span id="cb6-6"></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x, t):</span>
<span id="cb6-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin(x)</span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> SpiralFunctionExample(LinearODEF):</span>
<span id="cb6-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(SpiralFunctionExample, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(Tensor([[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>]]))</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RandomLinearODEF(LinearODEF):</span>
<span id="cb6-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># super(RandomLinearODEF, self).__init__(torch.randn(2, 2)/2.)</span></span>
<span id="cb6-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(RandomLinearODEF, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(Tensor([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>]]))</span>
<span id="cb6-18"></span>
<span id="cb6-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> to_np(x):</span>
<span id="cb6-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x.detach().cpu().numpy()</span></code></pre></div>
</div>
<div id="9c7f3f65" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_trajectories(obs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, trajs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, save<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)):</span>
<span id="cb7-2">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb7-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> obs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> times <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-5">            times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(obs)</span>
<span id="cb7-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> o, t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(obs, times):</span>
<span id="cb7-7">            o, t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_np(o), to_np(t)</span>
<span id="cb7-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> b_i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(o.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb7-9">                plt.scatter(o[:, b_i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], o[:, b_i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>t[:, b_i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cm.plasma)</span>
<span id="cb7-10"></span>
<span id="cb7-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> trajs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> z <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> trajs:</span>
<span id="cb7-13">            z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_np(z)</span>
<span id="cb7-14">            plt.plot(z[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], z[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb7-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> save <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-16">            plt.savefig(save)</span>
<span id="cb7-17">    plt.show()</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> conduct_experiment(ode_true, ode_trained, n_steps, name, plot_freq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>):</span>
<span id="cb7-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data</span></span>
<span id="cb7-21">    z0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Variable(torch.Tensor([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>]]))</span>
<span id="cb7-22"></span>
<span id="cb7-23">    t_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.29</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb7-24">    n_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb7-25"></span>
<span id="cb7-26">    index_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n_points, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.int64)</span>
<span id="cb7-27">    index_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.hstack([index_np[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]])</span>
<span id="cb7-28">    times_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, t_max, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_points)</span>
<span id="cb7-29">    times_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.hstack([times_np[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]])</span>
<span id="cb7-30"></span>
<span id="cb7-31">    times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.from_numpy(times_np[:, :, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]).to(z0)</span>
<span id="cb7-32">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ode_true(z0, times, return_whole_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).detach()</span>
<span id="cb7-33">    obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.randn_like(obs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb7-34"></span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get trajectory of random timespan</span></span>
<span id="cb7-36">    min_delta_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb7-37">    max_delta_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span></span>
<span id="cb7-38">    max_points_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb7-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_batch():</span>
<span id="cb7-40">        t0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.uniform(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, t_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_delta_time)</span>
<span id="cb7-41">        t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.uniform(min_delta_time, max_delta_time)</span>
<span id="cb7-42"></span>
<span id="cb7-43">        idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(np.random.permutation(index_np[(times_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> t0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (times_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> t1)])[:max_points_num])</span>
<span id="cb7-44"></span>
<span id="cb7-45">        obs_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs[idx]</span>
<span id="cb7-46">        ts_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> times[idx]</span>
<span id="cb7-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> obs_, ts_</span>
<span id="cb7-48"></span>
<span id="cb7-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train Neural ODE</span></span>
<span id="cb7-50">    optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.Adam(ode_trained.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr)</span>
<span id="cb7-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_steps):</span>
<span id="cb7-52">        obs_, ts_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_batch()</span>
<span id="cb7-53"></span>
<span id="cb7-54">        z_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ode_trained(obs_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], ts_, return_whole_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-55">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.mse_loss(z_, obs_.detach())</span>
<span id="cb7-56"></span>
<span id="cb7-57">        optimizer.zero_grad()</span>
<span id="cb7-58">        loss.backward(retain_graph<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-59">        optimizer.step()</span>
<span id="cb7-60"></span>
<span id="cb7-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> plot_freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb7-62">            z_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ode_trained(z0, times, return_whole_sequence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-63"></span>
<span id="cb7-64">            plot_trajectories(obs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[obs], times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[times], trajs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[z_p], save<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Files/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>plot_freq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb7-65">            clear_output(wait<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="ec1bf5c6" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">ode_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NeuralODE(SpiralFunctionExample())</span>
<span id="cb8-2">ode_trained <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NeuralODE(RandomLinearODEF())</span>
<span id="cb8-3">conduct_experiment(ode_true, ode_trained, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span>)</span></code></pre></div>
</div>
<p>ImageMagick により git 生成した結果は次の通り：</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">convert</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-delay</span> 10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-loop</span> 0 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$i</span>.png<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> output.gif</span></code></pre></div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="img-fluid"></p>
</section>
<section id="非線型ダイナミクス" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="非線型ダイナミクス"><span class="header-section-number">3.2</span> 非線型ダイナミクス</h3>
<p>今回は非線型のダイナミクスを，<a href="https://pytorch.org/docs/stable/generated/torch.nn.ELU.html">ELU</a> を備えた一層のニューラルネットワークで学習する：</p>
<div id="ea8e3b83" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> TestODEF(ODEF):</span>
<span id="cb10-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, A, B, x0):</span>
<span id="cb10-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(TestODEF, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb10-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb10-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.A.weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Parameter(A)</span>
<span id="cb10-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb10-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.B.weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Parameter(B)</span>
<span id="cb10-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Parameter(x0)</span>
<span id="cb10-9"></span>
<span id="cb10-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x, t):</span>
<span id="cb10-11">        xTx0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-12">        dxdt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sigmoid(xTx0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.A(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.sigmoid(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>xTx0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.B(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0)</span>
<span id="cb10-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dxdt</span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> NNODEF(ODEF):</span>
<span id="cb10-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, in_dim, hid_dim, time_invariant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb10-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(NNODEF, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb10-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_invariant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time_invariant</span>
<span id="cb10-19"></span>
<span id="cb10-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> time_invariant:</span>
<span id="cb10-21">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(in_dim, hid_dim)</span>
<span id="cb10-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb10-23">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(in_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, hid_dim)</span>
<span id="cb10-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hid_dim, hid_dim)</span>
<span id="cb10-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hid_dim, in_dim)</span>
<span id="cb10-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.elu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.ELU(inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb10-27"></span>
<span id="cb10-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x, t):</span>
<span id="cb10-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_invariant:</span>
<span id="cb10-30">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat((x, t), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-31"></span>
<span id="cb10-32">        h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.elu(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin1(x))</span>
<span id="cb10-33">        h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.elu(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin2(h))</span>
<span id="cb10-34">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lin3(h)</span>
<span id="cb10-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span></code></pre></div>
</div>
<div id="d8b02904" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TestODEF(Tensor([[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>], [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>]]), Tensor([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>]]), Tensor([[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>]]))</span>
<span id="cb11-2">ode_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NeuralODE(func)</span>
<span id="cb11-3"></span>
<span id="cb11-4">func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NNODEF(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, time_invariant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-5">ode_trained <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NeuralODE(func)</span>
<span id="cb11-6"></span>
<span id="cb11-7">conduct_experiment(ode_true, ode_trained, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonlinear"</span>, plot_freq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)</span></code></pre></div>
</div>
<p>逡巡を繰り返して学習する様子がよく伺える．学習率を <code>lr=0.001</code> としているが，<code>lr=0.01</code> でも <code>lr=0.005</code> でも，学習が非常に良い線まで行ってもすぐに初期値よりもカオスなダイナミクスに戻ってしまう挙動がよく見られた．</p>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/nonlinear/output.gif" class="img-fluid"></p>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="文献紹介" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献紹介</h2><div class="quarto-appendix-contents">

<p><a href="https://msurtsukov.github.io/Neural-ODE/">Mikhail Surtsukov 氏</a>によるチュートリアルが，<a href="https://github.com/msurtsukov/neural-ode?tab=readme-ov-file">このレポジトリ</a>で公開されている．</p>
<p>FFJORD <span class="citation" data-cites="Grathwohl+2019">(Grathwohl et al., 2019)</span> の実装は，<a href="https://github.com/rtqichen/ffjord">このレポジトリ</a>で公開されている．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Grathwohl+2019" class="csl-entry">
Grathwohl, W., Chen, R. T. Q., Bettencourt, J., and Duvenaud, D. (2019). <a href="https://openreview.net/forum?id=rJxgknCcK7"><span class="nocase">Scalable Reversible Generative Models with Free-form Continuous Dynamics</span></a>. In <em>International conference on learning representations</em>.
</div>
</div></section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/NF4.html</guid>
  <pubDate>Mon, 19 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/nonlinear/output.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>階層モデル再論</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Kernels/HierarchicalModel.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="はじめに" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="はじめに">はじめに</h2>
<p>潜在変数模型とはどうやらとんでもなく広い射程を持った対象であるようである．</p>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="潜在変数モデルとは……">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
潜在変数モデルとは……
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>心理学，経済学をはじめとして多くの分野で中心的に扱われてきたモデルである（<a href="https://ja.wikipedia.org/wiki/共分散構造分析">構造方程式モデル</a>，因子分析，同時方程式モデル，<a href="../../../posts/2024/Computation/PGM1.html">Probabilistic Graphical Model</a> など）．</li>
<li>ベイズ統計学では <strong>階層モデル</strong> (hierarchical model) として極めて重要な役割を果たす．</li>
<li>生成モデリング（<a href="../../../posts/2024/Kernels/Deep4.html">VAE</a>, <a href="../../../posts/2024/Samplers/EBM.html">EBM</a>, <a href="../../../posts/2024/Samplers/Diffusion.html">Diffusion</a>, <a href="../../../posts/2024/Kernels/Deep3.html">GAN</a>）も，観測変数上の周辺分布がデータ分布に近づくように潜在変数模型を学習する方法である．</li>
<li>表現学習や独立成分分析だけでなく，脳も潜在変数模型に基いてメンタルモデルを構成しているという仮説もある（<a href="../../../posts/2024/Kernels/NCL.html#sec-InfoMax">InfoMax に関する稿</a>も参照）．</li>
<li>情報理論において，通信路は潜在変数模型としてモデリングできる．この方向には，潜在変数模型は数学的には確率空間の圏上の図式であるとして研究されている <span class="citation" data-cites="Perrone2024">(Perrone, 2024)</span>．</li>
</ol>
</div>
</div>
<p>このように種々の文脈で登場する潜在変数模型であるが，<u><strong>それぞれの文脈において「潜在変数」の果たす役割は全く違う</strong></u>．</p>
<p>しかし，数学的には全く同じ枠組みで記述できる．従って，そのように扱うことは一定の価値を持つだろう．</p>
<p>実際，近年になり，これから本稿で解説するように，潜在変数モデルの観点から心理学，経済学，環境科学，遺伝学，信号処理，逆問題，社会学，政治科学，マーケティング分野で独自に発展した手法が，特定の手法の特別な場合と見れるという理解が進み，手法の交流と知見の交換が進んでいる．</p>
</section>
<section id="本稿の目的" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="本稿の目的">本稿の目的</h2>
<p>本稿では主成分分析，因子分析，構造方程式モデリング，混合モデル，独立成分分析を，<u>潜在変数モデルとして解釈し，図式で理解する</u>．</p>
<p>確率変数を丸つきの大文字で表し，<img src="https://latex.codecogs.com/png.latex?X%5Ei,Y%5Ei"> は観測変数，<img src="https://latex.codecogs.com/png.latex?Z%5Ei"> は潜在変数を表す．矢印は <a href="../../../posts/2024/Probability/Kernel.html">確率核</a> を表す．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/MM.svg" class="img-fluid figure-img"></p>
<figcaption>混合モデル（第 4 節）</figcaption>
</figure>
</div>
<p>種々の <strong>多変量解析法</strong> を（ベイズ）階層モデルとして統一的に理解すると同時に，それぞれの文脈での「使い方の違い」に注目することを目指す．</p>
</section>
<section id="sec-PCA" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sec-PCA"><span class="header-section-number">1</span> 主成分分析 (PCA)</h2>
<section id="はじめに-1" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめに-1"><span class="header-section-number">1.1</span> はじめに</h3>
<p>主成分分析では，<img src="https://latex.codecogs.com/png.latex?p"> 次元のデータ <img src="https://latex.codecogs.com/png.latex?%5C%7Bx_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ep"> の各成分を，より少数の潜在変数を持った１層の線型 Gauss 模型</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PCA.svg" class="img-fluid"></p>
<p>で説明しようとする．<sup>1</sup></p>
<p>歴史的に主成分分析は，おろした垂線の足の二乗距離和の意味でコストが最小になるような線型射影を求める問題 <span class="citation" data-cites="Pearson01-PCA">(Pearson, 1901)</span> として最初に登場し，値の分散が最大となるような線型射影を求める問題 <span class="citation" data-cites="Hotelling33-PCA">(Hotelling, 1933)</span> として PCA の名前がつき，心理学分野，特に psychometrika で取り上げられて大きく発展した．</p>
<p>このような潜在変数モデルとしての見方は probabilistic PCA <span class="citation" data-cites="Tipping-Bishop1999">(Tipping and Bishop, 1999)</span> / SPCA (Sensible PCA) <span class="citation" data-cites="Roweis1997">(Roweis, 1997)</span> として，因子分析から逆輸入する形で初めて自覚された見方である（第 2.3.1 節も参照）．</p>
<p>確率的な見地から見れば，正規性を仮定した変数 <img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> の事前分布が互いに独立なデルタ分布に縮退している場合が古典的な PCA である <span class="citation" data-cites="Roweis1997">(Roweis, 1997)</span>．</p>
<p>いずれの場合も追加の過程なくしてモデルは識別可能性がなく，後続タスクに応じて種々の制約を追加することで所望の解を得る，という動的な使い方がなされる．</p>
<p>以降，<img src="https://latex.codecogs.com/png.latex?X%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Ep),Z%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Er)"> を確率変数， <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BX%7D=(x_i%5Ej)%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D),%5Cboldsymbol%7BZ%7D=(z_i%5Ej)%5Cin%20M_%7Bn,r%7D(%5Cmathbb%7BR%7D)%0A"> を行列することに注意．</p>
</section>
<section id="概要" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="概要"><span class="header-section-number">1.2</span> 概要</h3>
<p>PCA ではデータ行列を <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BX%7D:=%5Cbegin%7Bpmatrix%7Dx_1%5E%5Ctop%5C%5C%5Cvdots%5C%5Cx_n%5E%5Ctop%5Cend%7Bpmatrix%7D%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)%0A"> で定めたとき，データ次元 <img src="https://latex.codecogs.com/png.latex?p"> より小さい数の成分 <img src="https://latex.codecogs.com/png.latex?r"> で説明しようとする： <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BX%7D%5Capprox%5Cboldsymbol%7BZ%7DC%5E%5Ctop,%5Cqquad%5Cboldsymbol%7BZ%7D:=%5Cbegin%7Bpmatrix%7Dz_1%5E%5Ctop%5C%5C%5Cvdots%5C%5Cz_n%5E%5Ctop%5Cend%7Bpmatrix%7D%5Cin%20M_%7Bn,r%7D(%5Cmathbb%7BR%7D),C%5Cin%20M_%7Bp,r%7D(%5Cmathbb%7BR%7D).%0A"></p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li>古典的には，<img src="https://latex.codecogs.com/png.latex?z_%7Bij%7D"> を（主成分）<strong>得点</strong> (score)，<img src="https://latex.codecogs.com/png.latex?Z%5Ei"> を <strong>合成変量</strong>，<img src="https://latex.codecogs.com/png.latex?c_%7Bij%7D"> を <strong>負荷量</strong> (loading) ともいう <span class="citation" data-cites="足立-山本2024">(足立浩平 and 山本倫生, 2024)</span>．</li>
<li>機械学習では <img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> を <strong>潜在因子</strong>，<img src="https://latex.codecogs.com/png.latex?W%5Cin%20M_%7Bpr%7D(%5Cmathbb%7BR%7D)"> を <strong>荷重</strong> (weight) ともいう <span class="citation" data-cites="Murphy2022">(Murphy, 2022)</span>．</li>
</ul>
</div>
</div>
</div>
<p>この問題は <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BX%7D"> の <a href="../../../posts/2024/FunctionalAnalysis/SVD.html">特異値分解</a> (SVD) <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BX%7D=U%5CSigma%20V%5E%5Ctop"> により解ける： <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BZ%7D=U%5CSigma_%7B1:r%7D%5E%5Calpha%20A=%5Cboldsymbol%7BX%7D(%5Cunderbrace%7BV%5CSigma%5E%7B%5Calpha-1%7D_%7B1:r%7DA%7D_%7B=:W%7D),%5Cqquad%20C:=V%5CSigma_%7B1:r%7D%5E%7B1-%5Calpha%7D(A%5E%7B-1%7D)%5E%5Ctop.%0A"> ただし，<img src="https://latex.codecogs.com/png.latex?%5Calpha%5Cin%5Cmathbb%7BR%7D,A%5Cin%5Cmathrm%7BGL%7D_p(%5Cmathbb%7BR%7D)"> は任意である．この解は，特異値分解の性質により，残差を Hilbert-Schmidt ノルムの意味で最小にする： <span id="eq-PCA-objective"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmin_C%5C%7C%5Cboldsymbol%7BX%7D-%5Cboldsymbol%7BZ%7DC%5E%5Ctop%5C%7C_%5Cmathrm%7BHS%7D=%5Cmin_C%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%5Clvert%20x_i-Cz_i%5Crvert%5E2=%5Csigma_%7Br+1%7D%0A%5Ctag%7B1%7D"></span> この目的関数は復元誤差とも理解できる．ただし，<img src="https://latex.codecogs.com/png.latex?%5Csigma_%7Br+1%7D"> は行列 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BZ%7DC"> の第 <img src="https://latex.codecogs.com/png.latex?r+1"> 特異値である．</p>
</section>
<section id="主成分分散最大化" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="主成分分散最大化"><span class="header-section-number">1.3</span> 主成分分散最大化</h3>
<p>荷重行列 <img src="https://latex.codecogs.com/png.latex?W"> が <img src="https://latex.codecogs.com/png.latex?W%5E%5Ctop%20W=I_r"> を満たすという制約条件を追加すると，目的関数 (1) は潜在変数の分散を最大にすることと等価になる： <span id="eq-PCA-objective2"><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname*%7Bargmin%7D_%7BW%7D%5C%7C%5Cboldsymbol%7BX%7D-%5Cboldsymbol%7BZ%7DW%5C%7C_%5Cmathrm%7BHS%7D=%5Coperatorname*%7Bargmin%7D_W%5Coperatorname%7BTr%7D((%5Cboldsymbol%7BX%7DW)%5E%5Ctop%5Cboldsymbol%7BX%7DW).%0A%5Ctag%7B2%7D"></span></p>
<p>すなわち，<img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BZ%7D=%5Cboldsymbol%7BX%7DW"> の変動が差大になるようにすれば良い．</p>
<p>そのためには，確率変数 <img src="https://latex.codecogs.com/png.latex?X"> のデータ行列 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BX%7D"> から計算した経験共分散行列 <img src="https://latex.codecogs.com/png.latex?S%5Cin%20M_%7Bp%7D(%5Cmathbb%7BR%7D)_+"> の固有ベクトルのうち，対応する固有値が大きいものから <img src="https://latex.codecogs.com/png.latex?w_1,%5Ccdots,w_r"> として荷重行列とすれば良い： <img src="https://latex.codecogs.com/png.latex?%0AW:=(w_1%5C;%5Ccdots%5C;w_r).%0A"></p>
<p>実はこれは解の１つに過ぎず，<img src="https://latex.codecogs.com/png.latex?W"> に右から直交行列を乗じて「回転」させたものは全て解になる．上の解は追加の条件 <img src="https://latex.codecogs.com/png.latex?Z%5E%5Ctop%20Z=I_r"> を課すことで特定される．</p>
</section>
<section id="計算上の注意" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="計算上の注意"><span class="header-section-number">1.4</span> 計算上の注意</h3>
<p>各次元に関する長さのスケールを揃えるために，PCA を始める前にデータを正規化しておくか，または共分散行列 <img src="https://latex.codecogs.com/png.latex?S"> の代わりに，相関行列を用いるべきである．</p>
<p>また，実際に最適化や相関行列の固有値分解をすることはなく，基本的に SVD の方が <img src="https://latex.codecogs.com/png.latex?O(np%5E2)+O(p%5E3)"> と高速である <span class="citation" data-cites="Unkel-Trendafilov2010">(Unkel and Trendafilov, 2010)</span>．</p>
<p>さらに次元 <img src="https://latex.codecogs.com/png.latex?p"> が高い場合は，<strong>確率的 SVD</strong> <span class="citation" data-cites="Halko+2011">(Halko et al., 2011)</span>, <span class="citation" data-cites="Drineas+2016">(Drineas and Mahoney, 2016)</span> を用いてさらに <img src="https://latex.codecogs.com/png.latex?O(nr%5E2)+(r%5E3)"> まで削減できる．このような手法は確率的数値解析と呼ばれる <span class="citation" data-cites="Murray+2023">(Murray et al., 2023)</span>．</p>
</section>
<section id="sec-dimension-reduction" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="sec-dimension-reduction"><span class="header-section-number">1.5</span> 線型射影による次元縮約</h3>
<p><img src="https://latex.codecogs.com/png.latex?W%5E%5Ctop%20W=I_r"> の仮定の下で，PCA の目的関数 (1) は，潜在変数の分散最大化 (2) と見れるのだった．</p>
<p>これは同じ仮定の下で，データ変数 <img src="https://latex.codecogs.com/png.latex?X"> の最小誤差の線型射影を求める問題とも見れる： <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname*%7Bargmin%7D_W%5C%7C%5Cboldsymbol%7BX%7D-%5Cboldsymbol%7BZ%7DW%5C%7C_%5Cmathrm%7BHS%7D=%5Coperatorname*%7Bargmin%7D_W%5C%7C%5Cboldsymbol%7BX%7D-%5Cboldsymbol%7BX%7DWW%5E%5Ctop%5C%7C_%5Cmathrm%7BHS%7D.%0A"></p>
<p>なお，一般の行列 <img src="https://latex.codecogs.com/png.latex?A"> について <img src="https://latex.codecogs.com/png.latex?P_A=A(A%5E%7B-1%7DA)%5E+A%5E%5Ctop"> は <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BIm%7D%5C,A"> 上の直交射影になる．<img src="https://latex.codecogs.com/png.latex?A"> が直交行列であるとき，<img src="https://latex.codecogs.com/png.latex?P_A=AA%5E%5Ctop"> が成り立つ．</p>
</section>
<section id="因子分析志向の主成分分析" class="level3" data-number="1.6">
<h3 data-number="1.6" class="anchored" data-anchor-id="因子分析志向の主成分分析"><span class="header-section-number">1.6</span> 因子分析志向の主成分分析</h3>
<p>因子分析では，<img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> を対等な因子と見て，それぞれのデータへの影響を調べたい．このような場合は， <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7Bn%7D%5Cboldsymbol%7BZ%7D%5E%5Ctop%5Cboldsymbol%7BZ%7D=I_r%0A"> が自然な制約になる．この際の解は，直交行列 <img src="https://latex.codecogs.com/png.latex?T%5Cin%20O_r(%5Cmathbb%7BR%7D)"> の違いを除いて， <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BZ%7D=%5Csqrt%7Bn%7DUT,%5Cqquad%20C=%5Cfrac%7B1%7D%7B%5Csqrt%7Bn%7D%7DV%5CSigma_%7B1:r%7DT,%5Cqquad%20W=%5Csqrt%7Bn%7DV%5CSigma_%7B1:r%7D%5E%7B-1%7DT,%0A"> まで確定する．</p>
<p>しばしば，追加の仮定 <img src="https://latex.codecogs.com/png.latex?%0AC%5E%5Ctop%20C=%5Cmathrm%7Bdiag%7D(%5Crho_%7B1:r%7D),%5Cqquad%20%5Crho_1%5Cge%5Ccdots%5Cge%5Crho_r%5Cge0%0A"> を課して得られる一意な解 <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BZ%7D=%5Csqrt%7Bn%7DU,%5Cqquad%20C=%5Cfrac%7B1%7D%7B%5Csqrt%7Bn%7D%7DV%5CSigma_%7B1:r%7D,%5Cqquad%20W=%5Csqrt%7Bn%7DV%5CSigma_%7B1:r%7D%5E%7B-1%7D,%0A"> を <strong>初期解</strong> と呼び，これを「回転」させることで他の解が探索され，所望の分解を探す．</p>
<p>因子分析では <span class="citation" data-cites="Thurstone1947">(Thurstone, 1947)</span> 以来，種々の回転法とアルゴリズムが蓄積している <span class="citation" data-cites="足立-山本2024">(足立浩平 and 山本倫生, 2024)</span>．一般にこの文脈では，<span class="citation" data-cites="Thurstone1947">(Thurstone, 1947)</span> にいう「単純構造」を達成した，解釈が容易な因子をドメイン知識に基づいて構成することを目指す．この「単純構造」とは，現代でいう一種の disentangled factor と理解できる．</p>
</section>
</section>
<section id="sec-FA" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="sec-FA"><span class="header-section-number">2</span> 因子分析 (FA)</h2>
<section id="はじめに-2" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="はじめに-2"><span class="header-section-number">2.1</span> はじめに</h3>
<p>主成分分析が「低階数近似」ならば，因子分析は「高階数近似」というべきである <span class="citation" data-cites="足立浩平2023">(足立浩平, 2023)</span>．</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/FA.svg" class="img-fluid"></p>
<p>より正確には，因子分析は，観測の各次元 <img src="https://latex.codecogs.com/png.latex?X%5E1,%5Ccdots,X%5Ep"> ごとに「独自因子」<img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Ep"> を想定しつつ，全観測に共通する「共通因子」<img src="https://latex.codecogs.com/png.latex?F%5E1,%5Ccdots,F%5Er"> をどのように抽出できるかを考える，という志向性を持つ：</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/FA2.svg" class="img-fluid"></p>
<p>この意味では，FA は独自因子 <img src="https://latex.codecogs.com/png.latex?U%5E1,%5Ccdots,U%5Ep"> を追加した PCA とも理解できる．</p>
<p>歴史的には <span class="citation" data-cites="Spearman1904">(Spearman, 1904)</span> が古典テスト理論の文脈で <img src="https://latex.codecogs.com/png.latex?r=1"> の因子分析を，<span class="citation" data-cites="Thurstone1947">(Thurstone, 1947)</span> が一般の <img src="https://latex.codecogs.com/png.latex?1%5Cle%20r%3Cp"> の場合の因子分析を「回転」の手法と共に導入した．</p>
<p>さらに興味深いことに，FA では PCA をはじめとした多くの多変量分析手法と違い，<span class="citation" data-cites="Lawley1942">(Lawley, 1942)</span>, <span class="citation" data-cites="Anderson-Rubin1956">(Anderson and Rubin, 1956)</span> らにより，初期から確率的な扱いが発展した手法である <span class="citation" data-cites="足立-山本2024">(足立浩平 and 山本倫生, 2024)</span>．</p>
<p>FA に倣う形で，PCA にも確率論的なアプローチが導入された <span class="citation" data-cites="Tipping-Bishop1999">(Tipping and Bishop, 1999)</span>, <span class="citation" data-cites="Roweis1997">(Roweis, 1997)</span>．</p>
</section>
<section id="概要-1" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="概要-1"><span class="header-section-number">2.2</span> 概要</h3>
<p>FA では <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BZ%7D=(%5Cboldsymbol%7BF%7D%5C;%5Cboldsymbol%7BU%7D)%5Cin%20M_%7Bn,r+p%7D(%5Cmathbb%7BR%7D)"> の分解に基づき， <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BX%7D%5Capprox%5Cboldsymbol%7BF%7DA%5E%5Ctop+%5Cboldsymbol%7BU%7D%5CPsi%5E%7B1/2%7D,%5Cqquad%20A%5Cin%20M_%7Br,p%7D(%5Cmathbb%7BR%7D),%5CPsi=%5Cmathrm%7Bdiag%7D(%5Cpsi_1,%5Ccdots,%5Cpsi_p)%5Cin%20M_p(%5Cmathbb%7BR%7D),%0A"> によってデータ行列 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BX%7D%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> を説明しようとする．<sup>2</sup></p>
<p>PCA よりさらに識別可能性は絶望的であるが，FA では潜在変数の解釈可能性担保のため，次の仮定を課す： <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7B1%7D_n%5E%5Ctop%5Cboldsymbol%7BF%7D=%5Cboldsymbol%7B0%7D_r,%5Cqquad%20%5Cboldsymbol%7B1%7D_n%5E%5Ctop%5Cboldsymbol%7BU%7D=%5Cboldsymbol%7B0%7D_p,%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7BF%7D%5E%5Ctop%5Cboldsymbol%7BF%7D=n%5Cboldsymbol%7BI%7D_r,%5Cqquad%20%5Cboldsymbol%7BU%7D%5E%5Ctop%5Cboldsymbol%7BU%7D=n%5Cboldsymbol%7BI%7D_p,%5Cqquad%5Cboldsymbol%7BF%7D%5E%5Ctop%5Cboldsymbol%7BU%7D=O.%0A"> すなわち，推定される確率変数 <img src="https://latex.codecogs.com/png.latex?F,U"> が標準化されていて互いに無相関であるように誘導する．</p>
<p>また，<img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BU%7D"> の経験分散が <img src="https://latex.codecogs.com/png.latex?%5CPsi"> になることに注意．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ul>
<li>古典的には，<img src="https://latex.codecogs.com/png.latex?f_%7Bij%7D"> を共通因子，<img src="https://latex.codecogs.com/png.latex?%5Cpsi_j"> を独自因子の <strong>得点</strong> (score)，<img src="https://latex.codecogs.com/png.latex?a_%7Bij%7D"> を <strong>負荷量</strong> (loading) ともいう <span class="citation" data-cites="足立-山本2024">(足立浩平 and 山本倫生, 2024)</span>．</li>
<li>機械学習では <img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> を <strong>潜在因子</strong>，<img src="https://latex.codecogs.com/png.latex?W%5Cin%20M_%7Bpr%7D(%5Cmathbb%7BR%7D)"> を <strong>荷重</strong> (weight) ともいう <span class="citation" data-cites="Murphy2022">(Murphy, 2022)</span>．</li>
</ul>
</div>
</div>
</div>
<p>この問題は，<img src="https://latex.codecogs.com/png.latex?C:=(A%5C;%5CPsi%5E%7B1/2%7D)"> と定めると，PCA と同じ問題 (1) に帰着される： <img src="https://latex.codecogs.com/png.latex?%0A%5Cmin_C%5C%7C%5Cboldsymbol%7BX%7D-%5Cboldsymbol%7BZ%7DC%5E%5Ctop%5C%7C_%5Cmathrm%7BHS%7D.%0A"></p>
<p>これはやはり特異値分解により解くことができる <span class="citation" data-cites="DeLeeuw04-SimultaneousEstimationOfEFA">(De Leeuw, 2004)</span>．</p>
<p>解は直交行列による回転を除いても，やはり一意に定まらないようである．</p>
</section>
<section id="確率的アプローチ" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="確率的アプローチ"><span class="header-section-number">2.3</span> 確率的アプローチ</h3>
<p>ここで， <img src="https://latex.codecogs.com/png.latex?%0AU:=%5Cbegin%7Bpmatrix%7DU%5E1%5C%5C%5Cvdots%5C%5CU%5Ep%5Cend%7Bpmatrix%7D%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Ep),%5Cqquad%20F:=%5Cbegin%7Bpmatrix%7DF%5E1%5C%5C%5Cvdots%5C%5CF%5Er%5Cend%7Bpmatrix%7D%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Er),%0A"> を確率変数とすると， <span id="eq-probabilistic-FA"><img src="https://latex.codecogs.com/png.latex?%0AX%5Capprox%20AF+%5CPsi%5E%7B1/2%7DU%0A%5Ctag%7B3%7D"></span> によって <img src="https://latex.codecogs.com/png.latex?X"> に確率モデルが誘導されることになる．</p>
<section id="sec-PPCA" class="level4" data-number="2.3.1">
<h4 data-number="2.3.1" class="anchored" data-anchor-id="sec-PPCA"><span class="header-section-number">2.3.1</span> 正規性の仮定</h4>
<p><img src="https://latex.codecogs.com/png.latex?U,F"> に正規性の仮定をおけば，このモデルは EM アルゴリズムなどを用いて最尤推定できる <span class="citation" data-cites="Rubin-Thayer1982">(Rubin and Thayer, 1982)</span>, <span class="citation" data-cites="Ghahramani-Hinton1996">(Ghahramani and Hinton, 1996)</span>．このような最尤推定のアプローチは <span class="citation" data-cites="Lawley1942">(Lawley, 1942)</span> から考えられていた．</p>
<p>この見方が PCA にも応用された．追加の仮定 <img src="https://latex.codecogs.com/png.latex?%0AA%5E%5Ctop%20A=I_%7Br%7D,%5Cqquad%20%5CPsi=%5Csigma%5E2I_p,%0A"> の下での FA への確率論的アプローチを probabilistic PCA <span class="citation" data-cites="Tipping-Bishop1999">(Tipping and Bishop, 1999)</span> / SPCA (Sensible PCA) <span class="citation" data-cites="Roweis1997">(Roweis, 1997)</span> という．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限で古典的 PCA が回復される．</p>
</section>
<section id="共分散構造分析" class="level4" data-number="2.3.2">
<h4 data-number="2.3.2" class="anchored" data-anchor-id="共分散構造分析"><span class="header-section-number">2.3.2</span> 共分散構造分析</h4>
<p>一方で，分布の仮定は課さず，<img src="https://latex.codecogs.com/png.latex?X"> の経験分散 <img src="https://latex.codecogs.com/png.latex?S"> を，式 (3) の右辺の共分散 <img src="https://latex.codecogs.com/png.latex?%0A%5CSigma:=AA%5E%5Ctop+%5CPsi%0A"> となるべく近づけるように学習する方法もある．</p>
<p>例えば <span class="citation" data-cites="Harman-Jones1966">(Harman and Jones, 1966)</span>, <span class="citation" data-cites="Harman-Fukuda1966">(Harman and Fukuda, 1966)</span> では，Hilbert-Schmidt ノルム <img src="https://latex.codecogs.com/png.latex?%5C%7CS-%5CSigma%5C%7C_%5Cmathrm%7BHS%7D"> の最小化することで解を探索する方法が考慮された．</p>
<p>このように，データの共分散行列を低階数近似するアプローチは <strong>共分散構造分析</strong> <span class="citation" data-cites="Bock-Bargmann1966">(Bock and Bargmann, 1966)</span> ともいう．</p>
<p>さらに，確率論的なアプローチは一般の構造方程式モデル (SEM, 次節 3 参照) へと発展 <span class="citation" data-cites="Joreskog70">(Karl Gustav Jöreskog, 1970)</span>, <span class="citation" data-cites="Sorbom1974">(Sörbom, 1974)</span>, <span class="citation" data-cites="Joreskog1978">(Karl G. Jöreskog, 1978)</span> し，現状，共分散構造分析は SEM の特別な場合と解される．<sup>3</sup></p>
</section>
</section>
<section id="スパース推定" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="スパース推定"><span class="header-section-number">2.4</span> スパース推定</h3>
<p>FA のモデルは識別可能とは程遠く，解釈可能性が重要である．<span class="citation" data-cites="Thurstone1947">(Thurstone, 1947)</span> は因子付加行列が「単純構造」を持つことを一つの指標としたが，現代的にはスパース推定の言葉で与えられた <strong>完全単純構造</strong> <span class="citation" data-cites="Bernaards-Jennrich2003">(Bernaards and Jennrich, 2003)</span> を仮定することが増えてきた．</p>
<p><strong>スパース PCA</strong> <span class="citation" data-cites="Zou+2006">(Zou et al., 2006)</span>, <span class="citation" data-cites="Jolliffe+2003">(Ian T Jolliffe and Uddin, 2003)</span> では，従来の SVD + 回転ではなく，LASSO 様の <img src="https://latex.codecogs.com/png.latex?L%5E1">-正則化項によって，解釈可能な因子付加行列を得ようとする．最終的に得られる目的関数は elastic net <span class="citation" data-cites="Zou-Hastie2005">(Zou and Hastie, 2005)</span> 様になる．</p>
<p>等価だが，自動関連度決定 (ARD) を用いた <strong>Bayesian PCA</strong> <span class="citation" data-cites="Bishop1998">(Bishop, 1998)</span>, <span class="citation" data-cites="Archambeau-Bach2008">(Archambeau and Bach, 2008)</span> や spike-and-slab <span class="citation" data-cites="Rattray+2009">(Rattray et al., 2009)</span> など，スパース性を促す事前分布を用いることもできる．</p>
</section>
<section id="sec-other-priors-FA" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="sec-other-priors-FA"><span class="header-section-number">2.5</span> その他の事前分布</h3>
<p>非正規な事前分布（特に Laplace 分布やロジスティック分布などの裾の重いもの）を用いることで，モデルが識別可能性を回復することがある．</p>
<p>このように，<a href="../../../posts/2024/Kernels/NCL.html#sec-identifiability">一般の設定で潜在変数モデルが識別可能になるための条件が，非線型独立分析の分野で提案されている</a> <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span>．</p>
<section id="gamma-分布" class="level4" data-number="2.5.1">
<h4 data-number="2.5.1" class="anchored" data-anchor-id="gamma-分布"><span class="header-section-number">2.5.1</span> Gamma 分布</h4>
<p>また，Gamma 事前分布は非負かつスパースな表現を促進し，カウントデータとよく用いられる <span class="citation" data-cites="Canny2004">(Canny, 2004)</span>．</p>
<p>これは環境科学分野の Positive Matrix Factorization <span class="citation" data-cites="Paatero-Tapper1994">(Paatero and Tapper, 1994)</span> や信号処理分野の Nonnegative Matrix Factorization (NMF) <span class="citation" data-cites="Lee-Seung1999">(Lee and Seung, 1999)</span> の，確率論的な一般化と見れる <span class="citation" data-cites="Buntine-Jakulin2006">(Buntine and Jakulin, 2006)</span>．</p>
</section>
<section id="dirichlet-分布" class="level4" data-number="2.5.2">
<h4 data-number="2.5.2" class="anchored" data-anchor-id="dirichlet-分布"><span class="header-section-number">2.5.2</span> Dirichlet 分布</h4>
<p>また，Dirichlet 事前分布を用いることで，潜在変数 <img src="https://latex.codecogs.com/png.latex?Z%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Er)"> に <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5ErZ%5Ei=1%0A"> が課されるため，「各次元への依存度」のような意味づけが可能になる．これは政治学における空間分析において，「どの立場への傾倒が強いか」を推定することにも用いられる <span class="citation" data-cites="Buntine-Jakulin2006">(Buntine and Jakulin, 2006)</span>．</p>
<p>このモデルは multinomial PCA <span class="citation" data-cites="Buntine-Jakulin2006">(Buntine and Jakulin, 2006)</span> の他に，遺伝学で admixture <span class="citation" data-cites="Pritchard+2000">(Pritchard et al., 2000)</span>，simplex factor analysis <span class="citation" data-cites="Bhattacharya-Dunson2012">(Bhattacharya and Dunson, 2012)</span>, 科学出版で mixed-membership model <span class="citation" data-cites="Erosheva+2004">(Erosheva et al., 2004)</span>，マーケティングで user rating profile model <span class="citation" data-cites="Marlin2003">(Marlin, 2003)</span> など，種々の分野で独立に提案されている．</p>
</section>
</section>
<section id="非線型化" class="level3" data-number="2.6">
<h3 data-number="2.6" class="anchored" data-anchor-id="非線型化"><span class="header-section-number">2.6</span> 非線型化</h3>
<p>FA の一般化の方向性として，正規性の緩和の他に，線型性の緩和があり得る．</p>
<p>MCMC による推論 <span class="citation" data-cites="Hoffman2017">(Hoffman, 2017)</span> をすることも，または指数型分布 <span class="citation" data-cites="Collins+2001">(Collins et al., 2001)</span> への拡張や，VAE による非線型化を通じて変分推論をすることも考えられる．</p>
<p><a href="../../../posts/2024/Kernels/Deep4.html#sec-AE">自己符号化器</a> は，まさに非線型な潜在変数モデルに対する最尤推定を行っており，４層以上のニューラルネットワークを用いることで PCA を非線型化して一般化することができる．<sup>4</sup></p>
<p>また，カーネル法と Gauss 過程により非線型化することもできる <span class="citation" data-cites="Lawrence2005">(Lawrence, 2005)</span>．</p>
</section>
<section id="sec-MixFA" class="level3" data-number="2.7">
<h3 data-number="2.7" class="anchored" data-anchor-id="sec-MixFA"><span class="header-section-number">2.7</span> 混合モデリング</h3>
<p>複数の線型 Gauss 因子分析モデルの重ね合わせとみなす <strong>mixture of factor analysers</strong> <span class="citation" data-cites="Ghahramani-Hinton1996">(Ghahramani and Hinton, 1996)</span> も単純ながら表現が高く，EM アルゴリズムや SGD <span class="citation" data-cites="Ricahrdson-Weiss2018">(Richardson and Weiss, 2018)</span>, <span class="citation" data-cites="Zong+2018">(Zong et al., 2018)</span> によって推定できる．</p>
<p><span class="citation" data-cites="Ricahrdson-Weiss2018">(Richardson and Weiss, 2018)</span> では生成モデルとしての性能も GAN と劣らないこと，VAE や GAN などの生成モデルよりも分布へのフィッティングが良いことを報告している．</p>
<p>さらにこのアプローチはノンパラメトリックベイズ法につながる．この方法では，例えば <span class="citation" data-cites="Paisley-Carin2009">(Paisley and Carin, 2009)</span> では Beta 過程事前分布をおき，Gibbs サンプラーで推論することで，混合数 <img src="https://latex.codecogs.com/png.latex?K"> も同時に自動で決定できる．</p>
</section>
</section>
<section id="sec-SEM" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="sec-SEM"><span class="header-section-number">3</span> 構造方程式モデリング (SEM)</h2>
<section id="はじめに-3" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="はじめに-3"><span class="header-section-number">3.1</span> はじめに</h3>
<p><span class="citation" data-cites="Joreskog1969">(K. G. Jöreskog, 1969)</span> は因子分析モデルを潜在変数モデルとして，事前情報を取り入れるなど柔軟に用いた．</p>
<p>特に，データを（現代でいう）訓練データと検証データに分けて，因子分析により推定された潜在変数間の関数関係を検定するための方法を提案し <span class="citation" data-cites="Joreskog-Lawley1968">(K. G. Jöreskog and Lawley, 1968)</span>，これを <strong>検証的因子分析</strong> (Confirmatory FA) と呼び，それ以前の手法に <strong>探索的因子分析</strong> というレトロニムを与えた．<sup>5</sup></p>
<p>最終的に，潜在変数同士により一般的な関数関係も考慮したものなど多くの潜在変数モデルが，共分散構造に基づいた非線型数値最適化を推論エンジンとして統一的に推定できることに辿り着いた．<sup>6</sup></p>
<p>このことに加えて，潜在変数間の関数関係に適切な仮定をおくことで，因果推論・高次の因子分析・分散分析など従来考慮されなかった新たなタスクにも適用可能であることも了解された <span class="citation" data-cites="Joreskog1978">(Karl G. Jöreskog, 1978)</span>, <span class="citation" data-cites="Bentler1980">(Bentler, 1980)</span>．<sup>7</sup></p>
<p>現代では特徴抽出，生成，表現学習にも用いられていると思うと感慨である．</p>
<p>これを <strong>共分散構造分析</strong> または <strong>構造方程式モデリング</strong> (SEM: Structural Equation Modeling) という．<sup>8</sup> 心理学の文脈では，潜在変数のことを <strong>構成概念</strong> (construct) と呼び，潜在変数間は無関係とした従来の因果分析モデルを <strong>測定方程式</strong> と呼ぶ．<sup>9</sup></p>
</section>
<section id="sec-PLS" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="sec-PLS"><span class="header-section-number">3.2</span> 部分最小自乗モデル (PLS)</h3>
<p>PLS (Partial Least Square) モデル <span class="citation" data-cites="Joreskog-Wold1982">(K. G. Jöreskog and Wold, 1982)</span>, <span class="citation" data-cites="Gustafsson2001">(Gustafsson, 2001)</span> では，次のような潜在変数モデルを用いて，２つの構成概念間の因果関係を評価しようとする <span class="citation" data-cites="豊田秀樹1991">(豊田秀樹, 1991)</span>：</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PLS.svg" class="img-fluid"></p>
<p>なお，パス図において，潜在変数から観測変数に矢印が伸びている場合，これは影響的指標と呼ばれ，観測のモデルと解され，誤差が入ることが想定される <span class="citation" data-cites="豊田秀樹1991">(豊田秀樹, 1991)</span>．<sup>10</sup> 逆の矢印は形成的指標という．</p>
<p>すなわち，PLS では，<img src="https://latex.codecogs.com/png.latex?X%5E1,X%5E2,X%5E3,%5Ccdots"> には，<img src="https://latex.codecogs.com/png.latex?Z%5E1,Z%5E2,%5Ccdots"> とは独立な独自因子が作用していると仮定されている．</p>
<p>このような仮定は，<img src="https://latex.codecogs.com/png.latex?Y%5E1,Y%5E2,%5Ccdots"> を被説明変数として，教師あり PCA <span class="citation" data-cites="Yu+2006">(Yu et al., 2006)</span> に有用である．</p>
<p>というのも，被説明変数のうち必ずしも <img src="https://latex.codecogs.com/png.latex?Y%5E1,Y%5E2,%5Ccdots"> に関係する要素が全てとは限らないために，<img src="https://latex.codecogs.com/png.latex?Z%5E1,Z%5E2"> の間で間接的に回帰分析を行いたい場合に自然な設定である <span class="citation" data-cites="Nounou+2002">(Nounou et al., 2002)</span>．</p>
</section>
<section id="構造方程式モデリングの発展" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="構造方程式モデリングの発展"><span class="header-section-number">3.3</span> 構造方程式モデリングの発展</h3>
<p>PLS において，潜在変数から構成概念への矢印が全て影響的であった場合，これは潜在因子の間に関係が仮定されていることを除いて，（探索的）因子分析と等価になる．</p>
<p>一般に，SEM は，潜在変数同士の関数関係も考慮した因子分析モデルだと理解できる．</p>
<p>このようなモデルは，社会学において <strong>多重指標分析</strong> と呼ばれていたモデルに相当し <span class="citation" data-cites="白倉幸男1984">(白倉幸男, 1984)</span> <span class="citation" data-cites="清水和秋1989">(清水和秋, 1989)</span>，経済学において <strong>同時方程式モデル</strong> と呼ばれていたモデルに相当する <span class="citation" data-cites="Bentler1980">(Bentler, 1980)</span>．<sup>11</sup></p>
<p>加えて，心理学・行動計量学においても，多くの既存の多変量解析法（因子分析，パス解析，二段階抽出モデル，潜在構造分析，項目反応モデルな）はいずれも SEM の特殊な形だと解釈できることが自覚された <span class="citation" data-cites="McArdle1984">(McArdle, 1984)</span>, <span class="citation" data-cites="Muthen2002">(Muthén, 2002)</span>．</p>
<p>こうして SEM の名と LISREL プログラムの下で，多くの社会科学分野で使われていたモデルが，形式的にはほとんど等価であるという了解が形成されていった．</p>
<p>このことから，SEM は第二世代の多変量解析 <span class="citation" data-cites="Fornell1985">(Fornell, 1985)</span> とも評される．<sup>12</sup></p>
</section>
<section id="計算統計学という要素" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="計算統計学という要素"><span class="header-section-number">3.4</span> 計算統計学という要素</h3>
<p>構造方程式モデリングが普及した理由の一つとして，計算機統計学の発展とうまく合流した点が見逃せない．</p>
<p>そもそも Jöreskog は，因子分析を研究していた時期 <span class="citation" data-cites="Joreskog1966">(Karl G. Jöreskog, 1966)</span> <span class="citation" data-cites="Joreskog1967a">(K. G. Jöreskog, 1967)</span> から，数値的な解法とコンピュータプログラムの開発にも重点を置いていた．特に，因子分析モデルを，<a href="https://ja.wikipedia.org/wiki/DFP法">DFP 法</a> に基づいて数値的に最尤推定する方法を提案した <span class="citation" data-cites="Joreskog1967a">(K. G. Jöreskog, 1967)</span>．</p>
<p>SEM も，コンピュータプログラム LISREL (LInear Structural RELationships) <span class="citation" data-cites="Joreskog-vanThillo1972">(Jőreskog and Thiilo, 1972)</span> の存在が，広い分野の人口に膾炙した要因として大きい <span class="citation" data-cites="清水和秋1989">(清水和秋, 1989)</span>, <span class="citation" data-cites="Grimm-Yarnold2016">(Grimm and Yarnold, 2016)</span>．</p>
<p>構造方程式モデルがどのように因子分析，因果分析，共分散構造分析を統合し，LISREL プログラムと共に発展していたかは，<span class="citation" data-cites="清水和秋1994">(清水和秋, 1994)</span> に大変わかりやすくまとまっている</p>
</section>
<section id="sec-CCA" class="level3" data-number="3.5">
<h3 data-number="3.5" class="anchored" data-anchor-id="sec-CCA"><span class="header-section-number">3.5</span> 正準相関分析 (CCA)</h3>
<p>正準相関分析 <span class="citation" data-cites="Hotelling36">(Hotelling, 1936)</span> においては，２つの構成概念の間は相関関係で結び，すべての観測は形成的な影響を及ぼすとする（観測誤差は想定しない） <span class="citation" data-cites="豊田秀樹1991">(豊田秀樹, 1991)</span>：</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/CCA.svg" class="img-fluid"></p>
<p>このモデルでは <img src="https://latex.codecogs.com/png.latex?X%5E1,X%5E2,X%5E3"> とその潜在要因 <img src="https://latex.codecogs.com/png.latex?Z%5E1">，<img src="https://latex.codecogs.com/png.latex?X%5E4,X%5E5"> とその潜在要因 <img src="https://latex.codecogs.com/png.latex?Z%5E2"> とを完全に対等に扱い，その間の関係を理解しようとする．</p>
<p>例えばマルチモーダル学習において，<img src="https://latex.codecogs.com/png.latex?X,Y"> が類似したタスクに関するデータという場合に応用がある <span class="citation" data-cites="岩瀬-中山2016">(岩瀬智亮 and 中山英樹, 2016)</span>．また，PLS と共に特徴抽出にも用いられる <span class="citation" data-cites="Sun+2009">(Sun et al., 2009)</span>．</p>
<p>複数の標本に対して同時に実行する主成分分析ともみなせるが，別々に PCA を実行した場合と違い「共通要因」を抽出することに志向がある <span class="citation" data-cites="赤穂昭太郎2013">(赤穂昭太郎, 2013)</span>．</p>
<p>なお，正準相関分析が，このような確率論的解釈ができることは <span class="citation" data-cites="Bach-Jordan2005">(Bach and Jordan, 2005)</span> で自覚されたことである．</p>
<p>この潜在変数モデルとしての観点から，<img src="https://latex.codecogs.com/png.latex?Z%5E3,Z%5E4,%5Ccdots"> がある GCCA (Generalized CCA) <span class="citation" data-cites="Horst1961">(Horst, 1961)</span>，指数分布族の場合 <span class="citation" data-cites="Klami+2010">(Klami et al., 2010)</span>，ニューラルネットワークにより非線型にした DCCA <span class="citation" data-cites="Andrew+2013">(Andrew et al., 2013)</span>，さらに変分推論する場合 <span class="citation" data-cites="Wang+2017">(Wang et al., 2017)</span>, <span class="citation" data-cites="Suzuki+2017">(Suzuki et al., 2017)</span> に拡張されている．</p>
<p>質的データをダミーベクトルに変換して（一般化）正準相関分析を行う，質的データの解析法を <strong>対応分析</strong> (correspondence analysis) または <strong>数量化第III類</strong> ともいう．<sup>13</sup></p>
</section>
</section>
<section id="sec-MM" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="sec-MM"><span class="header-section-number">4</span> 混合モデル (MM)</h2>
<section id="はじめに-4" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="はじめに-4"><span class="header-section-number">4.1</span> はじめに</h3>
<p>混合モデルは，次のようなたいへん基本的な設定であるが，第 2.7 節で見たように，例えば因子分析モデルと組み合わせることで極めて豊かな表現力を持つ．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/MM.svg" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>混合モデルは SEM の別の選択肢としても使える．また，ランダム効果要因を明示的にモデルに組み込む意味で，一般線型モデルの確率論的な拡張と考えることもできる <span class="citation" data-cites="狩野裕2002">(狩野裕, 2002)</span>．<sup>14</sup></p>
</section>
<section id="正規混合モデル-gmm" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="正規混合モデル-gmm"><span class="header-section-number">4.2</span> 正規混合モデル (GMM)</h3>
<p><img src="https://latex.codecogs.com/png.latex?Z%5Cin%5Cmathcal%7BL%7D(%5COmega;%5BK%5D)"> は <img src="https://latex.codecogs.com/png.latex?%0A%5BK%5D=%5C%7B1,%5Ccdots,K%5C%7D%0A"> に値を取る離散確率変数で，確率核 <img src="https://latex.codecogs.com/png.latex?Z%5Cto%20X"> が <img src="https://latex.codecogs.com/png.latex?%0Ap(x%7Cz=k)%5C,dx=%5Cmathrm%7BN%7D_p(%5Cmu_k,%5CSigma_k)%0A"> と表せる場合，<img src="https://latex.codecogs.com/png.latex?X"> に課される仮定を <strong>正規混合モデル</strong> (GMM: Gaussian Mixture Model) という．</p>
<p><img src="https://latex.codecogs.com/png.latex?Z%5Csim%5Cmathrm%7BU%7D(%5BK%5D),%5CSigma_k=I"> の場合，これは <a href="../../../posts/2024/Computation/VI2.html#sec-EM-and-K-means"><img src="https://latex.codecogs.com/png.latex?K">-平均クラスタリングに等価</a> なモデルとなる．</p>
<p>これは SGD により訓練をすることで，生成のタスクにおいても GAN に匹敵する性能も持つ <span class="citation" data-cites="Ricahrdson-Weiss2018">(Richardson and Weiss, 2018)</span>．</p>
<p>また，デノイジングや deblurring, inpainting, super-resolution などの画像逆問題は，巨大な GMM の潜在変数の推定として理解できる <span class="citation" data-cites="Zoran-Weiss2011">(Zoran and Weiss, 2011)</span>, <span class="citation" data-cites="Papyam-Elad2016">(Papyan and Elad, 2016)</span>．</p>
</section>
<section id="正規スケール混合モデル-gsm" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="正規スケール混合モデル-gsm"><span class="header-section-number">4.3</span> 正規スケール混合モデル (GSM)</h3>
<p>Gaussian scale mixture モデルとは， <img src="https://latex.codecogs.com/png.latex?%0Ap(x%7Cz)%5C,dx=%5Cmathrm%7BN%7D_p(0,%5Csigma_0%5E2z)%0A"> で定まる階層モデルである．</p>
<p>このモデルは，<img src="https://latex.codecogs.com/png.latex?Z"> の分布により，種々の（特に裾の重い）分布を表せる：</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?Z%5Csim%5Cmathrm%7BBer%7D(%5Cpi)"> のときを spike and slab 分布という： <img src="https://latex.codecogs.com/png.latex?%0Ap(x)%5C,dx=%5Cpi%5Cmathrm%7BN%7D(0,%5Csigma_0%5E2)+(1-%5Cpi)%5Cdelta_0.%0A"></li>
<li><img src="https://latex.codecogs.com/png.latex?Z%5Csim%5Cmathrm%7BC%7D(1)_+"> のとき，<strong>馬蹄分布</strong> <span class="citation" data-cites="Carvalho+2010">(Carvalho et al., 2010)</span> という．<sup>15</sup></li>
</ol>
</div>
</div>
</div>
</section>
<section id="潜在-dirichlet-配分-lda" class="level3" data-number="4.4">
<h3 data-number="4.4" class="anchored" data-anchor-id="潜在-dirichlet-配分-lda"><span class="header-section-number">4.4</span> 潜在 Dirichlet 配分 (LDA)</h3>
<section id="はじめに-5" class="level4" data-number="4.4.1">
<h4 data-number="4.4.1" class="anchored" data-anchor-id="はじめに-5"><span class="header-section-number">4.4.1</span> はじめに</h4>
<p>文書の埋め込み・数値表現を得るために，単語 <img src="https://latex.codecogs.com/png.latex?i%5Cin%5BM%5D"> が文書 <img src="https://latex.codecogs.com/png.latex?j%5Cin%5BN%5D"> に現れた回数をカウントした行列 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BC%7D%5Cin%20M_%7BMN%7D(%5Cmathbb%7BN%7D)"> を通じた主成分分析が用いることも考えられる．</p>
<p>これを <strong>潜在意味索引</strong> (LSI: Latent Semantic Indexing) <span class="citation" data-cites="Deerwester+1990">(Deerwester et al., 1990)</span> と呼ぶ．得られた低次元埋め込みを文書検索 (document retrieval) などに用いることもできる．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7BC%7D"> の列も単語とし，帯幅 <img src="https://latex.codecogs.com/png.latex?h%3E0"> を決めて，<img src="https://latex.codecogs.com/png.latex?h"> 文字以内に単語 <img src="https://latex.codecogs.com/png.latex?i,j%5Cin%5BM%5D"> が共起した回数を <img src="https://latex.codecogs.com/png.latex?C_%7Bij%7D"> とすると，全く同様の手続きが，単語の埋め込みに応用できる．これを <a href="https://ja.wikipedia.org/wiki/潜在意味解析"><strong>潜在意味解析</strong></a> (LSA: Latent Semantic Analysis) <span class="citation" data-cites="Deerwester+1990">(Deerwester et al., 1990)</span> と呼ぶ．</p>
</section>
<section id="sec-PLSI" class="level4" data-number="4.4.2">
<h4 data-number="4.4.2" class="anchored" data-anchor-id="sec-PLSI"><span class="header-section-number">4.4.2</span> 確率的潜在意味索引 (PLSI)</h4>
<p><span class="citation" data-cites="Hofmann1999">(Hofmann, 1999)</span> による pLSI または aspect model は LSI を確率モデル，特に混合モデルとして解釈し直したものである．</p>
<p>単語数よりも少ない数の <strong>トピック</strong> <img src="https://latex.codecogs.com/png.latex?Z"> というものがあり，これが単語を決めている，というモデルを想定した．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PLSI.svg" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>このモデルを通じて，トピック <img src="https://latex.codecogs.com/png.latex?Z"> の分布（あるいは，現代的には <img src="https://latex.codecogs.com/png.latex?%5CTheta"> の値）を「文書」の特徴量とする，というアイデアである．</p>
</section>
<section id="sec-LDA" class="level4" data-number="4.4.3">
<h4 data-number="4.4.3" class="anchored" data-anchor-id="sec-LDA"><span class="header-section-number">4.4.3</span> Dirichlet 事前分布の追加</h4>
<p>変数 <img src="https://latex.codecogs.com/png.latex?%5CTheta"> に Dirichlet 事前分布を追加し，完全なベイズの見方を提示したのが Latent Dirichlet Allocation <span class="citation" data-cites="Blei+2003">(Blei et al., 2003)</span> である．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5CTheta"> を文書，<img src="https://latex.codecogs.com/png.latex?Z"> トピック，<img src="https://latex.codecogs.com/png.latex?W"> をトピックごとの語彙デッキとする．</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/LDA.svg" class="img-fluid"></p>
<p>最終的に，トピック <img src="https://latex.codecogs.com/png.latex?Z"> とその人の語彙 <img src="https://latex.codecogs.com/png.latex?W"> が合わさって，単語 <img src="https://latex.codecogs.com/png.latex?X"> が観測されるというモデルが考えられている．</p>
</section>
<section id="確率的トピックモデル" class="level4" data-number="4.4.4">
<h4 data-number="4.4.4" class="anchored" data-anchor-id="確率的トピックモデル"><span class="header-section-number">4.4.4</span> 確率的トピックモデル</h4>
<p>自然言語処理において，単語分布のモデリングの潜在変数は <strong>トピック</strong> と呼ばれて，これを確率的にモデリングする手法は PTM (Probabilistic Topic Model) <span class="citation" data-cites="Blei2012">(Blei, 2012)</span> と呼ばれている．</p>
<p>「トピック」は短い文章の中でも激しく移り変わることが知られている <span class="citation" data-cites="Church-Gale1991">(Church and Gale, 1991)</span>．</p>
<p>そのため，LDA では，<img src="https://latex.codecogs.com/png.latex?%5CTheta"> の事前分布と <img src="https://latex.codecogs.com/png.latex?W"> の事前分布は， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BDirichlet%7D(%5Calpha%5Cboldsymbol%7B1%7D),%5Cqquad%5Calpha%3E0,%0A"> という形で，極めて小さい <img src="https://latex.codecogs.com/png.latex?%5Calpha%3E0"> を設定し，特定のトピックがどの文書に現れるかは極めてスパースになるようにモデリングをする．</p>
</section>
<section id="推論" class="level4" data-number="4.4.5">
<h4 data-number="4.4.5" class="anchored" data-anchor-id="推論"><span class="header-section-number">4.4.5</span> 推論</h4>
<p>LDA の推論手法には変分推論 <span class="citation" data-cites="Blei+2003">(Blei et al., 2003)</span> や Gibbs サンプリング <span class="citation" data-cites="Griffith-Steyvers2004">(T. L. Griffiths and Steyvers, 2004)</span>，そしてスペクトルに基づく方法 <span class="citation" data-cites="Arova+2013">(Arora et al., 2013)</span> がある．</p>
<p>トピック数の決定には，尤度を <a href="../../../posts/Surveys/SMCSamplers.html#sec-AIS">焼なまし重点サンプリング</a> で計算する方法 <span class="citation" data-cites="Wallach+2009">(Wallach et al., 2009)</span> の他，ノンパラメトリックベイズ法も用いられる <span class="citation" data-cites="Teh+2006">(Yee Whye Teh and Blei, 2006)</span>．</p>
</section>
<section id="時系列化" class="level4" data-number="4.4.6">
<h4 data-number="4.4.6" class="anchored" data-anchor-id="時系列化"><span class="header-section-number">4.4.6</span> 時系列化</h4>
<p>単語の並びは明らかな方向性があり，対照的なモデリングはこの消息を取り逃がしていると考えられる．</p>
<p>そこで，トピックの移り変わりを捉えるモデルとして dynamic topic model <span class="citation" data-cites="Blei+2006">(Blei and Lafferty, 2006)</span> がある．これは Kalman 平滑化と変分推論を組み合わせている様である．</p>
<p>また単語の時系列構造を捉えるために，LDA に隠れ Markov モデルを組み合わせた LDA-HMM <span class="citation" data-cites="Griffiths+2004">(T. Griffiths et al., 2004)</span> が提案された．TopicRNN <span class="citation" data-cites="Dieng+2017">(Dieng et al., 2017)</span> ではより長距離の相関を捉えるために，<a href="../../../posts/2024/Kernels/Deep.html#sec-RNN2">RNN</a> と組み合わせている．</p>
</section>
</section>
<section id="sec-SSM" class="level3" data-number="4.5">
<h3 data-number="4.5" class="anchored" data-anchor-id="sec-SSM"><span class="header-section-number">4.5</span> 状態空間モデル (SSM)</h3>
<section id="概要-2" class="level4" data-number="4.5.1">
<h4 data-number="4.5.1" class="anchored" data-anchor-id="概要-2"><span class="header-section-number">4.5.1</span> 概要</h4>
<p>状態空間モデル (State Space Model) は，混合モデルの時系列化と捉えられる：</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/SSM.svg" class="img-fluid"></p>
<p>潜在変数 <img src="https://latex.codecogs.com/png.latex?X_t"> が離散的である場合は特に <strong>隠れ Markov モデル</strong> (HMM: Hidden Markov Model) <span class="citation" data-cites="Baum-Petrie1966">(Baum and Petrie, 1966)</span> と呼ばれる．</p>
<p>HMM に関しては早くから EM 様の推定手法 <strong>Baum-Welch アルゴリズム</strong> <span class="citation" data-cites="Baum-Eagon1967">(Baum and Eagon, 1967)</span>, <span class="citation" data-cites="Baum+1970">(Baum et al., 1970)</span> が提案されているが，データサイズが大きい場合は SGD が用いられる．Blocked Gibbs サンプラー <span class="citation" data-cites="Scott2002">(Scott, 2002)</span> や，潜在変数を消去して，周辺尤度に関してスペクトル法／テンソル分解 <span class="citation" data-cites="Hsu+2012">(Hsu et al., 2012)</span>, <span class="citation" data-cites="Anandkumar+2012">(Animashree Anandkumar et al., 2012)</span>, <span class="citation" data-cites="Anandkumar+2015">(Anima Anandkumar et al., 2015)</span>, <span class="citation" data-cites="Obermeyer+2019">(Obermeyer et al., 2019)</span> を実行するなどの代替手法がある．</p>
</section>
<section id="sec-S4" class="level4" data-number="4.5.2">
<h4 data-number="4.5.2" class="anchored" data-anchor-id="sec-S4"><span class="header-section-number">4.5.2</span> 構造的状態系列モデル (S4)</h4>
<p>S4 (Structured State Space Sequence) <span class="citation" data-cites="Gu+2022">(Gu et al., 2022)</span>, <span class="citation" data-cites="Gu+2020">(Gu et al., 2020)</span>, <span class="citation" data-cites="Goel+2022">(Goel et al., 2022)</span> とは，時系列を深層ニューラルネットワークの力でモデリングするために，線型 Gauss で単純な SMM を上下にスタックし深層にしたものである．各層は LSSL (Linear State Space Layer) と呼ばれる．</p>
<p>さらに長距離の依存性に耐えるために，S5 <span class="citation" data-cites="Smith+2023">(Smith et al., 2023)</span> や Mamba <span class="citation" data-cites="Gu-Dao2024">(Gu and Dao, 2024)</span> が提案されている．後者では，選択的に記憶を忘却できるような「選択」機構 (S6: Selective SSM) を導入している．</p>
</section>
</section>
</section>
<section id="sec-ICA" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="sec-ICA"><span class="header-section-number">5</span> 独立成分分析 (ICA)</h2>
<section id="はじめに-6" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="はじめに-6"><span class="header-section-number">5.1</span> はじめに</h3>
<p>（線型）独立成分分析で用いるモデルは，PCA や FA のそれと全く変わらず，線型変換 <img src="https://latex.codecogs.com/png.latex?x_n=Az_n"> でデータを説明しようとする：</p>
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/ICA.svg" class="img-fluid"></p>
<p>ただし，潜在変数 <img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> は互いに <strong>独立</strong> であるという「真の構造」が強く想定される場合に使われる．</p>
<p>加えて，モデルの <strong>識別可能性</strong> を重視する．このために，（独立）因子分析（第 2.5 節）で考えたように，正規分布より裾の重い事前分布を導入することで，モデルの識別可能性を確約する．<sup>16</sup></p>
<p>この意味で，確率モデルとしては PCA / FA に等価であるが，典型的な ICA の文脈では <img src="https://latex.codecogs.com/png.latex?Z%5E1,%5Ccdots,Z%5Er"> は非正規確率変数であり，<img src="https://latex.codecogs.com/png.latex?A"> を生成荷重や混合行列，<img src="https://latex.codecogs.com/png.latex?A%5E%7B-1%7D"> を <strong>認識荷重</strong> (recognition weight) などという．</p>
</section>
<section id="推定手法" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="推定手法"><span class="header-section-number">5.2</span> 推定手法</h3>
<p>最初に <a href="https://ja.wikipedia.org/wiki/ブラインド信号源分離">音源分離</a> について適用された <span class="citation" data-cites="Bell-Sejnowski1995">(Bell and Sejnowski, 1995)</span> では，<img src="https://latex.codecogs.com/png.latex?X"> と <img src="https://latex.codecogs.com/png.latex?Z"> の相互情報量の最大化が目指された．</p>
<p>最尤推定は EM アルゴリズムの他に近似 Newton 法で実行されることもあり，fast ICA <span class="citation" data-cites="Hyvarinen-Oja2000">(Hyvärinen and Oja, 2000)</span> と呼ばれる．</p>
<p>また古典的には，探索的データ解析で考案された <strong>射影追跡</strong> (PP: Projection Pursuit) <span class="citation" data-cites="Friedman-Tukey1974">(Friedman and Tukey, 1974)</span> みたく，学習される <img src="https://latex.codecogs.com/png.latex?Z"> の分布が Gauss からなるべく遠いように学習することも考えられた．</p>
<p>disentangled な表現を学習したい場面では，<img src="https://latex.codecogs.com/png.latex?Z"> の成分同士の相関が最小になるように学習される； <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BKL%7D%5Cleft(%5Coperatorname%7BP%7D%5EZ,%5Cbigotimes_%7Bj=1%7D%5Er%5Coperatorname%7BP%7D%5E%7BZ_j%7D%5Cright).%0A"></p>
<p>最小情報コピュラに基づく方法も提案されている <span class="citation" data-cites="Bedford+2016">(Bedford et al., 2016)</span>, <span class="citation" data-cites="Sei-Yano2024">(Sei and Yano, 2024)</span>．</p>
<p>他にも表現学習や認知科学の文脈を踏襲して，<a href="../../../posts/2024/Kernels/NCL.html#sec-InfoMax">InfoMax</a> やスパース符号化などの原則がある．</p>
</section>
<section id="非線型化-1" class="level3" data-number="5.3">
<h3 data-number="5.3" class="anchored" data-anchor-id="非線型化-1"><span class="header-section-number">5.3</span> 非線型化</h3>
<p><a href="../../../posts/2024/Kernels/NCL.html">非線型独立成分分析は，表現学習の文脈でも研究されている</a>．</p>
</section>
</section>
<section id="おわりに" class="level2 unnumbered unlisted">
<h2 class="unnumbered unlisted anchored" data-anchor-id="おわりに">おわりに</h2>
<p>現代の深層生成モデルは，いずれも非線型な潜在変数モデルであると理解できる．</p>
<p>その意味で，次の記事は全て，本稿の続きであり，本稿は現代の機械学習の壮大な序章としても理解できる．</p>
<div id="listing-kernel-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep" data-listing-date-sort="1722178800000" data-listing-file-modified-sort="1723700397341" data-listing-date-modified-sort="1723388400000" data-listing-reading-time-sort="2" data-listing-word-count-sort="385">
<a href="../../../posts/2024/Kernels/NCL.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/contrastive_repr4.jpeg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
表現学習と非線型独立成分分析
</h5>
<div class="card-subtitle listing-subtitle">
「データ理解」に向けた深層潜在変数モデル
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-29
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Nature,Statistics,Geometry" data-listing-date-sort="1722265200000" data-listing-file-modified-sort="1726557394692" data-listing-date-modified-sort="1723647600000" data-listing-reading-time-sort="3" data-listing-word-count-sort="597">
<a href="../../../posts/2024/Kernels/Manifold.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
非線型な次元縮約法の概観
</h5>
<div class="card-subtitle listing-subtitle">
最古にして最難のタスクと多様体学習
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Survey" data-listing-date-sort="1707577200000" data-listing-file-modified-sort="1726556814401" data-listing-date-modified-sort="1722178800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="883">
<a href="../../../posts/2024/Kernels/Deep.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/AE.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
数学者のための深層学習概観
</h5>
<div class="card-subtitle listing-subtitle">
歴史と導入
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-11
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<p>非線形性の他に本稿で扱わなかったものは深層モデルである．</p>
<p>だがそもそも，現代のニューラルネットワークが深層化したのは，単純で可微分なモジュール性を保ちながら表現力を高めるためのトリックであり，確率論的には本稿で扱ったモデルと等価であるはずである．</p>
<p>ニューラルネットワークの他にも，計算のために深層化したモデルを考える場面は多い．例えばアニーリングを用いた <a href="../../../posts/Surveys/SMCSamplers.html">SMC サンプラー</a> は，グラフカルモデル <img src="https://latex.codecogs.com/png.latex?Z%5Cto%20X"> の潜在変数 <img src="https://latex.codecogs.com/png.latex?Z"> の推定を，人工的に時系列構造を見出して状態空間モデル 4.5 にあてはめてサンプリングしやすくする方法と言える．</p>
<p>しかし，<a href="../../../posts/2024/Probability/Kernel.html">確率核は射をなす</a>のだから，全てのモデルは本質的には一層であるとみなすこともできるのである．</p>
<p>この見方をとった方が計算効率が上がるという例もある．例えば <span class="citation" data-cites="Chen+2024">(Chen et al., 2024)</span> では，トランスフォーマーの注意機構をランダム Fourier 特徴写像で近似し，<a href="../../../posts/2024/Kernels/Kernel.html#sec-RFF">Monte Carlo 法によって元のモデルと等価な計算を安価に行っている</a>．</p>
<p><a href="https://puniupa.github.io/posts/2024/AI/BAI.html">ベイズ機械学習</a> や <a href="https://puniupa.github.io/posts/2024/AI/TDL.html">位相的機械学習</a> をはじめとした，丁寧なモデルへの理解が，これからも手法への統一した視点からの理解と，応用分野を横断した相互理解を促進してくれるのではないかと，筆者は意気込んでいる．</p>
</section>




<div id="quarto-appendix" class="default"><section id="扱ったモデル一覧" class="level2 appendix unnumbered"><h2 class="anchored quarto-appendix-heading">扱ったモデル一覧</h2><div class="quarto-appendix-contents">

<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PCA.svg" class="img-fluid figure-img"></p>
<figcaption>PCA</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/FA.svg" class="img-fluid figure-img"></p>
<figcaption>FA</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PLS.svg" class="img-fluid figure-img"></p>
<figcaption>PLS</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/CCA.svg" class="img-fluid figure-img"></p>
<figcaption>CCA</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/PLSI.svg" class="img-fluid figure-img"></p>
<figcaption>PLSI</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/LDA.svg" class="img-fluid figure-img"></p>
<figcaption>LDA</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row quarto-layout-valign-bottom">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/SSM.svg" class="img-fluid figure-img"></p>
<figcaption>SSM</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/ICA.svg" class="img-fluid figure-img"></p>
<figcaption>ICA</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/HierarchicalModels.png" class="img-fluid figure-img"></p>
<figcaption><span class="citation" data-cites="Murphy2023">(Murphy, 2023, p. 920)</span> より，本稿で扱ったモデルのいくつかを含んだ，数式による一覧表．すでに図式による解説を受けた後だと，より見やすいだろう．<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BCat%7D(c%7C%5Cboldsymbol%7B%5Cpi%7D)"> は確率ベクトル <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7B%5Cpi%7D"> が定める質量関数を表す．</figcaption>
</figure>
</div>
</div></section><section id="付録" class="level2 unnumbered appendix"><h2 class="anchored quarto-appendix-heading">付録</h2><div class="quarto-appendix-contents">

<p>ここでは，歴史を感じる引用をいくつか紹介したい．</p>
<blockquote class="blockquote">
<p>心理測定学 (psychometrics) における因子分析，計量経済学 (econometrics) における同時方程式モデル (simultaneous equation models), そして生物測定学 (biometrics) におけるパス解析 (path analysis) を，共分散構造分析の下に統一化することが可能となった契機は，潜在変数 (latent variables) の概念である <span class="citation" data-cites="Bentler1980">(Bentler, 1980)</span>．<span class="citation" data-cites="清水和秋1989">(清水和秋, 1989)</span></p>
</blockquote>
<p>そして，異分野横断の知見交流が進んだ契機の一つは，LISREL プログラムの存在であった．<span class="citation" data-cites="清水和秋1994">(清水和秋, 1994)</span> では，ETS での安定した研究環境が LISREL の継続的な保守を可能にして最終的には WINDOWS 上でも安定して提供され，これを用いることを通じて異分野を巻き込みながら構造方程式モデリングが発展していった様子が詳細に解説されている．LISREL はバージョン VI まである．</p>
<blockquote class="blockquote">
<p>紹介した文献からもわかるように，この分野は最近になってやっと日本では注目されてようになってきた。 このように日本へのこの方法論の導入が遅れた理由の一つはソフト流通の問題にあると筆者は考えている。青木 (1988) や土田 (1988) が述べているように， LISREL は大型計算機の場合， アメリカ産のコンビュータでしかサポートしてくれないとのことである。<span class="citation" data-cites="清水和秋1989">(清水和秋, 1989)</span></p>
</blockquote>
<p>そして現代はというと，計算機統計学と機械学習が先行し（過ぎ）ていると思える．</p>
<p>もしその通りならば，種々の科学への応用とそれぞれ固有の課題への特殊化が，これからの未来を彩ってくれるのかもしれない．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Anandkumar+2015" class="csl-entry">
Anandkumar, Anima, Ge, R., Hsu, D., Kakade, S. M., and Telgarsky, M. (2015). Tensor decompositions for learning latent variable models (a survey for ALT). In K. Chaudhuri, C. GENTILE, and S. Zilles, editors, <em>Algorithmic learning theory</em>, pages 19–38. Cham: Springer International Publishing.
</div>
<div id="ref-Anandkumar+2012" class="csl-entry">
Anandkumar, Animashree, Hsu, D., and Kakade, S. M. (2012). <a href="https://proceedings.mlr.press/v23/anandkumar12.html">A method of moments for mixture models and hidden markov models</a>. In S. Mannor, N. Srebro, and R. C. Williamson, editors, <em>Proceedings of the 25th annual conference on learning theory</em>,Vol. 23, pages 33.1–33.34. Edinburgh, Scotland: PMLR.
</div>
<div id="ref-Anderson-Rubin1956" class="csl-entry">
Anderson, T. W., and Rubin, H. (1956). <a href="https://projecteuclid.org/proceedings/berkeley-symposium-on-mathematical-statistics-and-probability/Proceedings-of-the-Third-Berkeley-Symposium-on-Mathematical-Statistics-and/Chapter/Statistical-Inference-in-Factor-Analysis/bsmsp/1200511860">Statistical inference in factor analysis</a>. In <em>Proceedings of the thrid berkeley symposium on mathematical statistics and probability</em>,Vol. 5, pages 111–150.
</div>
<div id="ref-Andrew+2013" class="csl-entry">
Andrew, G., Arora, R., Bilmes, J., and Livescu, K. (2013). <a href="https://proceedings.mlr.press/v28/andrew13.html">Deep canonical correlation analysis</a>. In S. Dasgupta and D. McAllester, editors, <em>Proceedings of the 30th international conference on machine learning</em>,Vol. 28, pages 1247–1255. Atlanta, Georgia, USA: PMLR.
</div>
<div id="ref-Archambeau-Bach2008" class="csl-entry">
Archambeau, C., and Bach, F. (2008). <a href="https://proceedings.neurips.cc/paper_files/paper/2008/file/d93ed5b6db83be78efb0d05ae420158e-Paper.pdf">Sparse probabilistic projections</a>. In D. Koller, D. Schuurmans, Y. Bengio, and L. Bottou, editors, <em>Advances in neural information processing systems</em>,Vol. 21. Curran Associates, Inc.
</div>
<div id="ref-Arova+2013" class="csl-entry">
Arora, S., Ge, R., Halpern, Y., Mimno, D., Moitra, A., Sontag, D., … Zhu, M. (2013). <a href="https://proceedings.mlr.press/v28/arora13.html">A practical algorithm for topic modeling with provable guarantees</a>. In S. Dasgupta and D. McAllester, editors, <em>Proceedings of the 30th international conference on machine learning</em>,Vol. 28, pages 280–288. Atlanta, Georgia, USA: PMLR.
</div>
<div id="ref-Asher83-Causal" class="csl-entry">
Asher, H. B. (1983). <em>Causal modelling</em>,Vol. 3. 和訳は心理学者広瀬弘忠による『因果分析法』（朝倉書店，1980）; SAGE Publications, Inc.
</div>
<div id="ref-Bach-Jordan2005" class="csl-entry">
Bach, F. R., and Jordan, M. I. (2005). <em>A probabilistic interpretation of canonical correlation analysis</em>. University of California, Berkeley. Retrieved from <a href="https://statistics.berkeley.edu/tech-reports/688">https://statistics.berkeley.edu/tech-reports/688</a>
</div>
<div id="ref-Baum-Eagon1967" class="csl-entry">
Baum, L. E., and Eagon, J. A. (1967). An inequality with applications to statistical estimation for probabilistic functions of markov processes and to a model for ecology. <em>Bulletin of the American Mathematical Society</em>, <em>73</em>(3), 360–363.
</div>
<div id="ref-Baum-Petrie1966" class="csl-entry">
Baum, L. E., and Petrie, T. (1966). Statistical inference for probabilistic functions of finite state markov chains. <em>The Annals of Mathematical Statistics</em>, <em>37</em>(6), 1554–1563.
</div>
<div id="ref-Baum+1970" class="csl-entry">
Baum, L. E., Petrie, T., Soules, G., and Weiss, N. (1970). <a href="http://www.jstor.org/stable/2239727">A maximization technique occurring in the statistical analysis of probabilistic functions of markov chains</a>. <em>The Annals of Mathematical Statistics</em>, <em>41</em>(1), 164–171.
</div>
<div id="ref-Bedford+2016" class="csl-entry">
Bedford, T., Daneshkhah, A., and Wilson, K. J. (2016). <a href="https://doi.org/10.1111/risa.12471">Approximate uncertainty modeling in risk analysis with vine copulas</a>. <em>Risk Analysis</em>, <em>36</em>(4), 792–815.
</div>
<div id="ref-Bell-Sejnowski1995" class="csl-entry">
Bell, A. J., and Sejnowski, T. J. (1995). <a href="https://doi.org/10.1162/neco.1995.7.6.1129"><span class="nocase">An Information-Maximization Approach to Blind Separation and Blind Deconvolution</span></a>. <em>Neural Computation</em>, <em>7</em>(6), 1129–1159.
</div>
<div id="ref-Bentler1980" class="csl-entry">
Bentler, P. M. (1980). <a href="https://doi.org/10.1146/annurev.ps.31.020180.002223">Multivariate analysis with latent variables: Causal modeling</a>. <em>Annual Review of Psychology</em>, <em>31</em>(Volume 31, 1980), 419–456. Journal Article.
</div>
<div id="ref-Bernaards-Jennrich2003" class="csl-entry">
Bernaards, C. A., and Jennrich, R. I. (2003). <a href="https://doi.org/10.1007/BF02295613">Orthomax rotation and perfect simple structure</a>. <em>Psychometrika</em>, <em>68</em>(4), 585–588.
</div>
<div id="ref-Bhattacharya-Dunson2012" class="csl-entry">
Bhattacharya, A., and Dunson, D. B. (2012). <a href="https://doi.org/10.1080/01621459.2011.646934">Simplex factor models for multivariate unordered categorical data</a>. <em>Journal of the American Statistical Association</em>, <em>107</em>(497), 362–377.
</div>
<div id="ref-Bishop1998" class="csl-entry">
Bishop, C. (1998). <a href="https://proceedings.neurips.cc/paper_files/paper/1998/file/c88d8d0a6097754525e02c2246d8d27f-Paper.pdf">Bayesian PCA</a>. In M. Kearns, S. Solla, and D. Cohn, editors, <em>Advances in neural information processing systems</em>,Vol. 11. MIT Press.
</div>
<div id="ref-Blei2012" class="csl-entry">
Blei, D. M. (2012). <a href="https://doi.org/10.1145/2133806.2133826">Probabilistic topic models</a>. <em>Commun. ACM</em>, <em>55</em>(4), 77–84.
</div>
<div id="ref-Blei+2006" class="csl-entry">
Blei, D. M., and Lafferty, J. D. (2006). <a href="https://doi.org/10.1145/1143844.1143859">Dynamic topic models</a>. In <em>Proceedings of the 23rd international conference on machine learning</em>, pages 113–120. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Blei+2003" class="csl-entry">
Blei, D. M., Ng, A. Y., and Jordan, M. I. (2003). <a href="https://www.jmlr.org/papers/v3/blei03a.html"><span>Latent Dirichlet Allocation</span></a>. <em>Journal of Machine Learning Research</em>, <em>3</em>, 993–1022.
</div>
<div id="ref-Bock-Bargmann1966" class="csl-entry">
Bock, R. D., and Bargmann, R. E. (1966). <a href="https://doi.org/10.1007/BF02289521">Analysis of covariance structures</a>. <em>Psychometrika</em>, <em>31</em>(4), 507–534.
</div>
<div id="ref-Buntine-Jakulin2006" class="csl-entry">
Buntine, W., and Jakulin, A. (2006). Discrete component analysis. In C. Saunders, M. Grobelnik, S. Gunn, and J. Shawe-Taylor, editors, <em>Subspace, latent structure and feature selection</em>, pages 1–33. Berlin, Heidelberg: Springer Berlin Heidelberg.
</div>
<div id="ref-Canny2004" class="csl-entry">
Canny, J. (2004). <a href="https://doi.org/10.1145/1008992.1009016">GaP: A factor model for discrete data</a>. In <em>Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval</em>, pages 122–129. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Carvalho+2010" class="csl-entry">
Carvalho, C. M., Polson, N. G., and Scott, J. G. (2010). <a href="https://doi.org/10.1093/biomet/asq017"><span class="nocase">The horseshoe estimator for sparse signals</span></a>. <em>Biometrika</em>, <em>97</em>(2), 465–480.
</div>
<div id="ref-Chen+2024" class="csl-entry">
Chen, H., Liu, Z., Wang, X., Tian, Y., and Wang, Y. (2024). <a href="https://arxiv.org/abs/2403.19928">DiJiang: Efficient large language models through compact kernelization</a>.
</div>
<div id="ref-Church-Gale1991" class="csl-entry">
Church, K. W., and Gale, W. A. (1991). <a href="https://doi.org/10.1007/BF01889984">Probability scoring for spelling correction</a>. <em>Statistics and Computing</em>, <em>1</em>(2), 93–103.
</div>
<div id="ref-Collins+2001" class="csl-entry">
Collins, M., Dasgupta, S., and Schapire, R. E. (2001). <a href="https://proceedings.neurips.cc/paper_files/paper/2001/file/f410588e48dc83f2822a880a68f78923-Paper.pdf">A generalization of principal components analysis to the exponential family</a>. In T. Dietterich, S. Becker, and Z. Ghahramani, editors, <em>Advances in neural information processing systems</em>,Vol. 14. MIT Press.
</div>
<div id="ref-DeLeeuw04-SimultaneousEstimationOfEFA" class="csl-entry">
De Leeuw, J. (2004). <a href="https://doi.org/10.1007/978-1-4020-1958-6_7">Least squares optimal scaling of partially observed linear systems</a>. In <em>Recent developments on structural equation models</em>. Springer Dordrecht.
</div>
<div id="ref-Deerwester+1990" class="csl-entry">
Deerwester, S., Dumais, S. T., Furnas, G. W., Landauer, T. K., and Harshman, R. (1990). <a href="https://doi.org/10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9">Indexing by latent semantic analysis</a>. <em>Journal of the American Society for Information Science</em>, <em>41</em>(6), 391–407.
</div>
<div id="ref-Dieng+2017" class="csl-entry">
Dieng, A. B., Wang, C., Gao, J., and Paisley, J. (2017). <a href="https://openreview.net/forum?id=rJbbOLcex">Topic<span>RNN</span>: A recurrent neural network with long-range semantic dependency</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Drineas+2016" class="csl-entry">
Drineas, P., and Mahoney, M. W. (2016). <a href="https://doi.org/10.1145/2842602">RandNLA: Randomized numerical linear algebra</a>. <em>Commun. ACM</em>, <em>59</em>(6), 80–90.
</div>
<div id="ref-Erosheva+2004" class="csl-entry">
Erosheva, E., Fienberg, S., and Lafferty, J. (2004). <a href="https://doi.org/10.1073/pnas.0307760101">Mixed-membership models of scientific publications</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>101</em>(suppl_1), 5220–5227.
</div>
<div id="ref-Fornell1985" class="csl-entry">
Fornell, C. (1985). <em>A second generation of multivariate analysis: Classification of methods and implications for marketing research</em>. Business, Stephen M. Ross School, University of Michigan. Retrieved from <a href="https://hdl.handle.net/2027.42/35621">https://hdl.handle.net/2027.42/35621</a>
</div>
<div id="ref-Friedman-Tukey1974" class="csl-entry">
Friedman, J. H., and Tukey, J. W. (1974). <a href="https://doi.org/10.1109/T-C.1974.224051">A projection pursuit algorithm for exploratory data analysis</a>. <em>IEEE Transactions on Computers</em>, <em>C-23</em>(9), 881–890.
</div>
<div id="ref-Ghahramani-Hinton1996" class="csl-entry">
Ghahramani, Z., and Hinton, G. E. (1996). <em>The EM algorithm for mixtures of factor analyzers</em>. Department of Computer Science, University of Toronto. Retrieved from <a href="https://www.cs.toronto.edu/~hinton/absps/tr96-1.html">https://www.cs.toronto.edu/~hinton/absps/tr96-1.html</a>
</div>
<div id="ref-Ghojogh+2022" class="csl-entry">
Ghojogh, B., Ghodsi, A., Karray, F., and Crowley, M. (2022). <a href="https://arxiv.org/abs/2101.00734">Factor analysis, probabilistic principal component analysis, variational inference, and variational autoencoder: Tutorial and survey</a>.
</div>
<div id="ref-Goel+2022" class="csl-entry">
Goel, K., Gu, A., Donahue, C., and Re, C. (2022). <a href="https://proceedings.mlr.press/v162/goel22a.html">It’s raw! <span>A</span>udio generation with state-space models</a>. In K. Chaudhuri, S. Jegelka, L. Song, C. Szepesvari, G. Niu, and S. Sabato, editors, <em>Proceedings of the 39th international conference on machine learning</em>,Vol. 162, pages 7616–7633. PMLR.
</div>
<div id="ref-Griffith-Steyvers2004" class="csl-entry">
Griffiths, T. L., and Steyvers, M. (2004). <a href="https://doi.org/10.1073/pnas.0307752101">Finding scientific topics</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>101</em>(suppl_1), 5228–5235.
</div>
<div id="ref-Griffiths+2004" class="csl-entry">
Griffiths, T., Steyvers, M., Blei, D., and Tenenbaum, J. (2004). <a href="https://proceedings.neurips.cc/paper_files/paper/2004/file/ef0917ea498b1665ad6c701057155abe-Paper.pdf">Integrating topics and syntax</a>. In L. Saul, Y. Weiss, and L. Bottou, editors, <em>Advances in neural information processing systems</em>,Vol. 17. MIT Press.
</div>
<div id="ref-Grimm-Yarnold2016" class="csl-entry">
Grimm, L. G., and Yarnold, P. R. (2016). <em>研究論文を読み解くための多変量解析入門 応用篇</em>. Reading and Understanding MORE Multivariate Statistics (2020) の翻訳書; 北大路書房.
</div>
<div id="ref-Gu-Dao2024" class="csl-entry">
Gu, A., and Dao, T. (2024). <a href="https://arxiv.org/abs/2312.00752">Mamba: Linear-time sequence modeling with selective state spaces</a>.
</div>
<div id="ref-Gu+2020" class="csl-entry">
Gu, A., Dao, T., Ermon, S., Rudra, A., and Ré, C. (2020). <a href="https://proceedings.neurips.cc/paper_files/paper/2020/file/102f0bb6efb3a6128a3c750dd16729be-Paper.pdf">HiPPO: Recurrent memory with optimal polynomial projections</a>. In H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, <em>Advances in neural information processing systems</em>,Vol. 33, pages 1474–1487. Curran Associates, Inc.
</div>
<div id="ref-Gu+2022" class="csl-entry">
Gu, A., Goel, K., and Re, C. (2022). <a href="https://openreview.net/forum?id=uYLFoz1vlAC">Efficiently modeling long sequences with structured state spaces</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Gustafsson2001" class="csl-entry">
Gustafsson, M. G. (2001). <a href="https://doi.org/10.1021/ci0003909">A probabilistic derivation of the partial least-squares algorithm</a>. <em>Journal of Chemical Information and Computer Sciences</em>, <em>41</em>(2), 288–294. doi: 10.1021/ci0003909.
</div>
<div id="ref-Halko+2011" class="csl-entry">
Halko, N., Martinsson, P. G., and Tropp, J. A. (2011). <a href="https://doi.org/10.1137/090771806">Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions</a>. <em>SIAM Review</em>, <em>53</em>(2), 217–288.
</div>
<div id="ref-Harman-Fukuda1966" class="csl-entry">
Harman, H. H., and Fukuda, Y. (1966). <a href="https://doi.org/10.1007/BF02289525">Resolution of the heywood case in the minres solution</a>. <em>Psychometrika</em>, <em>31</em>(4), 563–571.
</div>
<div id="ref-Harman-Jones1966" class="csl-entry">
Harman, H. H., and Jones, W. H. (1966). <a href="https://doi.org/10.1007/BF02289468">Factor analysis by minimizing residuals (minres)</a>. <em>Psychometrika</em>, <em>31</em>(3), 351–368.
</div>
<div id="ref-Hoffman2017" class="csl-entry">
Hoffman, M. D. (2017). <a href="https://proceedings.mlr.press/v70/hoffman17a.html">Learning deep latent <span>G</span>aussian models with <span>M</span>arkov chain <span>M</span>onte <span>C</span>arlo</a>. In D. Precup and Y. W. Teh, editors, <em>Proceedings of the 34th international conference on machine learning</em>,Vol. 70, pages 1510–1519. PMLR.
</div>
<div id="ref-Hofmann1999" class="csl-entry">
Hofmann, T. (1999). <a href="https://doi.org/10.1145/312624.312649">Probabilistic latent semantic indexing</a>. In <em>Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval</em>, pages 50–57. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Horst1961" class="csl-entry">
Horst, P. (1961). <a href="https://doi.org/10.1002/1097-4679(196110)17:4<331::AID-JCLP2270170402>3.0.CO;2-D">Generalized canonical correlations and their applications to experimental data</a>. <em>Journal of Clinical Psychology</em>, <em>17</em>(4), 331–347.
</div>
<div id="ref-Hotelling33-PCA" class="csl-entry">
Hotelling, H. (1933). <a href="https://psycnet.apa.org/doi/10.1037/h0071325">Analysis of a complex of statistical variables into principal components</a>. <em>Journal of Educational Psychology</em>, <em>24</em>(6), 417–441.
</div>
<div id="ref-Hotelling36" class="csl-entry">
Hotelling, H. (1936). <a href="https://www.jstor.org/stable/2333955">Relations between two sets of variates</a>. <em>Biometrika</em>, <em>27</em>(3/4), 321–377.
</div>
<div id="ref-Hsu+2012" class="csl-entry">
Hsu, D., Kakade, S. M., and Zhang, T. (2012). <a href="https://doi.org/10.1016/j.jcss.2011.12.025">A spectral algorithm for learning hidden markov models</a>. <em>Journal of Computer and System Sciences</em>, <em>78</em>(5), 1460–1480.
</div>
<div id="ref-Hyvarinen-Oja2000" class="csl-entry">
Hyvärinen, A., and Oja, E. (2000). <a href="https://doi.org/10.1016/S0893-6080(00)00026-5">Independent component analysis: Algorithms and applications</a>. <em>Neural Networks</em>, <em>13</em>(4), 411–430.
</div>
<div id="ref-Jolliffe+2003" class="csl-entry">
Ian T Jolliffe, N. T. T., and Uddin, M. (2003). <a href="https://doi.org/10.1198/1061860032148">A modified principal component technique based on the LASSO</a>. <em>Journal of Computational and Graphical Statistics</em>, <em>12</em>(3), 531–547.
</div>
<div id="ref-Joreskog1966" class="csl-entry">
Jöreskog, Karl G. (1966). <em>UMLFA: A computer program for unrestricted maximum likelihood factor analysis</em>. ETS. Retrieved from <a href="https://www.ets.org/research/policy_research_reports/publications/report/1966/iazh.html">https://www.ets.org/research/policy_research_reports/publications/report/1966/iazh.html</a>
</div>
<div id="ref-Joreskog1967a" class="csl-entry">
Jöreskog, K. G. (1967). <a href="https://doi.org/10.1007/BF02289658">Some contributions to maximum likelihood factor analysis</a>. <em>Psychometrika</em>, <em>32</em>(4), 443–482.
</div>
<div id="ref-Joreskog1969" class="csl-entry">
Jöreskog, K. G. (1969). <a href="https://doi.org/10.1007/BF02289343">A general approach to confirmatory maximum likelihood factor analysis</a>. <em>Psychometrika</em>, <em>34</em>(2), 183–202.
</div>
<div id="ref-Joreskog70" class="csl-entry">
Jöreskog, Karl Gustav. (1970). <a href="https://www.jstor.org/stable/2334833">A general method for analysis of covariance structures</a>. <em>Biometrika</em>, <em>57</em>(2), 239–251.
</div>
<div id="ref-Joreskog1978" class="csl-entry">
Jöreskog, Karl G. (1978). <a href="https://doi.org/10.1007/BF02293808">Structural analysis of covariance and correlation matrices</a>. <em>Psychometrika</em>, <em>43</em>(4), 443–477.
</div>
<div id="ref-Joreskog-Lawley1968" class="csl-entry">
Jöreskog, K. G., and Lawley, D. N. (1968). <a href="https://doi.org/10.1111/j.2044-8317.1968.tb00399.x">New methods in maximum likelihood factor analysis</a>. <em>British Journal of Mathematical and Statistical Psychology</em>, <em>21</em>(1), 85–96.
</div>
<div id="ref-Joreskog-Wold1982" class="csl-entry">
Jöreskog, K. G., and Wold, H. (1982). Systems under indirect observation: Causality, structure, prediction. In, pages 263–270. North-Holland.
</div>
<div id="ref-Joreskog-vanThillo1972" class="csl-entry">
Jőreskog, K. G., and Thiilo, M. van. (1972). <a href="https://doi.org/10.1002/j.2333-8504.1972.tb00827.x"><span class="nocase">LISREL: A General Computer Program for Estimating a Linear Structural Equation System Involving Multiple Indicators of Unmeasured Variables</span></a>. <em>ETS Research Bulletin Series</em>, <em>1972</em>(2), i–71.
</div>
<div id="ref-Khemakhem+2020" class="csl-entry">
Khemakhem, I., Kingma, D., Monti, R., and Hyvarinen, A. (2020). <a href="https://proceedings.mlr.press/v108/khemakhem20a.html">Variational autoencoders and nonlinear ICA: A unifying framework</a>. In S. Chiappa and R. Calandra, editors, <em>Proceedings of the twenty third international conference on artificial intelligence and statistics</em>,Vol. 108, pages 2207–2217. PMLR.
</div>
<div id="ref-Klami+2010" class="csl-entry">
Klami, A., Virtanen, S., and Kaski, S. (2010). Bayesian exponential family projections for coupled data sources. In <em>Proceedings of the twenty-sixth conference on uncertainty in artificial intelligence</em>, pages 286–293. Arlington, Virginia, USA: AUAI Press.
</div>
<div id="ref-Lawley1942" class="csl-entry">
Lawley, D. N. (1942). <a href="https://doi.org/10.1017/S0080454100006178">XIV.—further investigations in factor estimation</a>. <em>Proceedings of the Royal Society of Edinburgh. Section A. Mathematical and Physical Sciences</em>, <em>61</em>(2), 176–185.
</div>
<div id="ref-Lawrence2005" class="csl-entry">
Lawrence, N. (2005). <a href="http://jmlr.org/papers/v6/lawrence05a.html">Probabilistic non-linear principal component analysis with gaussian process latent variable models</a>. <em>Journal of Machine Learning Research</em>, <em>6</em>(60), 1783–1816.
</div>
<div id="ref-Lee-Seung1999" class="csl-entry">
Lee, D. D., and Seung, H. S. (1999). <a href="https://doi.org/10.1038/44565">Learning the parts of objects by non-negative matrix factorization</a>. <em>Nature</em>, <em>401</em>(6755), 788–791.
</div>
<div id="ref-Marlin2003" class="csl-entry">
Marlin, B. M. (2003). <a href="https://proceedings.neurips.cc/paper_files/paper/2003/file/269d837afada308dd4aeab28ca2d57e4-Paper.pdf">Modeling user rating profiles for collaborative filtering</a>. In S. Thrun, L. Saul, and B. Schölkopf, editors, <em>Advances in neural information processing systems</em>,Vol. 16. MIT Press.
</div>
<div id="ref-McArdle1984" class="csl-entry">
McArdle, J. J. (1984). <a href="https://doi.org/10.1080/00273171.1984.9676927">On the madness in his method: R. B. Cattell’s contributions to structural equation modeling</a>. <em>Multivariate Behavioral Research</em>, <em>19</em>(2-3), 245–267.
</div>
<div id="ref-Murphy2022" class="csl-entry">
Murphy, K. P. (2022). <em><a href="https://probml.github.io/pml-book/book1.html">Probabilistic machine learning: An introduction</a></em>. MIT Press.
</div>
<div id="ref-Murphy2023" class="csl-entry">
Murphy, K. P. (2023). <em><a href="http://probml.github.io/book2">Probabilistic machine learning: Advanced topics</a></em>. MIT Press.
</div>
<div id="ref-Murray+2023" class="csl-entry">
Murray, R., Demmel, J., Mahoney, M. W., Erichson, N. B., Melnichenko, M., Malik, O. A., … Dongarra, J. (2023). <em>Randomized numerical linear algebra: A perspective on the field with an eye to software</em> (No. UCB/EECS-2023-19). Retrieved from <a href="http://www2.eecs.berkeley.edu/Pubs/TechRpts/2023/EECS-2023-19.html">http://www2.eecs.berkeley.edu/Pubs/TechRpts/2023/EECS-2023-19.html</a>
</div>
<div id="ref-Muthen2002" class="csl-entry">
Muthén, B. O. (2002). <a href="https://doi.org/10.2333/bhmk.29.81"><span>Beyond SEM: General Latent Variable Modeling</span></a>. <em>Behaviormetrika</em>, <em>29</em>(1), 81–117.
</div>
<div id="ref-Nounou+2002" class="csl-entry">
Nounou, M. N., Bakshi, B. R., Goel, P. K., and Shen, X. (2002). <a href="https://doi.org/10.1002/aic.690480818">Process modeling by bayesian latent variable regression</a>. <em>AIChE Journal</em>, <em>48</em>(8), 1775–1793.
</div>
<div id="ref-Obermeyer+2019" class="csl-entry">
Obermeyer, F., Bingham, E., Jankowiak, M., Pradhan, N., Chiu, J., Rush, A., and Goodman, N. (2019). <a href="https://proceedings.mlr.press/v97/obermeyer19a.html">Tensor variable elimination for plated factor graphs</a>. In K. Chaudhuri and R. Salakhutdinov, editors, <em>Proceedings of the 36th international conference on machine learning</em>,Vol. 97, pages 4871–4880. PMLR.
</div>
<div id="ref-Paatero-Tapper1994" class="csl-entry">
Paatero, P., and Tapper, U. (1994). <a href="https://doi.org/10.1002/env.3170050203">Positive matrix factorization: A non-negative factor model with optimal utilization of error estimates of data values</a>. <em>Environmetrics</em>, <em>5</em>(2), 111–126.
</div>
<div id="ref-Paisley-Carin2009" class="csl-entry">
Paisley, J., and Carin, L. (2009). <a href="https://doi.org/10.1145/1553374.1553474">Nonparametric factor analysis with beta process priors</a>. In <em>Proceedings of the 26th annual international conference on machine learning</em>, pages 777–784. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Papyam-Elad2016" class="csl-entry">
Papyan, V., and Elad, M. (2016). <a href="https://doi.org/10.1109/TIP.2015.2499698">Multi-scale patch-based image restoration</a>. <em>IEEE Transactions on Image Processing</em>, <em>25</em>(1), 249–261.
</div>
<div id="ref-Pearson01-PCA" class="csl-entry">
Pearson, K. (1901). <a href="https://www.tandfonline.com/doi/abs/10.1080/14786440109462720">On lines and planes of closest fit to systems of points in space</a>. <em>Philosophical Magazine</em>, <em>2</em>(11), 559–572.
</div>
<div id="ref-Perrone2024" class="csl-entry">
Perrone, P. (2024). <a href="https://doi.org/10.1109/TIT.2023.3328825"><span class="nocase">Markov Categories and Entropy</span></a>. <em>IEEE Transactions on Information Theory</em>, <em>70</em>(3), 1671–1692.
</div>
<div id="ref-Pritchard+2000" class="csl-entry">
Pritchard, J. K., Stephens, M., and Donnelly, P. (2000). <a href="https://doi.org/10.1093/genetics/155.2.945"><span class="nocase">Inference of Population Structure Using Multilocus Genotype Data</span></a>. <em>Genetics</em>, <em>155</em>(2), 945–959.
</div>
<div id="ref-Rattray+2009" class="csl-entry">
Rattray, M., Stegle, O., Sharp, K., and Winn, J. (2009). <a href="https://doi.org/10.1088/1742-6596/197/1/012002">Inference algorithms and learning theory for bayesian sparse factor analysis</a>. <em>Journal of Physics: Conference Series</em>, <em>197</em>(1), 012002.
</div>
<div id="ref-Ricahrdson-Weiss2018" class="csl-entry">
Richardson, E., and Weiss, Y. (2018). <a href="https://proceedings.neurips.cc/paper_files/paper/2018/file/0172d289da48c48de8c5ebf3de9f7ee1-Paper.pdf">On GANs and GMMs</a>. In S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 31. Curran Associates, Inc.
</div>
<div id="ref-Roweis1997" class="csl-entry">
Roweis, S. (1997). <a href="https://proceedings.neurips.cc/paper_files/paper/1997/file/d9731321ef4e063ebbee79298fa36f56-Paper.pdf">EM algorithms for PCA and SPCA</a>. In M. Jordan, M. Kearns, and S. Solla, editors, <em>Advances in neural information processing systems</em>,Vol. 10. MIT Press.
</div>
<div id="ref-Rubin-Thayer1982" class="csl-entry">
Rubin, D. B., and Thayer, D. T. (1982). <a href="https://doi.org/10.1007/BF02293851">EM algorithms for ML factor analysis</a>. <em>Psychometrika</em>, <em>47</em>(1), 69–76.
</div>
<div id="ref-Scott2002" class="csl-entry">
Scott, S. L. (2002). <a href="https://doi.org/10.1198/016214502753479464">Bayesian methods for hidden markov models</a>. <em>Journal of the American Statistical Association</em>, <em>97</em>(457), 337–351.
</div>
<div id="ref-Sei-Yano2024" class="csl-entry">
Sei, T., and Yano, K. (2024). <a href="https://doi.org/10.3150/23-BEJ1687"><span class="nocase">Minimum information dependence modeling</span></a>. <em>Bernoulli</em>, <em>30</em>(4), 2623–2643.
</div>
<div id="ref-Herbert-Simon57-ModelsOfMan" class="csl-entry">
Simon, H. (1957). <em>Models of man; social and rational.</em> Wiley.
</div>
<div id="ref-Smith+2023" class="csl-entry">
Smith, J. T. H., Warrington, A., and Linderman, S. (2023). <a href="https://openreview.net/forum?id=Ai8Hw3AXqks">Simplified state space layers for sequence modeling</a>. In <em>The eleventh international conference on learning representations</em>.
</div>
<div id="ref-Socan2003" class="csl-entry">
Socan, G. (2003). <em>The incremental value of rank factor analysis</em> (PhD thesis). Rijksuniversiteit Groningen.
</div>
<div id="ref-Sorbom1974" class="csl-entry">
Sörbom, D. (1974). <a href="https://doi.org/10.1111/j.2044-8317.1974.tb00543.x"><span class="nocase">A General Method for Studying Differences in Factor Means and Factor Structure between Groups</span></a>. <em>British Journal of Mathematical and Statistical Psychology</em>, <em>27</em>(2), 229–239.
</div>
<div id="ref-Spearman1904" class="csl-entry">
Spearman, C. (1904). <a href="https://psycnet.apa.org/doi/10.2307/1412107">’General intelligence,’ objectively determined and measured</a>. <em>The American Journal of Psychology</em>, <em>15</em>(2), 201–293.
</div>
<div id="ref-Sun+2009" class="csl-entry">
Sun, L., Ji, S., Yu, S., and Ye, J. (2009). On the equivalence between canonical correlation analysis and orthonormalized partial least squares. In <em>Proceedings of the 21st international joint conference on artificial intelligence</em>, pages 1230–1235. San Francisco, CA, USA: Morgan Kaufmann Publishers Inc.
</div>
<div id="ref-Suzuki+2017" class="csl-entry">
Suzuki, M., Nakayama, K., and Matsuo, Y. (2017). <a href="https://openreview.net/forum?id=Hk8rlUqge">Joint multimodal learning with deep generative models</a>.
</div>
<div id="ref-Thurstone1947" class="csl-entry">
Thurstone, L. L. (1947). <em><a href="">Multiple factor analysis</a></em>. University of Chicago Press.
</div>
<div id="ref-Tipping-Bishop1999" class="csl-entry">
Tipping, M. E., and Bishop, C. M. (1999). <a href="https://www.jstor.org/stable/2680726">Probabilistic principle component analysis</a>. <em>Journal of the Royal Statistical Society. Series B (Statistical Methodology)</em>, <em>61</em>(3), 611–622.
</div>
<div id="ref-Unkel-Trendafilov2010" class="csl-entry">
Unkel, S., and Trendafilov, N. T. (2010). <a href="https://doi.org/10.1111/j.1751-5823.2010.00120.x">Simultaneous parameter estimation in exploratory factor analysis: An expository review</a>. <em>International Statistical Review</em>, <em>78</em>(3), 363–382.
</div>
<div id="ref-Wallach+2009" class="csl-entry">
Wallach, H. M., Murray, I., Salakhutdinov, R., and Mimno, D. (2009). <a href="https://doi.org/10.1145/1553374.1553515">Evaluation methods for topic models</a>. In <em>Proceedings of the 26th annual international conference on machine learning</em>, pages 1105–1112. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Wang+2017" class="csl-entry">
Wang, W., Yan, X., Lee, H., and Livescu, K. (2017). <a href="https://openreview.net/forum?id=H1Heentlx">Deep variational canonical correlation analysis</a>.
</div>
<div id="ref-Wright1918" class="csl-entry">
Wright, S. (1918). <a href="https://academic.oup.com/genetics/article/3/4/367/5934526">On the nature of size factors</a>. <em>Genetics</em>, <em>3</em>(4), 367.
</div>
<div id="ref-Wright1921" class="csl-entry">
Wright, S. (1921). Correlation and causation. <em>Journal of Agricultural Reserach</em>, <em>20</em>, 557–585.
</div>
<div id="ref-Teh+2006" class="csl-entry">
Yee Whye Teh, M. J. B., Michael I Jordan, and Blei, D. M. (2006). <a href="https://doi.org/10.1198/016214506000000302">Hierarchical dirichlet processes</a>. <em>Journal of the American Statistical Association</em>, <em>101</em>(476), 1566–1581.
</div>
<div id="ref-Yu+2006" class="csl-entry">
Yu, S., Yu, K., Tresp, V., Kriegel, H.-P., and Wu, M. (2006). <a href="https://doi.org/10.1145/1150402.1150454">Supervised probabilistic principal component analysis</a>. In <em>Proceedings of the 12th ACM SIGKDD international conference on knowledge discovery and data mining</em>, pages 464–473. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Zong+2018" class="csl-entry">
Zong, B., Song, Q., Min, M. R., Cheng, W., Lumezanu, C., Cho, D., and Chen, H. (2018). <a href="https://openreview.net/forum?id=BJJLHbb0-">Deep autoencoding gaussian mixture model for unsupervised anomaly detection</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Zoran-Weiss2011" class="csl-entry">
Zoran, D., and Weiss, Y. (2011). <a href="https://doi.org/10.1109/ICCV.2011.6126278">From learning models of natural image patches to whole image restoration</a>. In <em>2011 international conference on computer vision</em>, pages 479–486.
</div>
<div id="ref-Zou-Hastie2005" class="csl-entry">
Zou, H., and Hastie, T. (2005). <a href="https://doi.org/10.1111/j.1467-9868.2005.00503.x"><span class="nocase">Regularization and Variable Selection Via the Elastic Net</span></a>. <em>Journal of the Royal Statistical Society Series B: Statistical Methodology</em>, <em>67</em>(2), 301–320.
</div>
<div id="ref-Zou+2006" class="csl-entry">
Zou, H., Hastie, T., and Tibshirani, R. (2006). <a href="http://www.jstor.org/stable/27594179">Sparse principal component analysis</a>. <em>Journal of Computational and Graphical Statistics</em>, <em>15</em>(2), 265–286.
</div>
<div id="ref-岩瀬-中山2016" class="csl-entry">
岩瀬智亮, and 中山英樹. (2016). <a href="http://id.nii.ac.jp/1001/00162588/">深層一般化正準相関分析</a>. <em>情報処理学会第78回全国大会講演論文集</em>, <em>2016</em>(1), 183–184.
</div>
<div id="ref-星野崇宏+2005" class="csl-entry">
星野崇宏, 岡田謙介, and 前田忠彦. (2005). <a href="https://doi.org/10.2333/jbhmk.32.209">構造方程式モデリングにおける適合度指標とモデル改善について : 展望とシミュレーション研究による新たな知見</a>. <em>行動計量学</em>, <em>32</em>(2), 209–235.
</div>
<div id="ref-江口真透1999" class="csl-entry">
江口真透. (1999). <a href="http://hdl.handle.net/10787/295">概パラメトリック推測 － 柔らかなモデルの構築 －</a>. <em>統計数理</em>, <em>47</em>(1), 29–48.
</div>
<div id="ref-清水和秋1989" class="csl-entry">
清水和秋. (1989). <a href="http://hdl.handle.net/10112/13348">検証的因子分析，LISRELそしてRAMの概要</a>. <em>関西大学社会学部紀要</em>, <em>20</em>(2), 61–86.
</div>
<div id="ref-清水和秋1994" class="csl-entry">
清水和秋. (1994). <a href="http://hdl.handle.net/10112/13345">JöreskogとSörbomによるコンピュータ・プログラムと構造方程式モデル</a>. <em>関西大学社会学部紀要</em>, <em>25</em>(3), 1–41.
</div>
<div id="ref-狩野裕2002" class="csl-entry">
狩野裕. (2002). <a href="https://doi.org/10.2333/jbhmk.29.138">構造方程式モデリングは，因子分析，分散分析，パス解析の すべてにとって代わるのか？</a>. <em>行動計量学</em>, <em>29</em>(2), 138–159.
</div>
<div id="ref-統計科学のフロンティア5" class="csl-entry">
甘利俊一，狩野裕，佐藤俊哉，松山裕，竹内啓，石黒真木夫. (2002). <em><a href="https://www.iwanami.co.jp/book/b260371.html">多変量解析の展開：隠れた構造と因果を推理する</a></em>,Vol. 5. 岩波書店.
</div>
<div id="ref-白倉幸男1984" class="csl-entry">
白倉幸男. (1984). <a href="https://doi.org/10.18910/4301">多重指標線形構造モデルとその応用 : 研究ノート</a>. <em>大阪大学人間科学部紀要</em>, <em>10</em>, 25–45.
</div>
<div id="ref-豊田秀樹1991" class="csl-entry">
豊田秀樹. (1991). <a href="https://doi.org/10.5926/jjep1953.39.4_467">共分散構造分析の下位モデルとその適用例</a>. <em>教育心理学研究</em>, <em>39</em>(4), 467–478.
</div>
<div id="ref-豊田秀樹1992" class="csl-entry">
豊田秀樹. (1992). <em><a href="https://www.utp.or.jp/book/b302422.html">SASによる共分散構造分析</a></em>,Vol. 3. 東京大学出版会.
</div>
<div id="ref-豊田秀樹2007" class="csl-entry">
豊田秀樹. (2007). <em>共分散構造分析［理論編］</em>. 朝倉書店.
</div>
<div id="ref-赤穂昭太郎2013" class="csl-entry">
赤穂昭太郎. (2013). <a href="https://doi.org/10.3902/jnns.20.62">正準相関分析入門</a>. <em>日本神経回路学会誌</em>, <em>20</em>(2), 62–72.
</div>
<div id="ref-足立浩平2023" class="csl-entry">
足立浩平. (2023). 50歳を超えてから始めた因子分析. <em>日本行動計量学会報</em>, <em>177</em>.
</div>
<div id="ref-足立浩平+2019" class="csl-entry">
足立浩平, 伊藤真道, and 宇野光平. (2019). <a href="https://doi.org/10.20551/jscswabun.32.1_61">行列分解に基づく因子分析とその新展開</a>. <em>計算機統計学</em>, <em>32</em>(1), 61–77.
</div>
<div id="ref-足立-山本2024" class="csl-entry">
足立浩平, and 山本倫生. (2024). <em><a href="https://www.kyoritsu-pub.co.jp/book/b10085699.html">主成分分析と因子分析―特異値分解を出発点として―</a></em>. 共立出版.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>図を見やすくするために，<img src="https://latex.codecogs.com/png.latex?X%5E1%5Cto%20X%5E%7Bp-1%7D"> や <img src="https://latex.codecogs.com/png.latex?X%5E2%5Cto%20X%5Ep"> などは省略している．↩︎</p></li>
<li id="fn2"><p><span class="citation" data-cites="足立-山本2024">(足立浩平 and 山本倫生, 2024)</span>, <span class="citation" data-cites="足立浩平2023">(足立浩平, 2023)</span> によると，この行列分解による定式化は Henk A. K. Kiers によるもので，初出は同大学からの博士論文 <span class="citation" data-cites="Socan2003">(Socan, 2003)</span> が最初ではないか，とのこと．この見方を MDFA (Matrix Decomposition Factor Analysis) と呼ぶ．<span class="citation" data-cites="足立浩平+2019">(足立浩平 et al., 2019)</span> も参照．↩︎</p></li>
<li id="fn3"><p>ただし，<span class="citation" data-cites="星野崇宏+2005">(星野崇宏 et al., 2005)</span> は SEM をより一般的とし，共分散構造分析とは観測変数が連続な場合の下位モデルである，と解している．↩︎</p></li>
<li id="fn4"><p><span class="citation" data-cites="江口真透1999">(江口真透, 1999)</span> 第３節に，PCA をニューラルネットワークにより近似的に実行する方法が紹介されている．<span class="citation" data-cites="Ghojogh+2022">(Ghojogh et al., 2022)</span> はサーベイを与えている．↩︎</p></li>
<li id="fn5"><p><span class="citation" data-cites="豊田秀樹1992">(豊田秀樹, 1992)</span> では CFA を確認的因子分析と呼んでいる．<span class="citation" data-cites="豊田秀樹1991">(豊田秀樹, 1991)</span> では，古典テスト理論を確認的因子分析の下位モデルとして紹介している．また，このような因果関係の確認的方法は，社会学における <span class="citation" data-cites="Herbert-Simon57-ModelsOfMan">(Simon, 1957)</span> の基準などが知られていた．↩︎</p></li>
<li id="fn6"><p><span class="citation" data-cites="Joreskog70">(Karl Gustav Jöreskog, 1970)</span> は具体的なモデルを例に取り，彼の検証的因果分析が，パス解析 <span class="citation" data-cites="Wright1918">(Wright, 1918)</span>, <span class="citation" data-cites="Wright1921">(Wright, 1921)</span> のように因果分析に応用できることを示した結果だと言える <span class="citation" data-cites="Asher83-Causal">(Asher, 1983)</span>．この観点から，パス解析は「検証的因果推論」と表現することもできる <span class="citation" data-cites="統計科学のフロンティア5">(甘利俊一，狩野裕，佐藤俊哉，松山裕，竹内啓，石黒真木夫, 2002, p. 73)</span>．↩︎</p></li>
<li id="fn7"><p><span class="citation" data-cites="狩野裕2002">(狩野裕, 2002)</span> は SEM の射程と得意・不得意を分析している．↩︎</p></li>
<li id="fn8"><p>現代ではコンピュータの力により，新たに「生成」「表現学習」というタスクが加わったと思うと，感慨深い．↩︎</p></li>
<li id="fn9"><p><span class="citation" data-cites="清水和秋1989">(清水和秋, 1989)</span>, <span class="citation" data-cites="豊田秀樹1992">(豊田秀樹, 1992)</span>, <span class="citation" data-cites="統計科学のフロンティア5">(甘利俊一，狩野裕，佐藤俊哉，松山裕，竹内啓，石黒真木夫, 2002, p. 82)</span> も参照．↩︎</p></li>
<li id="fn10"><p>また，パス図では観測変数は四角で囲むべきであるが，ここでは省略した．↩︎</p></li>
<li id="fn11"><p>同時方程式は潜在変数を持たない模型で，経済学におけるパス解析の継承と見れる <span class="citation" data-cites="豊田秀樹2007">(豊田秀樹, 2007)</span>．特に Keynes 経済学におけるマクロな経済計画の発想で，<a href="https://ja.wikipedia.org/wiki/コウルズ財団">Cowles 委員会</a> により 1940 年代から 1950 年代にかけて盛んに研究された．↩︎</p></li>
<li id="fn12"><p>多変量解析の高級言語とか形容することもあるという．構造方程式モデリングについては，<span class="citation" data-cites="豊田秀樹1991">(豊田秀樹, 1991)</span>, <span class="citation" data-cites="狩野裕2002">(狩野裕, 2002)</span> も参照．↩︎</p></li>
<li id="fn13"><p>オランダ学派を中心に等質性分析とも呼ぶ．↩︎</p></li>
<li id="fn14"><p>ただし，SEM は共分散構造，混合モデルは平均構造に分析の焦点がある，という志向の違いもある．<span class="citation" data-cites="狩野裕2002">(狩野裕, 2002)</span> も参照．↩︎</p></li>
<li id="fn15"><p><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BC%7D(%5Csigma)_+"> は Cauchy 分布 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BC%7D(0,%5Csigma)"> を <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D_+"> 上に制限したものである．truncated Cauchy または half-Cauchy という．↩︎</p></li>
<li id="fn16"><p><span class="citation" data-cites="Hyvarinen-Oja2000">(Hyvärinen and Oja, 2000)</span> では，<span class="citation" data-cites="Bell-Sejnowski1995">(Bell and Sejnowski, 1995)</span> のように測定誤差を考えない場合を ICA といい，誤差も入る一般の場合を IFA (Independent Factor Analysis) と呼び分けている．<span class="citation" data-cites="統計科学のフロンティア5">(甘利俊一，狩野裕，佐藤俊哉，松山裕，竹内啓，石黒真木夫, 2002, p. 110)</span> も参照．「これを回転の不定性という．因子分析はさまざまな考察によって，この不定性を解消しようとする．独立成分分析は，非正規性を仮定すれば，この不定性が消えることを示したものとも言える」<span class="citation" data-cites="統計科学のフロンティア5">(甘利俊一，狩野裕，佐藤俊哉，松山裕，竹内啓，石黒真木夫, 2002, p. 13)</span>．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Statistics</category>
  <category>Kernel</category>
  <category>Probability</category>
  <category>Bayesian</category>
  <guid>https://162348.github.io/posts/2024/Kernels/HierarchicalModel.html</guid>
  <pubDate>Sun, 11 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Kernels/Images/MM.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>特異値分解</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/FunctionalAnalysis/SVD.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="特異値分解" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="特異値分解"><span class="header-section-number">1</span> 特異値分解</h2>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題（特異値分解）^[[@Eckart-Young1936 p.213 Theorem 1], [@Strang16 p.372] など．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題（特異値分解）<sup>1</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<p>任意の行列 <img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D),r:=%5Coperatorname%7Brank%7D(A)"> について，直交行列 <img src="https://latex.codecogs.com/png.latex?U%5Cin%20O_n(%5Cmathbb%7BR%7D),V%5Cin%20O_p(%5Cmathbb%7BR%7D)"> と非負実数 <img src="https://latex.codecogs.com/png.latex?%5Csigma_1%5Cge%5Ccdots%5Cge%5Csigma_r%3E0"> が存在して，次が成り立つ： <img src="https://latex.codecogs.com/png.latex?%0AA=U%5CSigma%20V%5E%5Ctop,%5Cqquad%5CSigma:=%5Cbegin%7Bbmatrix%7DD&amp;O_%7Br,p-r%7D%5C%5CO_%7Bn-r,r%7D&amp;O_%7Bn-r,p-r%7D%5Cend%7Bbmatrix%7D,%5Cquad%20D:=%5Cmathrm%7Bdiag%7D(%5Csigma_1,%5Ccdots,%5Csigma_r).%0A"> <img src="https://latex.codecogs.com/png.latex?D"> を <strong>特異値行列</strong>，の対角要素を <strong>特異値</strong> と呼ぶ．<sup>2</sup></p>
</div>
</div>
<p><span class="citation" data-cites="Sylvester1889">(Sylvester, 1889)</span> は特異値を正準乗数 (canonical multipliers) と呼んでいた．Sylvester は特異値分解を独立に再発見した一人で，歴史上最初の特異値分解は <span class="citation" data-cites="Beltrami1873">(Beltrami, 1873)</span> が与えたものだとされている．より詳しい歴史については <span class="citation" data-cites="Stewart1993">(Stewart, 1993)</span> 参照．</p>
<div class="callout callout-style-default callout-note no-icon callout-titled" title="証明">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
証明
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<ol type="1">
<li><p>まず <img src="https://latex.codecogs.com/png.latex?v_1,%5Ccdots,v_r%5Cin%5Cmathbb%7BR%7D%5En"> を，<img src="https://latex.codecogs.com/png.latex?A%5E%5Ctop%20A"> の固有ベクトルからなる正規直交系として取る． このとき <img src="https://latex.codecogs.com/png.latex?v_1,%5Ccdots,v_r"> は <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BIm%7D%5C,(A%5E%5Ctop)"> の像の基底である． <img src="https://latex.codecogs.com/png.latex?v_1,%5Ccdots,v_r"> が <img src="https://latex.codecogs.com/png.latex?A%5E%5Ctop%20A"> の固有ベクトルであることが必要であることは， <img src="https://latex.codecogs.com/png.latex?%0AA%5E%5Ctop%20A=(U%5CSigma%20V%5E%5Ctop)%5E%5Ctop(U%5CSigma%20V%5E%5Ctop)=V%5CSigma%5E%5Ctop%20U%5E%5Ctop%20U%5CSigma%20V%5E%5Ctop=V(%5CSigma%5E%5Ctop%5CSigma)V%0A"> となることからわかり，<img src="https://latex.codecogs.com/png.latex?%5Csigma_1%5E2,%5Ccdots,%5Csigma_r%5E2"> が <img src="https://latex.codecogs.com/png.latex?A%5E%5Ctop%20A"> の固有値である． （従って <img src="https://latex.codecogs.com/png.latex?AA%5E%5Ctop"> の固有値でもある）．</p></li>
<li><p>続いて，条件 <img src="https://latex.codecogs.com/png.latex?Av_i=%5Csigma_iu_i%5C;(i%5Cin%5Br%5D)"> によって，<img src="https://latex.codecogs.com/png.latex?u_1,%5Ccdots,u_r"> を定める．するとこれらは直交し， <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BIm%7D%5C,(A)"> の基底をなす．さらに，<img src="https://latex.codecogs.com/png.latex?AA%5E%5Ctop"> の固有ベクトルでもある．</p>
<p>このことは次のように示せる：</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0Au_i%5E%5Ctop%20u_j&amp;=%5Cleft(%5Cfrac%7BAv_i%7D%7B%5Csigma_i%7D%5Cright)%5E%5Ctop%5Cleft(%5Cfrac%7BAv_j%7D%7B%5Csigma_j%7D%5Cright)=%5Cfrac%7Bv_i%5E%5Ctop%20A%5E%5Ctop%20Av_j%7D%7B%5Csigma_i%5Csigma_j%7D=%5Cfrac%7B%5Csigma_j%5E2%7D%7B%5Csigma_i%5Csigma_j%7Dv_i%5E%5Ctop%20v_j=0,%5Cqquad%20i%5Cne%20j.%0A%5Cend%7Balign*%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Clangle%20u_1,%5Ccdots,u_r%5Crangle%5Csubset%5Cmathrm%7BIm%7D%5C,(A)"> であることと，正規直交することから線型独立でもあり，これらが <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BIm%7D%5C,(A)"> の基底であることがわかる． さらに，任意の <img src="https://latex.codecogs.com/png.latex?i%5Cin%5Br%5D"> について， <img src="https://latex.codecogs.com/png.latex?%0AAA%5E%5Ctop%20u_i=%5Cfrac%7BAA%5E%5Ctop%20Au_i%7D%7B%5Csigma_i%7D=%5Csigma_iAv_i=%5Csigma_i%5E2u_i,%5Cqquad%20i%5Cin%5Br%5D.%0A"> なお，<img src="https://latex.codecogs.com/png.latex?Av_i=%5Csigma_iu_i"> が必要であることは，<img src="https://latex.codecogs.com/png.latex?v_1,%5Ccdots,v_r"> の正規直交性から， <img src="https://latex.codecogs.com/png.latex?%0AAv_i=%5Cbiggr(u_1%5Csigma_1v_1%5E%5Ctop+%5Ccdots+u_r%5Csigma_rv_r%5E%5Ctop%5Cbiggl)v_i=u_i%5Csigma_i%0A"> からわかる．</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?v_1,%5Ccdots,v_r"> の正規直交な延長であって，<img src="https://latex.codecogs.com/png.latex?v_%7Br+1%7D,%5Ccdots,v_n"> が <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BKer%7D%5C;(A)"> の基底になるもの，<img src="https://latex.codecogs.com/png.latex?u_1,%5Ccdots,u_r"> の正規直交な延長であって，<img src="https://latex.codecogs.com/png.latex?u_%7Br+1%7D,%5Ccdots,u_m"> が <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BKer%7D%5C;(A%5E%5Ctop)"> の基底になるものが取れる． これは，核と余像，像と余核が直交するためである． これについて，<img src="https://latex.codecogs.com/png.latex?A=U%5CSigma%20V%5E%5Ctop"> が成り立つ．</p></li>
</ol>
</div>
</div>
</div>
<div class="callout callout-style-default callout-warning no-icon callout-titled" title="系">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
系
</div>
</div>
<div class="callout-body-container callout-body">
<p>以上の証明から，次のこともわかる：</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?A"> の特異値は，<img src="https://latex.codecogs.com/png.latex?A%5E%5Ctop%20A"> の固有値の正の平方根に等しい．</li>
<li><img src="https://latex.codecogs.com/png.latex?V"> の列ベクトルは <img src="https://latex.codecogs.com/png.latex?A%5E%5Ctop%20A"> の固有ベクトルであり，<img src="https://latex.codecogs.com/png.latex?U"> の列ベクトルは <img src="https://latex.codecogs.com/png.latex?AA%5E%5Ctop"> の固有ベクトルになる．</li>
</ol>
</div>
</div>
</section>
<section id="低階数近似" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="低階数近似"><span class="header-section-number">2</span> 低階数近似</h2>
<p><img src="https://latex.codecogs.com/png.latex?(n,p)">-行列の全体 <img src="https://latex.codecogs.com/png.latex?M_%7Bn,p%7D(%5Cmathbb%7BC%7D)"> は <a href="../../../static/Notations.html#subsec-linear-space">Hilbert-Schmidt 内積</a> <img src="https://latex.codecogs.com/png.latex?%0A(B%20%5C,%7C%5C,A)_%5Cmathrm%7BHS%7D:=%5Coperatorname%7BTr%7D(A%5E*B)=%5Csum_%7Bi=1%7D%5Em%5Csum_%7Bj=1%7D%5Ena_%7Bij%7Db_%7Bij%7D%0A"> に関して Hilbert 空間をなす．<img src="https://latex.codecogs.com/png.latex?M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> はこの閉部分空間をなす．</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題 [@Eckart-Young1936]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題 <span class="citation" data-cites="Eckart-Young1936">(Eckart and Young, 1936)</span>
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> を行列，<img src="https://latex.codecogs.com/png.latex?0%5Cle%20r%5Cle%20n%5Clor%20p"> を自然数とする．ランク <img src="https://latex.codecogs.com/png.latex?r"> の行列 <img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7BA%7D%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> のうち，<img src="https://latex.codecogs.com/png.latex?A"> に最も近いものは <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidetilde%7BA%7D:=U%5CSigma_%7B1:r%7DV%5E%5Ctop=%5Coperatorname*%7Bargmin%7D_%7B%5Coperatorname%7Brank%7D(%5Cwidetilde%7BA%7D)=r%7D%5C%7CA-%5Cwidetilde%7BA%7D%5C%7C_%5Cmathrm%7BHS%7D%0A"> が与える．ただし，<img src="https://latex.codecogs.com/png.latex?%5CSigma_%7B1:r%7D=%5Cmathrm%7Bdiag%7D(%5Csigma_1,%5Ccdots,%5Csigma_r,0,%5Ccdots,0)"> とした．</p>
</div>
</div>
<p>またこのときの残差は，残った特異値のうち最大のもの <img src="https://latex.codecogs.com/png.latex?%0A%5C%7CA-%5Cwidetilde%7BA%7D%5C%7C_%5Cmathrm%7BHS%7D=%5Csigma_%7Br+1%7D%0A"> が与える．<sup>3</sup></p>
</section>
<section id="一般化逆行列" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="一般化逆行列"><span class="header-section-number">3</span> 一般化逆行列</h2>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題 [@Moore1920]-[@Penrose1955]^[[@柳井-竹内-一般逆行列] も参照．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題 <span class="citation" data-cites="Moore1920">(Moore, 1920)</span>-<span class="citation" data-cites="Penrose1955">(Penrose, 1955)</span><sup>4</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_%7Bmn%7D(%5Cmathbb%7BR%7D)"> について，次の３条件を満たす行列 <img src="https://latex.codecogs.com/png.latex?A%5E+%5Cin%20M_%7Bnm%7D(%5Cmathbb%7BR%7D)"> は一意的に定まる：</p>
<ol type="a">
<li>反射型一般可逆行列：<img src="https://latex.codecogs.com/png.latex?AA%5E+A=A,A%5E+AA%5E+=A%5E+"></li>
<li>最小ノルム型：<img src="https://latex.codecogs.com/png.latex?A%5E+A"> は自己共役である：<img src="https://latex.codecogs.com/png.latex?(A%5E+A)%5E%5Ctop=A%5E+A"></li>
<li>最小誤差型：<img src="https://latex.codecogs.com/png.latex?AA%5E+"> も自己共役である：<img src="https://latex.codecogs.com/png.latex?(AA%5E+)%5E%5Ctop=AA%5E+"></li>
</ol>
<p>これを <strong>Moore-Penrose の一般化逆行列</strong> という．</p>
</div>
</div>
<p>任意の行列 <img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> の一般化逆行列は，直交行列 <img src="https://latex.codecogs.com/png.latex?V,U"> で座標変換を施したところで逆行列を取り，これを再び <img src="https://latex.codecogs.com/png.latex?V,U"> で変換し直したものに等しい：</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題（一般化逆の特徴付け）^[[@柳井-竹内-一般逆行列 定理5.6], [@Strang16 p.395] も参照．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題（一般化逆の特徴付け）<sup>5</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?A%5Cin%20M_%7Bn,p%7D(%5Cmathbb%7BR%7D)"> の一般化逆行列は次のように表せる： <img src="https://latex.codecogs.com/png.latex?%0AA%5E+=V%5CSigma%5E%7B-1%7DU%5E%5Ctop,%5Cqquad%20%5CSigma%5E%7B-1%7D=%5Cbegin%7Bbmatrix%7DD%5E%7B-1%7D&amp;O_%7Br,p-r%7D%5C%5CO_%7Bn-r,r%7D&amp;O_%7Bn-r,p-r%7D%5Cend%7Bbmatrix%7D.%0A"></p>
</div>
</div>
</section>



<div id="quarto-appendix" class="default"><section id="関連ページ" class="level2 unnumbered unlisted appendix"><h2 class="anchored quarto-appendix-heading">関連ページ</h2><div class="quarto-appendix-contents">

<div id="listing-related-articles-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Statistics,Kernel,Probability,Bayesian" data-listing-date-sort="1723388400000" data-listing-file-modified-sort="1723700397339" data-listing-date-modified-sort="1723561200000" data-listing-reading-time-sort="6" data-listing-word-count-sort="1067">
<a href="../../../posts/2024/Kernels/HierarchicalModel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/MM.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
階層モデル再論
</h5>
<div class="card-subtitle listing-subtitle">
多変量解析から機械学習へ
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-12
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Nature,Statistics,Geometry" data-listing-date-sort="1722265200000" data-listing-file-modified-sort="1723897275473" data-listing-date-modified-sort="1723647600000" data-listing-reading-time-sort="3" data-listing-word-count-sort="583">
<a href="../../../posts/2024/Kernels/Manifold.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
非線型な次元縮約法の概観
</h5>
<div class="card-subtitle listing-subtitle">
最古にして最難のタスクと多様体学習
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Kernel" data-listing-date-sort="1723215600000" data-listing-file-modified-sort="1723700397341" data-listing-date-modified-sort="1723302000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="577">
<a href="../../../posts/2024/Kernels/Kernel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
カーネル法の概観
</h5>
<div class="card-subtitle listing-subtitle">
半正定値カーネルから距離学習まで
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-10
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Beltrami1873" class="csl-entry">
Beltrami, E. (1873). <a href="https://gallica.bnf.fr/ark:/12148/bpt6k99434d/f442">Sulle funzioni bilineari</a>. <em>Giornale Di Matematiche Ad Uso Degli Studenti Delle Universita</em>, <em>11</em>, 98–106.
</div>
<div id="ref-Eckart-Young1936" class="csl-entry">
Eckart, C., and Young, G. (1936). <a href="https://doi.org/10.1007/BF02288367">The approximation of one matrix by another of lower rank</a>. <em>Psychometrika</em>, <em>1</em>(3), 211–218.
</div>
<div id="ref-Moore1920" class="csl-entry">
Moore, E. H. (1920). <a href="https://doi.org/10.1090%2FS0002-9904-1920-03322-7">On the reciprocal of the general algebraic matrix</a>. <em>Bulletin of the American Mathematical Society</em>, <em>26</em>(9), 394–395.
</div>
<div id="ref-Penrose1955" class="csl-entry">
Penrose, R. (1955). <a href="https://doi.org/10.1017/S0305004100030401">A generalized inverse for matrices</a>. <em>Mathematical Proceedings of the Cambridge Philosophical Society</em>, <em>51</em>(3), 406–413.
</div>
<div id="ref-Stewart1993" class="csl-entry">
Stewart, G. W. (1993). <a href="https://doi.org/10.1137/1035134">On the early history of the singular value decomposition</a>. <em>SIAM Review</em>, <em>35</em>(4), 551–566.
</div>
<div id="ref-Strang16" class="csl-entry">
Strang, G. (2016). <em>Introduction to linear algebra</em>. Wellesley-Cambridge Press.
</div>
<div id="ref-Sylvester1889" class="csl-entry">
Sylvester, J. J. (1889). <a href="https://books.google.co.jp/books?id=cxRKAQAAMAAJ&amp;pg=PA1&amp;hl=ja&amp;source=gbs_toc_r&amp;cad=2#v=onepage&amp;q&amp;f=false">On the reduction of a bilinear quantic of the <img src="https://latex.codecogs.com/png.latex?n">-th order to the form of a sum of <img src="https://latex.codecogs.com/png.latex?n"> products by a double orthogonal substitution</a>. <em>The Messenger of Mathematics</em>, <em>18</em>, 42–46.
</div>
<div id="ref-柳井-竹内-一般逆行列" class="csl-entry">
柳井晴夫，竹内啓. (1983). <em>射影行列・一般逆行列・特異値分解</em>,Vol. 10. 2018年に新装版が出版されている; 東京大学出版会.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><span class="citation" data-cites="Eckart-Young1936">(Eckart and Young, 1936, p. 213 Theorem 1)</span>, <span class="citation" data-cites="Strang16">(Strang, 2016, p. 372)</span> など．↩︎</p></li>
<li id="fn2"><p><span class="citation" data-cites="Eckart-Young1936">(Eckart and Young, 1936, p. 214)</span> によると，以前はにより正準乗数 (canonical multipliers) と呼ばれていた．↩︎</p></li>
<li id="fn3"><p><img src="https://latex.codecogs.com/png.latex?r%5Cge%5Coperatorname%7Brank%7D(A)"> であるとき，<img src="https://latex.codecogs.com/png.latex?%5Csigma_%7Br+1%7D=0"> とする．<span class="citation" data-cites="Strang16">(Strang, 2016, p. 394)</span> も参照．↩︎</p></li>
<li id="fn4"><p><span class="citation" data-cites="柳井-竹内-一般逆行列">(柳井晴夫，竹内啓, 1983)</span> も参照．↩︎</p></li>
<li id="fn5"><p><span class="citation" data-cites="柳井-竹内-一般逆行列">(柳井晴夫，竹内啓, 1983, p. 定理5.6)</span>, <span class="citation" data-cites="Strang16">(Strang, 2016, p. 395)</span> も参照．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Functional Analysis</category>
  <guid>https://162348.github.io/posts/2024/FunctionalAnalysis/SVD.html</guid>
  <pubDate>Sun, 11 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/FunctionalAnalysis/Images/SVD.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>カーネル法の概観</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Kernels/Kernel.html</link>
  <description><![CDATA[ 





<section id="関連ページ" class="level2 unnumbered unlisted">
<h2 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h2>
<div id="listing-kernel-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Bayesian,Kernel,Python" data-listing-date-sort="1707577200000" data-listing-file-modified-sort="1723447877082" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="3" data-listing-word-count-sort="592">
<a href="../../../posts/2024/Kernels/GP.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/docs/posts/2024/Kernels/GP_files/figure-html/cell-10-output-1.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
Gauss 過程を用いた統計解析
</h5>
<div class="card-subtitle listing-subtitle">
実践編（回帰と分類）
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-11
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Bayesian,Kernel,Process" data-listing-date-sort="1707577200000" data-listing-file-modified-sort="1723447877083" data-listing-date-modified-sort="1723042800000" data-listing-reading-time-sort="2" data-listing-word-count-sort="216">
<a href="../../../posts/2024/Kernels/GP2.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
Gauss 過程を用いたベイズ推論
</h5>
<div class="card-subtitle listing-subtitle">
理論編
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-11
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Kernel" data-listing-date-sort="1699282800000" data-listing-file-modified-sort="1723700397334" data-listing-date-modified-sort="1710342000000" data-listing-reading-time-sort="2" data-listing-word-count-sort="256">
<a href="../../../posts/2023/KernelMethods/KernelMethods4Mathematicians.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2023/KernelMethods/KernelMethods.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
数学者のためのカーネル法概観
</h5>
<div class="card-subtitle listing-subtitle">
カーネル PCA と SVM を例として
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2023-11-07
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="3" data-categories="Kernel" data-listing-date-sort="1710342000000" data-listing-file-modified-sort="1723447877084" data-listing-date-modified-sort="NaN" data-listing-reading-time-sort="1" data-listing-word-count-sort="48">
<a href="../../../posts/2024/Kernels/Kernel1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<div class="listing-item-img-placeholder card-img-top" style="height: 150px;">&nbsp;</div>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
カーネル法１
</h5>
<div class="card-subtitle listing-subtitle">
カーネル平均埋め込み
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="4" data-categories="Deep,Nature,Statistics,Geometry" data-listing-date-sort="1722265200000" data-listing-file-modified-sort="1726557394692" data-listing-date-modified-sort="1723647600000" data-listing-reading-time-sort="3" data-listing-word-count-sort="597">
<a href="../../../posts/2024/Kernels/Manifold.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
非線型な次元縮約法の概観
</h5>
<div class="card-subtitle listing-subtitle">
最古にして最難のタスクと多様体学習
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="5" data-categories="Deep" data-listing-date-sort="1722178800000" data-listing-file-modified-sort="1723700397341" data-listing-date-modified-sort="1723388400000" data-listing-reading-time-sort="2" data-listing-word-count-sort="385">
<a href="../../../posts/2024/Kernels/NCL.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/contrastive_repr4.jpeg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
表現学習と非線型独立成分分析
</h5>
<div class="card-subtitle listing-subtitle">
「データ理解」に向けた深層潜在変数モデル
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-29
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
</section>
<section id="半正定値カーネル" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 半正定値カーネル</h1>
<section id="はじめに" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h2>
<p>カーネル法は，カーネルの選択と構成が第一歩になる．</p>
<p>例えば <a href="../../../posts/2024/Kernels/GP2.html">Gauss 過程</a> は，平均関数と共分散関数＝正定値カーネルを定めるごとに定まる．従って Gauss 過程回帰などを実行する前には，適切な事前 Gauss 過程を定める半正定値カーネルを選ぶ必要がある．</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="定義（正定値核関数）^[[@Murphy2022 p.565] 17.1節は，半正定値核のことを Mercer 核とも呼んでいる．]">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
定義（正定値核関数）<sup>1</sup>
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>一般に <strong>核</strong> とは，可測関数 <img src="https://latex.codecogs.com/png.latex?E,F"> の間の写像 <img src="https://latex.codecogs.com/png.latex?K:E%5Cto%5Cmathcal%7BS%7D(F)"> をいう．ただし，<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BS%7D(F)"> は <img src="https://latex.codecogs.com/png.latex?F"> 上の符号付き測度全体の集合とする．</p>
<p>特に <img src="https://latex.codecogs.com/png.latex?F"> 上の確率測度の全体 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BP%7D(F)"> に値を取る核を <a href="../../../posts/2024/Probability/Kernel.html"><strong>確率核</strong></a> という．</p>
<p><strong>核（関数）</strong> とは，<img src="https://latex.codecogs.com/png.latex?F"> 上に自然な <img src="https://latex.codecogs.com/png.latex?%5Csigma">-有限測度 <img src="https://latex.codecogs.com/png.latex?%5Cnu%5Cin%5Cmathcal%7BS%7D(F)"> がある際に，次を満たす積分核 <img src="https://latex.codecogs.com/png.latex?k:E%5Ctimes%20F%5Cto%5Cmathbb%7BR%7D"> をいう： <img src="https://latex.codecogs.com/png.latex?%0AK(x,A)=%5Cint_A%20k(x,y)%5C,d%5Cnu(y).%0A"></p>
<p><strong>正定値核</strong> とは，この積分核 <img src="https://latex.codecogs.com/png.latex?k"> であって，さらに半正定値関数でもあるものをいう．</p>
<p>以降，本稿でカーネルと言った場合，積分核となる関数 <img src="https://latex.codecogs.com/png.latex?k:E%5Ctimes%20F%5Cto%5Cmathbb%7BR%7D"> を指す．一般のカーネルについては，<a href="../../../posts/2024/Probability/Kernel.html">確率核の稿</a>を参照．</p>
</div>
</div>
</div>
</section>
<section id="定常カーネル" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="定常カーネル"><span class="header-section-number">1.2</span> 定常カーネル</h2>
<p>距離空間 <img src="https://latex.codecogs.com/png.latex?(T,d)"> 上の Gauss 過程 <img src="https://latex.codecogs.com/png.latex?(X_t)"> が定常的である場合，共分散関数 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BC%7D(s,t):=%5Coperatorname%7BE%7D%5Cbiggl%5B(X_s-%5Coperatorname%7BE%7D%5BX_s%5D)(X_t-%5Coperatorname%7BE%7D%5BX_t%5D)%5Cbiggr%5D,%5Cqquad%20s,t%5Cin%20T%0A"> は距離 <img src="https://latex.codecogs.com/png.latex?d(s,t)"> のみの関数になる．</p>
<p>このような半正定値関数 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BC%7D"> の例を <img src="https://latex.codecogs.com/png.latex?T=%5Cmathbb%7BR%7D%5Ed"> として挙げる．</p>
<section id="poisson-核" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="poisson-核"><span class="header-section-number">1.2.1</span> Poisson 核</h3>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="定義 (Poisson kernel)">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
定義 (Poisson kernel)
</div>
</div>
<div class="callout-body-container callout-body">
<p>（<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> 上の）Poisson 核とは，Cauchy 分布 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BC%7D(0,%5Cell%5E%7B-1%7D)"> の特性関数 <img src="https://latex.codecogs.com/png.latex?%0AK(x,y;%5Cell)=%5Cexp%5Cleft(-%5Cfrac%7B%5C%7Cx-y%5C%7C_1%7D%7B%5Cell%7D%5Cright)%0A"> をいう．</p>
</div>
</div>
</section>
<section id="sec-Gauss-kernel" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="sec-Gauss-kernel"><span class="header-section-number">1.2.2</span> Gauss 核</h3>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="定義 (Gaussian Radial Basis Function kernel / Squared Exponential kernel)^[RBF は [@持橋-大羽2019 p.68]，SE は [@Rasmussen-Williams2006 p.14] の用語．[@Murphy2023] では両方が併記されている．Gaussian kernel とも呼ばれる．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
定義 (Gaussian Radial Basis Function kernel / Squared Exponential kernel)<sup>2</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<p>Gauss 核（動径基底関数カーネルともいう）とは，Gauss 分布 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BN%7D(0,%5Cell%5E%7B-2%7D)"> の特性関数 <img src="https://latex.codecogs.com/png.latex?%0AK(x,y;%5Cell):=%5Cexp%5Cleft(-%5Cfrac%7B%5Clvert%20x-y%5Crvert%5E2%7D%7B2%5Cell%5E2%7D%5Cright)%0A"> をいう．<sup>3</sup></p>
</div>
</div>
<p><a href="https://en.wikipedia.org/wiki/Radial_basis_function">Radial Basis Function</a> とは動径 <img src="https://latex.codecogs.com/png.latex?r=%5Clvert%20x%5Crvert"> の関数であることをいう．RBF カーネルと言ったとき特に Gauss 核を指すことが多いが，これは混乱を招く．<span class="citation" data-cites="Murphy2023">(Murphy, 2023)</span> では Squared Exponential kernel の語が使われているが，ここでは Gauss 核と呼ぶ．</p>
</section>
<section id="sec-ARD-kernel" class="level3" data-number="1.2.3">
<h3 data-number="1.2.3" class="anchored" data-anchor-id="sec-ARD-kernel"><span class="header-section-number">1.2.3</span> 関連度自動決定核 (ARD)</h3>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="定義 (ARD: Autonatic Relevance Determination)^[[@MacKay1994], [@Neal1996 p.16] なども参照．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
定義 (ARD: Autonatic Relevance Determination)<sup>4</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<p>Gauss カーネルの Euclid ノルムを Mahalanobis ノルムに変更したもの <img src="https://latex.codecogs.com/png.latex?%0AK(r;%5CSigma,%5Csigma%5E2)=%5Csigma%5E2%5Cexp%5Cleft(-%5Cfrac%7Br%5E%5Ctop%5CSigma%5E%7B-1%7Dr%7D%7B2%7D%5Cright)%0A"> を関連度自動決定カーネルともいう．</p>
</div>
</div>
<p>そもそも関連度自動決定 <span class="citation" data-cites="MacKay1994">(MacKay, 1994)</span>, <span class="citation" data-cites="Neal1996">(Neal, 1996, p. 16)</span> またはスパースベイズ学習 <span class="citation" data-cites="Tipping2001">(Tipping, 2001)</span> とは，ニューラルネットワークの最初のレイヤーの荷重をスパースにするために分散不定の正規分布を事前分布として導入する，という技法である <span class="citation" data-cites="Loeliger+2016">(Loeliger et al., 2016)</span>．</p>
<p>一般に出力をスパースにするためのフレームワークとしても活用され，ARD 核はその最たる例である．</p>
</section>
<section id="matérn-核" class="level3" data-number="1.2.4">
<h3 data-number="1.2.4" class="anchored" data-anchor-id="matérn-核"><span class="header-section-number">1.2.4</span> Matérn 核</h3>
<p>ARD 核は軟化性能を持つため，見本道は無限回微分可能になってしまう．</p>
<p>これが不適な状況下では，<a href="https://en.wikipedia.org/wiki/Mat%C3%A9rn_covariance_function">Matérn 核</a> <img src="https://latex.codecogs.com/png.latex?%0AK(r;%5Cnu,%5Cell)=%5Cfrac%7B2%5E%7B1-%5Cnu%7D%7D%7B%5CGamma(%5Cnu)%7D%5Cleft(%5Cfrac%7B%5Csqrt%7B2%5Cnu%7Dr%7D%7B%5Cell%7D%5Cright)%5E%5Cnu%20K_%5Cnu%5Cleft(%5Cfrac%7B%5Csqrt%7B2%5Cnu%7Dr%7D%7B%5Cell%7D%5Cright)%0A"> などが用いられることがある．ただし，<img src="https://latex.codecogs.com/png.latex?K_%5Cnu"> は修正 Bessel 関数とする．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cnu"> は滑らか度を決定し，見本道は <img src="https://latex.codecogs.com/png.latex?%5Clfloor%5Cnu%5Crfloor"> 階 <img src="https://latex.codecogs.com/png.latex?L%5E2">-微分可能になる．<img src="https://latex.codecogs.com/png.latex?%5Cnu%5Cto%5Cinfty"> の極限で Gauss 核に収束する．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cnu=1/2"> の場合 <img src="https://latex.codecogs.com/png.latex?%0AK(r;1/2,%5Cell)=%5Cexp%5Cleft(-%5Cfrac%7Br%7D%7B%5Cell%7D%5Cright)%0A"> であり，対応する Gauss 過程は <a href="../../../posts/2024/Process/OU1.html">Ornstein-Uhlenbeck 過程</a> である．</p>
</section>
<section id="定常スペクトル核" class="level3" data-number="1.2.5">
<h3 data-number="1.2.5" class="anchored" data-anchor-id="定常スペクトル核"><span class="header-section-number">1.2.5</span> 定常スペクトル核</h3>
<p>任意の（定常な）正定値関数は，ある関数 <img src="https://latex.codecogs.com/png.latex?p"> に関して <span id="eq-spectral-decomposition"><img src="https://latex.codecogs.com/png.latex?%0AK(r)=%5Cint_%7B%5Cmathbb%7BR%7D%5Ed%7Dp(%5Comega)e%5E%7Bi%5Comega%5E%5Ctop%20r%7D%5C,d%5Comega%0A%5Ctag%7B1%7D"></span> と表せる．この <img src="https://latex.codecogs.com/png.latex?p"> は <strong>スペクトル密度</strong> という．</p>
<p><img src="https://latex.codecogs.com/png.latex?K"> が RBF 核であるとき，<img src="https://latex.codecogs.com/png.latex?p"> もそうなる： <img src="https://latex.codecogs.com/png.latex?%0Ap(%5Comega)=%5Csqrt%7B2%5Cpi%5Cell%5E2%7D%5Cexp%5Cbiggr(-2%5Cpi%5E2%5Comega%5E2%5Cell%5E2%5Cbiggl).%0A"></p>
<p>この対応を用いて，スペクトル密度 <img src="https://latex.codecogs.com/png.latex?p"> をデザインすることで，様々な正定値カーネルを得ることが出来る．</p>
<p>例えば spectral mixture kernel <span class="citation" data-cites="Wilson-Adams2013">(Wilson and Adams, 2013)</span> では，スケール母数と位置母数とについて RBF 核の混合を考えることで，新たな正定値カーネルを構成する．</p>
</section>
</section>
<section id="非定常カーネル" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="非定常カーネル"><span class="header-section-number">1.3</span> 非定常カーネル</h2>
<p>環境統計学などにおいて，空間相関の仕方が時間的に変化していくという設定がよくある．</p>
<p>このような場合は，一般の２変数の半正定値カーネル関数を考えることが有用である．</p>
<section id="多項式核" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="多項式核"><span class="header-section-number">1.3.1</span> 多項式核</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0AK(x,y)=(x%5E%5Ctop%20y+c)%5EM%0A"> は非斉次項 <img src="https://latex.codecogs.com/png.latex?c"> を持つ，<img src="https://latex.codecogs.com/png.latex?M"> 次の多項式核と呼ばれる．</p>
</section>
<section id="gibbs-核" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="gibbs-核"><span class="header-section-number">1.3.2</span> Gibbs 核</h3>
<p>Gibbs 核 <span class="citation" data-cites="Gibbs1997">(Gibbs, 1997)</span> は，ハイパーパラメータ <img src="https://latex.codecogs.com/png.latex?%5Csigma,%5Cell"> を入力に依存するようにした RBF 核である： <img src="https://latex.codecogs.com/png.latex?%0AK(x,y)=%5Csigma(x)%5Csigma(y)%5Csqrt%7B%5Cfrac%7B2%5Cell(x)%5Cell(y)%7D%7B%5Cell(x)%5E2+%5Cell(y)%5E2%7D%7D%5Cexp%5Cleft(-%5Cfrac%7B%5Clvert%20x-y%5Crvert%5E2%7D%7B%5Cell(x)%5E2+%5Cell(y)%5E2%7D%5Cright).%0A"></p>
<p>このようにすることで，<img src="https://latex.codecogs.com/png.latex?%5Csigma,%5Cell"> を別の Gauss 過程でモデリングし，階層モデルを考えることもできる <span class="citation" data-cites="Heinonen+2016">(Heinonen et al., 2016)</span>．</p>
</section>
<section id="スペクトル核-remes2017" class="level3" data-number="1.3.3">
<h3 data-number="1.3.3" class="anchored" data-anchor-id="スペクトル核-remes2017"><span class="header-section-number">1.3.3</span> スペクトル核 <span class="citation" data-cites="Remes+2017">(Remes et al., 2017)</span></h3>
<p>正定値核は Fourier 変換を通じて，スペクトル密度によって指定することもできる（Bochner の定理）．</p>
<p>この手法は，非定常核に対しても <span class="citation" data-cites="Remes+2017">(Remes et al., 2017)</span> が拡張している．</p>
</section>
</section>
<section id="位相空間上の核" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="位相空間上の核"><span class="header-section-number">1.4</span> 位相空間上の核</h2>
<p>文章上の string kernel <span class="citation" data-cites="Lodhi+2002">(Lodhi et al., 2002)</span> やグラフ上の graph kernel <span class="citation" data-cites="Kriege+2020">(Kriege et al., 2020)</span> も考えられている．</p>
<section id="乱歩核" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="乱歩核"><span class="header-section-number">1.4.1</span> 乱歩核</h3>
<p><span class="citation" data-cites="Borgwardt+2006">(Borgwardt et al., 2006)</span> は random walk kernel を提案しており，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> へ埋め込まれるようなものの計算量は <img src="https://latex.codecogs.com/png.latex?O(n%5E3d)"> である．</p>
</section>
</section>
<section id="weisfeiler-lehman-核" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="weisfeiler-lehman-核"><span class="header-section-number">1.5</span> Weisfeiler-Lehman 核</h2>
<p>さらに効率の良いカーネルとして Weisfeiler-Lehman カーネル <span class="citation" data-cites="Shervashidze+2011">(Shervashidze et al., 2011)</span> もある．</p>
</section>
<section id="核の構成" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="核の構成"><span class="header-section-number">1.6</span> 核の構成</h2>
<section id="半正定値核のなす正錐" class="level3" data-number="1.6.1">
<h3 data-number="1.6.1" class="anchored" data-anchor-id="半正定値核のなす正錐"><span class="header-section-number">1.6.1</span> 半正定値核のなす正錐</h3>
<p>半正定値核は <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BMap%7D(T%5E2,%5Cmathbb%7BR%7D)"> 上で閉凸錐をなす．すなわち， <img src="https://latex.codecogs.com/png.latex?%0Ac_1K_1+c_2K_2,%5Cqquad%20c_1,c_2%5Cge0,%0A"> とその各点収束極限は再び半正定値核である．</p>
</section>
<section id="sec-KDE" class="level3" data-number="1.6.2">
<h3 data-number="1.6.2" class="anchored" data-anchor-id="sec-KDE"><span class="header-section-number">1.6.2</span> カーネル密度推定量 (KDE)</h3>
<p>データ <img src="https://latex.codecogs.com/png.latex?%5C%7Bx_n%5C%7D%5Csubset%5Cmathcal%7BX%7D"> と半正定値核 <img src="https://latex.codecogs.com/png.latex?K"> に対して， <img src="https://latex.codecogs.com/png.latex?%0Ap(x%7C%5C%7Bx_n%5C%7D)=%5Cfrac%7B1%7D%7BN%7D%5Csum_%7Bn=1%7D%5ENK_%5Cell(x,x_n)%0A"> は再び半正定値核である．これを <strong>Parzen 窓推定量</strong> または <strong>カーネル密度推定量</strong> という．</p>
<p>これはデータの経験分布と確率核 <img src="https://latex.codecogs.com/png.latex?K"> との畳み込みになっている．<img src="https://latex.codecogs.com/png.latex?K"> として Gauss 核を用いると，これはデータ分布の軟化として使え，<a href="../../../posts/2024/Samplers/EBM.html#sec-RSM">デノイジングスコアマッチング</a>などに応用を持つ．</p>
<p>ただし，<img src="https://latex.codecogs.com/png.latex?%5Cell"> は <strong>幅</strong> (bandwidth) とよばれるハイパーパラメータである．例えば <img src="https://latex.codecogs.com/png.latex?K"> が動径 <img src="https://latex.codecogs.com/png.latex?r"> の関数であるとき， <img src="https://latex.codecogs.com/png.latex?%0AK_%5Cell(r):=%5Cfrac%7B1%7D%7B%5Cell%7DK%5Cleft(%5Cfrac%7Br%7D%7B%5Cell%7D%5Cright)%0A"> などと導入できる．</p>
</section>
<section id="カーネル回帰" class="level3" data-number="1.6.3">
<h3 data-number="1.6.3" class="anchored" data-anchor-id="カーネル回帰"><span class="header-section-number">1.6.3</span> カーネル回帰</h3>
<p>データが <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BD%7D=%5C%7B(x_i,y_i)%5C%7D_%7Bi=1%7D%5En"> という形で与えられ，平均 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BE%7D%5BY%7CX,%5Cmathcal%7BD%7D%5D"> を推定することを考える．</p>
<p>この際，まず結合密度を次の形で推定する： <img src="https://latex.codecogs.com/png.latex?%0Ap(y,x%7C%5Cmathcal%7BD%7D)=%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5EnK_%5Cell(x,x_i)K_%5Cell(y,y_i)%0A"> これを用いると，次のように平均が推定できる： <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5BY%7CX,%5Cmathcal%7BD%7D%5D=%5Cint_%7B%5Cmathcal%7BY%7D%7D%20yp(y%7CX,%5Cmathcal%7BD%7D)%5C,dy=%5Csum_%7Bi=1%7D%5Eny_iw_i(x),%5Cqquad%20w_i(x):=%5Cfrac%7BK_%5Cell(x,x_i)%7D%7B%5Csum_%7Bj=1%7D%5EnK_%5Cell(x,x_j)%7D.%0A"></p>
<p>この手続きを，カーネル回帰 / カーネル平滑化 / <span class="citation" data-cites="Nadaraya1964">(Nadaraya, 1964)</span>-<span class="citation" data-cites="Watson1964">(Watson, 1964)</span> 推定量という．</p>
</section>
<section id="局所線型回帰-llr" class="level3" data-number="1.6.4">
<h3 data-number="1.6.4" class="anchored" data-anchor-id="局所線型回帰-llr"><span class="header-section-number">1.6.4</span> 局所線型回帰 (LLR)</h3>
<p>カーネル回帰では <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BE%7D%5BY%7CX,%5Cmathcal%7BD%7D%5D"> を，<img src="https://latex.codecogs.com/png.latex?%5C%7By_i%5C%7D"> の適切な線型和として予測していた．</p>
<p>代わりに， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmu(x):=%5Cmin_%7B%5Cbeta%7D%5Csum_%7Bi=1%7D%5En%5Cbiggr(y_i-%5Cbeta%5E%5Ctop%5Cphi(x_i)%5Cbiggl)%5E2K_%5Cell(x,x_i)%0A"> によって <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BE%7D%5BY%7CX,%5Cmathcal%7BD%7D%5D"> を予測することを，局所線型回帰 (locally linear regression) または <a href="https://en.wikipedia.org/wiki/Local_regression">LOWESS (Locally Weighted Scatterplot Smoothing)</a> <span class="citation" data-cites="Cleveland1979">(Cleveland, 1979)</span>, <span class="citation" data-cites="Cleveland-Devlin1988">(Cleveland and Devlin, 1988)</span>，または <a href="https://en.wikipedia.org/wiki/Savitzky%E2%80%93Golay_filter">Savitsky-Golay フィルター</a> <span class="citation" data-cites="Savitzky-Golay1964">(Savitzky and Golay, 1964)</span> という．</p>
</section>
<section id="半正定値構成" class="level3" data-number="1.6.5">
<h3 data-number="1.6.5" class="anchored" data-anchor-id="半正定値構成"><span class="header-section-number">1.6.5</span> 半正定値構成</h3>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="命題">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
命題
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?K:T%5E2%5Cto%5Cmathbb%7BC%7D"> を半正定値，<img src="https://latex.codecogs.com/png.latex?f:%5Cmathcal%7BX%7D%5Cto%5Cmathbb%7BC%7D"> を関数とする． <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidetilde%7BK%7D(x,y):=f(x)K(x,y)%5Coverline%7Bf(y)%7D%0A"> は再び半正定値である．</p>
</div>
</div>
</section>
<section id="核の押し出し" class="level3" data-number="1.6.6">
<h3 data-number="1.6.6" class="anchored" data-anchor-id="核の押し出し"><span class="header-section-number">1.6.6</span> 核の押し出し</h3>
<p><img src="https://latex.codecogs.com/png.latex?S%5E1%5Csimeq%5B0,2%5Cpi)"> 上の確率分布は，方向データとして，海洋学における波の方向，気象学における風向のモデリングに応用を持つ．</p>
<p>全射 <img src="https://latex.codecogs.com/png.latex?%5Cpi:%5Cmathbb%7BR%7D%5Ctwoheadrightarrow%20S%5E1"> に従って，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D">-値の Gauss 過程を，方向データ値の Gauss 過程に押し出すことが出来る <span class="citation" data-cites="Jona-Lasinio+2012">(Jona-Lasinio et al., 2012)</span>．</p>
<p>これに伴い，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D">-値の核 <img src="https://latex.codecogs.com/png.latex?K:%5Cmathbb%7BR%7D%5Cto%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D)"> を <img src="https://latex.codecogs.com/png.latex?S%5E1">-値に押し出すこともできる： <img src="https://latex.codecogs.com/png.latex?%0A%5Cpi_*K:%5Cmathbb%7BR%7D%5Cto%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D)%5Cxrightarrow%7B%5Cpi_*%7D%5Cmathcal%7BP%7D(S%5E1).%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cpi"> による Gauss 分布の押し出し <img src="https://latex.codecogs.com/png.latex?%5Cpi_*%5Cmathrm%7BN%7D_1(%5Cmu,%5Csigma%5E2)"> は <a href="https://en.wikipedia.org/wiki/Wrapped_normal_distribution">wrapped normal distribution</a> と呼ばれている．これに対応し，この Gauss 過程は wrapped Gaussian process と呼ばれている <span class="citation" data-cites="Jona-Lasinio+2012">(Jona-Lasinio et al., 2012)</span>．</p>
</section>
</section>
<section id="sec-RFF" class="level2" data-number="1.7">
<h2 data-number="1.7" class="anchored" data-anchor-id="sec-RFF"><span class="header-section-number">1.7</span> 核の Monte Carlo 近似</h2>
<section id="カーネルの近似" class="level3" data-number="1.7.1">
<h3 data-number="1.7.1" class="anchored" data-anchor-id="カーネルの近似"><span class="header-section-number">1.7.1</span> カーネルの近似</h3>
<p>以上，種々のカーネル関数を紹介してきたが，これらはデータに関して効率的に計算される必要がある．</p>
<p>特に潜在空間上での Gram 行列の逆行列または Cholesky 分解を計算する <img src="https://latex.codecogs.com/png.latex?O(n%5E3)"> の複雑性が難点である <span class="citation" data-cites="Liu+2020">(Liu et al., 2020)</span>．</p>
<p>このデータ数 <img src="https://latex.codecogs.com/png.latex?n"> に関してスケールしない点が従来カーネル法の難点とされてきたが，これはランダムなカーネル関数を用いた Monte Carlo 近似によって高速化できる．<img src="https://latex.codecogs.com/png.latex?m"> 個のランダムに選択された基底関数を用いれば，Monte Carlo 誤差を許して計算量は <img src="https://latex.codecogs.com/png.latex?O(nm+m%5E3)"> にまで圧縮できる．</p>
</section>
<section id="random-fourier-features" class="level3" data-number="1.7.2">
<h3 data-number="1.7.2" class="anchored" data-anchor-id="random-fourier-features"><span class="header-section-number">1.7.2</span> Random Fourier Features</h3>
<p>正定値核のスペクトル表現 (1) を通じて，核の値 <img src="https://latex.codecogs.com/png.latex?K(x,y)"> を Monte Carlo 近似をすることが出来る．</p>
<p>例えば <img src="https://latex.codecogs.com/png.latex?K"> が RBF 核であるとき，<img src="https://latex.codecogs.com/png.latex?p"> は正規密度になるから，Gauss 確率変数からのサンプリングを通じてこれを実現できる： <img src="https://latex.codecogs.com/png.latex?%0AK(x,y)%5Capprox%5Cphi(x)%5E%5Ctop%5Cphi(y),%5Cqquad%20%5Cphi(x):=%5Csqrt%7B%5Cfrac%7B1%7D%7BD%7D%7D%5Cbegin%7Bpmatrix%7D%5Csin(Z%5E%5Ctop%20x)%5C%5C%5Ccos(Z%5E%5Ctop%20x)%5Cend%7Bpmatrix%7D,Z=(z_%7Bij%7D),z_%7Bij%7D%5Coverset%7B%5Ctext%7Biid%7D%7D%7B%5Csim%7D%5Cmathrm%7BN%7D(0,%5Csigma%5E%7B-2%7D).%0A"></p>
<p>これは核の値 <img src="https://latex.codecogs.com/png.latex?K(x,y)"> を，逆に（ランダムに定まる）特徴ベクトル <img src="https://latex.codecogs.com/png.latex?%5Cphi(x),%5Cphi(y)"> の値を通じて計算しているため，Random Fourier Features <span class="citation" data-cites="Rahimi-Recht2007">(Rahimi and Recht, 2007)</span>, <span class="citation" data-cites="Sutherland-Schneider2015">(Sutherland and Schneider, 2015)</span>，または Random Kitchen Sinks <span class="citation" data-cites="Rahimi-Recht2008">(Rahimi and Recht, 2008)</span> と呼ばれる．</p>
<p><img src="https://latex.codecogs.com/png.latex?Z"> の行を互いに直交するように取ることで，Monte Carlo 推定の精度が上がる．これを orthogonal random features <span class="citation" data-cites="Yu+2016">(Yu et al., 2016)</span> と呼ぶ．</p>
</section>
</section>
</section>
<section id="sec-metric-learning" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 距離学習</h1>
<section id="はじめに-1" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="はじめに-1"><span class="header-section-number">2.1</span> はじめに</h2>
<p>２つのデータ点 <img src="https://latex.codecogs.com/png.latex?x_1,x_2%5Cin%5Cmathcal%7BX%7D"> に対して，その意味論的な距離 <img src="https://latex.codecogs.com/png.latex?d(x_1,x_2)"> を学習することを考える．</p>
<p>これはある種の表現学習として，分類，クラスタリング，<a href="../../../posts/2024/Kernels/Manifold.html">次元縮約</a> などの事前タスクとしても重要である．顔認識など，computer vision への応用が大きい．</p>
<p>古典的には，<img src="https://latex.codecogs.com/png.latex?K">-近傍分類器と対置させ，これが最大の精度を発揮するような距離を学習することが考えられる</p>
<p>また，ニューラルネットワークにより埋め込み <img src="https://latex.codecogs.com/png.latex?f:%5Cmathcal%7BX%7D%5Chookrightarrow%5Cmathbb%7BR%7D%5Ed"> を構成し，その後 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> 上の Euclid 距離を <img src="https://latex.codecogs.com/png.latex?d"> として用いるとき，これを <strong>深層距離学習</strong> (deep metric learning) という．</p>
<p>深層距離学習では距離学習自体が下流タスクとなっており，その性能が深層埋め込み <img src="https://latex.codecogs.com/png.latex?f"> に依存している．実際，深層距離学習の性能は芳しいと言えないことが知られている <span class="citation" data-cites="Musgrave+2020">(Musgrave et al., 2020)</span>．</p>
</section>
<section id="k-近傍分類" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="k-近傍分類"><span class="header-section-number">2.2</span> <img src="https://latex.codecogs.com/png.latex?K">-近傍分類</h2>
<p>ラベル付きデータ <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BD%7D=%5C%7B(x_i,y_i)%5C%7D%5Csubset%5Cmathcal%7BX%7D%5Ctimes%5BC%5D"> が与えられているとする．</p>
<p><img src="https://latex.codecogs.com/png.latex?K">-近傍分類法は，「<img src="https://latex.codecogs.com/png.latex?x"> の近傍上位 <img src="https://latex.codecogs.com/png.latex?K"> 個のデータに訊いてみる」という方法であり，こうして得る事後確率 <img src="https://latex.codecogs.com/png.latex?%0Ap(y=c%7Cx,%5Cmathcal%7BD%7D)=%5Cfrac%7B1%7D%7BK%7D%5Csum_%7Bi%5Cin%5Cmathcal%7BD%7D_K(x)%7D1_%7B%5Cleft%5C%7By_i=c%5Cright%5C%7D%7D%0A"> から <img src="https://latex.codecogs.com/png.latex?x"> のラベルを予測する．</p>
<p>この事後分布をさらにクラスタリングに用いたものが <a href="../../../posts/2024/Computation/VI.html"><img src="https://latex.codecogs.com/png.latex?K">-平均法</a> <span class="citation" data-cites="MacQueen1967">(MacQueen, 1967)</span>, <span class="citation" data-cites="Lloyd1982">(Lloyd, 1982)</span> である</p>
<p><a href="https://ja.wikipedia.org/wiki/K近傍法"><img src="https://latex.codecogs.com/png.latex?K">-近傍法</a>はそのシンプルな発想に拘らず一致性と，良い収束レートを持つ <span class="citation" data-cites="Chaudhuri-DasGupta2014">(Chaudhuri and Dasgupta, 2014)</span>．</p>
<p>一様カーネル <img src="https://latex.codecogs.com/png.latex?%0AK(r;%5Cell):=%5Cfrac%7B1%7D%7B2%5Cell%7D1_%7B%5B0,%5Cell%5D%7D(r)%0A"> が定める密度推定量を，どの</p>
</section>
<section id="mahalanobis-距離の学習" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="mahalanobis-距離の学習"><span class="header-section-number">2.3</span> Mahalanobis 距離の学習</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad(x_1,x_2;M):=%5Csqrt%7B(x_1-x_2)%5E%5Ctop%20M(x_1-x_2)%7D%0A"> というパラメトリックモデルを過程し，<img src="https://latex.codecogs.com/png.latex?M"> を学習することを考える．</p>
<section id="大マージン最近傍-lmnn-weinberger2005" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="大マージン最近傍-lmnn-weinberger2005"><span class="header-section-number">2.3.1</span> 大マージン最近傍 <span class="citation" data-cites="Weinberger+2005">(LMNN, Kilian Q. Weinberger et al., 2005)</span></h3>
<p>Large margin nearest neighbor (LMNN) <span class="citation" data-cites="Weinberger+2005">(Kilian Q. Weinberger et al., 2005)</span>, <span class="citation" data-cites="Weinberger-Saul2009">(Kilian Q. Weinberger and Saul, 2009)</span> は，<img src="https://latex.codecogs.com/png.latex?K">-近傍分類器による後続タスクが最も精度が良くなるように <img src="https://latex.codecogs.com/png.latex?M"> を学習する方法をいう．</p>
<p>各データ番号 <img src="https://latex.codecogs.com/png.latex?i%5Cin%5Bn%5D"> に対して，これと似ているデータ番号の集合 <img src="https://latex.codecogs.com/png.latex?N_i%5Csubset%5Bn%5D"> が与えられているとする（ラベルが同一であるデータ点など）．これに対して，<img src="https://latex.codecogs.com/png.latex?%5Clambda%5Cin(0,1),m%5Cge0"> をハイパーパラメータとして， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(M):=(1-%5Clambda)%5Cmathcal%7BL%7D%5E-(M)+%5Clambda%5Cmathcal%7BL%7D%5E+(M),%5Cqquad%5Clambda%5Cin(0,1),%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D%5E-(M):=%5Csum_%7Bi=1%7D%5En%5Csum_%7Bj%5Cin%20N_i%7Dd(x_i,x_j;M)%5E2,%5Cquad%5Cmathcal%7BL%7D%5E+(M):=%5Csum_%7Bi=1%7D%5En%5Csum_%7Bj%5Cin%20N_i%7D%5Csum_%7Bk=1%7D%5EN%5Cdelta_%7Bik%7D%5Cbiggr(m+d(x_i,x_j;M)%5E2-d(x_i,x_k;M)%5E2%5Cbiggl)%5E2,%0A"> を最小化するように <img src="https://latex.codecogs.com/png.latex?M"> を学習する．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D"> は凸関数であるため，半正定値計画法が適用できる．また，<img src="https://latex.codecogs.com/png.latex?M:=W%5E%5Ctop%20W"> によりパラメータ変換をして，<img src="https://latex.codecogs.com/png.latex?W"> に関して解くことで，問題の凸性を失う代わりに次元数を削減できる．</p>
</section>
<section id="sec-NCA" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="sec-NCA"><span class="header-section-number">2.3.2</span> 近傍成分分析 <span class="citation" data-cites="Goldberger+2004">(NCA, Goldberger et al., 2004)</span></h3>
<p>近傍成分分析 (NCA: Neighborhood Component Analysis) <span class="citation" data-cites="Goldberger+2004">(Goldberger et al., 2004)</span> では <img src="https://latex.codecogs.com/png.latex?W"> を学習する．</p>
<p>類似度行列 <img src="https://latex.codecogs.com/png.latex?W"> に関して，<a href="../../../posts/2024/Kernels/Manifold.html#sec-SNE">確率的近傍埋め込み</a> でも使うモデル <img src="https://latex.codecogs.com/png.latex?%0Ap_%7Bij%7D%5EW:=%5Cfrac%7B%5Cexp%5Cleft(-%5Clvert%20Wx_i-Wx_j%5Crvert%5E2%5Cright)%7D%7B%5Csum_%7Bk%5Cneq%20i%7D%5Cexp%5Cleft(-%5Clvert%20Wx_i-Wx_k%5Crvert%5E2%5Cright)%7D%0A"> を考える．各 <img src="https://latex.codecogs.com/png.latex?i%5Cin%5Bn%5D"> について，<img src="https://latex.codecogs.com/png.latex?x_i"> 以外のデータから <img src="https://latex.codecogs.com/png.latex?x_j"> のラベルを <img src="https://latex.codecogs.com/png.latex?1">-近傍分類器で正しく予測する確率が最大になるように， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(W):=1-%5Cfrac%7B1%7D%7BN%7DJ(W),%5Cquad%20J(W):=%5Csum_%7Bi=1%7D%5En%5Csum_%7B(i,j)%5Cin%20E%7Dp_%7Bij%7D%5EW%0A"> を最小化するように学習する．ただし，辺の集合 <img src="https://latex.codecogs.com/png.latex?E"> は，ラベルの同じデータを結ぶとした．</p>
</section>
</section>
<section id="sec-deep-metric-learning" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="sec-deep-metric-learning"><span class="header-section-number">2.4</span> 深層距離学習</h2>
<section id="分類に基づく目的関数" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="分類に基づく目的関数"><span class="header-section-number">2.4.1</span> 分類に基づく目的関数</h3>
<p>深層距離学習では目的関数の設定が重要である．</p>
<p>最も初等的には，自己符号化器などで分類問題を解き，その内部表現（よく最後から２層目を用いる）での Euclid 距離を距離関数に用いる方法がある．</p>
<p>しかし，距離の情報を学習するために，分類タスクは弱すぎるようである．</p>
</section>
<section id="者比較に基づく目的関数" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="者比較に基づく目的関数"><span class="header-section-number">2.4.2</span> ２者比較に基づく目的関数</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(%5Ctheta;x_i,x_j):=%5Cdelta_%7By_i,y_j%7Dd(z_i,z_j)%5E2+(1-%5Cdelta_%7By_i,y_j%7D)%5Cbiggr(m-d(z_i,z_j)%5E2%5Cbiggl)_+,%5Cqquad%20z_i=f_%5Ctheta(x_i)%0A"> という損失関数は <strong>対照的損失</strong> (contrastive loss) <span class="citation" data-cites="Chopra+2005">(Chopra et al., 2005)</span> と呼ばれる．</p>
<p>この損失はラベル <img src="https://latex.codecogs.com/png.latex?y_i,y_j"> が同一のデータ <img src="https://latex.codecogs.com/png.latex?x_i,x_j"> の潜在表現の距離を近づけ，ラベルが異なるデータは <img src="https://latex.codecogs.com/png.latex?m"> 以上は話すように埋め込み <img src="https://latex.codecogs.com/png.latex?f_%5Ctheta"> を学習する．</p>
<p>この際に用いるニューラルネットワークは，同時に２つの入力 <img src="https://latex.codecogs.com/png.latex?x_i,x_j"> をとって学習することから，<strong>双子ネットワーク</strong> (Siamese network) とも呼ばれる．</p>
</section>
<section id="sec-triplet-loss" class="level3" data-number="2.4.3">
<h3 data-number="2.4.3" class="anchored" data-anchor-id="sec-triplet-loss"><span class="header-section-number">2.4.3</span> ３者比較に基づく目的関数</h3>
<p>この方法は直ちに三子損失 (triplet loss) <span class="citation" data-cites="Schroff+2015">(Schroff et al., 2015)</span>，<img src="https://latex.codecogs.com/png.latex?n">-ペア損失 (<img src="https://latex.codecogs.com/png.latex?n">-pair loss) <span class="citation" data-cites="Sohn2016">(Sohn, 2016)</span>, <span class="citation" data-cites="Oord+2018">(Oord et al., 2018)</span> に拡張された．</p>
<p>このことにより，<img src="https://latex.codecogs.com/png.latex?x_i,x_j"> の「近さ」のスケールと「遠さ」のスケールが一致し，安定した結果が得られる．</p>
<p>三子損失は，各データ <img src="https://latex.codecogs.com/png.latex?x_i"> に対して，「似ている」ペア <img src="https://latex.codecogs.com/png.latex?x_i%5E+"> と「似ていない」ペア <img src="https://latex.codecogs.com/png.latex?x_i%5E-"> を事前に選び， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(%5Ctheta;x_i,x_i%5E+,x_i%5E-):=%5Cbiggr(d_%5Ctheta(x_i,x_i%5E+)%5E2-d_%5Ctheta(x_i,x_i%5E-)%5E2+m%5Cbiggl)_+,%5Cqquad%20m%5Cin%5Cmathbb%7BR%7D%0A"> と定められる．このとき，<img src="https://latex.codecogs.com/png.latex?x_i"> は参照点 (anchor) と呼ばれる．</p>
<p>この方法は <img src="https://latex.codecogs.com/png.latex?x_i%5E+,x_i%5E-"> を選ばなければいけないが，その分拡張性に優れる．<a href="../../../posts/2024/Kernels/NCL.html">ノイズ対照学習</a> の稿も参照．</p>
<p><img src="https://latex.codecogs.com/png.latex?n">-ペア損失では，負のデータ <img src="https://latex.codecogs.com/png.latex?x_i%5E-"> をさらに増やす．これは <span class="citation" data-cites="Oord+2019">(Oord et al., 2019 Contrastive Predictive Coding)</span> にて，<a href="../../../posts/2024/Kernels/NCL.html#sec-CPC">InfoMax の観点から表現学習に用いられたもの</a>と一致する．</p>
</section>
<section id="者比較の加速" class="level3" data-number="2.4.4">
<h3 data-number="2.4.4" class="anchored" data-anchor-id="者比較の加速"><span class="header-section-number">2.4.4</span> ３者比較の加速</h3>
<p>負の例 <img src="https://latex.codecogs.com/png.latex?x_i%5E-"> を特に情報量が高いもの <span class="citation" data-cites="Faghri+2018">(hard negatives, Faghri et al., 2018)</span> を選ぶことで，学習を加速させることができる．</p>
<p>これは，３者損失を提案した Google の <a href="https://en.wikipedia.org/wiki/FaceNet">FaceNet</a> <span class="citation" data-cites="Schroff+2015">(Schroff et al., 2015)</span> で考えられた戦略である．</p>
<p>クラスラベルが得られる場合，各クラスから代表的なデータを選んでおくことで <img src="https://latex.codecogs.com/png.latex?O(n)"> にまで加速できる <span class="citation" data-cites="Movshovitz-Attias+2017">(Movshovitz-Attias et al., 2017)</span>．この代表点は固定して１つに定める必要はなく，ソフトな形で選べる <span class="citation" data-cites="Qian+2019">(Qian et al., 2019)</span>．</p>
</section>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="終わりに" class="level1 appendix" data-number="3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">3</span> 終わりに</h2><div class="quarto-appendix-contents">

<p>ここで扱った深層距離学習は，現代的には<a href="../../../posts/2024/Kernels/NCL.html">表現学習</a>として更なる発展を見ている．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Borgwardt+2006" class="csl-entry">
Borgwardt, K., Schraudolph, N., and Vishwanathan, S. v. n. (2006). <a href="https://proceedings.neurips.cc/paper_files/paper/2006/file/e37b08dd3015330dcbb5d6663667b8b8-Paper.pdf">Fast computation of graph kernels</a>. In B. Schölkopf, J. Platt, and T. Hoffman, editors, <em>Advances in neural information processing systems</em>,Vol. 19. MIT Press.
</div>
<div id="ref-Chaudhuri-DasGupta2014" class="csl-entry">
Chaudhuri, K., and Dasgupta, S. (2014). <a href="https://proceedings.neurips.cc/paper_files/paper/2014/file/db957c626a8cd7a27231adfbf51e20eb-Paper.pdf">Rates of convergence for nearest neighbor classification</a>. In Z. Ghahramani, M. Welling, C. Cortes, N. Lawrence, and K. Q. Weinberger, editors, <em>Advances in neural information processing systems</em>,Vol. 27. Curran Associates, Inc.
</div>
<div id="ref-Chopra+2005" class="csl-entry">
Chopra, S., Hadsell, R., and LeCun, Y. (2005). <a href="https://doi.org/10.1109/CVPR.2005.202">Learning a similarity metric discriminatively, with application to face verification</a>. <em>2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR’05)</em>, <em>1</em>, 539–546.
</div>
<div id="ref-Cleveland1979" class="csl-entry">
Cleveland, W. S. (1979). <a href="https://doi.org/10.1080/01621459.1979.10481038">Robust locally weighted regression and smoothing scatterplots</a>. <em>Journal of the American Statistical Association</em>, <em>74</em>(368), 829–836.
</div>
<div id="ref-Cleveland-Devlin1988" class="csl-entry">
Cleveland, W. S., and Devlin, S. J. (1988). <a href="https://doi.org/10.1080/01621459.1988.10478639">Locally weighted regression: An approach to regression analysis by local fitting</a>. <em>Journal of the American Statistical Association</em>, <em>83</em>(403), 596–610.
</div>
<div id="ref-Faghri+2018" class="csl-entry">
Faghri, F., Fleet, D. J., Kiros, J. R., and Fidler, S. (2018). <a href="https://arxiv.org/abs/1707.05612">VSE++: Improving visual-semantic embeddings with hard negatives</a>.
</div>
<div id="ref-Gibbs1997" class="csl-entry">
Gibbs, M. N. (1997). <em>Bayesian gaussian process regression and classification</em> (PhD thesis). Cambridge University. Retrieved from <a href="https://citeseerx.ist.psu.edu/document?repid=rep1&amp;type=pdf&amp;doi=b5a0c62c8d7cf51137bfb079947b8393c00ed169">https://citeseerx.ist.psu.edu/document?repid=rep1&amp;type=pdf&amp;doi=b5a0c62c8d7cf51137bfb079947b8393c00ed169</a>
</div>
<div id="ref-Goldberger+2004" class="csl-entry">
Goldberger, J., Hinton, G. E., Roweis, S., and Salakhutdinov, R. R. (2004). <a href="https://proceedings.neurips.cc/paper_files/paper/2004/file/42fe880812925e520249e808937738d2-Paper.pdf">Neighbourhood components analysis</a>. In L. Saul, Y. Weiss, and L. Bottou, editors, <em>Advances in neural information processing systems</em>,Vol. 17. MIT Press.
</div>
<div id="ref-Heinonen+2016" class="csl-entry">
Heinonen, M., Mannerström, H., Rousu, J., Kaski, S., and Lähdesmäki, H. (2016). <a href="https://proceedings.mlr.press/v51/heinonen16.html">Non-stationary gaussian process regression with hamiltonian monte carlo</a>. In A. Gretton and C. C. Robert, editors, <em>Proceedings of the 19th international conference on artificial intelligence and statistics</em>,Vol. 51, pages 732–740. Cadiz, Spain: PMLR.
</div>
<div id="ref-Jona-Lasinio+2012" class="csl-entry">
Jona-Lasinio, G., Gelfand, A., and Jona-Lasinio, M. (2012). <a href="http://www.jstor.org/stable/41713483">SPATIAL ANALYSIS OF WAVE DIRECTION DATA USING WRAPPED GAUSSIAN PROCESSES</a>. <em>The Annals of Applied Statistics</em>, <em>6</em>(4), 1478–1498.
</div>
<div id="ref-Kriege+2020" class="csl-entry">
Kriege, N. M., Johansson, F. D., and Morris, C. (2020). <a href="https://doi.org/10.1007/s41109-019-0195-3">A survey on graph kernels</a>. <em>Applied Network Science</em>, <em>5</em>(1), 6.
</div>
<div id="ref-Liu+2020" class="csl-entry">
Liu, H., Ong, Y.-S., Shen, X., and Cai, J. (2020). <a href="https://doi.org/10.1109/TNNLS.2019.2957109">When gaussian process meets big data: A review of scalable GPs</a>. <em>IEEE Transactions on Neural Networks and Learning Systems</em>, <em>31</em>(11), 4405–4423.
</div>
<div id="ref-Lloyd1982" class="csl-entry">
Lloyd, S. (1982). <a href="https://ieeexplore.ieee.org/document/1056489">Least squares quantization in PCM</a>. <em>IEEE Transactions on Information Theory</em>, <em>28</em>(2), 129–137.
</div>
<div id="ref-Lodhi+2002" class="csl-entry">
Lodhi, H., Saunders, C., Shawe-Taylor, J., Cristianini, N., and Watkins, C. (2002). <a href="https://www.jmlr.org/papers/v2/lodhi02a.html">Text classification using string kernels</a>. <em>Journal of Machine Learning Research</em>, <em>2</em>, 419–444.
</div>
<div id="ref-Loeliger+2016" class="csl-entry">
Loeliger, H.-A., Bruderer, L., Malmberg, H., Wadehn, F., and Zalmai, N. (2016). <a href="https://doi.org/10.1109/ITA.2016.7888168">On sparsity by NUV-EM, gaussian message passing, and kalman smoothing</a>. In <em>2016 information theory and applications workshop (ITA)</em>, pages 1–10.
</div>
<div id="ref-MacKay1994" class="csl-entry">
MacKay, D. J. C. (1994). <em>Bayesian nonlinear modeling for the prediction competition</em> (No. 2),Vol. 100. American Society of Heating, Refrigerating,; Air Conditioning Engineers (ASHRAE). Retrieved from <a href="https://www.osti.gov/biblio/33309">https://www.osti.gov/biblio/33309</a>
</div>
<div id="ref-MacQueen1967" class="csl-entry">
MacQueen, J. (1967). <a href="https://projecteuclid.org/ebooks/berkeley-symposium-on-mathematical-statistics-and-probability/Proceedings-of-the-Fifth-Berkeley-Symposium-on-Mathematical-Statistics-and/chapter/Some-methods-for-classification-and-analysis-of-multivariate-observations/bsmsp/1200512992">Some methods for classification and analysis of multivariate observations</a>. In <em>Proceedings of the fifth berkeley symposium on mathematical statistics and probability</em>,Vol. 1, pages 281–297.
</div>
<div id="ref-Movshovitz-Attias+2017" class="csl-entry">
Movshovitz-Attias, Y., Toshev, A., Leung, T. K., Ioffe, S., and Singh, S. (2017). <a href="https://doi.org/10.1109/ICCV.2017.47">No fuss distance metric learning using proxies</a>. In <em>2017 IEEE international conference on computer vision (ICCV)</em>, pages 360–368. Los Alamitos, CA, USA: IEEE Computer Society.
</div>
<div id="ref-Murphy2022" class="csl-entry">
Murphy, K. P. (2022). <em><a href="https://probml.github.io/pml-book/book1.html">Probabilistic machine learning: An introduction</a></em>. MIT Press.
</div>
<div id="ref-Murphy2023" class="csl-entry">
Murphy, K. P. (2023). <em><a href="http://probml.github.io/book2">Probabilistic machine learning: Advanced topics</a></em>. MIT Press.
</div>
<div id="ref-Musgrave+2020" class="csl-entry">
Musgrave, K., Belongie, S., and Lim, S.-N. (2020). A metric learning reality check. In A. Vedaldi, H. Bischof, T. Brox, and J.-M. Frahm, editors, <em>Computer vision – ECCV 2020</em>, pages 681–699. Cham: Springer International Publishing.
</div>
<div id="ref-Nadaraya1964" class="csl-entry">
Nadaraya, E. A. (1964). <a href="https://doi.org/10.1137/1109020">On estimating regression</a>. <em>Theory of Probability &amp; Its Applications</em>, <em>9</em>(1), 141–142.
</div>
<div id="ref-Neal1996" class="csl-entry">
Neal, R. M. (1996). <em><a href="https://link.springer.com/book/10.1007/978-1-4612-0745-0">Bayesian learning for neural networks</a></em>,Vol. 118. Springer New York.
</div>
<div id="ref-Oord+2018" class="csl-entry">
Oord, A. van den, Li, Y., Babuschkin, I., Simonyan, K., Vinyals, O., Kavukcuoglu, K., … Hassabis, D. (2018). <a href="https://proceedings.mlr.press/v80/oord18a.html">Parallel <span>W</span>ave<span>N</span>et: Fast high-fidelity speech synthesis</a>. In J. Dy and A. Krause, editors, <em>Proceedings of the 35th international conference on machine learning</em>,Vol. 80, pages 3918–3926. PMLR.
</div>
<div id="ref-Oord+2019" class="csl-entry">
Oord, A. van den, Li, Y., and Vinyals, O. (2019). <a href="https://arxiv.org/abs/1807.03748">Representation learning with contrastive predictive coding</a>.
</div>
<div id="ref-Qian+2019" class="csl-entry">
Qian, Q., Shang, L., Sun, B., Hu, J., Li, H., and Jin, R. (2019). <a href="https://openaccess.thecvf.com/content_ICCV_2019/html/Qian_SoftTriple_Loss_Deep_Metric_Learning_Without_Triplet_Sampling_ICCV_2019_paper.html">SoftTriple loss: Deep metric learning without triplet sampling</a>. In <em>Proceedings of the IEEE/CVF international conference on computer vision (ICCV)</em>.
</div>
<div id="ref-Rahimi-Recht2007" class="csl-entry">
Rahimi, A., and Recht, B. (2007). <a href="https://proceedings.neurips.cc/paper_files/paper/2007/file/013a006f03dbc5392effeb8f18fda755-Paper.pdf">Random features for large-scale kernel machines</a>. In J. Platt, D. Koller, Y. Singer, and S. Roweis, editors, <em>Advances in neural information processing systems</em>,Vol. 20. Curran Associates, Inc.
</div>
<div id="ref-Rahimi-Recht2008" class="csl-entry">
Rahimi, A., and Recht, B. (2008). <a href="https://proceedings.neurips.cc/paper_files/paper/2008/file/0efe32849d230d7f53049ddc4a4b0c60-Paper.pdf">Weighted sums of random kitchen sinks: Replacing minimization with randomization in learning</a>. In D. Koller, D. Schuurmans, Y. Bengio, and L. Bottou, editors, <em>Advances in neural information processing systems</em>,Vol. 21. Curran Associates, Inc.
</div>
<div id="ref-Rasmussen-Williams2006" class="csl-entry">
Rasmussen, C. E., and Williams, C. K. I. (2006). <em><a href="https://direct.mit.edu/books/book/2320/Gaussian-Processes-for-Machine-Learning">Gaussian processes for machine learning</a></em>. The MIT Press.
</div>
<div id="ref-Remes+2017" class="csl-entry">
Remes, S., Heinonen, M., and Kaski, S. (2017). <a href="https://proceedings.neurips.cc/paper_files/paper/2017/file/c65d7bd70fe3e5e3a2f3de681edc193d-Paper.pdf">Non-stationary spectral kernels</a>. In I. Guyon, U. V. Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 30. Curran Associates, Inc.
</div>
<div id="ref-Savitzky-Golay1964" class="csl-entry">
Savitzky, Abraham., and Golay, M. J. E. (1964). <a href="https://doi.org/10.1021/ac60214a047">Smoothing and differentiation of data by simplified least squares procedures.</a> <em>Analytical Chemistry</em>, <em>36</em>(8), 1627–1639. doi: 10.1021/ac60214a047.
</div>
<div id="ref-Schroff+2015" class="csl-entry">
Schroff, F., Kalenichenko, D., and Philbin, J. (2015). <a href="https://openaccess.thecvf.com/content_cvpr_2015/html/Schroff_FaceNet_A_Unified_2015_CVPR_paper.html">FaceNet: A unified embedding for face recognition and clustering</a>. In <em>Proceedings of the IEEE conference on computer vision and pattern recognition (CVPR)</em>.
</div>
<div id="ref-Shervashidze+2011" class="csl-entry">
Shervashidze, N., Schweitzer, P., Leeuwen, E. J. van, Mehlhorn, K., and Borgwardt, K. M. (2011). <a href="http://jmlr.org/papers/v12/shervashidze11a.html">Weisfeiler-lehman graph kernels</a>. <em>Journal of Machine Learning Research</em>, <em>12</em>(77), 2539–2561.
</div>
<div id="ref-Sohn2016" class="csl-entry">
Sohn, K. (2016). <a href="https://proceedings.neurips.cc/paper_files/paper/2016/file/6b180037abbebea991d8b1232f8a8ca9-Paper.pdf">Improved deep metric learning with multi-class n-pair loss objective</a>. In D. Lee, M. Sugiyama, U. Luxburg, I. Guyon, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 29. Curran Associates, Inc.
</div>
<div id="ref-Sutherland-Schneider2015" class="csl-entry">
Sutherland, D. J., and Schneider, J. (2015). On the error of random fourier features. In <em>Proceedings of the thirty-first conference on uncertainty in artificial intelligence</em>, pages 862–871. Arlington, Virginia, USA: AUAI Press.
</div>
<div id="ref-Tipping2001" class="csl-entry">
Tipping, M. E. (2001). <a href="https://www.jmlr.org/papers/v1/tipping01a.html">Sparse bayesian learning and the relevance vector machine</a>. <em>Journal of Machine Learning Research</em>, <em>1</em>, 211–244.
</div>
<div id="ref-Watson1964" class="csl-entry">
Watson, G. S. (1964). <a href="http://www.jstor.org/stable/25049340">Smooth regression analysis</a>. <em>Sankhyā: The Indian Journal of Statistics, Series A (1961-2002)</em>, <em>26</em>(4), 359–372.
</div>
<div id="ref-Weinberger+2005" class="csl-entry">
Weinberger, Kilian Q., Blitzer, J., and Saul, L. (2005). <a href="https://proceedings.neurips.cc/paper_files/paper/2005/file/a7f592cef8b130a6967a90617db5681b-Paper.pdf">Distance metric learning for large margin nearest neighbor classification</a>. In Y. Weiss, B. Schölkopf, and J. Platt, editors, <em>Advances in neural information processing systems</em>,Vol. 18. MIT Press.
</div>
<div id="ref-Weinberger-Saul2009" class="csl-entry">
Weinberger, Kilian Q., and Saul, L. K. (2009). <a href="http://jmlr.org/papers/v10/weinberger09a.html">Distance metric learning for large margin nearest neighbor classification</a>. <em>Journal of Machine Learning Research</em>, <em>10</em>(9), 207–244.
</div>
<div id="ref-Wilson-Adams2013" class="csl-entry">
Wilson, A., and Adams, R. (2013). <a href="https://proceedings.mlr.press/v28/wilson13.html">Gaussian process kernels for pattern discovery and extrapolation</a>. In S. Dasgupta and D. McAllester, editors, <em>Proceedings of the 30th international conference on machine learning</em>,Vol. 28, pages 1067–1075. Atlanta, Georgia, USA: PMLR.
</div>
<div id="ref-Yu+2016" class="csl-entry">
Yu, F. X. X., Suresh, A. T., Choromanski, K. M., Holtmann-Rice, D. N., and Kumar, S. (2016). <a href="https://proceedings.neurips.cc/paper_files/paper/2016/file/53adaf494dc89ef7196d73636eb2451b-Paper.pdf">Orthogonal random features</a>. In D. Lee, M. Sugiyama, U. Luxburg, I. Guyon, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 29. Curran Associates, Inc.
</div>
<div id="ref-持橋-大羽2019" class="csl-entry">
持橋大地, and 大羽成征. (2019). <em><a href="https://www.kspub.co.jp/book/detail/1529267.html">ガウス過程と機械学習</a></em>. 講談社.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><span class="citation" data-cites="Murphy2022">(Murphy, 2022, p. 565)</span> 17.1節は，半正定値核のことを Mercer 核とも呼んでいる．↩︎</p></li>
<li id="fn2"><p>RBF は <span class="citation" data-cites="持橋-大羽2019">(持橋大地 and 大羽成征, 2019, p. 68)</span>，SE は <span class="citation" data-cites="Rasmussen-Williams2006">(Rasmussen and Williams, 2006, p. 14)</span> の用語．<span class="citation" data-cites="Murphy2023">(Murphy, 2023)</span> では両方が併記されている．Gaussian kernel とも呼ばれる．↩︎</p></li>
<li id="fn3"><p>他のパラメータの入れ方もある．例えば <a href="https://gpy.readthedocs.io/en/deploy/GPy.kern.src.html#GPy.kern.src.rbf.RBF"><code>GPy</code> での実装</a> は <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2%5Cexp%5Cleft(-%5Cfrac%7Br%5E2%7D%7B2%7D%5Cright)"> を採用している．Fourier 変換や偏微分方程式論の文脈では <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B(4%5Cpi%20t)%5E%7Bd/2%7D%7D%5Cexp%5Cleft(-%5Cfrac%7Br%5E2%7D%7B4%7D%5Cright)"> も良く用いられる．これは熱方程式の基本解になるためである．↩︎</p></li>
<li id="fn4"><p><span class="citation" data-cites="MacKay1994">(MacKay, 1994)</span>, <span class="citation" data-cites="Neal1996">(Neal, 1996, p. 16)</span> なども参照．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Kernel</category>
  <guid>https://162348.github.io/posts/2024/Kernels/Kernel.html</guid>
  <pubDate>Fri, 09 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>フローベース模型による条件付き生成</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/NF3.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="関連ページ" class="level3 unnumbered unlisted">
<h3 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h3>
<div id="listing-diffusion-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Process,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724338800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="826">
<a href="../../../posts/2024/Samplers/Diffusion.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/DDPM_outputs.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
拡散模型
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル６
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724843393428" data-listing-date-modified-sort="1724770800000" data-listing-reading-time-sort="4" data-listing-word-count-sort="794">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1725250592261" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="880">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>
<section id="誘導" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="誘導"><span class="header-section-number">1</span> 誘導</h2>
<p>拡散模型の美点には，条件付けが可能で拡張性に優れているという点もある．</p>
<p>実際，拡散模型の出現後，Conditional VAE <span class="citation" data-cites="Kingma+2014">(Kingma et al., 2014)</span> などの従来手法を凌駕する条件付き生成が可能であることが直ちに理解された．</p>
<p><img src="https://latex.codecogs.com/png.latex?C"> がクラスラベルなどの離散変数である場合，「誘導」による条件付き生成が初めに考えられた．</p>
<section id="はじめに" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h3>
<p>「誘導」ではまず，DDPM <span class="citation" data-cites="Ho+2020">(Ho et al., 2020)</span> でタイムステップ <img src="https://latex.codecogs.com/png.latex?t"> を positional encoding したようにして，プロンプト <img src="https://latex.codecogs.com/png.latex?c"> をデータに埋め込む．<sup>1</sup></p>
<p>そしてデータ <img src="https://latex.codecogs.com/png.latex?X"> とそのラベル <img src="https://latex.codecogs.com/png.latex?C"> に対して，条件付き分布 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D%5BX%7CC%5D"> をモデリングする．</p>
<p>しかしこのアプローチの問題は，ラベル <img src="https://latex.codecogs.com/png.latex?C"> が不確実な場合などは，この情報を無視して普通の <img src="https://latex.codecogs.com/png.latex?X"> が生成されてしまいがちであることである．</p>
<p>そこで目的関数に，条件付き分布 <img src="https://latex.codecogs.com/png.latex?X%7CC"> の正確性を期すような追加のデザインをする．これが「誘導」である．</p>
</section>
<section id="条件付きスコア場" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="条件付きスコア場"><span class="header-section-number">1.2</span> 条件付きスコア場</h3>
<p>条件付き分布 <img src="https://latex.codecogs.com/png.latex?p(x%7Cc)"> を学習することを考える．</p>
<p>このとき <img src="https://latex.codecogs.com/png.latex?p(x%7Cc)"> のスコアは，Bayes の定理から次のように表せる： <img src="https://latex.codecogs.com/png.latex?%0A%5Clog%20p(x%7Cc)=%5Clog%20p(c%7Cx)+%5Clog%20p(x)-%5Clog%20p(c),%0A"> <span id="eq-conditioned-score"><img src="https://latex.codecogs.com/png.latex?%0A%5Ctherefore%5Cqquad%5Cnabla_x%5Clog%20p(x%7Cc)=%5Cnabla_x%5Clog%20p(x)+%5Cnabla_x%5Clog%20p(c%7Cx).%0A%5Ctag%7B1%7D"></span></p>
<p>すなわち，条件付き確率 <img src="https://latex.codecogs.com/png.latex?p(x%7Cc)"> のスコア場は，条件なしのスコア場 <img src="https://latex.codecogs.com/png.latex?%5Cnabla_x%5Clog%20p(x)"> と，分類器のスコア場 <img src="https://latex.codecogs.com/png.latex?%5Cnabla_x%5Clog%20p(c%7Cx)"> の重ね合わせになる．</p>
</section>
<section id="sec-CG" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="sec-CG"><span class="header-section-number">1.3</span> 分類器による誘導 (CG)</h3>
<p>式 (1) から，<img src="https://latex.codecogs.com/png.latex?%5Cnabla_x%5Clog%20p(x%7Cc)"> が計算できる分類器 <img src="https://latex.codecogs.com/png.latex?p(c%7Cx)"> を新たに訓練すれば，既存のモデル <img src="https://latex.codecogs.com/png.latex?%5Cnabla_x%5Clog%20p(x)"> から，サンプリング方法を変えるだけで条件付き生成ができる．</p>
<p>これを <strong>CG: Classifier Guidance</strong> <span class="citation" data-cites="Dhariwal-Nichol2021">(Dhariwal and Nichol, 2021)</span> といい，サンプリング中に各ステップで少しずつ <img src="https://latex.codecogs.com/png.latex?x_t"> が <img src="https://latex.codecogs.com/png.latex?p(x_t%7Cc)"> に近づくように「誘導」されていく．</p>
<p>さらに，<img src="https://latex.codecogs.com/png.latex?c"> が無視されがちな場合も見越して，誘導スケール (guidance scale) という新たなハイパーパラメータ <img src="https://latex.codecogs.com/png.latex?%5Clambda%5Cge0"> を導入し，次のスコア <span id="eq-CG-score"><img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla_x%5Clog%20p(x)+%5Clambda%5Cnabla_x%5Clog%20p(c%7Cx).%0A%5Ctag%7B2%7D"></span> からサンプリングすることも考えられる．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Clambda%3E1"> としどんどん大きくしていくと，クラスラベル <img src="https://latex.codecogs.com/png.latex?c"> に「典型的な」サンプルが生成される傾向にある．</p>
</section>
<section id="分類器なしの誘導" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="分類器なしの誘導"><span class="header-section-number">1.4</span> 分類器なしの誘導</h3>
<p>CG はいわばアドホックな方法であり，外部の分類器 <img src="https://latex.codecogs.com/png.latex?p(c%7Cx)"> に頼らない方法を考えたい．</p>
<p>そのためには，式 (2) から <img src="https://latex.codecogs.com/png.latex?p(c%7Cx)"> を消去して <span id="eq-CFG-score"><img src="https://latex.codecogs.com/png.latex?%0A%5Clambda%5Cnabla_x%5Clog%20p(x%7Cc)+(1-%5Clambda)%5Cnabla_x%5Clog%20p(x)%0A%5Ctag%7B3%7D"></span> とみて，<img src="https://latex.codecogs.com/png.latex?p(x%7Cc),p(x)"> のいずれもデータから学ぶ．</p>
<p>このアプローチを <strong>Classifier-Free Diffusion Guidance</strong> <span class="citation" data-cites="Ho-Salimans2021">(Ho and Salimans, 2021)</span> という．</p>
<p>その際は，新たなクラスラベル <img src="https://latex.codecogs.com/png.latex?%5Cemptyset"> を導入して <img src="https://latex.codecogs.com/png.latex?%0Ap(x)=p(x%7C%5Cemptyset)%0A"> とみなすことで，<img src="https://latex.codecogs.com/png.latex?p(x%7Cc),p(x)"> を同一の <a href="../../../posts/2024/Samplers/Diffusion.html#sec-score-network">スコアネットワーク</a> でモデリングする．</p>
<p>データセット内にランダムに1から2割の画像をクラスラベル <img src="https://latex.codecogs.com/png.latex?%5Cemptyset"> と設定することで，これを実現する．</p>
<p>同様の方法を，スコアマッチングではなくフローマッチングを行うことを <span class="citation" data-cites="Dao+2023">(Dao et al., 2023)</span>, <span class="citation" data-cites="Zheng+2023GuidedFlow">(Q. Zheng et al., 2023)</span> が提案している．</p>
<p>この方法は，追加の分類器の訓練が必要ないだけでなく，サンプリングのクオリティも向上する <span class="citation" data-cites="Nichol+2022">(Nichol et al., 2022)</span>, <span class="citation" data-cites="Saharia+2022SIGGRAPH">(Saharia, Chan, Chang, et al., 2022)</span>．これは分類タスクで訓練されたスコア <img src="https://latex.codecogs.com/png.latex?%5Clog%20p(c%7Cx)"> はどう訓練してもスコアネットワークで学習したスコア (3) に匹敵する「良い」勾配が得られないためである．</p>
</section>
<section id="高解像度画像生成への応用" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="高解像度画像生成への応用"><span class="header-section-number">1.5</span> 高解像度画像生成への応用</h3>
<section id="sec-CascadedGeneration" class="level4" data-number="1.5.1">
<h4 data-number="1.5.1" class="anchored" data-anchor-id="sec-CascadedGeneration"><span class="header-section-number">1.5.1</span> Cascaded Generation</h4>
<p>条件付き生成の技術はそのままで，最終的なクオリティを向上させるためには，Cascading <span class="citation" data-cites="Ho+2022">(Ho et al., 2022)</span> が使用可能である．</p>
<p>これは，画像生成は <img src="https://latex.codecogs.com/png.latex?x"> の解像度が低い状態で行い，この低解像度画像を次の条件付き拡散モデルの条件付け <img src="https://latex.codecogs.com/png.latex?c"> として，条件付き生成を <strong>高解像度化</strong> (super-resolution) に用いるものである <span class="citation" data-cites="Saharia+2023">(Saharia et al., 2023)</span>．</p>
<p>この方法の美点は，条件付き生成器をたくさんスタックしたのちに，拡散模型間の段階でも Gauss ノイズや blur を印加することで，さらに最終的なクオリティが上げられるという <span class="citation" data-cites="Ho+2022">(Ho et al., 2022)</span>．これを <strong>conditioning augmentation</strong> と呼んでいる．</p>
<p>この方法は最初から高解像度での生成を目指して大規模な単一の拡散模型を設計するよりも大きく計算コストを削減できる．</p>
<p>Google も <a href="https://imagen.research.google/">Imagen</a> <span class="citation" data-cites="Saharia+2022">(Saharia, Chan, Saxena, et al., 2022)</span> でこのアーキテクチャを用いている．</p>
</section>
<section id="self-conditioning-chen2023analogbits" class="level4" data-number="1.5.2">
<h4 data-number="1.5.2" class="anchored" data-anchor-id="self-conditioning-chen2023analogbits"><span class="header-section-number">1.5.2</span> Self-Conditioning <span class="citation" data-cites="Chen+2023AnalogBits">(T. Chen et al., 2023)</span></h4>
<p>拡散モデルを自己再帰的に用い，自身の前回の出力を今回の入力として逐次的にサンプリングを繰り返すことで，サンプリングのクオリティをさらに向上する自己条件づけが <span class="citation" data-cites="Chen+2023AnalogBits">(T. Chen et al., 2023)</span> で提案された．</p>
<p>この方法は RoseTTAFold Diffusion <span class="citation" data-cites="Watson+2023">(Watson et al., 2023)</span> によるたんぱく質構造生成でも用いられている：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/RFDiff.gif" class="img-fluid figure-img"></p>
<figcaption>RFdiffusion generating a novel protein that binds to the insulin receptor. Taken from <a href="https://www.bakerlab.org/2023/07/11/diffusion-model-for-protein-design/">Baker Lab HP</a></figcaption>
</figure>
</div>
</section>
</section>
</section>
<section id="sec-2" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="sec-2"><span class="header-section-number">2</span> フローマッチングによる連続な条件付け</h2>
<section id="sec-CCG" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="sec-CCG"><span class="header-section-number">2.1</span> 連続な条件付き生成</h3>
<p>連続な変数に対する条件付き確率からの生成は CcGAN <span class="citation" data-cites="Ding+2021">(Ding et al., 2021)</span> などでも試みられていた．</p>
<p>AlphaFold 3 <span class="citation" data-cites="Abramson+2024">(Abramson et al., 2024)</span> や RoseTTAFold Diffusion <span class="citation" data-cites="Watson+2023">(Watson et al., 2023)</span>, <span class="citation" data-cites="Krishna+2024">(Krishna et al., 2024)</span> など，たんぱく質構造生成模型において拡散モデルが用いられている理由も，高精度な条件付き生成が可能であることが大きいという．</p>
<p>このことに加えて連続な変数に対する条件付けを可能にすることは，拡散モデルの拡張性をさらに高めることになる．</p>
<p>そもそも拡散モデルは <a href="../../../posts/2024/Samplers/NF1.html#sec-FM">連続時間正規化流</a> (CNF) と合流し，フローマッチング（第 2.2 節）によりノイズ分布 <img src="https://latex.codecogs.com/png.latex?P_0"> をデータ分布 <img src="https://latex.codecogs.com/png.latex?P_1"> に変換する曲線 <img src="https://latex.codecogs.com/png.latex?%5C%7BP_t%5C%7D_%7Bt%5Cin%5B0,1%5D%7D%5Csubset%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)"> を直接学習するように発展した．</p>
<p>この方法では，新たな条件付け変数 <img src="https://latex.codecogs.com/png.latex?c%5Cin%5B0,1%5D%5Ek"> に対して，連続写像 <img src="https://latex.codecogs.com/png.latex?%0AP_%7Bt,c%7D:%5B0,1%5D%5Ctimes%5B0,1%5D%5Ek%5Cto%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%0A"> を学習するようにフローマッチングを拡張できれば，連続な条件付き生成が可能になることになる．</p>
<p>これを行列値ベクトル場の理論を通じて達成するのが <strong>拡張フローマッチング</strong> (EFM: Extended Flow Matching) <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span> である．</p>
<p>このようなフローマッチングの拡張は <span class="citation" data-cites="Chen-Lipman2024">(R. T. Q. Chen and Lipman, 2024)</span> でも考えられている．</p>
</section>
<section id="sec-FM" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="sec-FM"><span class="header-section-number">2.2</span> フローマッチング (FM)</h3>
<p>２つの確率分布 <img src="https://latex.codecogs.com/png.latex?P_0,P_1%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)"> を結ぶ曲線を <img src="https://latex.codecogs.com/png.latex?%0A(P_t)=((%5Cphi_t)_*P_0)_%7Bt%5Cin%5B0,1%5D%7D%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D%0A"> の形で学習することを考える．</p>
<p>そのための１つのアプローチとして，<a href="https://ja.wikipedia.org/wiki/連続の方程式">連続方程式</a> というPDE <span id="eq-CE"><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20p_t%7D%7B%5Cpartial%20t%7D+%5Coperatorname%7Bdiv%7D(F_tp_t)=0.%0A%5Ctag%7B4%7D"></span> を満たすベクトル場 <img src="https://latex.codecogs.com/png.latex?F_t"> を学習し，これが定めるフローを <img src="https://latex.codecogs.com/png.latex?(%5Cphi_t)"> とすることがある：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20%5Cphi_t(x)%7D%7B%5Cpartial%20t%7D=F_t(%5Cphi_t(x)).%0A"></p>
<p>このような <img src="https://latex.codecogs.com/png.latex?F_t"> が１つ既知であり，<img src="https://latex.codecogs.com/png.latex?p_t"> から自由にサンプリングできる場合は， <span id="eq-FM-objective"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D_%7B%5Cmathrm%7BFM%7D%7D(%5Ctheta)=%5Coperatorname%7BE%7D%5Cbiggl%5B%5Cbiggl%7CF_%5Ctheta(X_T,T)-F_T(X_T)%5Cbiggr%7C%5E2%5Cbiggr%5D,%5Cqquad%20T%5Csim%5Cmathrm%7BU%7D(%5B0,1%5D),X_T%5Csim%20p_T,%0A%5Ctag%7B5%7D"></span> の最小化によってベクトル場 <img src="https://latex.codecogs.com/png.latex?F_t"> が学習できる．これを <strong>フローマッチング</strong> (FM: Flow Matching) の目的関数という．</p>
</section>
<section id="条件付きフローマッチング-cfm" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="条件付きフローマッチング-cfm"><span class="header-section-number">2.3</span> 条件付きフローマッチング (CFM)</h3>
<p>仮に <img src="https://latex.codecogs.com/png.latex?p_t"> が <img src="https://latex.codecogs.com/png.latex?%0Ap_t(x)=%5Cint_%5COmega%20p_t(x%7Cc)q(c)%5C,dc,%5Cqquad%5COmega%5Csubset%5Cmathbb%7BR%7D%5Ek,%0A"> という <img src="https://latex.codecogs.com/png.latex?p_%7Bt,c%7D(x):=p_t(x%7Cc)"> の <img src="https://latex.codecogs.com/png.latex?q">-混合としての展開を通じて得られているとする．</p>
<p>この場合，<img src="https://latex.codecogs.com/png.latex?(p_%7Bt,c%7D)"> を生成するベクトル場 <img src="https://latex.codecogs.com/png.latex?F_t(x%7Cc)"> が特定できれば， <span id="eq-marginal-VF"><img src="https://latex.codecogs.com/png.latex?%0AF_t(x):=%5Coperatorname%7BE%7D%5Cleft%5B%5Cfrac%7BF_t(x%7CU)p_t(x%7CU)%7D%7Bp_t(x)%7D%5Cright%5D%0A%5Ctag%7B6%7D"></span> が <img src="https://latex.codecogs.com/png.latex?(p_t)"> を生成する <span class="citation" data-cites="Lipman+2023">(定理1 Lipman et al., 2023)</span>, <span class="citation" data-cites="Tong+2024">(定理3.1 Tong et al., 2024)</span>．</p>
<p>従って，<img src="https://latex.codecogs.com/png.latex?F_t"> を学習するには FM 目的関数 (5) の代わりに <span id="eq-CFM-objective"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D_%7B%5Cmathrm%7BCFM%7D%7D(%5Ctheta)=%5Coperatorname%7BE%7D%5Cbiggl%5B%5Cbiggl%7CF_%5Ctheta(X_T,T)-F_T(X%7CC)%5Cbiggr%7C%5E2%5Cbiggr%5D,%5Cqquad%20C%5Csim%20q,%0A%5Ctag%7B7%7D"></span> の最小化によっても <img src="https://latex.codecogs.com/png.latex?F_t(x%7Cc)"> が学習できる．これを <strong>条件付きフローマッチング</strong> (CFM: Conditional Flow Matching) の目的関数という．</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled" title="$P_0$ が Gauss 分布である場合 [@Lipman+2023]">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<img src="https://latex.codecogs.com/png.latex?P_0"> が Gauss 分布である場合 <span class="citation" data-cites="Lipman+2023">(Lipman et al., 2023)</span>
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?P_0=%5Cmathrm%7BN%7D_d(0,I_d)"> をノイズ分布，<img src="https://latex.codecogs.com/png.latex?P_1"> を一般のデータ分布とする．</p>
<p>ただし，誤差を許して，<img src="https://latex.codecogs.com/png.latex?P_1*%5Cmathrm%7BN%7D_d(0,%5Csigma%5E2I_d)"> を改めて真のデータ分布とする．</p>
<p>このように定式化することで，各データ点 <img src="https://latex.codecogs.com/png.latex?c%5Cin%5C%7Bx_i%5C%7D_%7Bi=1%7D%5En"> で条件づければ， <img src="https://latex.codecogs.com/png.latex?%0AP_%7B0,c%7D:=P_0(-%7Cc)=%5Cmathrm%7BN%7D_d(0,I_d),%5Cqquad%20P_%7B1,c%7D:=P_1(-%7Cc)=%5Cmathrm%7BN%7D_d(0,%5Csigma%5E2I_d),%0A"> の間を結ぶ曲線 <img src="https://latex.codecogs.com/png.latex?(P_%7Bt,c%7D)_%7Bt%5Cin%5B0,1%5D,c%5Cin%5C%7Bx_i%5C%7D_%7Bi=1%7D%5En%7D"> を学習する問題となる．</p>
<p>実は <img src="https://latex.codecogs.com/png.latex?P_%7B0,c%7D,P_%7B1,c%7D"> が Gauss 分布であることにより，この問題はすでに <span class="citation" data-cites="McCann1997">(McCann, 1997, p. 159)</span> によって解かれており，最適輸送は <img src="https://latex.codecogs.com/png.latex?%0AP_%7Bt,c%7D=%5Cmathrm%7BN%7D_d%5Cbiggr(tc,(t%5Csigma-t+1)%5E2I_d%5Cbiggl),%5Cqquad%20F_t(x%7Cc)=%5Cfrac%7Bc-(1-%5Csigma)x%7D%7B1-(1-%5Csigma)t%7D,%0A"> によって与えられる．</p>
</div>
</div>
</div>
<p>しかし，各 <img src="https://latex.codecogs.com/png.latex?(P_%7Bt,c%7D)_%7Bt%5Cin%5B0,1%5D%7D"> が最適輸送になっていても，式 (6) で定まる <img src="https://latex.codecogs.com/png.latex?(P_t)_%7Bt%5Cin%5B0,1%5D%7D"> が最適輸送になるとは限らない．</p>
</section>
<section id="最適輸送-cfm-ot-cfm" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="最適輸送-cfm-ot-cfm"><span class="header-section-number">2.4</span> 最適輸送 CFM (OT-CFM)</h3>
<p>ここで形式的に，条件付ける変数 <img src="https://latex.codecogs.com/png.latex?c"> は <a href="../../../posts/2024/Probability/Coupling.html">カップリング</a> <img src="https://latex.codecogs.com/png.latex?%5Cpi%5Cin%20C(P_0,P_1)"> に従う <img src="https://latex.codecogs.com/png.latex?C%5Csim%5Cpi"> とする： <img src="https://latex.codecogs.com/png.latex?%0AC(P_0,P_1):=%5Cleft%5C%7B%5Cpi%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed%5Ctimes%5Cmathbb%7BR%7D%5Ed)%5C:%5Cmiddle%7C%5C:%5Cbegin%7Barray%7D%7Bl%7D(%5Cmathrm%7Bpr%7D_1)_*%5Cpi=P_0,%5C%5C(%5Cmathrm%7Bpr%7D_2)_*%5Cpi=P_1%5Cend%7Barray%7D%5Cright%5C%7D.%0A"></p>
<div class="callout callout-style-default callout-caution no-icon callout-titled" title="$P_0$ も一般の分布である場合 [I-CFM @Tong+2024]">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<img src="https://latex.codecogs.com/png.latex?P_0"> も一般の分布である場合 <span class="citation" data-cites="Tong+2024">(I-CFM Tong et al., 2024)</span>
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?Q_0,Q_1"> は未知のデータ分布で， <img src="https://latex.codecogs.com/png.latex?%0AP_1=Q_1*%5Cmathrm%7BN%7D_d(0,%5Csigma%5E2I_d),%5Cqquad%20P_0=Q_0*%5Cmathrm%7BN%7D_d(0,%5Csigma%5E2I_d),%0A"> の間を架橋したいとする．このとき， <img src="https://latex.codecogs.com/png.latex?%0A%5Cpi:=Q_0%5Cotimes%20Q_1%0A"> と定めると， <img src="https://latex.codecogs.com/png.latex?%0AP_%7Bt,c%7D=%5Cmathrm%7BN%7D_d%5Cbiggr(tc_1+(1-t)c_0,%5Csigma%5E2I_d%5Cbiggl),%5Cqquad%20F_t(x%7Cc)=c_1-c_0,%0A"> が <img src="https://latex.codecogs.com/png.latex?P_0,P_1"> の間の輸送を定める <span class="citation" data-cites="Tong+2024">(命題3.3 Tong et al., 2024)</span>．</p>
<p>加えて，<img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限において，学習される輸送 <img src="https://latex.codecogs.com/png.latex?(P_t)"> は <img src="https://latex.codecogs.com/png.latex?Q_0,Q_1"> の間の輸送になる．</p>
<p>これは <span class="citation" data-cites="Lipman+2023">(Lipman et al., 2023)</span> の例の，<img src="https://latex.codecogs.com/png.latex?P_0,P_1"> を対称に扱った拡張と見れる．</p>
<p>また，<img src="https://latex.codecogs.com/png.latex?P_%7Bt,c%7D"> が <img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> とした Delta 測度である場合が Rectified Flow <span class="citation" data-cites="Liu+2023-Flow">(Liu et al., 2023)</span> に当たる．</p>
<p>この方法を拡張し，例えば平均を線型関数 <img src="https://latex.codecogs.com/png.latex?m(t)=tc_1+(1-t)c_0"> の代わりに <img src="https://latex.codecogs.com/png.latex?%0Am(t)=%5Ccos%5Cleft(%5Cfrac%7B%5Cpi%20t%7D%7B2%7D%5Cright)c_0+%5Csin%5Cleft(%5Cfrac%7B%5Cpi%20t%7D%7B2%7D%5Cright)c_1%0A"> とした場合が Stochastic Interpolant <span class="citation" data-cites="Albergo-Vanden-Eijnden2023">(Albergo and Vanden-Eijnden, 2023)</span> に当たる．</p>
</div>
</div>
</div>
<p>その中でも特に，<img src="https://latex.codecogs.com/png.latex?%5Cpi"> を 2-Wasserstein 距離に関する最適輸送計画 <img src="https://latex.codecogs.com/png.latex?%0A%5Cpi:=%5Coperatorname*%7Bargmin%7D_%7B%5Cpi%5Cin%20C(P_0,P_1)%7D%5Coperatorname%7BE%7D%5B%5Clvert%20X-Y%5Crvert%5E2%5D%0A"> であるとする．</p>
<p>このとき， <img src="https://latex.codecogs.com/png.latex?%0AP_%7Bt,c%7D=%5Cmathrm%7BN%7D_d%5Cbiggr(tc_1+(1-t)c_0,%5Csigma%5E2I_d%5Cbiggl),%5Cqquad%20F_t(x%7Cc)=c_1-c_0,%0A"> を <img src="https://latex.codecogs.com/png.latex?C%5Csim%5Cpi"> に関して周辺化した輸送 <img src="https://latex.codecogs.com/png.latex?(P_t)%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> は，<img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限で（動的な）最適輸送になる <span class="citation" data-cites="Tong+2024">(命題3.4 Tong et al., 2024)</span>．</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled" title="Schrödinger Bridge のシミュレーション [SB-CFM @Tong+2024]">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Schrödinger Bridge のシミュレーション <span class="citation" data-cites="Tong+2024">(SB-CFM Tong et al., 2024)</span>
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cpi_%7B2%5Csigma%5E2%7D:=%5Coperatorname*%7Bargmin%7D_%7B%5Cpi%5Cin%20C(P_0,P_1)%7D%5Cbiggr(%5Coperatorname%7BE%7D%5B%5Clvert%20X-Y%5Crvert%5E2%5D+2%5Csigma%5E2H(%5Cpi)%5Cbiggl)%0A"> を，エントロピー正則化項 <img src="https://latex.codecogs.com/png.latex?2%5Csigma%5E2"> を持ったエントロピー最適輸送計画とする．</p>
<p>このとき，各点を結んだ Broanian bridge <img src="https://latex.codecogs.com/png.latex?%0AP_%7Bt,c%7D:=%5Cmathrm%7BN%7D%5Cbiggr(tc_1+(1-t)c_0,t(1-t)%5Csigma%5E2I_d%5Cbiggl),%0A"> <img src="https://latex.codecogs.com/png.latex?%0AF_t(x%7Cc):=%5Cfrac%7B1-2t%7D%7B2t(1-t)%7D%5Cbiggr(x-(tc_1+(1-t)c_0)%5Cbiggl)+(c_1-c_0),%0A"> の周辺化 <img src="https://latex.codecogs.com/png.latex?(P_t)%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> は，標準 Brown 運動を <img src="https://latex.codecogs.com/png.latex?%5Csigma"> だけスケールした分布 <img src="https://latex.codecogs.com/png.latex?W"> に対する Schrödinger bridge <img src="https://latex.codecogs.com/png.latex?%0A%5Cpi%5E*:=%5Coperatorname*%7Bargmin%7D_%7B%5Csubstack%7B%5Cmu_0=P_0%5C%5C%5Cmu_1=P_1%7D%7D%5Coperatorname%7BKL%7D(%5Cmu,W)%0A"> と分布同等になる <span class="citation" data-cites="Tong+2024">(定理3.5 Tong et al., 2024)</span>．</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限が OT-CFM であり，<img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto%5Cinfty"> の極限が I-CFM である．</p>
</div>
</div>
</div>
<p>訓練時は，CFM の目的関数 (7) を計算するために <img src="https://latex.codecogs.com/png.latex?(X_0,X_1)%5Csim%5Cpi"> というサンプリングが必要になる．データサイズが大きい場合には，これにミニバッチ最適輸送 <span class="citation" data-cites="Fatras+2021">(Fatras et al., 2021)</span> を用いることができる．</p>
<p>このように，２つの分布 <img src="https://latex.codecogs.com/png.latex?P_0,P_1"> を単に独立カップリングと見るのではなく，依存関係があった場合にはそれも考慮してなるべくダイナミクスが直線になるように誘導する方法 Multisample Flow Matching として <span class="citation" data-cites="Pooladian+2023">(Pooladian et al., 2023)</span> も考えている．</p>
</section>
<section id="sec-OT-CFM-in-GFM-perspective" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="sec-OT-CFM-in-GFM-perspective"><span class="header-section-number">2.5</span> <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> 上の最適化としての見方</h3>
<p>実は OT-CFM は，２つの確率密度 <img src="https://latex.codecogs.com/png.latex?p_0,p_1"> を結ぶ曲線 <img src="https://latex.codecogs.com/png.latex?(p_t)%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> の中で，<strong>Dirichlet エネルギー</strong> <img src="https://latex.codecogs.com/png.latex?%0AD(p):=%5Cinf_%7B(p,F)%7D%5Cfrac%7B1%7D%7B2%7D%5Cint_%7B%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ed%7D%5Clvert%20F_t(x)%5Crvert%5E2p_t(x)%5C,dxdt%0A"> を最小化する曲線 <img src="https://latex.codecogs.com/png.latex?(p_t)"> を学習していると見れる <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span>．ただし，<img src="https://latex.codecogs.com/png.latex?(p,F)"> は連続方程式 (4) を満たす密度とベクトル場の組とした．</p>
<p>条件付きフローマッチングでは，このような曲線 <img src="https://latex.codecogs.com/png.latex?(p_t)"> を次の方法で構成していた．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<ol type="1">
<li>ある決定論的なダイナミクス <img src="https://latex.codecogs.com/png.latex?%5Cpsi_c:%5B0,1%5D%5Cto%5Cmathbb%7BR%7D%5Ed"> を定める．<sup>2</sup></li>
<li><img src="https://latex.codecogs.com/png.latex?Q%5Cin%5Cmathcal%7BP%7D(C%5E1(%5B0,1%5D;%5Cmathbb%7BR%7D%5Ed))"> を確率測度とする．</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cpsi,Q"> から， <img src="https://latex.codecogs.com/png.latex?%0AP%5EQ:=%5Coperatorname%7BE%7D_%7B%5Cpsi%5Csim%20Q%7D%5B%5Cdelta_%5Cpsi%5D%0A"> によって確率測度の曲線 <img src="https://latex.codecogs.com/png.latex?(P%5EQ_t)%5Cin%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> を定める．</li>
</ol>
</div>
</div>
</div>
<p>実は Dirichlet 汎函数 <img src="https://latex.codecogs.com/png.latex?D:%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D%5Cto%5Cmathbb%7BR%7D_+"> が凸であるために，このように構成される <img src="https://latex.codecogs.com/png.latex?(p_t)"> の中での最適解は，<img src="https://latex.codecogs.com/png.latex?Q%5Cin%5Cmathcal%7BP%7D(C%5E1(%5B0,1%5D;%5Cmathbb%7BR%7D%5Ed))"> の全体で探す必要はなく，線型なダイナミクス <img src="https://latex.codecogs.com/png.latex?%0A%5Cpsi_c(t)=tc_1+(1-t)c_0,%5Cqquad%20c=(c_0,c_1)%5Cin%5Cmathbb%7BR%7D%5Ed%5Ctimes%5Cmathbb%7BR%7D%5Ed,%0A"> の重ね合わせの形でのみ探せば良い <span class="citation" data-cites="Brenier2003">(Brenier, 2003)</span>．</p>
<p>従って，<img src="https://latex.codecogs.com/png.latex?(X_0,X_1)"> の分布の全体 <img src="https://latex.codecogs.com/png.latex?C(P_0,P_1)"> のみについてパラメータづけをして探せば良い．さらにこの場合， <img src="https://latex.codecogs.com/png.latex?%0AF_t(x%7Cc)=%5Cfrac%7B%5Cpartial%20%5Cpsi_c(t)%7D%7B%5Cpartial%20t%7D=c_1-c_0%0A"> であるから，<img src="https://latex.codecogs.com/png.latex?D(P)=2W_2(P_0,P_1)%5E2"> の最小化は <img src="https://latex.codecogs.com/png.latex?P_0,P_1"> の 2-Wasserstein 最適な輸送計画 <img src="https://latex.codecogs.com/png.latex?%5Cpi%5E*"> の探索に等価になる．</p>
<p>これが OT-CFM の <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BP%7D(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5B0,1%5D%7D"> 上の最適化としての解釈である．同時に，条件付きフローマッチングの目的関数 (7) の他に，<a href="../../../posts/2024/Samplers/EBM.html#sec-DSM">DSM</a> 様の目的関数 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5Cbiggl%5B%5Cbiggl%7CF_T(%5Cpsi(T))-%5Cpartial_t%5Cpsi_C(T)%5Cbiggr%7C%5E2%5Cbiggr%5D,%5Cqquad%20T%5Csim%5Cmathrm%7BU%7D(%5B0,1%5D),C%5Csim%5Cpi%5E*,%0A"> の最小化点としてもベクトル場 <img src="https://latex.codecogs.com/png.latex?F_t"> が学習できる．</p>
</section>
<section id="sec-GFM" class="level3" data-number="2.6">
<h3 data-number="2.6" class="anchored" data-anchor-id="sec-GFM"><span class="header-section-number">2.6</span> 拡張フローマッチング (GFM)</h3>
<p>前節での観察は次のように要約できる：</p>
<div class="callout callout-style-simple callout-important no-icon callout-titled" title="OT-CFM の Dirichlet 汎函数最小化としての特徴付け">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
OT-CFM の Dirichlet 汎函数最小化としての特徴付け
</div>
</div>
<div class="callout-body-container callout-body">
<p>OT-CFM は，条件付きフローマッチングに対して，Dirichlet エネルギーの言葉で帰納バイアスを導入することで，最適輸送を学習するための方法論である．</p>
</div>
</div>
<p>こう考えると，Dirichlet エネルギーの言葉で他の帰納バイアスを導入することが考えられる．</p>
<p>ここで条件付けの議論（第 2.1 節）に戻ってくる．最適輸送のための <img src="https://latex.codecogs.com/png.latex?c=(c_0,c_1)%5Cin%5Cmathbb%7BR%7D%5E%7B2d%7D"> に限らず，一般の <img src="https://latex.codecogs.com/png.latex?c%5Cin%5Cmathbb%7BR%7D%5Ek"> に対して連続に条件付けされるように拡張したい．</p>
<p>これは，<img src="https://latex.codecogs.com/png.latex?(F_t),(p_t)"> の添字を <img src="https://latex.codecogs.com/png.latex?t%5Cin%5B0,1%5D"> から <img src="https://latex.codecogs.com/png.latex?%5Cxi%5Cin%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek"> に拡張することで達成される．</p>
<p>これは新たな <img src="https://latex.codecogs.com/png.latex?(F_%5Cxi),(p_%5Cxi)"> を <img src="https://latex.codecogs.com/png.latex?M_%7Bdk%7D(%5Cmathbb%7BR%7D)">-値の行列値ベクトル場 <img src="https://latex.codecogs.com/png.latex?(F_t)"> とベクトル値密度 <img src="https://latex.codecogs.com/png.latex?(p_t)"> と見ることに等価である．すると，<strong>一般化連続方程式</strong> <span class="citation" data-cites="Brenier2003">(Brenier, 2003)</span>, <span class="citation" data-cites="Lavenant2019">(Lavenant, 2019)</span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla_%5Cxi%20p_%5Cxi(x)+%5Coperatorname%7Bdiv%7D_x(p_%5Cxi%20u_%5Cxi)=0%0A"> の理論を用いれば，全く同様の枠組みで可能になる <span class="citation" data-cites="Isobe+2024">(命題1 Isobe et al., 2024)</span>．</p>
<p>これが <strong>拡張フローマッチング</strong> (EFM: Extended Flow Matching) <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span> である．</p>
</section>
<section id="gfm-の無限次元最適化" class="level3" data-number="2.7">
<h3 data-number="2.7" class="anchored" data-anchor-id="gfm-の無限次元最適化"><span class="header-section-number">2.7</span> GFM の無限次元最適化</h3>
<p>ただし，拡張 Dirichlet エネルギー <span class="citation" data-cites="Lavenant2019">(Lavenant, 2019)</span> <img src="https://latex.codecogs.com/png.latex?%0AD(P):=%5Cinf_%7B(p,F)%7D%5Cfrac%7B1%7D%7B2%7D%5Cint_%7B%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek%5Ctimes%5Cmathbb%7BR%7D%5Ed%7D%5Clvert%20F_%5Cxi(x)%5Crvert%5E2p_%5Cxi(x)%5C,dxd%5Cxi%0A"> の第 2.5 節の形での最小化点は，もはや線型なダイナミクスの重ね合わせとは限らない．</p>
<p>すると無限次元最適化になってしまうため，適切な <a href="../../../posts/2023/KernelMethods/KernelMethods4Mathematicians.html">RKHS</a> <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BF%7D%5Csubset%5Cmathrm%7BMap%7D(%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek;%5Cmathbb%7BR%7D%5Ed)"> 内で探すことが必要である： <img src="https://latex.codecogs.com/png.latex?%0A%5Cpsi=%5Cphi_%7Bx_%7B%5Cpartial%5CXi%7D%7D%5Cin%5Coperatorname*%7Bargmin%7D_%7Bf%5Cin%5Cmathcal%7BF%7D%7D%5Csum_%7B%5Cxi%5Cin%5Cpartial%5CXi%7D%5Clvert%20f(%5Cxi)-x_%5Cxi%5Crvert%5E2.%0A"> ただし，<img src="https://latex.codecogs.com/png.latex?%5Cpartial%5CXi%5Coverset%7B%5Ctext%7Bfinite%7D%7D%7B%5Csubset%7D%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek"> は境界条件が与えられる点の有限集合で，<img src="https://latex.codecogs.com/png.latex?x_%5Cxi%5Cin%5Cmathbb%7BR%7D%5Ed"> はその点での値である．</p>
<p><img src="https://latex.codecogs.com/png.latex?(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5Clvert%5Cpartial%5CXi%5Crvert%7D"> 上での結合分布 <img src="https://latex.codecogs.com/png.latex?%5Cpi"> が与えられたならば， <img src="https://latex.codecogs.com/png.latex?%0A%5Cinf_%7BQ%5Cin%5Cmathcal%7BP%7D(C%5E1(%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek;%5Cmathbb%7BR%7D%5Ed))%7DD(P%5EQ)%5Cle%5Cinf_%5Cpi%5Cint_%7B(%5Cmathbb%7BR%7D%5Ed)%5E%7B%5Clvert%5Cpartial%5CXi%5Crvert%7D%7D%5Clvert%5Cnabla_%5Cxi%5Cphi_%7Bx_%7B%5Cpartial%5CXi%7D%7D%5Crvert%5E2%5Cpi(dx_%5Cxi)%0A"> という評価が得られるが，この右辺は最適輸送の形になっており，最小値が適切な周辺分布とコスト関数 <img src="https://latex.codecogs.com/png.latex?%0Ac(x_%7B%5Cpartial%5CXi%7D):=%5Cint_%7B%5B0,1%5D%5Ctimes%5Cmathbb%7BR%7D%5Ek%7D%5Clvert%5Cnabla_%5Cxi%5Cphi_%7Bx_%7B%5Cpartial%5CXi%7D%7D(%5Cxi)%5Crvert%5E2%5C,d%5Cxi%0A"> が定める輸送計画問題になっている．</p>
<p>この解 <img src="https://latex.codecogs.com/png.latex?%5Cpi%5E*"> をミニバッチ最適輸送で解きながら，目的関数 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5Cbiggl%5B%5Cbiggl%7CF_T(%5Cpsi(T))-%5Cnabla_%5Cxi%5Cphi_%7Bx_%7B%5Cpartial%5CXi%7D%7D%5Cbiggr%7C%5E2%5Cbiggr%5D,%5Cqquad%20T%5Csim%5Cmathrm%7BU%7D(%5B0,1%5D),x_%7B%5Cpartial%5CXi%7D%5Csim%5Cpi%5E*,%0A"> の最小化点としてベクトル場 <img src="https://latex.codecogs.com/png.latex?F_t"> を学習することができる <span class="citation" data-cites="Isobe+2024">(定理4 Isobe et al., 2024)</span>．</p>
<p>これを <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span> は MMOT-EFM と呼んでいる．</p>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="文献紹介" class="level2 appendix" data-number="3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">3</span> 文献紹介</h2><div class="quarto-appendix-contents">

<p>本記事の後半第 2 節は，<span class="citation" data-cites="Tong+2024">(Tong et al., 2024)</span>, <span class="citation" data-cites="Isobe+2024">(Isobe et al., 2024)</span> の解説である．</p>
<p>前半の内容に関して，メンダコ氏によるブログ記事 <a href="https://horomary.hatenablog.com/entry/2024/06/30/211033">AlphaFold の進化史</a> は AlphaFold3 が丁寧に解説されている．</p>
<p>当該ブログは丁寧に書かれており，大変おすすめできる．</p>
<blockquote class="blockquote">
<p>Alphafold3とは長大な条件付けネットワークを備えた全原子拡散生成モデルであると前述したとおり、Alphafold3では必須入力としてタンパク質配列を、任意入力として核酸配列、SMILES形式で表現された低分子リガンド、金属イオンなどを長大な条件付けネットワークに入力することで、拡散モデルへの条件付けベクトルを作成します。</p>
</blockquote>
<blockquote class="blockquote">
<p>DeepLearningで大規模分子の構造分布を予測するなんて数年前には考えられませんでしたが、拡散モデルによってすでに現実になりつつあります。一例として Distributional GraphormerというMicrosoft Researchの研究 <span class="citation" data-cites="Zheng+2024">(S. Zheng et al., 2024)</span> を紹介します。</p>
</blockquote>
<p>続きはぜひ，<a href="https://horomary.hatenablog.com/entry/2024/06/30/211033#AlphaFold3-2024">メンダコ氏のブログ</a>でお読みください．</p>
<p><span class="citation" data-cites="Dao+2023">(Dao et al., 2023)</span> のプロジェクトページは <a href="https://vinairesearch.github.io/LFM/">こちら</a>．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Abramson+2024" class="csl-entry">
Abramson, J., Adler, J., Dunger, J., Evans, R., Green, T., Pritzel, A., … Jumper, J. M. (2024). <a href="https://doi.org/10.1038/s41586-024-07487-w">Accurate structure prediction of biomolecular interactions with AlphaFold 3</a>. <em>Nature</em>, <em>630</em>(8016), 493–500.
</div>
<div id="ref-Albergo-Vanden-Eijnden2023" class="csl-entry">
Albergo, M. S., and Vanden-Eijnden, E. (2023). <a href="https://openreview.net/forum?id=li7qeBbCR1t"><span class="nocase">Building Normalizing Flows with Stochastic Interpolants</span></a>. In <em>The eleventh international conference on learning representations</em>.
</div>
<div id="ref-Brenier2003" class="csl-entry">
Brenier, Y. (2003). <a href="https://doi.org/10.1007/978-3-540-44857-0_4">Extended monge-kantorovich theory</a>. In <em>Optimal transportation and applications: Lectures given at the c.i.m.e. Summer school, held in martina franca, italy, september 2-8, 2001</em>, pages 91–121. Berlin, Heidelberg: Springer Berlin Heidelberg.
</div>
<div id="ref-Chen-Lipman2024" class="csl-entry">
Chen, R. T. Q., and Lipman, Y. (2024). <a href="https://openreview.net/forum?id=g7ohDlTITL">Flow matching on general geometries</a>. In <em>The twelfth international conference on learning representations</em>.
</div>
<div id="ref-Chen+2023AnalogBits" class="csl-entry">
Chen, T., ZHANG, R., and Hinton, G. (2023). <a href="https://openreview.net/forum?id=3itjR9QxFw">Analog bits: Generating discrete data using diffusion models with self-conditioning</a>. In <em>The eleventh international conference on learning representations</em>.
</div>
<div id="ref-Dao+2023" class="csl-entry">
Dao, Q., Phung, H., Nguyen, B., and Tran, A. (2023). <a href="https://arxiv.org/abs/2307.08698">Flow matching in latent space</a>.
</div>
<div id="ref-Dhariwal-Nichol2021" class="csl-entry">
Dhariwal, P., and Nichol, A. Q. (2021). <a href="https://openreview.net/forum?id=AAWuCvzaVt">Diffusion models beat <span>GAN</span>s on image synthesis</a>. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. W. Vaughan, editors, <em>Advances in neural information processing systems</em>.
</div>
<div id="ref-Ding+2021" class="csl-entry">
Ding, X., Wang, Y., Xu, Z., Welch, W. J., and Wang, Z. J. (2021). <a href="https://openreview.net/forum?id=PrzjugOsDeE">Cc<span>{</span>GAN<span>}</span>: Continuous conditional generative adversarial networks for image generation</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Fatras+2021" class="csl-entry">
Fatras, K., Zine, Y., Majewski, S., Flamary, R., Gribonval, R., and Courty, N. (2021). <a href="https://arxiv.org/abs/2101.01792">Minibatch optimal transport distances; analysis and applications</a>.
</div>
<div id="ref-Ho+2020" class="csl-entry">
Ho, J., Jain, A., and Abbeel, P. (2020). <a href="https://proceedings.neurips.cc/paper/2020/hash/4c5bcfec8584af0d967f1ab10179ca4b-Abstract.html"><span>Denoising Diffusion Probabilistic Models</span></a>. In <em>Advances in neural information processing systems</em>,Vol. 33.
</div>
<div id="ref-Ho+2022" class="csl-entry">
Ho, J., Saharia, C., Chan, W., Fleet, D. J., Norouzi, M., and Salimans, T. (2022). <a href="http://jmlr.org/papers/v23/21-0635.html">Cascaded diffusion models for high fidelity image generation</a>. <em>Journal of Machine Learning Research</em>, <em>23</em>(47), 1–33.
</div>
<div id="ref-Ho-Salimans2021" class="csl-entry">
Ho, J., and Salimans, T. (2021). <a href="https://openreview.net/forum?id=qw8AKxfYbI">Classifier-free diffusion guidance</a>. In <em>NeurIPS 2021 workshop on deep generative models and downstream applications</em>.
</div>
<div id="ref-Isobe+2024" class="csl-entry">
Isobe, N., Koyama, M., Zhang, J., Hayashi, K., and Fukumizu, K. (2024). <a href="https://arxiv.org/abs/2402.18839">Extended flow matching: A method of conditional generation with generalized continuity equation</a>.
</div>
<div id="ref-Kingma+2014" class="csl-entry">
Kingma, D. P., Mohamed, S., Jimenez Rezende, D., and Welling, M. (2014). <a href="https://proceedings.neurips.cc/paper_files/paper/2014/file/d523773c6b194f37b938d340d5d02232-Paper.pdf"><span class="nocase">Semi-supervised Learning with Deep Generative Models</span></a>. In Z. Ghahramani, M. Welling, C. Cortes, N. Lawrence, and K. Q. Weinberger, editors, <em>Advances in neural information processing systems</em>,Vol. 27. Curran Associates, Inc.
</div>
<div id="ref-Krishna+2024" class="csl-entry">
Krishna, R., Wang, J., Ahern, W., Sturmfels, P., Venkatesh, P., Kalvet, I., … Baker, D. (2024). <a href="https://doi.org/10.1126/science.adl2528">Generalized biomolecular modeling and design with RoseTTAFold all-atom</a>. <em>Science</em>, <em>384</em>(6693), eadl2528.
</div>
<div id="ref-Lavenant2019" class="csl-entry">
Lavenant, H. (2019). <a href="https://doi.org/10.1016/j.jfa.2019.05.003">Harmonic mappings valued in the wasserstein space</a>. <em>Journal of Functional Analysis</em>, <em>277</em>(3), 688–785.
</div>
<div id="ref-Lipman+2023" class="csl-entry">
Lipman, Y., Chen, R. T. Q., Ben-Hamu, H., Nickel, M., and Le, M. (2023). <a href="https://openreview.net/forum?id=PqvMRDCJT9t">Flow matching for generative modeling</a>. In <em>The eleventh international conference on learning representations</em>.
</div>
<div id="ref-Liu+2023-Flow" class="csl-entry">
Liu, X., Gong, C., and liu, qiang. (2023). <a href="https://openreview.net/forum?id=XVjTT1nw5z">Flow straight and fast: Learning to generate and transfer data with rectified flow</a>. In <em>The eleventh international conference on learning representations</em>.
</div>
<div id="ref-McCann1997" class="csl-entry">
McCann, R. J. (1997). <a href="https://doi.org/10.1006/aima.1997.1634">A convexity principle for interacting gases</a>. <em>Advances in Mathematics</em>, <em>128</em>(1), 153–179.
</div>
<div id="ref-Nichol+2022" class="csl-entry">
Nichol, A. Q., Dhariwal, P., Ramesh, A., Shyam, P., Mishkin, P., Mcgrew, B., … Chen, M. (2022). <a href="https://proceedings.mlr.press/v162/nichol22a.html"><span>GLIDE</span>: Towards photorealistic image generation and editing with text-guided diffusion models</a>. In K. Chaudhuri, S. Jegelka, L. Song, C. Szepesvari, G. Niu, and S. Sabato, editors, <em>Proceedings of the 39th international conference on machine learning</em>,Vol. 162, pages 16784–16804. PMLR.
</div>
<div id="ref-Pooladian+2023" class="csl-entry">
Pooladian, A.-A., Ben-Hamu, H., Domingo-Enrich, C., Amos, B., Lipman, Y., and Chen, R. T. Q. (2023). <a href="https://proceedings.mlr.press/v202/pooladian23a.html">Multisample flow matching: Straightening flows with minibatch couplings</a>. In A. Krause, E. Brunskill, K. Cho, B. Engelhardt, S. Sabato, and J. Scarlett, editors, <em>Proceedings of the 40th international conference on machine learning</em>,Vol. 202, pages 28100–28127. PMLR.
</div>
<div id="ref-Saharia+2022SIGGRAPH" class="csl-entry">
Saharia, C., Chan, W., Chang, H., Lee, C. A., Ho, J., Salimans, T., … Norouzi, M. (2022). <a href="https://openreview.net/forum?id=FPGs276lUeq"><span class="nocase">Palette: Image-to-Image Diffusion Models</span></a>.
</div>
<div id="ref-Saharia+2022" class="csl-entry">
Saharia, C., Chan, W., Saxena, S., Li, L., Whang, J., Denton, E., … Norouzi, M. (2022). <a href="https://openreview.net/forum?id=08Yk-n5l2Al">Photorealistic text-to-image diffusion models with deep language understanding</a>. In A. H. Oh, A. Agarwal, D. Belgrave, and K. Cho, editors, <em>Advances in neural information processing systems</em>.
</div>
<div id="ref-Saharia+2023" class="csl-entry">
Saharia, C., Ho, J., Chan, W., Salimans, T., Fleet, D. J., and Norouzi, M. (2023). <a href="https://doi.org/10.1109/TPAMI.2022.3204461">Image super-resolution via iterative refinement</a>. <em>IEEE Transactions on Pattern Analysis and Machine Intelligence</em>, <em>45</em>(4), 4713–4726.
</div>
<div id="ref-Tong+2024" class="csl-entry">
Tong, A., FATRAS, K., Malkin, N., Huguet, G., Zhang, Y., Rector-Brooks, J., … Bengio, Y. (2024). <a href="https://openreview.net/forum?id=CD9Snc73AW"><span class="nocase">Improving and Generalizing Flow-Based Generative Models with Minibatch Optimal Transport</span></a>. <em>Transactions on Machine Learning Research</em>.
</div>
<div id="ref-Watson+2023" class="csl-entry">
Watson, J. L., Juergens, D., Bennett, N. R., Trippe, B. L., Yim, J., Eisenach, H. E., … Baker, D. (2023). <a href="https://doi.org/10.1038/s41586-023-06415-8">De novo design of protein structure and function with RFdiffusion</a>. <em>Nature</em>, <em>620</em>(7976), 1089–1100.
</div>
<div id="ref-Zheng+2023GuidedFlow" class="csl-entry">
Zheng, Q., Le, M., Shaul, N., Lipman, Y., Grover, A., and Chen, R. T. Q. (2023). <a href="https://arxiv.org/abs/2311.13443">Guided flows for generative modeling and decision making</a>.
</div>
<div id="ref-Zheng+2024" class="csl-entry">
Zheng, S., He, J., Liu, C., Shi, Y., Lu, Z., Feng, W., … Liu, T.-Y. (2024). <a href="https://doi.org/10.1038/s42256-024-00837-3">Predicting equilibrium distributions for molecular systems with deep learning</a>. <em>Nature Machine Intelligence</em>, <em>6</em>(5), 558–567.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><img src="https://latex.codecogs.com/png.latex?c"> が <img src="https://latex.codecogs.com/png.latex?x_t"> と同じ画像である場合は，<span class="citation" data-cites="Ho+2022">(Ho et al., 2022)</span> のように <img src="https://latex.codecogs.com/png.latex?x_t"> にそのまま連結することも考えられる．↩︎</p></li>
<li id="fn2"><p>すべての <img src="https://latex.codecogs.com/png.latex?(P_%7Bt,c%7D)_%7Bt%5Cin%5B0,1%5D%7D"> は <img src="https://latex.codecogs.com/png.latex?%5Csigma%5Cto0"> の極限で決定論的なダイナミクスを定めていた．これを <img src="https://latex.codecogs.com/png.latex?%5Cpsi_c(t)"> と表すこととする．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>P(X)</category>
  <guid>https://162348.github.io/posts/2024/Samplers/NF3.html</guid>
  <pubDate>Fri, 09 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/RFDiff.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>離散空間上のフローベース模型</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/DiscreteDiffusion.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<div id="listing-diffusion-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724843393428" data-listing-date-modified-sort="1724770800000" data-listing-reading-time-sort="4" data-listing-word-count-sort="794">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1723215600000" data-listing-file-modified-sort="1724747077547" data-listing-date-modified-sort="1724684400000" data-listing-reading-time-sort="3" data-listing-word-count-sort="582">
<a href="../../../posts/2024/Samplers/NF3.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/RFDiff.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
フローベース模型による条件付き生成
</h5>
<div class="card-subtitle listing-subtitle">
誘導からフローマッチングへ
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-10
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Sampling,Python" data-listing-date-sort="1722524400000" data-listing-file-modified-sort="1724157221692" data-listing-date-modified-sort="1722783600000" data-listing-reading-time-sort="15" data-listing-word-count-sort="2810">
<a href="../../../posts/2024/Samplers/DDPM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top"><img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-encoding-output-1.png" style="height: 150px;" class="thumbnail-image card-img"></p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
拡散模型の実装
</h5>
<div class="card-subtitle listing-subtitle">
<code>PyTorch</code>によるハンズオン
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-02
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="3" data-categories="Deep,Process,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724338800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="826">
<a href="../../../posts/2024/Samplers/Diffusion.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/DDPM_outputs.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
拡散模型
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル６
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="4" data-categories="Process,Sampling,P(X)" data-listing-date-sort="1722610800000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724598000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="470">
<a href="../../../posts/2024/Samplers/SB1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top"><img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" style="height: 150px;" class="thumbnail-image card-img"></p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
分布道の学習としての生成モデリング
</h5>
<div class="card-subtitle listing-subtitle">
Denoising Diffusion から Schrödinger Bridge へ
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-03
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="5" data-categories="Sampling,Process" data-listing-date-sort="1722610800000" data-listing-file-modified-sort="1724852042837" data-listing-date-modified-sort="1724598000000" data-listing-reading-time-sort="2" data-listing-word-count-sort="287">
<a href="../../../posts/2024/Samplers/SB2.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/unnormalized_target.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
雑音除去拡散サンプラー
</h5>
<div class="card-subtitle listing-subtitle">
拡散モデルによるベイズ計算
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-03
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<section id="sec-D3PM" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sec-D3PM"><span class="header-section-number">1</span> 離散雑音除去拡散模型 (D3PM) <span class="citation" data-cites="Austin+2021">(Austin et al., 2021)</span></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://github.com/cloneofsimo/d3pm/blob/main/contents/best.gif"><img src="https://162348.github.io/posts/2024/Samplers/Files/best.gif" class="img-fluid figure-img" alt="Minimal Implementation of a D3PM by Simo Ryu (Ryu, 2024) (Tap to image to visit his repository)"></a></p>
<figcaption>Minimal Implementation of a D3PM by Simo Ryu <span class="citation" data-cites="Simo2024">(Ryu, 2024)</span> (Tap to image to visit his repository)</figcaption>
</figure>
</div>
<section id="はじめに" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h3>
<p>離散データ上のフローベースのサンプリング法として，Argmax Flows と Multinomial Diffusion が <span class="citation" data-cites="Hoogeboom+2021">(Hoogeboom et al., 2021)</span> により提案された．</p>
<p>D3PM <span class="citation" data-cites="Austin+2021">(Austin et al., 2021)</span> はこの拡張として提案されたものである．</p>
<p>その結果，D3PM は BERT <span class="citation" data-cites="Lewis+2020-BART">(Lewis et al., 2020)</span> などのマスク付き言語モデルと等価になる．</p>
</section>
<section id="ノイズ過程" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="ノイズ過程"><span class="header-section-number">1.2</span> ノイズ過程</h3>
<section id="設計意図" class="level4" data-number="1.2.1">
<h4 data-number="1.2.1" class="anchored" data-anchor-id="設計意図"><span class="header-section-number">1.2.1</span> 設計意図</h4>
<p>効率的な訓練のために，</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?q(x_t%7Cx_0)"> からシミュレーション可能</li>
<li><img src="https://latex.codecogs.com/png.latex?q(x_%7Bt-1%7D%7Cx_t,x_0)"> が評価可能</li>
</ol>
<p>であるとする．これにより， <img src="https://latex.codecogs.com/png.latex?%0AL_%7Bt-1%7D(x_0):=%5Cint_%5Cmathcal%7BX%7D%5Coperatorname%7BKL%7D%5Cbiggr(q(x_%7Bt-1%7D%7Cx_t,x_0),p_%5Ctheta(x_%7Bt-1%7D%7Cx_t)%5Cbiggl)%5C,q(x_t%7Cx_0)%5C,dx_t%0A"><br>
の Monte Carlo 近似が可能になる．</p>
<p><img src="https://latex.codecogs.com/png.latex?p(x_T)=q(x_T%7Cx_0)"> を一様分布など，簡単にシミュレーション可能な分布とする．</p>
</section>
<section id="実装" class="level4" data-number="1.2.2">
<h4 data-number="1.2.2" class="anchored" data-anchor-id="実装"><span class="header-section-number">1.2.2</span> 実装</h4>
<p><img src="https://latex.codecogs.com/png.latex?x_0%5Cin%5Cmathcal%7BX%7D"> は，<img src="https://latex.codecogs.com/png.latex?%5BK%5D">-値の離散ベクトル <img src="https://latex.codecogs.com/png.latex?x_0%5E%7B(i)%7D"> が <img src="https://latex.codecogs.com/png.latex?D"> 個集まったものとする．ただし，<img src="https://latex.codecogs.com/png.latex?x_0%5E%7B(i)%7D"> は one-hot encoding による横ベクトルとする．</p>
<p>すると，ある確率行列 <img src="https://latex.codecogs.com/png.latex?Q_t"> に関して， <img src="https://latex.codecogs.com/png.latex?%0AQ(-%7Cx_%7Bt-1%7D)=x_%7Bt-1%7DQ_t=%5Ccdots=x_0Q_1%5Ccdots%20Q_t%0A"> と表せる．右辺の第 <img src="https://latex.codecogs.com/png.latex?i"> 行は，次 <img src="https://latex.codecogs.com/png.latex?k%5Cin%5BK%5D"> の状態に至る確率を表す確率ベクトルとなっている．</p>
<p>するとこの逆は，ベイズの定理より <img src="https://latex.codecogs.com/png.latex?%0Aq(x_%7Bt-1%7D%7Cx_t,x_0)=%5Cfrac%7Bq(x_t%7Cx_%7Bt-1%7D,x_0)q(x_%7Bt-1%7D%7Cx_0)%7D%7Bq(x_t%7Cx_0)%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0AQ(-%7Cx_t,x_0)=%0A"></p>
</section>
<section id="核-q-の取り方" class="level4" data-number="1.2.3">
<h4 data-number="1.2.3" class="anchored" data-anchor-id="核-q-の取り方"><span class="header-section-number">1.2.3</span> 核 <img src="https://latex.codecogs.com/png.latex?Q"> の取り方</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0AQ_t:=(1-%5Cbeta_t)I_K+%5Cfrac%7B%5Cbeta_t%7D%7BK%7D%0A"> と取った場合を一様核という．</p>
<p>または，<img src="https://latex.codecogs.com/png.latex?Q_t"> として <strong>脱落核</strong> を取ることもできる．これは１つの点 <img src="https://latex.codecogs.com/png.latex?m%5Cin%5BK%5D"> を吸収点とする方法である： <img src="https://latex.codecogs.com/png.latex?%0A(Q_t)_%7Bij%7D:=%5Cbegin%7Bcases%7D1&amp;i=j=m,%5C%5C%0A1-%5Cbeta_t&amp;i=j%5Cin%5BK%5D%5Csetminus%5C%7Bm%5C%7D%5C%5C%0A%5Cbeta_t&amp;%5Cmathrm%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"></p>
</section>
</section>
<section id="除去過程" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="除去過程"><span class="header-section-number">1.3</span> 除去過程</h3>
<p><img src="https://latex.codecogs.com/png.latex?p_%5Ctheta(x_%7Bt-1%7D%7Cx_t)"> をモデリングするのではなく，<img src="https://latex.codecogs.com/png.latex?%5Cwidetilde%7Bp%7D_%5Ctheta(x_0%7Cx_t)"> をモデリングし， <img src="https://latex.codecogs.com/png.latex?%0Ap_%5Ctheta(x_%7Bt-1%7D%7Cx_t)%5C,%5Cpropto%5C,%5Csum_%7B%5Cwidetilde%7Bx%7D_0%5Cin%5BK%5D%7Dq(x_%7Bt-1%7D%7Cx_t,%5Cwidetilde%7Bx%7D_0)%5Cwidetilde%7Bp%7D_%5Ctheta(%5Cwidetilde%7Bx%7D_0%7Cx_t)%0A"> は間接的にモデリングする．</p>
<p>これにより，ステップ数を小さく取った場合でも，<img src="https://latex.codecogs.com/png.latex?k"> ステップをまとめて <img src="https://latex.codecogs.com/png.latex?p_%5Ctheta(x_%7Bt-k%7D%7Cx_t)"> をいきなりサンプリングするということも十分に可能になるためである．</p>
</section>
<section id="bert-devlin2019-との対応" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="bert-devlin2019-との対応"><span class="header-section-number">1.4</span> BERT <span class="citation" data-cites="Devlin+2019">(Devlin et al., 2019)</span> との対応</h3>
<p><img src="https://latex.codecogs.com/png.latex?Q_t"> として，一様核と脱落核を重ね合わせたとする．</p>
<p>すなわち，各トークンを各ステップで <img src="https://latex.codecogs.com/png.latex?%5Calpha=10%5C%25"> でマスクし，<img src="https://latex.codecogs.com/png.latex?%5Cbeta=5%5C%25"> で一様にリサンプリングし，これを元に戻す逆過程を学習する．</p>
<p>これは BERT <span class="citation" data-cites="Devlin+2019">(Devlin et al., 2019)</span> と全く同じ目的関数を定める．</p>
<p>MaskGIT (Masked Generative Image Transformer) <span class="citation" data-cites="Chang+2022">(Chang et al., 2022)</span> も，画像をベクトル量子化した後に，全く同様の要領でマスク・リサンプリングをし，これを回復しようとする．これはトランスフォーマーなどの自己回帰的モデルを用いて逐次的に生成するより，サンプリングがはるかに速くなるという．</p>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="参考文献" class="level2 appendix" data-number="2"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">2</span> 参考文献</h2><div class="quarto-appendix-contents">

<p><span class="citation" data-cites="Simo2024">(Ryu, 2024)</span> に素晴らしい教育的リポジトリがある．D3PM の 425 行での PyTorch での実装を提供している．</p>
<p><span class="citation" data-cites="Campbell+2024">(Campbell et al., 2024)</span> は最新の論文の一つである．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Austin+2021" class="csl-entry">
Austin, J., Johnson, D. D., Ho, J., Tarlow, D., and Berg, R. van den. (2021). <a href="https://proceedings.neurips.cc/paper_files/paper/2021/file/958c530554f78bcd8e97125b70e6973d-Paper.pdf">Structured denoising diffusion models in discrete state-spaces</a>. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P. S. Liang, and J. W. Vaughan, editors, <em>Advances in neural information processing systems</em>,Vol. 34, pages 17981–17993. Curran Associates, Inc.
</div>
<div id="ref-Campbell+2024" class="csl-entry">
Campbell, A., Yim, J., Barzilay, R., Rainforth, T., and Jaakkola, T. (2024). <a href="https://arxiv.org/abs/2402.04997">Generative flows on discrete state-spaces: Enabling multimodal flows with applications to protein co-design</a>.
</div>
<div id="ref-Chang+2022" class="csl-entry">
Chang, H., Zhang, H., Jiang, L., Liu, C., and Freeman, W. T. (2022). MaskGIT: Masked generative image transformer. In <em>Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR)</em>, pages 11315–11325.
</div>
<div id="ref-Devlin+2019" class="csl-entry">
Devlin, J., Chang, M.-W., Lee, K., and Toutanova, K. (2019). <a href="https://aclanthology.org/N19-1423/">BERT: Pre-training of deep bidirectional transformers for language understanding</a>. In <em>Proceedings of the 2019 conference of the north american chapter of the association for computational linguistics: Human language technologies</em>,Vol. 1, pages 4171–4186.
</div>
<div id="ref-Hoogeboom+2021" class="csl-entry">
Hoogeboom, E., Nielsen, D., Jaini, P., Forré, P., and Welling, M. (2021). <a href="https://openreview.net/forum?id=6nbpPqUCIi7">Argmax flows and multinomial diffusion: Learning categorical distributions</a>. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. W. Vaughan, editors, <em>Advances in neural information processing systems</em>.
</div>
<div id="ref-Lewis+2020-BART" class="csl-entry">
Lewis, M., Liu, Y., Goyal, N., Ghazvininejad, M., Mohamed, A., Levy, O., … Zettlemoyer, L. (2020). <a href="https://doi.org/10.18653/v1/2020.acl-main.703"><span>BART</span>: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension</a>. In D. Jurafsky, J. Chai, N. Schluter, and J. Tetreault, editors, <em>Proceedings of the 58th annual meeting of the association for computational linguistics</em>, pages 7871–7880. Online: Association for Computational Linguistics.
</div>
<div id="ref-Simo2024" class="csl-entry">
Ryu, S. (2024). <a href="https://github.com/cloneofsimo/d3pm">Minimal implementation of a D3PM (structured denoising diffusion models in discrete state-spaces), in pytorch</a>.
</div>
</div></section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Nature</category>
  <guid>https://162348.github.io/posts/2024/Samplers/DiscreteDiffusion.html</guid>
  <pubDate>Thu, 08 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/best.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Neural Network 訓練の加速</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/DDPM1.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/docs/posts/2024/Samplers/DDPM_files/figure-html/fig-encoding-output-1.png" class="img-fluid figure-img" style="width:70.0%"></p>
<figcaption><a href="../../../posts/2024/Samplers/DDPM.html">前稿：拡散模型の実装――PyTorch によるハンズオン</a></figcaption>
</figure>
</div>
<section id="問題点と改善したいこと" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="問題点と改善したいこと"><span class="header-section-number">1</span> 問題点と改善したいこと</h2>
<p>データセットの読み込みの段階において，次のコードがある：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_workers'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pin_memory'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prefetch_factor'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}</span>
<span id="cb1-2">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb1-3">test_loader  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_dataset,  batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inference_batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span></code></pre></div>
<p>これはデータセット（今回は<code>MNIST</code>）を読み込み，iterable 型としての仕様を可能にするためのコードである．</p>
<p>上述の通りのコードだとエポック 18 で <code>RuntimeError: Shared memory manager connection has timed out</code> を得たが，<code>num_workers=0</code> とするとエラーが発生しなかった．</p>
<p>しかし，<code>num_workers=0</code> （デフォルト設定）とすると，デフォルトの単一プロセス処理が実行されるため，並列による高速化の恩恵を受けられない．その結果，１エポック 12 分以上なので，40 時間以上をかける必要が出てきた（寝てる間もディスプレイをオフにするだけでスリープさせず，回し続ける）．</p>
<div class="callout callout-style-simple callout-important no-icon callout-titled" title="今回の目標">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
今回の目標
</div>
</div>
<div class="callout-body-container callout-body">
<p>うまく並列処理をするようなコードに書き直すことで，ローカル環境でも１日以内で実行できるようにしたい．</p>
</div>
</div>
</section>
<section id="dataloader-の引数について" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="dataloader-の引数について"><span class="header-section-number">2</span> <code>DataLoader</code> の引数について</h2>
<p><a href="https://pytorch.org/docs/stable/data.html"><code>DataLoader</code> メソッドのドキュメント</a> を参照すると，</p>
<section id="num_workers" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="num_workers"><span class="header-section-number">2.1</span> <code>num_workers</code></h3>
<p>は正整数に設定されると，その数だけ並列に動く ‘worker’ が起動され，マルチプロセス処理が実行される．</p>
<p>しかし，子プロセスも同等のメモリを占めるため，値が大きすぎるとランタイムエラーが発生する（<a href="https://github.com/pytorch/pytorch/issues/13246#issuecomment-905703662">issue #13246</a> 参照）．</p>
<p>さらに，この際の並列処理は Python の <code>multiprocessing</code> パッケージによるもので，Windows と MacOS では（Unix 系のような <code>fork()</code> ではなく） <code>spawn()</code> が呼ばれる．これは別のインタープリターを開始するため，コードの大部分を <code>if __name__ == "__main__":</code> で囲まない限り，同じコードを何回も実行することとなり，ランタイムエラーが出現することとなる．</p>
</section>
<section id="pin_memeory" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="pin_memeory"><span class="header-section-number">2.2</span> <code>pin_memeory</code></h3>
<p>しかし，CUDA 上のテンソルオブジェクトを並列処理で共有することは非推奨であり，その際は自動メモリ固定 (automatic memory pinning) を行う必要がある．</p>
<p>pinned memory とは page-locked メモリとも呼ばれ，通常の pageable メモリより転送速度が速いという．</p>
<p>さて，paging とはなんだろうか？（一旦後回し）</p>
</section>
<section id="prefetch_factor" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="prefetch_factor"><span class="header-section-number">2.3</span> <code>prefetch_factor</code></h3>
<p>は各 <code>worker</code> が取ってきてストックしておくバッチの数である．</p>
<p>すなわち，<code>num_workers * prefetch_factor</code> だけデータをメモリに読み込んでおくことになる．</p>
</section>
</section>
<section id="高速化法" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="高速化法"><span class="header-section-number">3</span> 高速化法</h2>
<section id="google-colab-の利用" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="google-colab-の利用"><span class="header-section-number">3.1</span> Google Colab の利用</h3>
<p>結局この方法でトレーニングをし，<a href="../../../posts/2024/Samplers/DDPM.html">前稿</a> を完成させたのであった．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/A100.png" class="img-fluid figure-img"></p>
<figcaption>A100（8/6/2024 時点）</figcaption>
</figure>
</div>
<p>A100 が税込 1,494,000 円であったが，これを利用すると１エポック 22 秒で実行できた．</p>
</section>
<section id="torch.nn.dataparallel-の使用" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="torch.nn.dataparallel-の使用"><span class="header-section-number">3.2</span> <code>torch.nn.DataParallel</code> の使用</h3>
<p>自分のローカルマシンは CUDA がないため利用できないが，ある場合は <code>PyTorch</code> のモジュールで並列処理が可能である．<sup>1</sup></p>
</section>
</section>
<section id="mps-で本当に高速になっているのか" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="mps-で本当に高速になっているのか"><span class="header-section-number">4</span> <code>mps</code> で本当に高速になっているのか？</h2>
<p>アップルは <a href="https://developer.apple.com/jp/metal/">Metal</a> という計算 API を提供しており，これが Apple Silicon で利用できる．</p>
<div id="42adf36d" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb2-2">DEVICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb2-3">train_batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb2-4">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</div>
<p>とし，１エポックにかかる時間を比較する．その他の設定は前節と同様．</p>
<div id="46f74797" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start training DDPMs..."</span>)</span>
<span id="cb3-2">model.train()</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb3-5"></span>
<span id="cb3-6">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(epochs):</span>
<span id="cb3-9">    noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_loader)):</span>
<span id="cb3-11">        optimizer.zero_grad()</span>
<span id="cb3-12"></span>
<span id="cb3-13">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="cb3-14">        </span>
<span id="cb3-15">        noisy_input, epsilon, pred_epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion(x)</span>
<span id="cb3-16">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denoising_loss(pred_epsilon, epsilon)</span>
<span id="cb3-17">        </span>
<span id="cb3-18">        noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> loss.item()</span>
<span id="cb3-19">        </span>
<span id="cb3-20">        loss.backward()</span>
<span id="cb3-21">        optimizer.step()</span>
<span id="cb3-22">        </span>
<span id="cb3-23">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Epoch"</span>, epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete!"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Denoising Loss: "</span>, noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batch_idx)</span>
<span id="cb3-24">    </span>
<span id="cb3-25">total_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Finish!! Total time: "</span>, total_time)</span></code></pre></div>
</div>
<p>12:58 であった．一方で，CPU でも訓練してみる．</p>
<div id="a0cce554" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">DEVICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span>)</span>
<span id="cb4-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Denoiser(image_resolution<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_size,</span>
<span id="cb4-3">                    hidden_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hidden_dims, </span>
<span id="cb4-4">                    diffusion_time_embedding_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timestep_embedding_dim, </span>
<span id="cb4-5">                    n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_timesteps).to(DEVICE)</span>
<span id="cb4-6">diffusion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Diffusion(model, image_resolution<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_size, n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_timesteps, beta_minmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>beta_minmax, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DEVICE).to(DEVICE)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start training DDPMs..."</span>)</span>
<span id="cb4-9">model.train()</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb4-12"></span>
<span id="cb4-13">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(epochs):</span>
<span id="cb4-16">    noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_loader)):</span>
<span id="cb4-18">        optimizer.zero_grad()</span>
<span id="cb4-19"></span>
<span id="cb4-20">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="cb4-21">        </span>
<span id="cb4-22">        noisy_input, epsilon, pred_epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion(x)</span>
<span id="cb4-23">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denoising_loss(pred_epsilon, epsilon)</span>
<span id="cb4-24">        </span>
<span id="cb4-25">        noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> loss.item()</span>
<span id="cb4-26">        </span>
<span id="cb4-27">        loss.backward()</span>
<span id="cb4-28">        optimizer.step()</span>
<span id="cb4-29">        </span>
<span id="cb4-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Epoch"</span>, epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete!"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Denoising Loss: "</span>, noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batch_idx)</span>
<span id="cb4-31">    </span>
<span id="cb4-32">total_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Finish!! Total time: "</span>, total_time)</span></code></pre></div>
</div>
<p>１時間越え！</p>
</section>



<div id="quarto-appendix" class="default"><section id="終わりに" class="level2 appendix" data-number="5"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5</span> 終わりに</h2><div class="quarto-appendix-contents">

<p>あまりに時間がかかるので，本記事は <code>eval: false</code> としておく．</p>


</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://qiita.com/m__k/items/87b3b1da15f35321ecf5">PyTorchでGPUを並列で使えるようにするtorch.nn.DataParallelのメモ</a> などを参照した．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/DDPM1.html</guid>
  <pubDate>Mon, 05 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/fig-generation3-output-1.png" medium="image" type="image/png" height="142" width="144"/>
</item>
<item>
  <title>エネルギーベースモデルのノイズ対照学習</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/EBM2.html</link>
  <description><![CDATA[ 





<section id="関連ページ" class="level3 unnumbered unlisted">
<h3 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h3>
<div id="listing-lst-listing" class="listing quarto-float quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1725250592261" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="880">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Python" data-listing-date-sort="1722524400000" data-listing-file-modified-sort="1724761473773" data-listing-date-modified-sort="1724252400000" data-listing-reading-time-sort="4" data-listing-word-count-sort="784">
<a href="../../../posts/2024/Samplers/EBM1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/swiss_roll.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
スコアマッチング
</h5>
<div class="card-subtitle listing-subtitle">
JAX によるハンズオン
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-02
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Kernel" data-listing-date-sort="1723215600000" data-listing-file-modified-sort="1724220374242" data-listing-date-modified-sort="1723302000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="582">
<a href="../../../posts/2024/Kernels/Kernel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
カーネル法の概観
</h5>
<div class="card-subtitle listing-subtitle">
半正定値カーネルから距離学習まで
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-10
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>
<section id="モデル定義" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="モデル定義"><span class="header-section-number">1</span> モデル定義</h2>
<div id="76e8355d" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENERGY-BASED MODEL</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EBM(nn.Module):</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb1-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(EBM, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The normalizing constant logZ(θ)        </span></span>
<span id="cb1-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Parameter(torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>], requires_grad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span>
<span id="cb1-12"></span>
<span id="cb1-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Sequential(</span>
<span id="cb1-14">            nn.Linear(dim, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>),</span>
<span id="cb1-15">            nn.LeakyReLU(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb1-16">            nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>),</span>
<span id="cb1-17">            nn.LeakyReLU(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb1-18">            nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-19">            )</span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb1-22">        log_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.f(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c</span>
<span id="cb1-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> log_p</span></code></pre></div>
</div>
</section>
<section id="事前準備" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="事前準備"><span class="header-section-number">2</span> 事前準備</h2>
<div id="6808abe1" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb2-8">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-10"></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> value(energy, noise, x, gen):</span>
<span id="cb2-13">    logp_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> energy(x)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logp(x)</span></span>
<span id="cb2-14">    logq_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> noise.log_prob(x).unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logq(x)</span></span>
<span id="cb2-15">    logp_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> energy(gen)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logp(x̃)</span></span>
<span id="cb2-16">    logq_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> noise.log_prob(gen).unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logq(x̃)</span></span>
<span id="cb2-17"></span>
<span id="cb2-18">    value_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logp_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> torch.logsumexp(torch.cat([logp_x, logq_x], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># log[p(x)/(p(x) + q(x))]</span></span>
<span id="cb2-19">    value_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logq_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> torch.logsumexp(torch.cat([logp_gen, logq_gen], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># log[q(x̃)/(p(x̃) + q(x̃))]</span></span>
<span id="cb2-20"></span>
<span id="cb2-21">    v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value_data.mean() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> value_gen.mean()</span>
<span id="cb2-22"></span>
<span id="cb2-23">    r_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sigmoid(logp_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> logq_x)</span>
<span id="cb2-24">    r_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sigmoid(logq_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> logp_gen)</span>
<span id="cb2-25"></span>
<span id="cb2-26">    acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((r_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (r_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()).cpu().numpy() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gen))</span>
<span id="cb2-27"></span>
<span id="cb2-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>v,  acc</span>
<span id="cb2-29"></span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#-------------------------------------------</span></span>
<span id="cb2-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DATA</span></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#-------------------------------------------</span></span>
<span id="cb2-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_data(args):</span>
<span id="cb2-35">    dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_2d_data(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.dataset, n_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.samples)</span>
<span id="cb2-36">    dataloader  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.batch, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dataset, dataloader</span>
<span id="cb2-38"></span>
<span id="cb2-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sample_2d_data(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8gaussians'</span>, n_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>):</span>
<span id="cb2-40">    </span>
<span id="cb2-41">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(n_samples, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-42"></span>
<span id="cb2-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8gaussians'</span>:</span>
<span id="cb2-44">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb2-45">        sq2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-46">        centers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (sq2,sq2), (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sq2,sq2), (sq2,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sq2), (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sq2,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sq2)]</span>
<span id="cb2-47">        centers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([(scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x,y <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> centers])</span>
<span id="cb2-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> sq2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> centers[torch.randint(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(centers), size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(n_samples,))])</span>
<span id="cb2-49"></span>
<span id="cb2-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2spirals'</span>:</span>
<span id="cb2-51">        n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sqrt(torch.rand(n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">540</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.pi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span></span>
<span id="cb2-52">        d1x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> torch.cos(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.rand(n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-53">        d1y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>   torch.sin(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.rand(n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-54">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat([torch.stack([ d1x,  d1y], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb2-55">                       torch.stack([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d1x, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d1y], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z</span>
<span id="cb2-57"></span>
<span id="cb2-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'checkerboard'</span>:</span>
<span id="cb2-59">        x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand(n_samples) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-60">        x2_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand(n_samples) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> torch.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, (n_samples,), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-61">        x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x1.floor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> torch.stack([x1, x2], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-63"></span>
<span id="cb2-64">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rings'</span>:</span>
<span id="cb2-65">        n_samples4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_samples3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_samples2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb2-66">        n_samples1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_samples4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_samples3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_samples2</span>
<span id="cb2-67"></span>
<span id="cb2-68">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so as not to have the first point = last point, set endpoint=False in np; here shifted by one</span></span>
<span id="cb2-69">        linspace4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.pi, n_samples4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-70">        linspace3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.pi, n_samples3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-71">        linspace2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.pi, n_samples2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-72">        linspace1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.pi, n_samples1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-73"></span>
<span id="cb2-74">        circ4_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cos(linspace4)</span>
<span id="cb2-75">        circ4_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sin(linspace4)</span>
<span id="cb2-76">        circ3_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cos(linspace4) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span></span>
<span id="cb2-77">        circ3_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sin(linspace3) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span></span>
<span id="cb2-78">        circ2_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cos(linspace2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-79">        circ2_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sin(linspace2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-80">        circ1_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cos(linspace1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb2-81">        circ1_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sin(linspace1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb2-82"></span>
<span id="cb2-83">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.stack([torch.cat([circ4_x, circ3_x, circ2_x, circ1_x]),</span>
<span id="cb2-84">                         torch.cat([circ4_y, circ3_y, circ2_y, circ1_y])], dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span></span>
<span id="cb2-85"></span>
<span id="cb2-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># random sample</span></span>
<span id="cb2-87">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[torch.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n_samples, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(n_samples,))]</span>
<span id="cb2-88"></span>
<span id="cb2-89">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add noise</span></span>
<span id="cb2-90">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.normal(mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.zeros_like(x), std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>torch.ones_like(x))</span>
<span id="cb2-91"></span>
<span id="cb2-92">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pinwheel"</span>:</span>
<span id="cb2-93">        rng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.RandomState()</span>
<span id="cb2-94">        radial_std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb2-95">        tangential_std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-96">        num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-97">        num_per_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-98">        rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb2-99">        rads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi, num_classes, endpoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb2-100"></span>
<span id="cb2-101">        features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rng.randn(num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>num_per_class, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-102">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.array([radial_std, tangential_std])</span>
<span id="cb2-103">        features[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span></span>
<span id="cb2-104">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.repeat(np.arange(num_classes), num_per_class)</span>
<span id="cb2-105"></span>
<span id="cb2-106">        angles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rads[labels] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.exp(features[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb2-107">        rotations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack([np.cos(angles), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.sin(angles), np.sin(angles), np.cos(angles)])</span>
<span id="cb2-108">        rotations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.reshape(rotations.T, (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-109">        </span>
<span id="cb2-110">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> rng.permutation(np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ti,tij-&gt;tj"</span>, features, rotations))</span>
<span id="cb2-111">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> torch.as_tensor(data, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb2-112"></span>
<span id="cb2-113">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-114">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">RuntimeError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Invalid `dataset` to sample from.'</span>)</span></code></pre></div>
</details>
</div>
<div id="1a2c9ac8" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --------------------</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --------------------</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@torch.no_grad</span>()</span>
<span id="cb3-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot(dataset, energy, noise, epoch, device):</span>
<span id="cb3-7">    n_pts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb3-8">    range_lim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb3-9"></span>
<span id="cb3-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># construct test points</span></span>
<span id="cb3-11">    test_grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> setup_grid(range_lim, n_pts, device)</span>
<span id="cb3-12"></span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fig, axs = plt.subplots(1, 3, figsize=(12,4.3), subplot_kw={'aspect': 'equal'})</span></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot_samples(dataset, axs[0], range_lim, n_pts)</span></span>
<span id="cb3-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot_noise(noise, axs[1], test_grid, n_pts)</span></span>
<span id="cb3-17">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), subplot_kw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'aspect'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>})</span>
<span id="cb3-18">    plot_energy(energy, ax, test_grid, n_pts)</span>
<span id="cb3-19"></span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># format</span></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ax <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plt.gcf().axes: format_ax(ax, range_lim)</span>
<span id="cb3-22">    plt.tight_layout()</span>
<span id="cb3-23"></span>
<span id="cb3-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save</span></span>
<span id="cb3-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saving image to images/....'</span>)</span>
<span id="cb3-26">    plt.savefig(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'images/epoch_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.png'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(epoch))</span>
<span id="cb3-27">    plt.close()</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup_grid(range_lim, n_pts, device):</span>
<span id="cb3-30">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>range_lim, range_lim, n_pts)</span>
<span id="cb3-31">    xx, yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.meshgrid((x, x), indexing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij'</span>)</span>
<span id="cb3-32">    zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.stack((xx.flatten(), yy.flatten()), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> xx, yy, zz.to(device)</span>
<span id="cb3-34"></span>
<span id="cb3-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_samples(dataset, ax, range_lim, n_pts):</span>
<span id="cb3-36">    samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.numpy()</span>
<span id="cb3-37">    ax.hist2d(samples[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], samples[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>range_lim, range_lim], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>range_lim, range_lim]], bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_pts, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.jet)</span>
<span id="cb3-38">    ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Target samples'</span>)</span>
<span id="cb3-39"></span>
<span id="cb3-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_energy(energy, ax, test_grid, n_pts):</span>
<span id="cb3-41">    xx, yy, zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_grid</span>
<span id="cb3-42">    log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> energy(zz)</span>
<span id="cb3-43">    prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> log_prob.exp().cpu()</span>
<span id="cb3-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb3-45">    ax.pcolormesh(xx.numpy(), yy.numpy(), prob.view(n_pts,n_pts).numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.jet)</span>
<span id="cb3-46">    ax.set_facecolor(plt.cm.jet(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>))</span>
<span id="cb3-47">    ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Energy density'</span>)</span>
<span id="cb3-48"></span>
<span id="cb3-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plot_noise(noise, ax, test_grid, n_pts):</span>
<span id="cb3-50">    xx, yy, zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_grid</span>
<span id="cb3-51">    log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> noise.log_prob(zz)</span>
<span id="cb3-52">    prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> log_prob.exp().cpu()</span>
<span id="cb3-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb3-54">    ax.pcolormesh(xx.numpy(), yy.numpy(), prob.view(n_pts,n_pts).numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.jet)</span>
<span id="cb3-55">    ax.set_facecolor(plt.cm.jet(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>))</span>
<span id="cb3-56">    ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Noise density'</span>)</span>
<span id="cb3-57"></span>
<span id="cb3-58"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> format_ax(ax, range_lim):</span>
<span id="cb3-59">    ax.set_xlim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>range_lim, range_lim)</span>
<span id="cb3-60">    ax.set_ylim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>range_lim, range_lim)</span>
<span id="cb3-61">    ax.get_xaxis().set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-62">    ax.get_yaxis().set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-63">    ax.invert_yaxis()</span></code></pre></div>
</details>
</div>
</section>
<section id="訓練" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="訓練"><span class="header-section-number">3</span> 訓練</h2>
<div id="a0d10dd7" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> argparse</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.distributions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> D</span>
<span id="cb4-5"></span>
<span id="cb4-6">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if torch.cuda.is_available():</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     d = 'cuda'</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># elif torch.backends.mps.is_available():</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     d = 'mps'</span></span>
<span id="cb4-11">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(d)</span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Args:</span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb4-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.batch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8gaussians'</span></span>
<span id="cb4-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb4-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb4-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.b1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb4-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.b2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.999</span></span>
<span id="cb4-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.resume <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb4-23"></span>
<span id="cb4-24">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Args()</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I. MODELS</span></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-29">energy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EBM(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).to(device)</span>
<span id="cb4-30">noise <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> D.MultivariateNormal(torch.zeros(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).to(device), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>torch.eye(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).to(device))</span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># II. OPTIMIZERS</span></span>
<span id="cb4-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-34">optim_energy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.Adam(energy.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.lr, betas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(args.b1, args.b2))</span>
<span id="cb4-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># III. DATA LOADER</span></span>
<span id="cb4-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-38">dataset, dataloader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_data(args)</span>
<span id="cb4-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># IV. TRAINING</span></span>
<span id="cb4-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------</span></span>
<span id="cb4-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main(args):</span>
<span id="cb4-43">    start_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----------------------------------------------------------------- #</span></span>
<span id="cb4-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> args.resume:</span>
<span id="cb4-46">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Resuming from checkpoint at ckpts/nce.pth.tar...'</span>)</span>
<span id="cb4-47">        checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ckpts/nce.pth.tar'</span>)</span>
<span id="cb4-48">        energy.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'energy'</span>])</span>
<span id="cb4-49">        start_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----------------------------------------------------------------- #</span></span>
<span id="cb4-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start_epoch, start_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> args.epoch):</span>
<span id="cb4-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(dataloader):           </span>
<span id="cb4-53">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(device)</span>
<span id="cb4-54">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------</span></span>
<span id="cb4-55">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Generate samples from noise</span></span>
<span id="cb4-56">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------</span></span>
<span id="cb4-57">            gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> noise.sample((args.batch,))</span>
<span id="cb4-58">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------</span></span>
<span id="cb4-59">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Train Energy-Based Model</span></span>
<span id="cb4-60">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------</span></span>
<span id="cb4-61">            optim_energy.zero_grad()</span>
<span id="cb4-62"></span>
<span id="cb4-63">            loss_energy, acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value(energy, noise, x, gen)</span>
<span id="cb4-64"></span>
<span id="cb4-65">            loss_energy.backward()</span>
<span id="cb4-66">            optim_energy.step()  </span>
<span id="cb4-67"></span>
<span id="cb4-68">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb4-69">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[Epoch </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">] [Batch </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">] [Value: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">] [Accuracy:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]"</span></span>
<span id="cb4-70">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> (epoch, start_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> args.epoch, i, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dataloader), loss_energy.item(), acc)</span>
<span id="cb4-71">            )</span>
<span id="cb4-72"></span>
<span id="cb4-73">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save checkpoint</span></span>
<span id="cb4-74">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saving models...'</span>)</span>
<span id="cb4-75">        state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb4-76">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'energy'</span>: energy.state_dict(),</span>
<span id="cb4-77">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>: loss_energy,</span>
<span id="cb4-78">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>: epoch,</span>
<span id="cb4-79">        }</span>
<span id="cb4-80">        os.makedirs(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ckpts'</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-81">        torch.save(state, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ckpts/nce.pth.tar'</span>)</span>
<span id="cb4-82"></span>
<span id="cb4-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># visualization</span></span>
<span id="cb4-84">        plot(dataset, energy, noise, epoch, device)</span>
<span id="cb4-85"></span>
<span id="cb4-86"></span>
<span id="cb4-87"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'__main__'</span>:</span>
<span id="cb4-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(args)</span>
<span id="cb4-89">    main(args)</span></code></pre></div>
</div>
<p>大変軽量で，cpu でも５分ほどで学習できる（そのうちほとんどは画像の保存にかかる時間である）．しかし，mps では次のエラーを得る．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NotImplementedError:</span> The operator <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'aten::linalg_cholesky_ex.L'</span> is not currently implemented for the MPS device. If you want this op to be added in priority during the prototype phase of this feature, please comment on https://github.com/pytorch/pytorch/issues/77764. As a temporary fix, you can set the environment variable <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTORCH_ENABLE_MPS_FALLBACK</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> use the CPU as a fallback for this op. WARNING: this will be slower than running natively on MPS.</span></code></pre></div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/output_8gaussian.gif" class="img-fluid"></p>
<p>他のデータに関しても，次のように学習できる：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/output_pinwheel.gif" class="img-fluid figure-img"></p>
<figcaption><code>pinwheel</code> はそれぞれの羽の尾の部分が消えてしまっているように見える．</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/output_rings.gif" class="img-fluid figure-img"></p>
<figcaption><code>rings</code> に関しては結構学習に苦労しているようだ．</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/output_checkerboard.gif" class="img-fluid figure-img"></p>
<figcaption><code>checkerboard</code> も四角い形までは 50 epoch では再現が難しいのかもしれない．</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/output_2spirals.gif" class="img-fluid figure-img"></p>
<figcaption><code>2spirals</code> は結構トポロジーを間違えている！</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/long_rings.gif" class="img-fluid figure-img"></p>
<figcaption><code>rings</code> ロングバージョン．<code>epoch=150</code> としたが，内側２輪しか再現できていない．</figcaption>
</figure>
</div>
</section>


<div id="quarto-appendix" class="default"><section id="文献" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献</h2><div class="quarto-appendix-contents">

<p><a href="https://lifei.ai/">李飞氏</a> による <a href="https://github.com/lifeitech/nce/blob/master/model.py">実装</a> を参考にした．</p>



</div></section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/EBM2.html</guid>
  <pubDate>Fri, 02 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_8gaussians.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>正規化流</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/NF2.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="関連ページ" class="level3 unnumbered unlisted">
<h3 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h3>
<div id="listing-flow-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724737988724" data-listing-date-modified-sort="1723993200000" data-listing-reading-time-sort="3" data-listing-word-count-sort="450">
<a href="../../../posts/2024/Samplers/NF.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_result.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
正規化流
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル４
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724843393428" data-listing-date-modified-sort="1724770800000" data-listing-reading-time-sort="4" data-listing-word-count-sort="794">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Process,Sampling" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724847653713" data-listing-date-modified-sort="1724338800000" data-listing-reading-time-sort="5" data-listing-word-count-sort="826">
<a href="../../../posts/2024/Samplers/Diffusion.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/DDPM_outputs.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
拡散模型
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル６
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>
<section id="real-nvp-dinh2017" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="real-nvp-dinh2017"><span class="header-section-number">1</span> Real NVP <span class="citation" data-cites="Dinh+2017">(Dinh et al., 2017)</span></h2>
<div id="a6e8370b" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import required packages</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> normflows <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nf</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.mplot3d <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Axes3D</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cm</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span></code></pre></div>
</div>
<div id="38109043" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up model</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define 2D Gaussian base distribution</span></span>
<span id="cb2-4">base <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.distributions.base.DiagGaussian(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define list of flows</span></span>
<span id="cb2-7">num_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb2-8">flows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_layers):</span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neural network with two hidden layers having 64 units each</span></span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last layer is initialized by zeros making training more stable</span></span>
<span id="cb2-12">    param_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.nets.MLP([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], init_zeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add flow layer</span></span>
<span id="cb2-14">    flows.append(nf.flows.AffineCouplingBlock(param_map))</span>
<span id="cb2-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Swap dimensions</span></span>
<span id="cb2-16">    flows.append(nf.flows.Permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'swap'</span>))</span>
<span id="cb2-17">    </span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct flow model</span></span>
<span id="cb2-19">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.NormalizingFlow(base, flows)</span>
<span id="cb2-20">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb2-21">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(device)</span></code></pre></div>
</div>
<div id="9430f9d1" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define target distribution</span></span>
<span id="cb3-2">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.distributions.TwoMoons()</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot target distribution</span></span>
<span id="cb3-5">grid_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb3-6">xx, yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.meshgrid(torch.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, grid_size), torch.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, grid_size))</span>
<span id="cb3-7">zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat([xx.unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), yy.unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-8">zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zz.to(device)</span>
<span id="cb3-9"></span>
<span id="cb3-10">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.log_prob(zz).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb3-11">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb3-12">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=(15, 15))</span></span>
<span id="cb3-15">plt.pcolormesh(xx, yy, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb3-16">plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb3-17">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/NF2_files/figure-html/cell-4-output-1.png" width="347" height="341" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="22c827ea" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot initial flow distribution</span></span>
<span id="cb4-2">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb4-3">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb4-4">model.train()</span>
<span id="cb4-5">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb4-6">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=(15, 15))</span></span>
<span id="cb4-9">plt.pcolormesh(xx, yy, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb4-10">plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb4-11">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/NF2_files/figure-html/cell-5-output-1.png" width="347" height="341" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train model</span></span>
<span id="cb5-2">max_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span></span>
<span id="cb5-3">num_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb5-4">show_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"></span>
<span id="cb5-7">loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([])</span>
<span id="cb5-8"></span>
<span id="cb5-9">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.Adam(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-4</span>, weight_decay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> it <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(max_iter)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#, disable=True</span></span>
<span id="cb5-12">):</span>
<span id="cb5-13">    optimizer.zero_grad()</span>
<span id="cb5-14">    </span>
<span id="cb5-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get training samples</span></span>
<span id="cb5-16">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.sample(num_samples).to(device)</span>
<span id="cb5-17">    </span>
<span id="cb5-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute loss</span></span>
<span id="cb5-19">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.forward_kld(x)</span>
<span id="cb5-20">    </span>
<span id="cb5-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do backprop and optimizer step</span></span>
<span id="cb5-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(torch.isnan(loss) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> torch.isinf(loss)):</span>
<span id="cb5-23">        loss.backward()</span>
<span id="cb5-24">        optimizer.step()</span>
<span id="cb5-25">    </span>
<span id="cb5-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log loss</span></span>
<span id="cb5-27">    loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.append(loss_hist, loss.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).data.numpy())</span>
<span id="cb5-28">    </span>
<span id="cb5-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot learned distribution</span></span>
<span id="cb5-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (it <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> show_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-31">        model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb5-32">        log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz)</span>
<span id="cb5-33">        model.train()</span>
<span id="cb5-34">        prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape))</span>
<span id="cb5-35">        prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb5-36"></span>
<span id="cb5-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=(15, 15))</span></span>
<span id="cb5-38">        plt.pcolormesh(xx, yy, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb5-39">        plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb5-40">        plt.show()</span>
<span id="cb5-41">np.save(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_history.npy'</span>, loss_hist)</span></code></pre></div>
<div id="e6fc4c0d" class="cell quarto-layout-panel" data-execution_count="6" data-layout-nrow="2" data-layout-ncol="4">

</div>
<div id="9b9296ff" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot loss</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=(10, 10))</span></span>
<span id="cb6-3">loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Files/loss_history.npy'</span>)</span>
<span id="cb6-4">plt.plot(loss_hist, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>)</span>
<span id="cb6-5">plt.legend()</span>
<span id="cb6-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/NF2_files/figure-html/cell-7-output-1.png" width="496" height="337" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="ff291ecb" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot target distribution</span></span>
<span id="cb7-2">f, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sharey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb7-3"></span>
<span id="cb7-4">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.log_prob(zz).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb7-5">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb7-6">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-7"></span>
<span id="cb7-8">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pcolormesh(xx, yy, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb7-9"></span>
<span id="cb7-10">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb7-11">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_axis_off()</span>
<span id="cb7-12">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Target'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot learned distribution</span></span>
<span id="cb7-15">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb7-16">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb7-17">model.train()</span>
<span id="cb7-18">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb7-19">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-20"></span>
<span id="cb7-21">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].pcolormesh(xx, yy, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb7-22"></span>
<span id="cb7-23">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb7-24">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_axis_off()</span>
<span id="cb7-25">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Real NVP'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.savefig("./Files/NF2.png")</span></span>
<span id="cb7-27">plt.subplots_adjust(wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb7-28">plt.show()</span></code></pre></div>
</div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF2.png" class="img-fluid"></p>
</section>
<section id="neural-spline-flow-durkan2019" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="neural-spline-flow-durkan2019"><span class="header-section-number">2</span> Neural Spline Flow <span class="citation" data-cites="Durkan+2019">(Durkan et al., 2019)</span></h2>
<p>円周 <img src="https://latex.codecogs.com/png.latex?S%5E1"> 上の確率分布として，wrapped Normal 分布や <a href="https://en.wikipedia.org/wiki/Von_Mises_distribution">von Mises 分布</a>がある．</p>
<p>今回は後者を採用し，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5E2"> 上で密度モデリングを試みる：</p>
<div id="210fda08" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up target</span></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> GaussianVonMises(nf.distributions.Target):</span>
<span id="cb8-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb8-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(prop_scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.tensor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi), </span>
<span id="cb8-5">                         prop_shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.tensor(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi))</span>
<span id="cb8-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.99</span></span>
<span id="cb8-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.log_const <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.log(np.i0(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb8-9">    </span>
<span id="cb8-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> log_prob(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb8-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.cos(x[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.log_const</span>
<span id="cb8-12"></span>
<span id="cb8-13">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GaussianVonMises()</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot target</span></span>
<span id="cb8-16">grid_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span></span>
<span id="cb8-17">xx, yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.meshgrid(torch.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, grid_size), torch.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi, np.pi, grid_size))</span>
<span id="cb8-18">zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat([xx.unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), yy.unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-19"></span>
<span id="cb8-20">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.log_prob(zz).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb8-21">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb8-22">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-23"></span>
<span id="cb8-24">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb8-25">plt.pcolormesh(yy, xx, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb8-26">plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb8-27">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/NF2_files/figure-html/cell-9-output-1.png" width="1164" height="930" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>今回は 12 層の Neural Spline Flow を採用し，２次元の Gaussian 分布に基底として採用する．</p>
<div id="52fe9d7d" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">base <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.distributions.UniformGaussian(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi]))</span>
<span id="cb9-2"></span>
<span id="cb9-3">K <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb9-4"></span>
<span id="cb9-5">flow_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb9-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(K):</span>
<span id="cb9-7">    flow_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [nf.flows.CircularAutoregressiveRationalQuadraticSpline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], num_bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb9-8">                                                                           tail_bound<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.</span>, np.pi]),</span>
<span id="cb9-9">                                                                           permute_mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)]</span>
<span id="cb9-10"></span>
<span id="cb9-11">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.NormalizingFlow(base, flow_layers, target)</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move model on GPU if available</span></span>
<span id="cb9-14">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb9-15">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(device)</span></code></pre></div>
</div>
<div id="0d638753" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot model</span></span>
<span id="cb10-2">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz.to(device)).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb10-3">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb10-4">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">plt.figure()</span>
<span id="cb10-7">plt.pcolormesh(yy, xx, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb10-8">plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb10-9">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/NF2_files/figure-html/cell-11-output-1.png" width="420" height="337" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="ff071cc4" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train model</span></span>
<span id="cb11-2">max_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb11-3">num_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span></span>
<span id="cb11-4">show_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500</span></span>
<span id="cb11-5"></span>
<span id="cb11-6"></span>
<span id="cb11-7">loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([])</span>
<span id="cb11-8"></span>
<span id="cb11-9">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.Adam(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-4</span>)</span>
<span id="cb11-10">scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.lr_scheduler.CosineAnnealingLR(optimizer, max_iter)</span>
<span id="cb11-11"></span>
<span id="cb11-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> it <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(max_iter)):</span>
<span id="cb11-13">    optimizer.zero_grad()</span>
<span id="cb11-14">    </span>
<span id="cb11-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute loss</span></span>
<span id="cb11-16">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.reverse_kld(num_samples)</span>
<span id="cb11-17">    </span>
<span id="cb11-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do backprop and optimizer step</span></span>
<span id="cb11-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(torch.isnan(loss) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> torch.isinf(loss)):</span>
<span id="cb11-20">        loss.backward()</span>
<span id="cb11-21">        optimizer.step()</span>
<span id="cb11-22">    </span>
<span id="cb11-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log loss</span></span>
<span id="cb11-24">    loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.append(loss_hist, loss.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).data.numpy())</span>
<span id="cb11-25">    </span>
<span id="cb11-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot learned model</span></span>
<span id="cb11-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (it <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> show_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb11-28">        model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb11-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb11-30">            log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz.to(device)).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb11-31">        model.train()</span>
<span id="cb11-32">        prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb11-33">        prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-34"></span>
<span id="cb11-35">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb11-36">        plt.pcolormesh(yy, xx, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb11-37">        plt.gca().set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb11-38">        plt.show()</span>
<span id="cb11-39">    </span>
<span id="cb11-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate scheduler</span></span>
<span id="cb11-41">    scheduler.step()</span>
<span id="cb11-42"></span>
<span id="cb11-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot loss</span></span>
<span id="cb11-44">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb11-45">plt.plot(loss_hist, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>)</span>
<span id="cb11-46">plt.legend()</span>
<span id="cb11-47">plt.show()</span></code></pre></div>
</div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="5">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training0.png" class="img-fluid"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training1.png" class="img-fluid"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training2.png" class="img-fluid"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training3.png" class="img-fluid"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 20.0%;justify-content: center;">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training4.png" class="img-fluid"></p>
</div>
</div>
</div>
<p>訓練は L4 で約１時間であった．</p>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_training_loss.png" class="img-fluid"></p>
<div id="9fafb634" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2D plot</span></span>
<span id="cb12-2">f, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sharey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb12-3"></span>
<span id="cb12-4">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.log_prob(zz).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb12-5">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb12-6">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-7"></span>
<span id="cb12-8">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pcolormesh(yy, xx, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb12-9">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb12-10"></span>
<span id="cb12-11">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, np.pi])</span>
<span id="cb12-12">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xticklabels([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$-\pi$'</span>, <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$-\frac{\pi}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$0$'</span>, <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$\frac{\pi}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$\pi$'</span>],</span>
<span id="cb12-13">                      fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb12-14">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_yticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb12-15">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_yticklabels([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$-2$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$-1$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$0$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$1$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$2$'</span>],</span>
<span id="cb12-16">                      fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb12-17">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$\phi$'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-18">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$x$'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-19"></span>
<span id="cb12-20">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Target'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-21"></span>
<span id="cb12-22">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz.to(device)).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb12-23">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb12-24">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-25"></span>
<span id="cb12-26">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].pcolormesh(yy, xx, prob.data.numpy(), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb12-27">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb12-28"></span>
<span id="cb12-29">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, np.pi])</span>
<span id="cb12-30">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xticklabels([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$-\pi$'</span>, <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$-\frac{\pi}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$0$'</span>, <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$\frac{\pi}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$\pi$'</span>],</span>
<span id="cb12-31">                      fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb12-32">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$\phi$'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-33"></span>
<span id="cb12-34">ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Neural Spline Flow'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-35"></span>
<span id="cb12-36">plt.subplots_adjust(wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb12-37"></span>
<span id="cb12-38">plt.show()</span></code></pre></div>
</div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_comparison.png" class="img-fluid"></p>
<div id="d66ec8f0" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3D plot</span></span>
<span id="cb13-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb13-3">ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3d'</span>)</span>
<span id="cb13-4">ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3d'</span>)</span>
<span id="cb13-5"></span>
<span id="cb13-6">phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.pi, np.pi, grid_size)</span>
<span id="cb13-7">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, grid_size)</span>
<span id="cb13-8"></span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the surface</span></span>
<span id="cb13-10">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.outer(np.ones(grid_size), np.cos(phi))</span>
<span id="cb13-11">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.outer(np.ones(grid_size), np.sin(phi))</span>
<span id="cb13-12">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.outer(z, np.ones(grid_size))</span>
<span id="cb13-13"></span>
<span id="cb13-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Target</span></span>
<span id="cb13-15">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.log_prob(zz).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb13-16">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb13-17">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-18"></span>
<span id="cb13-19">prob_vis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(prob)</span>
<span id="cb13-20">myheatmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob_vis.data.numpy()</span>
<span id="cb13-21"></span>
<span id="cb13-22">ax1._axis3don <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-23">ax1.plot_surface(x, y, z, cstride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rstride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, facecolors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cm.coolwarm(myheatmap), shade<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb13-24"></span>
<span id="cb13-25">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Target'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.97</span>, pad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-26"></span>
<span id="cb13-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Model</span></span>
<span id="cb13-28">log_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.log_prob(zz.to(device)).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.shape)</span>
<span id="cb13-29">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(log_prob)</span>
<span id="cb13-30">prob[torch.isnan(prob)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-31"></span>
<span id="cb13-32">prob_vis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(prob)</span>
<span id="cb13-33">myheatmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob_vis.data.numpy()</span>
<span id="cb13-34"></span>
<span id="cb13-35">ax2._axis3don <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-36">ax2.plot_surface(x, y, z, cstride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rstride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, facecolors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cm.coolwarm(myheatmap), shade<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb13-37"></span>
<span id="cb13-38">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Neural Spline Flow'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.97</span>, pad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-39"></span>
<span id="cb13-40">plt.show()</span></code></pre></div>
</div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/NSF_result.png" class="img-fluid"></p>
</section>
<section id="glow-kingma-dhariwal2018" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="glow-kingma-dhariwal2018"><span class="header-section-number">3</span> Glow <span class="citation" data-cites="Kingma-Dhariwal2018">(Kingma and Dhariwal, 2018)</span></h2>
<p>今回は CIFAR-10 という手描き文字画像データセットを学習し，画像の生成を目指す．</p>
<p>この際には，<span class="citation" data-cites="Dinh+2017">(Dinh et al., 2017)</span> の multiscale architecture を採用し，基底分布も成分ごとにスケールが違う正規分布を用いる．</p>
<div id="807d7273" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up model</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define flows</span></span>
<span id="cb14-4">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb14-5">K <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb14-6">torch.manual_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8">input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span>
<span id="cb14-9">n_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.prod(input_shape)</span>
<span id="cb14-10">channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb14-11">hidden_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span></span>
<span id="cb14-12">split_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'channel'</span></span>
<span id="cb14-13">scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb14-14">num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb14-15"></span>
<span id="cb14-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up flows, distributions and merge operations</span></span>
<span id="cb14-17">q0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb14-18">merges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb14-19">flows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb14-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(L):</span>
<span id="cb14-21">    flows_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb14-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(K):</span>
<span id="cb14-23">        flows_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [nf.flows.GlowBlock(channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> i), hidden_channels,</span>
<span id="cb14-24">                                     split_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>split_mode, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>scale)]</span>
<span id="cb14-25">    flows_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [nf.flows.Squeeze()]</span>
<span id="cb14-26">    flows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [flows_]</span>
<span id="cb14-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb14-28">        merges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [nf.flows.Merge()]</span>
<span id="cb14-29">        latent_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> i), input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> i),</span>
<span id="cb14-30">                        input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> i))</span>
<span id="cb14-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb14-32">        latent_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> L,</span>
<span id="cb14-33">                        input_shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> L)</span>
<span id="cb14-34">    q0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> [nf.distributions.ClassCondDiagGaussian(latent_shape, num_classes)]</span>
<span id="cb14-35"></span>
<span id="cb14-36"></span>
<span id="cb14-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct flow model with the multiscale architecture</span></span>
<span id="cb14-38">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nf.MultiscaleFlow(q0, flows, merges)</span>
<span id="cb14-39">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(device)</span></code></pre></div>
</div>
<div id="2016fbfd" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare training data</span></span>
<span id="cb15-2">batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb15-3"></span>
<span id="cb15-4">transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tv.transforms.Compose([tv.transforms.ToTensor(), nf.utils.Scale(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">256.</span>), nf.utils.Jitter(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">256.</span>)])</span>
<span id="cb15-5">train_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tv.datasets.CIFAR10(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/'</span>, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb15-6">                                 download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform)</span>
<span id="cb15-7">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.utils.data.DataLoader(train_data, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb15-8">                                           drop_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-9"></span>
<span id="cb15-10">test_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tv.datasets.CIFAR10(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/'</span>, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb15-11">                                download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform)</span>
<span id="cb15-12">test_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.utils.data.DataLoader(test_data, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size)</span>
<span id="cb15-13"></span>
<span id="cb15-14">train_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">iter</span>(train_loader)</span></code></pre></div>
</div>
<div id="2d9214fd" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train model</span></span>
<span id="cb16-2">max_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span></span>
<span id="cb16-3"></span>
<span id="cb16-4">loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([])</span>
<span id="cb16-5"></span>
<span id="cb16-6">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.Adamax(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span>, weight_decay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(max_iter)):</span>
<span id="cb16-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb16-10">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>(train_iter)</span>
<span id="cb16-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">StopIteration</span>:</span>
<span id="cb16-12">        train_iter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">iter</span>(train_loader)</span>
<span id="cb16-13">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>(train_iter)</span>
<span id="cb16-14">    optimizer.zero_grad()</span>
<span id="cb16-15">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.forward_kld(x.to(device), y.to(device))</span>
<span id="cb16-16"></span>
<span id="cb16-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(torch.isnan(loss) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> torch.isinf(loss)):</span>
<span id="cb16-18">        loss.backward()</span>
<span id="cb16-19">        optimizer.step()</span>
<span id="cb16-20"></span>
<span id="cb16-21">    loss_hist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.append(loss_hist, loss.detach().to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>).numpy())</span></code></pre></div>
</div>
<div id="4dea18cf" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb17-2">plt.plot(loss_hist, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>)</span>
<span id="cb17-3">plt.legend()</span>
<span id="cb17-4">plt.savefig(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fig1.png'</span>)</span>
<span id="cb17-5">plt.show()</span></code></pre></div>
</div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/Glow_training_loss.png" class="img-fluid"></p>
<p>2万イテレーションで1時間10分を要したが，cutting-edge な性能を出すには遥かに大きいモデルを 100 万イテレーションほどする必要があるという．</p>
<div id="69cdf5a8" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Model samples</span></span>
<span id="cb18-2">num_sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb18-5">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(num_classes).repeat(num_sample).to(device)</span>
<span id="cb18-6">    x, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.sample(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y)</span>
<span id="cb18-7">    x_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.clamp(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-8">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb18-9">    plt.imshow(np.transpose(tv.utils.make_grid(x_, nrow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_classes).cpu().numpy(), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)))</span>
<span id="cb18-10">    plt.savefig(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fig2.png'</span>)</span>
<span id="cb18-11">    plt.show()</span></code></pre></div>
</div>
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/NF/Glow_output.png" class="img-fluid"></p>
</section>


<div id="quarto-appendix" class="default"><section id="文献" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献</h2><div class="quarto-appendix-contents">

<p><a href="https://evjang.com/">Eric Jang 氏</a> による <a href="https://github.com/ericjang/normalizing-flows-tutorial">チュートリアル</a> （や<a href="https://github.com/pierresegonne/VINF">その他のチュートリアル</a>）は，TensorFlow 1 を用いており，特に <code>tfb.Affine</code> はもうサポートされていない（<a href="https://github.com/tensorflow/probability/issues/448#issuecomment-555629330">対応表</a>）．</p>
<p><a href="https://github.com/VincentStimper/normalizing-flows?tab=readme-ov-file"><code>normflows</code> というパッケージ</a> <span class="citation" data-cites="Stimper+2023">(Stimper et al., 2023)</span> は PyTorch ベースの実装を提供しており，これを代わりに用いた．<a href="https://colab.research.google.com/github/VincentStimper/normalizing-flows/blob/master/examples/real_nvp_colab.ipynb">Real NVP</a>, <a href="https://colab.research.google.com/github/VincentStimper/normalizing-flows/blob/master/examples/paper_example_nsf_colab.ipynb">Neural Spline Flow</a>, <a href="https://colab.research.google.com/github/VincentStimper/normalizing-flows/blob/master/examples/glow_colab.ipynb">Glow</a> などのデモを公開している．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Dinh+2017" class="csl-entry">
Dinh, L., Sohl-Dickstein, J., and Bengio, S. (2017). <a href="https://openreview.net/forum?id=HkpbnH9lx">Density estimation using real <span>NVP</span></a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Durkan+2019" class="csl-entry">
Durkan, C., Bekasov, A., Murray, I., and Papamakarios, G. (2019). <a href="https://proceedings.neurips.cc/paper_files/paper/2019/file/7ac71d433f282034e088473244df8c02-Paper.pdf">Neural spline flows</a>. In H. Wallach, H. Larochelle, A. Beygelzimer, F. dAlché-Buc, E. Fox, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 32. Curran Associates, Inc.
</div>
<div id="ref-Kingma-Dhariwal2018" class="csl-entry">
Kingma, D. P., and Dhariwal, P. (2018). <a href="https://proceedings.neurips.cc/paper_files/paper/2018/file/d139db6a236200b21cc7f752979132d0-Paper.pdf">Glow: Generative flow with invertible 1x1 convolutions</a>. In S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 31. Curran Associates, Inc.
</div>
<div id="ref-Stimper+2023" class="csl-entry">
Stimper, V., Liu, D., Campbell, A., Berenz, V., Ryll, L., Schölkopf, B., and Hernández-Lobato, J. M. (2023). <a href="https://doi.org/10.21105/joss.05361">Normflows: A PyTorch package for normalizing flows</a>. <em>Journal of Open Source Software</em>, <em>8</em>(86), 5361.
</div>
</div></section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/NF2.html</guid>
  <pubDate>Fri, 02 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/NF/Glow_output.png" medium="image" type="image/png" height="143" width="144"/>
</item>
<item>
  <title>スコアマッチング</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/EBM1.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="関連ページ" class="level3 unnumbered unlisted">
<h3 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h3>
<div id="listing-lst-listing" class="listing quarto-float quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1725250592261" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="880">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Sampling,Python" data-listing-date-sort="1722610800000" data-listing-file-modified-sort="1724239848322" data-listing-date-modified-sort="1724166000000" data-listing-reading-time-sort="11" data-listing-word-count-sort="2117">
<a href="../../../posts/2024/Samplers/EBM2.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_8gaussians.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデルのノイズ対照学習
</h5>
<div class="card-subtitle listing-subtitle">
<code>PyTorch</code> によるハンズオン
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-03
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Sampling,P(X)" data-listing-date-sort="1707836400000" data-listing-file-modified-sort="1724843393428" data-listing-date-modified-sort="1724770800000" data-listing-reading-time-sort="4" data-listing-word-count-sort="794">
<a href="../../../posts/2024/Samplers/NF1.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/linear/output.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
ニューラル常微分方程式
</h5>
<div class="card-subtitle listing-subtitle">
シミュレーションなしの拡散モデルとしての連続正規化流
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-02-14
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
</section>
<section id="sgm-score-based-generative-model" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sgm-score-based-generative-model"><span class="header-section-number">1</span> SGM (Score-based Generative Model)</h2>
<section id="目標のデータ" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="目標のデータ"><span class="header-section-number">1.1</span> 目標のデータ</h3>
<div id="c0b335ec" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_swiss_roll</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> jax</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> jax.numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> jnp</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb1-9">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> flax <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> linen <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The Linen API</span></span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ModuleNotFoundError</span>:</span>
<span id="cb1-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq flax</span>
<span id="cb1-12">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> flax <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> linen <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The Linen API</span></span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> flax.training <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_state  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Useful dataclass to keep train state</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb1-16">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> optax  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimizers</span></span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ModuleNotFoundError</span>:</span>
<span id="cb1-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>pip install <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>qq optax</span>
<span id="cb1-19">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> optax  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimizers</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> clear_output</span></code></pre></div>
</div>
<div id="a84c1e33" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sample_batch(size, noise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>):</span>
<span id="cb2-2">    x, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_swiss_roll(size, noise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>noise)</span>
<span id="cb2-3">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[:, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span></span>
<span id="cb2-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> np.array(x)</span>
<span id="cb2-5"></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=[16, 16])</span></span>
<span id="cb2-8">plt.scatter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sample_batch(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>).T, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb2-9">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb2-10">plt.tight_layout()</span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.savefig("swiss_roll.png")</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/EBM1_files/figure-html/cell-3-output-1.png" width="566" height="374" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="モデルの定義" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="モデルの定義"><span class="header-section-number">1.2</span> モデルの定義</h3>
<div id="061722ed" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Model(nn.Module):</span>
<span id="cb3-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@nn.compact</span></span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb3-4"></span>
<span id="cb3-5">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)(x)</span>
<span id="cb3-6">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.softplus(x)</span>
<span id="cb3-7">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)(x)</span>
<span id="cb3-8">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.softplus(x)</span>
<span id="cb3-9">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)(x)</span>
<span id="cb3-10"></span>
<span id="cb3-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
</div>
</section>
<section id="モデルの訓練" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="モデルの訓練"><span class="header-section-number">1.3</span> モデルの訓練</h3>
<div id="388848fc" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@jax.jit</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> compute_loss(params, inputs):</span>
<span id="cb4-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  a function that computes jacobian by forward mode differentiation</span></span>
<span id="cb4-4">    jacobian <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jax.jacfwd(Model().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>, argnums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we use jax.vmap to vectorize jacobian function along batch dimension</span></span>
<span id="cb4-7">    batch_jacobian <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jax.vmap(partial(jacobian, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"params"</span>: params}))(inputs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [batch, dim, dim]</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">    trace_jacobian <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.trace(batch_jacobian, axis1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, axis2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-10">    output_norm_sq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.square(Model().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"params"</span>: params}, inputs)).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-11"></span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> jnp.mean(trace_jacobian <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_norm_sq)</span></code></pre></div>
</div>
<div id="1ac35253" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@jax.jit</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> train_step(state, batch, key):</span>
<span id="cb5-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Train for a single step."""</span></span>
<span id="cb5-4">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_loss(state.params, batch)</span>
<span id="cb5-5">    grads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jax.grad(compute_loss, argnums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)(state.params, batch)</span>
<span id="cb5-6">    state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.apply_gradients(grads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grads)</span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> state, loss</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_train_state(rng, learning_rate):</span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Creates initial `TrainState`."""</span></span>
<span id="cb5-11">    net <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model()</span>
<span id="cb5-12">    params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> net.init(rng, jnp.ones([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"params"</span>]</span>
<span id="cb5-13">    tx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> optax.adam(learning_rate)</span>
<span id="cb5-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> train_state.TrainState.create(apply_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>net.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params, tx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tx)</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> train_loop(key, train_step, nsteps):</span>
<span id="cb5-17">    key, subkey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jax.random.split(key)</span>
<span id="cb5-18">    state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_train_state(subkey, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span>)</span>
<span id="cb5-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> subkey  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Must not be used anymore.</span></span>
<span id="cb5-20">    loss_history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nsteps):</span>
<span id="cb5-22">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_batch(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)</span>
<span id="cb5-23">        key, subkey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jax.random.split(key)</span>
<span id="cb5-24">        state, loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_step(state, x, subkey)</span>
<span id="cb5-25">        loss_history.append(loss.item())</span>
<span id="cb5-26"></span>
<span id="cb5-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-28">            clear_output(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-29">            plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>])</span>
<span id="cb5-30">            plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-31">            plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean loss = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.3f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> jnp.mean(jnp.array(loss_history[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>:])))</span>
<span id="cb5-32">            plt.scatter(jnp.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(loss_history)), loss_history)</span>
<span id="cb5-33">            plt.grid()</span>
<span id="cb5-34"></span>
<span id="cb5-35">            plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-36">            xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.stack(jnp.meshgrid(jnp.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), jnp.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).reshape(</span>
<span id="cb5-37">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-38">            )</span>
<span id="cb5-39">            scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"params"</span>: state.params}, xx)</span>
<span id="cb5-40">            scores_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.linalg.norm(scores, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, keepdims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-41">            scores_log1p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (scores_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> jnp.log1p(scores_norm)</span>
<span id="cb5-42"></span>
<span id="cb5-43">            plt.quiver(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.T, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>scores_log1p.T, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.002</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb5-44">            plt.xlim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb5-45">            plt.ylim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb5-46">            plt.show()</span>
<span id="cb5-47"></span>
<span id="cb5-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> state</span>
<span id="cb5-49"></span>
<span id="cb5-50">state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_loop(jax.random.PRNGKey(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>), train_step, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/EBM1_files/figure-html/cell-6-output-1.png" width="1258" height="653" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="学習されたスコア" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="学習されたスコア"><span class="header-section-number">1.4</span> 学習されたスコア</h3>
<div id="cell-fig-learned-score" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.figure(figsize=[16, 16])</span></span>
<span id="cb6-2"></span>
<span id="cb6-3">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.stack(jnp.meshgrid(jnp.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), jnp.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-4">scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"params"</span>: state.params}, xx)</span>
<span id="cb6-5">scores_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jnp.linalg.norm(scores, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, keepdims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-6">scores_log1p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (scores_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> jnp.log1p(scores_norm)</span>
<span id="cb6-7"></span>
<span id="cb6-8">plt.quiver(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx.T, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>scores_log1p.T, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.002</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb6-9">plt.scatter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sample_batch(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10_000</span>).T, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb6-10">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb6-11">plt.tight_layout()</span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.savefig("score_matching_swiss_roll.png")</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-learned-score" class="quarto-figure quarto-figure-center quarto-float anchored" height="374" width="566">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-learned-score-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/EBM1_files/figure-html/fig-learned-score-output-1.png" id="fig-learned-score" width="566" height="374" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-learned-score-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;1
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="ssm-sliced-score-matching" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="ssm-sliced-score-matching"><span class="header-section-number">2</span> SSM (Sliced Score Matching)</h2>
</section>
<section id="jax-framework" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="jax-framework"><span class="header-section-number">3</span> JAX framework</h2>
<section id="はじめに" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">3.1</span> はじめに</h3>
<p>Google の JAX (<a href="https://github.com/google/jax">GitHub</a>) とは，科学計算と機械学習のためのフレームワークである．</p>
<p>Autograd (<a href="https://github.com/hips/autograd">GitHub</a>) を用いて，Python のビルトイン関数や NumPy 関数を自動微分することができる．</p>
<p>今回は JAX エコシステムの一つである，深層学習のためのフレームワークである <a href="https://github.com/google/flax">Flax</a>，特に Linen モジュール (<a href="https://flax.readthedocs.io/en/latest/api_reference/flax.linen/index.html">docs</a> / <a href="https://github.com/google/flax/blob/main/flax/linen/README.md">GitHub</a>) を用いた．</p>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="文献" class="level2 appendix" data-number="4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">4</span> 文献</h2><div class="quarto-appendix-contents">

<p>コードは <span class="citation" data-cites="Murphy2023">(Murphy, 2023)</span> の <a href="https://github.com/probml/pyprobml/blob/master/notebooks/book2/24/score_matching_swiss_roll.ipynb">こちら</a> を参考にした．</p>
<p><a href="https://yang-song.net/blog/2021/score/">Yang Song</a> のコードも参考．</p>
<p><span class="citation" data-cites="Song+2019">(Song et al., 2019)</span> のコードは <a href="https://github.com/ermongroup/sliced_score_matching">このレポジトリ</a> で公開されている．</p>
<p><a href="https://uvadlc-notebooks.readthedocs.io/en/latest/index.html">UvA DL Tutorial</a> も参照．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Murphy2023" class="csl-entry">
Murphy, K. P. (2023). <em><a href="http://probml.github.io/book2">Probabilistic machine learning: Advanced topics</a></em>. MIT Press.
</div>
<div id="ref-Song+2019" class="csl-entry">
Song, Y., Garg, S., Shi, J., and Ermon, S. (2019). <a href="https://arxiv.org/abs/1905.07088"><span class="nocase">Sliced Score Matching: A Scalable Approach to Density and Score Estimation</span></a>. In.
</div>
</div></section></div> ]]></description>
  <category>Deep</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/EBM1.html</guid>
  <pubDate>Thu, 01 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Samplers/Files/swiss_roll.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>拡散模型の実装</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/DDPM.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="ハイパーパラメーターの設定" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="ハイパーパラメーターの設定"><span class="header-section-number">1</span> ハイパーパラメーターの設定</h2>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbeta_0=10%5E%7B-4%7D"> から <img src="https://latex.codecogs.com/png.latex?%5Cbeta_T=0.02"> までを，<code>n_timesteps = 1000</code> 等分し，その間のダイナミクスを <code>hidden_dim = 256</code> 次元の CNN ８層で学習する．</p>
<div id="674f62fa" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>必要なパッケージの読み込み</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn.functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> F</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> save_image, make_grid</span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.optim <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Adam</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb1-14"></span>
<span id="cb1-15">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/hirofumi/datasets'</span></span></code></pre></div>
</details>
</div>
<div id="2f066e53" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">DEVICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MacOS 上で実行しました</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MNIST'</span></span>
<span id="cb2-4">img_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)   <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CIFAR10"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (width, height, channels)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">timestep_embedding_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span></span>
<span id="cb2-7">n_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb2-8">hidden_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span></span>
<span id="cb2-9">n_timesteps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb2-10">beta_minmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-2</span>]</span>
<span id="cb2-11"></span>
<span id="cb2-12">train_batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb2-13">inference_batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb2-14">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-5</span></span>
<span id="cb2-15">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-16"></span>
<span id="cb2-17">seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span></span>
<span id="cb2-18"></span>
<span id="cb2-19">hidden_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [hidden_dim <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_layers)]</span>
<span id="cb2-20">torch.manual_seed(seed)</span>
<span id="cb2-21">np.random.seed(seed)</span></code></pre></div>
</div>
<div id="13cfcf19" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>データセットの読み込み</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MNIST, CIFAR10</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="cb3-4"></span>
<span id="cb3-5"></span>
<span id="cb3-6">transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.Compose([</span>
<span id="cb3-7">        transforms.ToTensor(),</span>
<span id="cb3-8">])</span>
<span id="cb3-9"></span>
<span id="cb3-10">kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_workers'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pin_memory'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>}  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 今回は軽量だし worker number は 0 にする</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CIFAR10'</span>:</span>
<span id="cb3-13">    train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CIFAR10(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-14">    test_dataset  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CIFAR10(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb3-16">    train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MNIST(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-17">    test_dataset  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MNIST(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-18"></span>
<span id="cb3-19">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb3-20">test_loader  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_dataset,  batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inference_batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span></code></pre></div>
</details>
</div>
</section>
<section id="モデル定義" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="モデル定義"><span class="header-section-number">2</span> モデル定義</h2>
<section id="タイムステップ-t-の位置埋め込み" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="タイムステップ-t-の位置埋め込み"><span class="header-section-number">2.1</span> タイムステップ <img src="https://latex.codecogs.com/png.latex?t"> の位置埋め込み</h3>
<p><span class="citation" data-cites="Ho+2020">(Ho et al., 2020)</span> ではトランスフォーマー <span class="citation" data-cites="Vaswani+2017">(Vaswani et al., 2017)</span> 同様の sinusoidal positional encoding を用いて <code>timestep_embedding_dim = 256</code> 次元の潜在表現を得て，タイムステップ <img src="https://latex.codecogs.com/png.latex?t"> の情報をデータに統合する．</p>
<p>そのタイムステップが統合されたデータが，同一に CNN に与えられ，その CNN のパラメータが学習される．</p>
<p>こうすることで <code>n_timesteps = 1000</code> の別々の NN を訓練するより遥かに効率的な学習が可能である．</p>
<div id="14db3abc" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> SinusoidalPosEmb(nn.Module):</span>
<span id="cb4-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, dim):</span>
<span id="cb4-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb4-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dim</span>
<span id="cb4-5"></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb4-7">        device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.device</span>
<span id="cb4-8">        half_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-9">        emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (half_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-10">        emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(torch.arange(half_dim, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>emb)</span>
<span id="cb4-11">        emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> emb[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, :]</span>
<span id="cb4-12">        emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat((emb.sin(), emb.cos()), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> emb</span></code></pre></div>
</div>
</section>
<section id="ニューラルネットワークの構成" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="ニューラルネットワークの構成"><span class="header-section-number">2.2</span> ニューラルネットワークの構成</h3>
<p><span class="citation" data-cites="Ho+2020">(Ho et al., 2020)</span> では U-Net <span class="citation" data-cites="Ronneberger+2015">(Ronneberger et al., 2015)</span> アーキテクチャを用いているが，ここでは同じ次元の CNN を <code>n_layers=8</code> 層重ねて作ることとする．</p>
<div id="83d3e3c7" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ConvBlock(nn.Conv2d):</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Conv2D Block</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Args:</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                x: (N, C_in, H, W)</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Returns:</span></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                y: (N, C_out, H, W)</span></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb5-9"></span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, in_channels, out_channels, kernel_size, activation_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, drop_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>,</span>
<span id="cb5-11">                    stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'same'</span>, dilation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, groups<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, gn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, gn_groups<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>):</span>
<span id="cb5-12">        </span>
<span id="cb5-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'same'</span>:</span>
<span id="cb5-14">            padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kernel_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dilation</span>
<span id="cb5-15"></span>
<span id="cb5-16">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(ConvBlock, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(in_channels, out_channels, kernel_size,</span>
<span id="cb5-17">                                            stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stride, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>padding, dilation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dilation,</span>
<span id="cb5-18">                                            groups<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>groups, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bias)</span>
<span id="cb5-19"></span>
<span id="cb5-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.activation_fn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.SiLU() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> activation_fn <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb5-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.group_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.GroupNorm(gn_groups, out_channels) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> gn <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb5-22">        </span>
<span id="cb5-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x, time_embedding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, residual<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb5-24">        </span>
<span id="cb5-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> residual:</span>
<span id="cb5-26">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in the paper, diffusion timestep embedding was only applied to residual blocks of U-Net</span></span>
<span id="cb5-27">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> time_embedding</span>
<span id="cb5-28">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb5-29">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(ConvBlock, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).forward(x)</span>
<span id="cb5-30">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x</span>
<span id="cb5-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb5-32">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(ConvBlock, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).forward(x)</span>
<span id="cb5-33">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.group_norm(y) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.group_norm <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> y</span>
<span id="cb5-34">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.activation_fn(y) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.activation_fn <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> y</span>
<span id="cb5-35">        </span>
<span id="cb5-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> y</span></code></pre></div>
</div>
</section>
<section id="デコーダーの定義" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="デコーダーの定義"><span class="header-section-number">2.3</span> デコーダーの定義</h3>
<div id="f49be930" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Denoiser(nn.Module):</span>
<span id="cb6-2">    </span>
<span id="cb6-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, image_resolution, hidden_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>], diffusion_time_embedding_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>):</span>
<span id="cb6-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Denoiser, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb6-5">        </span>
<span id="cb6-6">        _, _, img_C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_resolution</span>
<span id="cb6-7">        </span>
<span id="cb6-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SinusoidalPosEmb(diffusion_time_embedding_dim)</span>
<span id="cb6-9">        </span>
<span id="cb6-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.in_project <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConvBlock(img_C, hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb6-11">        </span>
<span id="cb6-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_project <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Sequential(ConvBlock(diffusion_time_embedding_dim, hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),ConvBlock(hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb6-13">        </span>
<span id="cb6-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.convs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.ModuleList([ConvBlock(in_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], out_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hidden_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)])</span>
<span id="cb6-15">        </span>
<span id="cb6-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(hidden_dims)):</span>
<span id="cb6-17">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.convs.append(ConvBlock(hidden_dims[idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], hidden_dims[idx], kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, dilation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>((idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),activation_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, gn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, gn_groups<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))                                </span>
<span id="cb6-18"></span>
<span id="cb6-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.out_project <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConvBlock(hidden_dims[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], out_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_C, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb6-20">        </span>
<span id="cb6-21">        </span>
<span id="cb6-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, perturbed_x, diffusion_timestep):</span>
<span id="cb6-23">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> perturbed_x</span>
<span id="cb6-24">        </span>
<span id="cb6-25">        diffusion_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_embedding(diffusion_timestep)</span>
<span id="cb6-26">        diffusion_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.time_project(diffusion_embedding.unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).unsqueeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb6-27">        </span>
<span id="cb6-28">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.in_project(y)</span>
<span id="cb6-29">        </span>
<span id="cb6-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.convs)):</span>
<span id="cb6-31">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.convs[i](y, diffusion_embedding, residual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-32">            </span>
<span id="cb6-33">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.out_project(y)</span>
<span id="cb6-34">            </span>
<span id="cb6-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> y</span>
<span id="cb6-36">    </span>
<span id="cb6-37">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Denoiser(image_resolution<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_size,</span>
<span id="cb6-38">                 hidden_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hidden_dims, </span>
<span id="cb6-39">                 diffusion_time_embedding_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timestep_embedding_dim, </span>
<span id="cb6-40">                 n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_timesteps).to(DEVICE)</span></code></pre></div>
</div>
</section>
<section id="エンコーダーの定義" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="エンコーダーの定義"><span class="header-section-number">2.4</span> エンコーダーの定義</h3>
<div id="ea3d3141" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Diffusion(nn.Module):</span>
<span id="cb7-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, model, image_resolution<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, beta_minmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-2</span>], device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>):</span>
<span id="cb7-3">    </span>
<span id="cb7-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Diffusion, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb7-5">    </span>
<span id="cb7-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_times</span>
<span id="cb7-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_H, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_W, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_resolution</span>
<span id="cb7-8"></span>
<span id="cb7-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model</span>
<span id="cb7-10">        </span>
<span id="cb7-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define linear variance schedule(betas)</span></span>
<span id="cb7-12">        beta_1, beta_T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> beta_minmax</span>
<span id="cb7-13">        betas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.linspace(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>beta_1, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>beta_T, steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_times).to(device) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># follows DDPM paper</span></span>
<span id="cb7-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_betas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sqrt(betas)</span>
<span id="cb7-15">                                     </span>
<span id="cb7-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define alpha for forward diffusion kernel</span></span>
<span id="cb7-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.alphas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> betas</span>
<span id="cb7-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_alphas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sqrt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.alphas)</span>
<span id="cb7-19">        alpha_bars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cumprod(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.alphas, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_one_minus_alpha_bars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>alpha_bars)</span>
<span id="cb7-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_alpha_bars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sqrt(alpha_bars)</span>
<span id="cb7-22">        </span>
<span id="cb7-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> device</span>
<span id="cb7-24">    </span>
<span id="cb7-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a, t, x_shape):</span>
<span id="cb7-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            from lucidrains' implementation</span></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                https://github.com/lucidrains/denoising-diffusion-pytorch/blob/beb2f2d8dd9b4f2bd5be4719f37082fe061ee450/denoising_diffusion_pytorch/denoising_diffusion_pytorch.py#L376</span></span>
<span id="cb7-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb7-30">        b, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.shape</span>
<span id="cb7-31">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.gather(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, t)</span>
<span id="cb7-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out.reshape(b, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x_shape) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb7-33">    </span>
<span id="cb7-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> scale_to_minus_one_to_one(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb7-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># according to the DDPMs paper, normalization seems to be crucial to train reverse process network</span></span>
<span id="cb7-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-37">    </span>
<span id="cb7-38">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> reverse_scale_to_zero_to_one(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb7-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb7-40">    </span>
<span id="cb7-41">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> make_noisy(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x_zeros, t): </span>
<span id="cb7-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># perturb x_0 into x_t (i.e., take x_0 samples into forward diffusion kernels)</span></span>
<span id="cb7-43">        epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn_like(x_zeros).to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-44">        </span>
<span id="cb7-45">        sqrt_alpha_bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_alpha_bars, t, x_zeros.shape)</span>
<span id="cb7-46">        sqrt_one_minus_alpha_bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_one_minus_alpha_bars, t, x_zeros.shape)</span>
<span id="cb7-47">        </span>
<span id="cb7-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let's make noisy sample!: i.e., Forward process with fixed variance schedule</span></span>
<span id="cb7-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      i.e., sqrt(alpha_bar_t) * x_zero + sqrt(1-alpha_bar_t) * epsilon</span></span>
<span id="cb7-50">        noisy_sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_zeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sqrt_alpha_bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sqrt_one_minus_alpha_bar</span>
<span id="cb7-51">    </span>
<span id="cb7-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> noisy_sample.detach(), epsilon</span>
<span id="cb7-53">    </span>
<span id="cb7-54">    </span>
<span id="cb7-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x_zeros):</span>
<span id="cb7-56">        x_zeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.scale_to_minus_one_to_one(x_zeros)</span>
<span id="cb7-57">        </span>
<span id="cb7-58">        B, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_zeros.shape</span>
<span id="cb7-59">        </span>
<span id="cb7-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (1) randomly choose diffusion time-step</span></span>
<span id="cb7-61">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randint(low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, high<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_times, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(B,)).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>().to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-62">        </span>
<span id="cb7-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (2) forward diffusion process: perturb x_zeros with fixed variance schedule</span></span>
<span id="cb7-64">        perturbed_images, epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.make_noisy(x_zeros, t)</span>
<span id="cb7-65">        </span>
<span id="cb7-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (3) predict epsilon(noise) given perturbed data at diffusion-timestep t.</span></span>
<span id="cb7-67">        pred_epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(perturbed_images, t)</span>
<span id="cb7-68">        </span>
<span id="cb7-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> perturbed_images, epsilon, pred_epsilon</span>
<span id="cb7-70">    </span>
<span id="cb7-71">    </span>
<span id="cb7-72">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> denoise_at_t(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x_t, timestep, t):</span>
<span id="cb7-73">        B, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_t.shape</span>
<span id="cb7-74">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb7-75">            z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn_like(x_t).to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-76">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-77">            z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros_like(x_t).to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-78">        </span>
<span id="cb7-79">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># at inference, we use predicted noise(epsilon) to restore perturbed data sample.</span></span>
<span id="cb7-80">        epsilon_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(x_t, timestep)</span>
<span id="cb7-81">        </span>
<span id="cb7-82">        alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.alphas, timestep, x_t.shape)</span>
<span id="cb7-83">        sqrt_alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_alphas, timestep, x_t.shape)</span>
<span id="cb7-84">        sqrt_one_minus_alpha_bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_one_minus_alpha_bars, timestep, x_t.shape)</span>
<span id="cb7-85">        sqrt_beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sqrt_betas, timestep, x_t.shape)</span>
<span id="cb7-86">        </span>
<span id="cb7-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># denoise at time t, utilizing predicted noise</span></span>
<span id="cb7-88">        x_t_minus_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sqrt_alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (x_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>alpha)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>sqrt_one_minus_alpha_bar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>epsilon_pred) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sqrt_beta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z</span>
<span id="cb7-89">        </span>
<span id="cb7-90">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x_t_minus_1.clamp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-91">                </span>
<span id="cb7-92">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sample(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, N):</span>
<span id="cb7-93">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start from random noise vector, x_0 (for simplicity, x_T declared as x_t instead of x_T)</span></span>
<span id="cb7-94">        x_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn((N, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_C, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_H, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_W)).to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-95">        </span>
<span id="cb7-96">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># autoregressively denoise from x_T to x_0</span></span>
<span id="cb7-97">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     i.e., generate image from noise, x_T</span></span>
<span id="cb7-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb7-99">            timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([t]).repeat_interleave(N, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>().to(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb7-100">            x_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.denoise_at_t(x_t, timestep, t)</span>
<span id="cb7-101">        </span>
<span id="cb7-102">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># denormalize x_0 into 0 ~ 1 ranged values.</span></span>
<span id="cb7-103">        x_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reverse_scale_to_zero_to_one(x_t)</span>
<span id="cb7-104">        </span>
<span id="cb7-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x_0</span>
<span id="cb7-106">    </span>
<span id="cb7-107">    </span>
<span id="cb7-108">diffusion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Diffusion(model, image_resolution<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_size, n_times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_timesteps, </span>
<span id="cb7-109">                      beta_minmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>beta_minmax, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DEVICE).to(DEVICE)</span>
<span id="cb7-110"></span>
<span id="cb7-111">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Adam(diffusion.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr)</span>
<span id="cb7-112">denoising_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.MSELoss()</span></code></pre></div>
</div>
</section>
<section id="エンコーディングの様子" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="エンコーディングの様子"><span class="header-section-number">2.5</span> エンコーディングの様子</h3>
<div id="c7cc5714" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> count_parameters(model):</span>
<span id="cb8-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(p.numel() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model.parameters() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> p.requires_grad)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of model parameters: "</span>, count_parameters(diffusion))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of model parameters:  4870913</code></pre>
</div>
</div>
<div id="21f9f267" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(test_loader):</span>
<span id="cb10-3">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="cb10-4">    perturbed_images, epsilon, pred_epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion(x)</span>
<span id="cb10-5">    perturbed_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion.reverse_scale_to_zero_to_one(perturbed_images)</span>
<span id="cb10-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> show_image(x, idx):</span>
<span id="cb10-9">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb10-10">    plt.imshow(x[idx].transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).detach().cpu().numpy())</span></code></pre></div>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">show_image(perturbed_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-2">show_image(perturbed_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-3">show_image(perturbed_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div id="fig-encoding" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-encoding-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-encoding" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-encoding-1" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-encoding-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-encoding-output-1.png" id="fig-encoding-1" data-ref-parent="fig-encoding" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-encoding-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-encoding" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-encoding-2" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-encoding-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-encoding-output-2.png" id="fig-encoding-2" data-ref-parent="fig-encoding" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-encoding-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-encoding" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-encoding-3" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-encoding-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-encoding-output-3.png" id="fig-encoding-3" data-ref-parent="fig-encoding" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-encoding-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(c)
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-encoding-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;1
</figcaption>
</figure>
</div>
</section>
</section>
<section id="モデル訓練" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="モデル訓練"><span class="header-section-number">3</span> モデル訓練</h2>
<div id="ae49a6e5" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start training DDPMs..."</span>)</span>
<span id="cb12-2">model.train()</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb12-5"></span>
<span id="cb12-6">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(epochs):</span>
<span id="cb12-9">    noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_loader)):</span>
<span id="cb12-11">        optimizer.zero_grad()</span>
<span id="cb12-12"></span>
<span id="cb12-13">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="cb12-14">        </span>
<span id="cb12-15">        noisy_input, epsilon, pred_epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion(x)</span>
<span id="cb12-16">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denoising_loss(pred_epsilon, epsilon)</span>
<span id="cb12-17">        </span>
<span id="cb12-18">        noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> loss.item()</span>
<span id="cb12-19">        </span>
<span id="cb12-20">        loss.backward()</span>
<span id="cb12-21">        optimizer.step()</span>
<span id="cb12-22">        </span>
<span id="cb12-23">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Epoch"</span>, epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete!"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Denoising Loss: "</span>, noise_prediction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batch_idx)</span>
<span id="cb12-24">    </span>
<span id="cb12-25">total_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb12-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Finish!! Total time: "</span>, total_time)</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled" title="注">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
注
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>この訓練コードも，前述の <code>train_loader</code> の定義が <code>if __name__ == '__main__':</code> と同じ <code>if</code> ブロックに入れる必要がある．</p>
<p>さもなくば，並列処理が実行できず，訓練には大変な時間がかかる．<sup>1</sup></p>
<p>そこでここでは別の Python ファイル (<a href="https://colab.research.google.com/drive/15IkmB8yijkfV7mRZieZkrD1oXDDHDrA5?usp=sharing">Google Colab</a>) で実行して，結果を読み込むこととする．</p>
<div id="06ec42b3" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb13-2"></span>
<span id="cb13-3">generated_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Files/generated_images1.pt"</span>, map_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/var/folders/gx/6w78f6997l5___173r25fp3m0000gn/T/ipykernel_6810/3728020930.py:3: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  generated_images = torch.load("Files/generated_images1.pt", map_location=torch.device('cpu'))</code></pre>
</div>
</div>
<p>GPU に乗った状態で読み込まれることに注意．</p>
</div>
</div>
</div>
</section>
<section id="データ生成" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="データ生成"><span class="header-section-number">4</span> データ生成</h2>
<div id="2a1511b6" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb15-4">    generated_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diffusion.sample(N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inference_batch_size)</span></code></pre></div>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb16-2">    show_image(generated_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>i)</span></code></pre></div>
<div id="fig-generation1" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-generation1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation1" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation1-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation1-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation1-output-1.png" data-ref-parent="fig-generation1" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation1-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) 生成された画像
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation1" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation1-2" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation1-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation1-output-2.png" id="fig-generation1-2" data-ref-parent="fig-generation1" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation1-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b)
</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation1" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation1-3" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation1-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation1-output-3.png" id="fig-generation1-3" data-ref-parent="fig-generation1" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation1-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(c)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation1" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation1-4" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation1-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation1-output-4.png" id="fig-generation1-4" data-ref-parent="fig-generation1" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation1-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(d)
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-generation1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;2
</figcaption>
</figure>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>):</span>
<span id="cb17-2">    show_image(generated_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>i)</span></code></pre></div>
<div id="fig-generation2" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-generation2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation2" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-generation2-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation2-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation2-output-1.png" data-ref-parent="fig-generation2" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation2-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) 生成された画像
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation2" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-generation2-2" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation2-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation2-output-2.png" id="fig-generation2-2" data-ref-parent="fig-generation2" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation2-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation2" style="flex-basis: 33.3%;justify-content: flex-start;">
<div id="fig-generation2-3" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation2-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation2-output-3.png" id="fig-generation2-3" data-ref-parent="fig-generation2" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation2-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(c)
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-generation2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;3
</figcaption>
</figure>
</div>
<div id="cell-fig-generation3" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">show_image(generated_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-generation3" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-generation3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/fig-generation3-output-1.png" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-generation3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;4: 生成された画像
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="モデル評価" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="モデル評価"><span class="header-section-number">5</span> モデル評価</h2>
<div id="b93bcb59" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_sample_image(x, postfix):</span>
<span id="cb19-2">  </span>
<span id="cb19-3">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb19-4">    plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb19-5">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Visualization of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(postfix))</span>
<span id="cb19-6">    plt.imshow(np.transpose(make_grid(x.detach().cpu(), padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, normalize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)))</span></code></pre></div>
</div>
<div id="d4c9c590" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">draw_sample_image(perturbed_images, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Perturbed Images"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/cell-19-output-1.png" width="611" height="631" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="86b75c78" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">draw_sample_image(generated_images, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generated Images"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/cell-20-output-1.png" width="611" height="631" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="a763cff1" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">draw_sample_image(x[:inference_batch_size], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ground-truth Images"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/DDPM_files/figure-html/cell-21-output-1.png" width="611" height="631" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>



<div id="quarto-appendix" class="default"><section id="参考" class="level2 appendix" data-number="6"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">6</span> 参考</h2><div class="quarto-appendix-contents">

<p>本稿は，<a href="https://velog.io/@mskang/about">Minsu Jackson Kang 氏</a> による <a href="https://github.com/Jackson-Kang/Pytorch-Diffusion-Model-Tutorial">チュートリアル</a> を参考にした．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Ho+2020" class="csl-entry">
Ho, J., Jain, A., and Abbeel, P. (2020). <a href="https://proceedings.neurips.cc/paper/2020/hash/4c5bcfec8584af0d967f1ab10179ca4b-Abstract.html"><span>Denoising Diffusion Probabilistic Models</span></a>. In <em>Advances in neural information processing systems</em>,Vol. 33.
</div>
<div id="ref-Ronneberger+2015" class="csl-entry">
Ronneberger, O., Fischer, P., and Brox, T. (2015). <a href="https://link.springer.com/chapter/10.1007/978-3-319-24574-4_28">U-net: Convolutional networks for biomedical image segmentation</a>. In N. Navab, J. Hornegger, W. M. Wells, and A. F. Frangi, editors, <em>Medical image computing and computer-assisted intervention – MICCAI 2015</em>, pages 234–241. Cham: Springer International Publishing.
</div>
<div id="ref-Vaswani+2017" class="csl-entry">
Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., … Polosukhin, I. (2017). <a href="https://papers.nips.cc/paper_files/paper/2017/hash/3f5ee243547dee91fbd053c1c4a845aa-Abstract.html">Attention is all you need</a>. In <em>Advances in neural information processing systems</em>,Vol. 30.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><code>kwargs = {'num_workers': 5, 'pin_memory': True, 'prefetch_factor': 2}</code> でも１エポック 12 分以上なので，40 時間以上はかかる．さらにこの場合エポック 18 で <code>RuntimeError: Shared memory manager connection has timed out</code> を得たため，<code>num_workers=0</code> とせざるを得なかった．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Samplers/DDPM.html</guid>
  <pubDate>Thu, 01 Aug 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>非線型な次元縮約法の概観</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Kernels/Manifold.html</link>
  <description><![CDATA[ 





<section id="関連ページ" class="level1 unnumbered unlisted">
<h1 class="unnumbered unlisted">関連ページ</h1>
<div id="listing-kernel-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Statistics,Kernel,Probability,Bayesian" data-listing-date-sort="1723388400000" data-listing-file-modified-sort="1723700397339" data-listing-date-modified-sort="1723561200000" data-listing-reading-time-sort="6" data-listing-word-count-sort="1067">
<a href="../../../posts/2024/Kernels/HierarchicalModel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/MM.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title" data-anchor-id="関連ページ">
階層モデル再論
</h5>
<div class="card-subtitle listing-subtitle">
多変量解析から機械学習へ
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-12
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep" data-listing-date-sort="1722178800000" data-listing-file-modified-sort="1723700397341" data-listing-date-modified-sort="1723388400000" data-listing-reading-time-sort="2" data-listing-word-count-sort="385">
<a href="../../../posts/2024/Kernels/NCL.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/contrastive_repr4.jpeg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
表現学習と非線型独立成分分析
</h5>
<div class="card-subtitle listing-subtitle">
「データ理解」に向けた深層潜在変数モデル
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-29
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Kernel" data-listing-date-sort="1723215600000" data-listing-file-modified-sort="1724220374242" data-listing-date-modified-sort="1723302000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="582">
<a href="../../../posts/2024/Kernels/Kernel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
カーネル法の概観
</h5>
<div class="card-subtitle listing-subtitle">
半正定値カーネルから距離学習まで
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-10
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
</section>
<section id="はじめに" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> はじめに</h1>
<p>多様体学習とは，非線型な次元削減手法のことをいう．</p>
<section id="多様体仮説" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="多様体仮説"><span class="header-section-number">1.1</span> 多様体仮説</h2>
<p>「多様体」の名前の由来は，「高次元データは低次元の部分多様体としての構造を持つ」という <strong>多様体仮説</strong> <span class="citation" data-cites="Fefferman+2016">(Fefferman et al., 2016)</span> である．<sup>1</sup></p>
<p>特に多様体学習と呼ばれる際は，知識発見やデータ可視化を重視する志向がある．</p>
<p>一方で自己符号化器などによる表現学習では，種々の下流タスクに有用な表現を得るための分布外汎化が重視される，と言えるだろう．</p>
</section>
<section id="距離学習との関係" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="距離学習との関係"><span class="header-section-number">1.2</span> 距離学習との関係</h2>
<p><a href="../../../posts/2024/Kernels/NCL.html#sec-NCL4RL">近年，対照学習による表現学習が注目されている</a>．このアプローチには，目的関数にサンプル間の類似度に関する事前情報を含めやすいという美点がある．</p>
<p>このような表現学習法は <strong>距離学習</strong> (metric learning) とも呼ばれている．</p>
<p>多くの多様体学習手法や，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> への埋め込み手法は，なんらかの意味でサンプル間の類似度を保存する埋め込みを求めている <span class="citation" data-cites="Agrawal+2021">(Agrawal et al., 2021)</span>．</p>
<p>この意味で，「距離学習」というキーワードは，表現学習と多様体学習の交差点を意味していると言えるだろう．</p>
</section>
<section id="例細胞間の類似度" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="例細胞間の類似度"><span class="header-section-number">1.3</span> 例：細胞間の類似度</h2>
<p>現代のシークエンサー NGS (Next Generation Sequencer) では，単一の細胞が保持している mRNA の全体 scRNA-seq (single-cell RNA sequencing) を調べることができ，このような場合は極めて高次元のデータが大量に得られることになる．</p>
<p>例えば COVID-19 重症患者の末梢免疫の状態を調べるために末梢血単核細胞 PBMC<sup>2</sup> から scRNA-seq を行った例 <span class="citation" data-cites="Wilk+2020">(Wilk et al., 2020)</span> では，全部で <img src="https://latex.codecogs.com/png.latex?n=44,721"> の細胞のデータが，<img src="https://latex.codecogs.com/png.latex?p=26361"> 次元のスパースなベクトルを扱っている．<sup>3</sup></p>
</section>
</section>
<section id="多次元尺度法-mds" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 多次元尺度法 (MDS)</h1>
<section id="概要" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="概要"><span class="header-section-number">2.1</span> 概要</h2>
<p>多次元尺度法 (MDS: Multi-Dimensional Scaling) <span class="citation" data-cites="Torgenson1952">(Torgerson, 1952)</span>, <span class="citation" data-cites="Kruskal1964">(Kruskal, 1964)</span> は，元のデータの「（非）類似度」を保存したままの低次元表現を探索する手法群である．</p>
<p>後続の手法はいずれも高次元データ <img src="https://latex.codecogs.com/png.latex?%5C%7By_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ep"> を所与とするが，MDS は本質的には類似度行列 <img src="https://latex.codecogs.com/png.latex?D%5Cin%20M_n(%5Cmathbb%7BR%7D)"> が与えられていればよく，解析対象は必ずしも <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ep">-値のデータである必要はない．</p>
<p>類似度行列 <img src="https://latex.codecogs.com/png.latex?D"> が与えられたのちは，埋め込み <img src="https://latex.codecogs.com/png.latex?%5C%7Bz_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ed"> の要素間の類似度が <img src="https://latex.codecogs.com/png.latex?D"> に近くなるように埋め込みを学習する．</p>
</section>
<section id="pca-としての-mds" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="pca-としての-mds"><span class="header-section-number">2.2</span> PCA としての MDS</h2>
<p>特にデータ <img src="https://latex.codecogs.com/png.latex?%5C%7Bx_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ep"> 間の Euclid 距離を <img src="https://latex.codecogs.com/png.latex?D"> とし，埋め込み <img src="https://latex.codecogs.com/png.latex?%5C%7Bz_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ed"> の間の経験共分散が <img src="https://latex.codecogs.com/png.latex?D"> に Hilbert-Schmidt ノルムに関して最小化することを <span class="citation" data-cites="Torgenson1952">(Torgerson, 1952)</span> は考えた．</p>
<p>これは <a href="../../../posts/2024/FunctionalAnalysis/SVD.html"><span class="citation" data-cites="Eckart-Young1936">(<span>Eckart and Young, 1936</span>)</span> の定理</a> を通じて <a href="../../../posts/2024/Kernels/HierarchicalModel.html#sec-PCA">PCA</a> に一致する，線型な次元縮約法となる．</p>
<p><span class="citation" data-cites="Torgenson1952">(Torgerson, 1952)</span> のアプローチは <strong>計量</strong>多次元尺度法と呼ばれ，一般のデータに適用可能な <span class="citation" data-cites="Kruskal1964">(Kruskal, 1964)</span> のアプローチは<strong>非計量</strong>多次元尺度法と対照される．<sup>4</sup></p>
</section>
<section id="kruskal1964-stress" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="kruskal1964-stress"><span class="header-section-number">2.3</span> <span class="citation" data-cites="Kruskal1964">(Kruskal, 1964)</span> Stress</h2>
<p>前述の通り，<img src="https://latex.codecogs.com/png.latex?D"> は Euclid 距離に基づくとは限らないし，そもそもデータはベクトルなど構造化されているものでなくても良い．</p>
<p>このような一般的な場面で <img src="https://latex.codecogs.com/png.latex?%5C%7Bz_i%5C%7D_%7Bi=1%7D%5En%5Csubset%5Cmathbb%7BR%7D%5Ed"> 間の類似度の <img src="https://latex.codecogs.com/png.latex?D"> との「近さ」を図る尺度として，Kruskal の Stress-1 <span class="citation" data-cites="Kruskal1964">(Kruskal, 1964)</span> がよく用いられる： <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(E):=%5Csqrt%7B%5Cfrac%7B%5Csum_%7Bi_1%3Ci_2%7D%5Cleft(z_%7Bi_1i_2%7D-d_%7Bi_1i_2%7D%5Cright)%5E2%7D%7B%5Csum_%7Bi_1%3Ci_2%7Dd_%7Bi_1i_2%7D%5E2%7D%7D.%0A"></p>
<p>勾配法を用いた最適化ベースの推論手法が使えるが，この目的関数に関しては SMACOF (Scaling by Majorizing a Complementary Function) <span class="citation" data-cites="deLeeuw1977">(de Leeuw, 1977)</span> という凸最適化アルゴリズムが提案されており，<a href="https://scikit-learn.org/stable/modules/generated/sklearn.manifold.smacof.html"><code>scikit-learn</code> にも実装されている</a>．</p>
</section>
<section id="sammon1969-stress" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="sammon1969-stress"><span class="header-section-number">2.4</span> <span class="citation" data-cites="Sammon1969">(Sammon, 1969)</span> Stress</h2>
<p><span class="citation" data-cites="Sammon1969">(Sammon, 1969)</span> は探索的データ解析の文脈から，データの「構造」をよく保つために，<img src="https://latex.codecogs.com/png.latex?z_%7Bi_1i_2%7D"> の値が小さい場合は小さな変化も重視してくれるようにスケーリングを調整する新たなストレス関数を提案した：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B%5Csum_%7Bi_1%3Ci_2%7Dz_%7Bi_1i_2%7D%7D%5Csum_%7Bi_1%3Ci_2%7D%5Cfrac%7B%5Cleft(z_%7Bi_1i_2%7D-d_%7Bi_1i_2%7D%5Cright)%5E2%7D%7Bz_%7Bi_1i_2%7D%7D.%0A"></p>
<p>係数 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B%5Csum_%7Bi_1%3Ci_2%7Dz_%7Bi_1i_2%7D%7D"> の存在は，勾配法による推論を効率的にする．</p>
</section>
<section id="sec-MDU" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="sec-MDU"><span class="header-section-number">2.5</span> 多次元展開法 (MDU)</h2>
<p>多次元展開法 (MDU: Multi-Dimensional Unfolding) は，個人の選考順位データに対処するために <span class="citation" data-cites="Coombs1950">(Coombs, 1950)</span> が提唱した，多次元尺度法 (MDS) の拡張である <span class="citation" data-cites="足立浩平2000">(足立浩平, 2000)</span>．</p>
<p>MDU ではさらに一般的な行列 <img src="https://latex.codecogs.com/png.latex?D"> を取ることができる．というのも，MDS では暗黙のうちに行と列は同一物であり，<img src="https://latex.codecogs.com/png.latex?D"> の対角成分は全て一定であるが，MDU では行と列で別の対象を取ることができる．</p>
<p>例えば，個体 <img src="https://latex.codecogs.com/png.latex?i"> が項目 <img src="https://latex.codecogs.com/png.latex?j"> をどれくらい好むか？を <img src="https://latex.codecogs.com/png.latex?D"> と取り，行と列を同一の平面上に <a href="https://en.wikipedia.org/wiki/Biplot">バイプロット</a> <span class="citation" data-cites="Gabriel1971">(Gabriel, 1971)</span>, <span class="citation" data-cites="Gower2004">(Gower, 2004)</span> する．</p>
</section>
<section id="理想点推定" class="level2" data-number="2.6">
<h2 data-number="2.6" class="anchored" data-anchor-id="理想点推定"><span class="header-section-number">2.6</span> <a href="../../../posts/2024/TransDimensionalModels/IdealPoint.html">理想点推定</a></h2>
<p>特に政治科学の分野で用いられる多次元展開手法であり，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed%5C;(d%5Cle3)"> に埋め込むことが考えられる．</p>
<p>その際は <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> 上への観測に至るまでの階層モデル（潜在変数モデル）を立てて，全体を MCMC により推定する方法が，<span class="citation" data-cites="Martin-Quinn2002">(Martin and Quinn, 2002)</span> 以来中心的である．</p>
<p><span class="citation" data-cites="Imai2016">(Imai et al., 2016)</span>，<span class="citation" data-cites="三輪洋文2017">(三輪洋文, 2017)</span> は変分 EM アルゴリズムにより推定している．</p>
</section>
<section id="力指向グラフ展開-fdl-se" class="level2" data-number="2.7">
<h2 data-number="2.7" class="anchored" data-anchor-id="力指向グラフ展開-fdl-se"><span class="header-section-number">2.7</span> 力指向グラフ展開 (FDL / SE)</h2>
<p><a href="https://ja.wikipedia.org/wiki/力学モデル_(グラフ描画アルゴリズム)">力学モデルによるグラフ描画法</a> (Force-directed layout / Spring Embedder) <span class="citation" data-cites="Tutte1963">(Tutte, 1963)</span>, <span class="citation" data-cites="Eades1984">(Eades, 1984)</span>, <span class="citation" data-cites="Kamada-Kawai1989">(Kamada and Kawai, 1989)</span> は，グラフの頂点を質点，辺をバネに見立てて，グラフを <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5E2"> 上に展開する方法である．</p>
<p>超大規模集積回路 (VLSI) の設計問題と両輪で発展してきた <span class="citation" data-cites="Fisk+1967">(Fisk et al., 1967)</span>, <span class="citation" data-cites="Quinn-Breuer1979">(Quinn and Breuer, 1979)</span>．</p>
<p>このグラフ埋め込み法はポテンシャルエネルギーをストレスと見立てた MDS とみなせる．</p>
</section>
</section>
<section id="sec-Isomap" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Isomap</h1>
<p>MDS 法の難点の１つに，データがある部分多様体上に存在する場合，その部分多様体上の測地距離を尊重できないという点がある．</p>
<p>このデータの部分多様体構造を尊重した測地距離をグラフにより捉え，MDS を実行する手法が Isomap <span class="citation" data-cites="Tenenbaum+2000">(Tenenbaum et al., 2000)</span> である．</p>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="Isomap：データの多様体構造を尊重した MDS">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Isomap：データの多様体構造を尊重した MDS
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>データを頂点とした <img src="https://latex.codecogs.com/png.latex?K">-近傍グラフを構成する．</li>
<li>測地距離を，このグラフ上の最短距離として近似する．</li>
<li>こうして得た近似測地距離を用いて MDS を行う．</li>
</ol>
</div>
</div>
<p>ステップ２においては Dijkstra 法を用いることができ，高速な計算が可能である．</p>
<p>しかし Isomap はデータの摂動に極めて弱いことが topological instability として知られている <span class="citation" data-cites="Balasubramanian-Schwartz2002">(Balasubramanian and Schwartz, 2002)</span>．</p>
<p>この安定性をカーネル法に外注する Robust Kernel Isomap <span class="citation" data-cites="Choi-Choi2007">(Choi and Choi, 2007)</span> も提案されている．</p>
</section>
<section id="最大分散展開-mvu" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 最大分散展開 (MVU)</h1>
<section id="カーネル-pca-kpca-scholkopf1998" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="カーネル-pca-kpca-scholkopf1998"><span class="header-section-number">4.1</span> <a href="../../../posts/2023/KernelMethods/KernelMethods4Mathematicians.html#sec-KPCA">カーネル PCA</a> (kPCA) <span class="citation" data-cites="Scholkopf+1998">(Schölkopf et al., 1998)</span></h2>
<p>カーネル法の見地からは，従来の PCA は線型な核を用いた場合のカーネル主成分分析だったと相対化される．</p>
<p>しかし，少なくとも RBF カーネルを用いた場合は <span class="citation" data-cites="Weinberger+2004">(Weinberger et al., 2004)</span>，次元縮約の代わりにより高次元な空間に埋め込みがちである．</p>
</section>
<section id="半正定値埋め込み" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="半正定値埋め込み"><span class="header-section-number">4.2</span> 半正定値埋め込み</h2>
<p>カーネル PCA を次元縮約のために用いたものが <strong>半正定値埋め込み</strong> (semidefinite embedding) または <strong>最大分散展開</strong> (MVU: Maximum Vairance Unfolding) <span class="citation" data-cites="Weinberger+2004">(Weinberger et al., 2004)</span> である．</p>
<p>これは，カーネル PCA による埋め込みの中でも，元データ <img src="https://latex.codecogs.com/png.latex?y"> と埋め込み <img src="https://latex.codecogs.com/png.latex?z"> の間で <img src="https://latex.codecogs.com/png.latex?%0A%5C%7Cz_i-z_j%5C%7C_2=%5C%7Cy_i-y_j%5C%7C_2,%5Cqquad(i,j)%5Cin%20G%0A"> を <img src="https://latex.codecogs.com/png.latex?K">-近傍 <img src="https://latex.codecogs.com/png.latex?G"> に関して満たすような埋め込みの中で， <img src="https://latex.codecogs.com/png.latex?%0A%5Cmax_%7Bz%5Cin%5Cmathbb%7BR%7D%5Ed%7D%5Csum_%7Bi,j%7D%5C%7Cz_i-z_j%5C%7C_2%5E2%0A"> を最大にするものを求めることを考える．</p>
<p>幸い，これを満たすカーネル関数は半正定値計画によって解くことができ，このカーネル関数によるカーネル PCA 法が MVU である．</p>
</section>
</section>
<section id="局所線型埋め込み-lle" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 局所線型埋め込み (LLE)</h1>
<section id="はじめに-1" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="はじめに-1"><span class="header-section-number">5.1</span> はじめに</h2>
<p>ここまでの手法は畢竟，類似度行列 <img src="https://latex.codecogs.com/png.latex?Y"> に関して，kPCA は特徴空間上でのスペクトル分解，Isomap はデータのなす <img src="https://latex.codecogs.com/png.latex?K">-近傍グラフ上でのスペクトル分解を考えている．</p>
<p>これに対して，スパースなスペクトル分解を用いることで，データの局所的構造がさらに尊重できることが，<strong>局所線型埋め込み</strong> (LLE: Local Linear Embedding) <span class="citation" data-cites="Roweis-Saul2000">(Roweis and Saul, 2000)</span> として提案された．</p>
<p>この方法は Isomap よりデータの摂動に関して頑健であることが知られている．</p>
</section>
<section id="アルゴリズム" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="アルゴリズム"><span class="header-section-number">5.2</span> アルゴリズム</h2>
<p>この方法では，データ多様体の接空間に注目する．</p>
<p>まず，各点をその <img src="https://latex.codecogs.com/png.latex?K">-近傍点の線型結合で表す方法を，次のように学習する： <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7BW%7D=%5Cmin_%7BW%7D%5Csum_%7Bi=1%7D%5En%5Cleft(x_i-%5Csum_%7Bj=1%7D%5Enw_%7Bij%7Dx_j%5Cright)%5E2,%5Cqquad%5Coperatorname%7Bsubject%20to%7D%5Cbegin%7Bcases%7Dw_%7Bij%7D=0&amp;x_i,x_j%5C,%5Ctext%7B%E3%81%AF%7D%5C,K%5Ctext%7B-%E8%BF%91%E5%82%8D%E3%81%A7%E3%81%AA%E3%81%84%7D%5C%5C%5Csum_%7Bj=1%7D%5ENw_%7Bij%7D=1&amp;%5Ctext%7B%E4%BB%BB%E6%84%8F%E3%81%AE%7D%5C,i%5Cin%5BN%5D%5C,%5Ctext%7B%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%7D%5Cend%7Bcases%7D%0A"> こうして得た <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7BW%7D"> はスパース行列になる．この <img src="https://latex.codecogs.com/png.latex?W"> を通じて，局所構造を保った低次元埋め込みを構成する： <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7BZ%7D=%5Coperatorname*%7Bargmin%7D_Z%5Csum_%7Bi=1%7D%5En%5Cleft%5C%7Cz_i-%5Csum_%7Bj=1%7D%5En%5Cwidehat%7Bw%7D_%7Bij%7Dz_j%5Cright%5C%7C_2%5E2.%0A"></p>
<p>この最適化問題は，<img src="https://latex.codecogs.com/png.latex?I_n-W"> の <a href="../../../posts/2024/FunctionalAnalysis/SVD.html">特異値分解</a> に帰着する．</p>
</section>
<section id="hessian-埋め込み-he" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="hessian-埋め込み-he"><span class="header-section-number">5.3</span> Hessian 埋め込み (HE)</h2>
<p>Hessian Eigenmaps <span class="citation" data-cites="Donoho-Grimes2003">(Donoho and Grimes, 2003)</span> は微分幾何学的見方を推し進め，Hessian からの情報を取り入れた局所線型埋め込みの変種である．</p>
</section>
<section id="接空間配置-tsa" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="接空間配置-tsa"><span class="header-section-number">5.4</span> 接空間配置 (TSA)</h2>
<p>Tangent Space Alignment <span class="citation" data-cites="Zhang-Zha2004">(Zhang and Zha, 2004)</span> はより明示的に接空間の構造に注目する．</p>
</section>
</section>
<section id="sec-LE" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> スペクトル埋め込み (SE / LE)</h1>
<p>Laplacian Eigenmaps または Spectral Embedding <span class="citation" data-cites="Mikhali-Partha2001">(Belkin and Niyogi, 2001)</span> は，データ点の <img src="https://latex.codecogs.com/png.latex?K">-近傍グラフ <img src="https://latex.codecogs.com/png.latex?(Y,E)"> 上で <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(Z):=%5Csum_%7B(i,j)%5Cin%20E%7DW_%7Bij%7D%5C%7Cz_i-z_j%5C%7C_2%5E2,%5Cqquad%20W_%7Bij%7D:=%5Cexp%5Cleft(-%5Cfrac%7B%5C%7Cy_i-y_j%5C%7C_2%5E2%7D%7B2%5Csigma%5E2%7D%5Cright)%0A"> を最小化する埋め込み <img src="https://latex.codecogs.com/png.latex?Z"> を求める方法である．</p>
<p>この目的関数 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D(Z)"> は実は，<img src="https://latex.codecogs.com/png.latex?K">-近傍グラフ <img src="https://latex.codecogs.com/png.latex?(Y,E)"> の Laplacian 行列 <img src="https://latex.codecogs.com/png.latex?L"> に関して <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D(Z)=2%5Coperatorname%7BTr%7D(Z%5E%5Ctop%20LZ)%0A"> とも表せる．</p>
<p>この量は，<img src="https://latex.codecogs.com/png.latex?Z"> をグラフ上の関数と見た際の Dirichlet 汎函数になっており，グラフ上の関数としての「滑らかさ」の尺度となっている．</p>
<p>最も滑らかであるような <img src="https://latex.codecogs.com/png.latex?Z"> を学習することで，データの局所構造を最も反映した埋め込みが得られる，というアイデアである．</p>
</section>
<section id="t-分布型確率的近傍埋め込み-t-sne" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> <img src="https://latex.codecogs.com/png.latex?t">-分布型確率的近傍埋め込み (t-SNE)</h1>
<section id="概要-1" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="概要-1"><span class="header-section-number">7.1</span> 概要</h2>
<p>SNE <span class="citation" data-cites="Hinton-Roweis2002">(Hinton and Roweis, 2002)</span> では，<img src="https://latex.codecogs.com/png.latex?K">-近傍グラフを用いた Isomap を，ハードな帰属からソフトな帰属へ，確率分布を用いて軟化する．</p>
<p>t-SNE <span class="citation" data-cites="Maaten-Hinton2008">(van der Maaten and Hinton, 2008)</span> では SNE が Gauss 核を用いていたところを Laplace 核（<img src="https://latex.codecogs.com/png.latex?t">-分布）を用いることで，より分散した表現を得ることを目指す．</p>
</section>
<section id="sec-SNE" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="sec-SNE"><span class="header-section-number">7.2</span> 確率的近傍埋め込み <span class="citation" data-cites="Hinton-Roweis2002">(SNE, Hinton and Roweis, 2002)</span></h2>
<p>ハイパーパラメータ <img src="https://latex.codecogs.com/png.latex?%5Csigma_i"> を残して， <img src="https://latex.codecogs.com/png.latex?%0Ap_%7Bj%7Ci%7D:=%5Cfrac%7B%5Cexp%5Cleft(-%5Cfrac%7B%5Clvert%20x_i-x_j%5Crvert%5E2%7D%7B2%5Csigma_i%5E2%7D%5Cright)%7D%7B%5Csum_%7Bk%5Cneq%20i%7D%5Cexp%5Cleft(-%5Cfrac%7B%5Clvert%20x_i-x_k%5Crvert%5E2%7D%7B2%5Csigma_i%5E2%7D%5Cright)%7D%0A"> と定める．</p>
<p>この <img src="https://latex.codecogs.com/png.latex?(p_%7Bj%7Ci%7D)"> と，潜在空間における帰属確率 <img src="https://latex.codecogs.com/png.latex?%0Aq_%7Bj%7Ci%7D:=%5Cfrac%7Be%5E%7B-%5Clvert%20z_i-z_j%5Crvert%5E2%7D%7D%7B%5Csum_%7Bk%5Cneq%20i%7De%5E%7B-%5Clvert%20z_i-z_k%5Crvert%5E2%7D%7D%0A"> と一致するように埋め込みを学習する．すなわち，訓練目標は <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D:=%5Csum_%7Bi=1%7D%5En%5Coperatorname%7BKL%7D(p_%7B-%7Ci%7D,q_%7B-%7Ci%7D)=%5Csum_%7Bi,j=1%7D%5Enp_%7Bj%7Ci%7D%5Clog%5Cfrac%7Bp_%7Bj%7Ci%7D%7D%7Bq_%7Bj%7Ci%7D%7D%0A"> と定める．</p>
<p>この目的関数は凸ではなく，SGD で訓練可能であるが特殊なノイズスケジュールなどのテクニックがある．<sup>5</sup></p>
<p>SNE は，ある事前分布を課したスペクトル埋め込みとも見れる <span class="citation" data-cites="Carreira-Perpinan2010">(Carreira-Perpiñan, 2010)</span>．</p>
</section>
<section id="目的関数の対称化" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="目的関数の対称化"><span class="header-section-number">7.3</span> 目的関数の対称化</h2>
<p><img src="https://latex.codecogs.com/png.latex?p_%7Bi%7Cj%7D,q_%7Bi%7Cj%7D"> ではなく，結合分布 <img src="https://latex.codecogs.com/png.latex?p_%7Bij%7D,q_%7Bij%7D"> を用いることで，目的関数を対称化することができる．</p>
<p>このとき，目的関数の勾配は次のようになる： <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla_%7Bz_i%7D%5Cmathcal%7BL%7D(Z)=2%5Csum_%7Bj=1%7D%5En(z_j-z_i)(p_%7Bij%7D-q_%7Bij%7D).%0A"></p>
</section>
<section id="t-分布の導入" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="t-分布の導入"><span class="header-section-number">7.4</span> <img src="https://latex.codecogs.com/png.latex?t">-分布の導入</h2>
<p>t-SNE <span class="citation" data-cites="Maaten-Hinton2008">(van der Maaten and Hinton, 2008)</span> は <img src="https://latex.codecogs.com/png.latex?p_%7Bj%7Ci%7D"> の定義に Gauss 核を用いていたところを，Cauchy 分布の密度（Poisson 核）に置き換えたものである： <img src="https://latex.codecogs.com/png.latex?%0Aq_%7Bij%7D=%5Cfrac%7B%5Cfrac%7B1%7D%7B1+%5Clvert%20z_i-z_j%5Crvert%5E2%7D%7D%7B%5Csum_%7Bk%3Cl%7D%5Cfrac%7B1%7D%7B1+%5Clvert%20z_k-z_l%5Crvert%5E2%7D%7D.%0A"></p>
<p>このことにより，元々遠かったデータ点を引き寄せ過ぎてしまうこと (crowding problem) を回避できる．</p>
<p>勾配は <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla_%7Bz_i%7D%5Cmathcal%7BL%7D(Z)=4%5Csum_%7Bj=1%7D%5En(z_j-z_i)(p_%7Bij%7D-q_%7Bij%7D)%5Cfrac%7B1%7D%7B1+%5Clvert%20z_i-z_j%5Crvert%5E2%7D%0A"> で与えられ，対称化された SNE に，<img src="https://latex.codecogs.com/png.latex?z_i,z_j"> の距離に従って調整する因子が追加された形になっている．</p>
</section>
<section id="実装" class="level2" data-number="7.5">
<h2 data-number="7.5" class="anchored" data-anchor-id="実装"><span class="header-section-number">7.5</span> 実装</h2>
<p>t-SNE は <img src="https://latex.codecogs.com/png.latex?O(n%5E2)"> であるが，埋め込みの次元数が <img src="https://latex.codecogs.com/png.latex?d=2"> などの低次元であるとき，これを <img src="https://latex.codecogs.com/png.latex?O(n%5Clog%20n)"> にまで加速する実装が知られている <span class="citation" data-cites="vanderMaaten2014">(Maaten, 2014)</span>．</p>
</section>
<section id="敏捷な埋め込み-ee" class="level2" data-number="7.6">
<h2 data-number="7.6" class="anchored" data-anchor-id="敏捷な埋め込み-ee"><span class="header-section-number">7.6</span> 敏捷な埋め込み (EE)</h2>
<p>t-SNE はハイパーパラメータ <img src="https://latex.codecogs.com/png.latex?%5Csigma_i%5E2"> の設定に敏感である上に訓練が局所解にトラップされるなど不安定で，またデータ内のノイズに弱いことが知られている <span class="citation" data-cites="Wattemnerg+2016">(Wattenberg et al., 2016)</span>．</p>
<p><strong>敏捷な埋め込み</strong> (EN: Elastic Net) <span class="citation" data-cites="Carreira-Perpinan2010">(Carreira-Perpiñan, 2010)</span> という，より安定的でノイズに頑健な手法が目的関数を修正することで得られている．</p>
</section>
<section id="largevis" class="level2" data-number="7.7">
<h2 data-number="7.7" class="anchored" data-anchor-id="largevis"><span class="header-section-number">7.7</span> LargeVis</h2>
<p>LargeVis <span class="citation" data-cites="Tang+2016">(Tang et al., 2016)</span> は t-SNE の計算量を軽減させるために，<img src="https://latex.codecogs.com/png.latex?K">-近傍グラフの計算に近似手法である <strong>ランダム射影木</strong> <span class="citation" data-cites="DasGupta-Freud2008">(Dasgupta and Freund, 2008)</span> を導入する．</p>
</section>
<section id="umap" class="level2" data-number="7.8">
<h2 data-number="7.8" class="anchored" data-anchor-id="umap"><span class="header-section-number">7.8</span> UMAP</h2>
<p>UMAP (Uniform Manifold Approximation and Projection) <span class="citation" data-cites="McInnes+2018">(McInnes et al., 2018)</span> は t-SNE より高速で，大域的構造をより尊重する手法として提案された．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://pair-code.github.io/understanding-umap/"><img src="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" class="img-fluid figure-img" alt="UMAP and t-SNE applied to the Fashion MNIST dataset; tap to visit https://pair-code.github.io/understanding-umap/"></a></p>
<figcaption>UMAP and t-SNE applied to the Fashion MNIST dataset; tap to visit https://pair-code.github.io/understanding-umap/</figcaption>
</figure>
</div>
</section>
<section id="モデルベース手法" class="level2" data-number="7.9">
<h2 data-number="7.9" class="anchored" data-anchor-id="モデルベース手法"><span class="header-section-number">7.9</span> モデルベース手法</h2>
<p>t-SNE, VargeVis, UMAP はいずれも確率を導入しているが，完全にモデルベースの発想をしているわけではない．</p>
<p><span class="citation" data-cites="Saul2020">(Saul, 2020)</span> はこれらの手法を <a href="../../../posts/2024/Kernels/HierarchicalModel.html">潜在変数モデル</a> として定式化し，データサイズに合わせて EM アルゴリズムをはじめとした推定手法を議論している．</p>
</section>
</section>
<section id="拡散写像" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> 拡散写像</h1>
<section id="はじめに-2" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="はじめに-2"><span class="header-section-number">8.1</span> はじめに</h2>
<p><strong>拡散埋め込み</strong> (Diffusion Map) <span class="citation" data-cites="Coifman+2005">(Coifman et al., 2005)</span> では，データ上に乱歩を定めることでデータ多様体の局所構造を捉える．</p>
<p>この方法は Isomap 3 でグラフを用いて測地距離を近似したよりも，頑健なアルゴリズムを与える．</p>
</section>
<section id="phate" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="phate"><span class="header-section-number">8.2</span> PHATE</h2>
<p>PHATE (Heat Diffusion for Affinity-based Transition Embedding) <span class="citation" data-cites="Moon+2019">(Moon et al., 2019)</span> は DEMaP (Denoised Embedding Manifold Preservation) という情報理論に基づく距離を定義し，データの局所構造を捉える．</p>
</section>
</section>
<section id="自己組織化写像-som" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> 自己組織化写像 (SOM)</h1>
<p>Self-organizing Map <span class="citation" data-cites="Kohonen1982">(Kohonen, 1982)</span>, <span class="citation" data-cites="Kohonen2013">(Kohonen, 2013)</span> は，ニューラルネットワークのダイナミクスを利用した，クラスタリングベースの次元縮約法である．</p>
<section id="ivis" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="ivis"><span class="header-section-number">9.1</span> IVIS</h2>
<p>IVIS <span class="citation" data-cites="Szubert+2019">(Szubert et al., 2019)</span> は <a href="../../../posts/2024/Kernels/Kernel.html#sec-triplet-loss">三つ子損失を取り入れたシャムネットワーク</a> による距離学習に基づく次元縮約法である．</p>
</section>
</section>
<section id="mapper" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Mapper</h1>
<p>Mapper <span class="citation" data-cites="Singh+2007">(Singh et al., 2007)</span> は，距離空間 <img src="https://latex.codecogs.com/png.latex?E"> 上のデータ <img src="https://latex.codecogs.com/png.latex?%5C%7Bx_i%5C%7D%5Csubset%20E"> を，関数 <img src="https://latex.codecogs.com/png.latex?f:E%5Cto%5Cmathbb%7BR%7D"> が定める分解を用いてグラフとして図示する方法である．<img src="https://latex.codecogs.com/png.latex?f"> は <strong>filter function</strong> と呼ばれる．</p>
<p>他手法とは違い，出力が <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5Ed"> への埋め込みではなく，グラフである点に注意．</p>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="Mapper アルゴリズム^[このアルゴリズムは Morse 理論における概念である Reeb グラフの拡張と見れる．[@Oudot2016] のスライドや [@Schnider2024] の講義資料も参照．]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Mapper アルゴリズム<sup>6</sup>
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>値の空間 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D"> 上の開被覆 <img src="https://latex.codecogs.com/png.latex?(I_i)"> の引き戻し <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BU%7D:=(f%5E%7B-1%7D(I_i))"> として誘導されるグラフを，連結成分のみからなるように細分して <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BV%7D=(U_i)_%7Bi%5Cin%20I%7D"> を得る．</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BV%7D"> の <a href="https://en.wikipedia.org/wiki/Nerve_complex">神経複体</a> <img src="https://latex.codecogs.com/png.latex?%0AN(%5Cmathcal%7BV%7D):=%5Cleft%5C%7BJ%5Coverset%7B%5Ctext%7Bfinite%7D%7D%7B%5Csubset%7DI%5C,%5Cmiddle%7C%5C,%5Cbigcap_%7Bj%5Cin%20J%7DU_j%5Cne%5Cemptyset%5Cright%5C%7D%0A"> またはその近傍グラフを出力とする．</li>
</ol>
</div>
</div>
<p><span class="citation" data-cites="Emerson+2023">(Escolar et al., 2023)</span> では特許のデータを用い，各企業を技術空間 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5E%7B430%7D"> 内に埋め込んだ後，mapper によりグラフ化したところ，企業の独自戦略が可視化できるという：</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/0LQpJiecCvw?si=I-6R3dn8EAAG8xs1" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>Mapper アルゴリズムは filter function <img src="https://latex.codecogs.com/png.latex?f"> の選択が重要になるが，これにハイパーパラメータを導入し <span class="citation" data-cites="Oulhaj+2024">(Oulhaj, Carrière, et al., 2024)</span>，さらにニューラルネットワークで推定する方法 Deep Mapper <span class="citation" data-cites="Oulhaj+2024DeepMapper">(Oulhaj, Ishii, et al., 2024)</span> が，分子モデリングと創薬に応用されている．</p>
</section>




<div id="quarto-appendix" class="default"><section id="終わりに" class="level1 appendix" data-number="11"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">11</span> 終わりに</h2><div class="quarto-appendix-contents">

<p>結局機械学習が日々の統計的営みに与えた最大のインパクトは，ニューラルネットワークや生成モデル自体というより，高精度な非線型表現学習であると言えるかもしれない．</p>
<p>例えば <span class="citation" data-cites="Hoffmann+2019">(Hoffman et al., 2019)</span> は <a href="../../../posts/2024/Samplers/NF.html#sec-NF-Bayes">IAF</a> <span class="citation" data-cites="Kingma+2016">(Kingma et al., 2016)</span> を用いて目標分布を学習し，学習された密度 <img src="https://latex.codecogs.com/png.latex?q"> で変換後の分布から MCMC サンプリングをすることで効率がはるかに改善することを報告した．実際，フローによる変換を受けた後は対象分布は正規分布に近くなることから，MCMC サンプリングを減速させる要因の多くが消滅していることが期待される．</p>
<p>多くの他の統計的な困難も，良い表現学習された空間上（あるいはカーネル空間上）で実行することで回避することができるということになるかもしれない．これが最初に SVM が機械学習に与えた希望の形であったし，ニューラルネットワークに対する飽くなき理論的興味の源泉でもある．データの視覚化や探索的データ解析の意味では，よき潜在表現を必要としているのは人間も然りである．</p>
</div></section><section id="文献" class="level1 appendix" data-number="12"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">12</span> 文献</h2><div class="quarto-appendix-contents">

<p><span class="citation" data-cites="Yao2011">(Yao, 2011)</span> は LLE, Laplacian Eigenmaps, カーネル PCA, Diffusion Maps の関連性を扱っている講義スライドである．</p>
<p><span class="citation" data-cites="Wattemnerg+2016">(Wattenberg et al., 2016)</span> はインタラクティブに t-SNE の性質を理解できるウェブページである．<a href="https://pair-code.github.io/understanding-umap/">Understanding UMAP</a> も同様にして，UMAP と t-SNE の比較を与えている．</p>
<p><span class="citation" data-cites="Murphy2022">(Murphy, 2022)</span> 第20章は次元縮約という題で，PCA, FA から自己符号化器，多様体学習を解説している．<span class="citation" data-cites="Burges2010">(Burges, 2010)</span> が同じテーマのしばらく前のサーベイである．</p>
<p>多様体学習に関しては <span class="citation" data-cites="本武陽一2017">(本武陽一, 2017)</span> も注目．</p>
<p>PCA は Kosambi-Karhunen-Loéve 変換ともいう <span class="citation" data-cites="Bishop-Bishop2024">(Bishop and Bishop, 2024, p. 497)</span>．PCA からとにかくスペクトルとの関連が深い．</p>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Agrawal+2021" class="csl-entry">
Agrawal, A., Ali, A., and Boyd, S. (2021). <a href="https://doi.org/10.1561/2200000090">Minimum-distortion embedding</a>. <em>Foundations and Trends<span></span> in Machine Learning</em>, <em>14</em>(3), 211–378.
</div>
<div id="ref-Balasubramanian-Schwartz2002" class="csl-entry">
Balasubramanian, M., and Schwartz, E. L. (2002). <a href="https://doi.org/10.1126/science.295.5552.7a">The isomap algorithm and topological stability</a>. <em>Science</em>, <em>295</em>(5552), 7–7.
</div>
<div id="ref-Mikhali-Partha2001" class="csl-entry">
Belkin, M., and Niyogi, P. (2001). <a href="https://proceedings.neurips.cc/paper_files/paper/2001/file/f106b7f99d2cb30c3db1c3cc0fde9ccb-Paper.pdf">Laplacian eigenmaps and spectral techniques for embedding and clustering</a>. In T. Dietterich, S. Becker, and Z. Ghahramani, editors, <em>Advances in neural information processing systems</em>,Vol. 14. MIT Press.
</div>
<div id="ref-Bishop-Bishop2024" class="csl-entry">
Bishop, C. M., and Bishop, H. (2024). <em><a href="https://link.springer.com/book/10.1007/978-3-031-45468-4">Deep learning: Foundations and concepts</a></em>. Springer Cham.
</div>
<div id="ref-Burges2010" class="csl-entry">
Burges, C. J. C. (2010). <a href="https://doi.org/10.1561/2200000002">Dimension reduction: A guided tour</a>. <em>Foundations and Trends<span></span> in Machine Learning</em>, <em>2</em>(4), 275–365.
</div>
<div id="ref-Carreira-Perpinan2010" class="csl-entry">
Carreira-Perpiñan, M. Á. (2010). The elastic embedding algorithm for dimensionality reduction. In <em>Proceedings of the 27th international conference on international conference on machine learning</em>, pages 167–174. Madison, WI, USA: Omnipress.
</div>
<div id="ref-Choi-Choi2007" class="csl-entry">
Choi, H., and Choi, S. (2007). <a href="https://doi.org/10.1016/j.patcog.2006.04.025">Robust kernel isomap</a>. <em>Pattern Recognition</em>, <em>40</em>(3), 853–862.
</div>
<div id="ref-Coifman+2005" class="csl-entry">
Coifman, R. R., Lafon, S., Lee, A. B., Maggioni, M., Nadler, B., Warner, F., and Zucker, S. W. (2005). <a href="https://doi.org/10.1073/pnas.0500334102">Geometric diffusions as a tool for harmonic analysis and structure definition of data: Diffusion maps</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>102</em>(21), 7426–7431.
</div>
<div id="ref-Coombs1950" class="csl-entry">
Coombs, C. H. (1950). <a href="https://psycnet.apa.org/doi/10.1037/h0060984"><span class="nocase">Psychological Scaling without a Unit of Measurement</span></a>. <em>Psychological Review</em>, <em>57</em>(3), 145–158.
</div>
<div id="ref-DasGupta-Freud2008" class="csl-entry">
Dasgupta, S., and Freund, Y. (2008). <a href="https://doi.org/10.1145/1374376.1374452">Random projection trees and low dimensional manifolds</a>. In <em>Proceedings of the fortieth annual ACM symposium on theory of computing</em>, pages 537–546. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-deLeeuw1977" class="csl-entry">
de Leeuw, J. (1977). <em>Applications of convex analysis to multidimensional scaling</em>. UCLA: Department of Statistics. Retrieved from <a href="https://escholarship.org/uc/item/7wg0k7xq">https://escholarship.org/uc/item/7wg0k7xq</a>
</div>
<div id="ref-Donoho-Grimes2003" class="csl-entry">
Donoho, D. L., and Grimes, C. (2003). <a href="https://doi.org/10.1073/pnas.1031596100">Hessian eigenmaps: Locally linear embedding techniques for high-dimensional data</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>100</em>(10), 5591–5596.
</div>
<div id="ref-Eades1984" class="csl-entry">
Eades, P. (1984). <a href="https://www.cs.ubc.ca/~will/536E/papers/Eades1984.pdf"><span class="nocase">A Heuristic for Graph Drawing</span></a>. <em>Congress Numerantium</em>, <em>42</em>(11), 149–160.
</div>
<div id="ref-Eckart-Young1936" class="csl-entry">
Eckart, C., and Young, G. (1936). <a href="https://doi.org/10.1007/BF02288367">The approximation of one matrix by another of lower rank</a>. <em>Psychometrika</em>, <em>1</em>(3), 211–218.
</div>
<div id="ref-Emerson+2023" class="csl-entry">
Escolar, E. G., Hiraoka, Y., Igami, M., and Ozcan, Y. (2023). <a href="https://doi.org/10.1016/j.respol.2023.104821">Mapping firms’ locations in technological space: A topological analysis of patent statistics</a>. <em>Research Policy</em>, <em>52</em>(8), 104821.
</div>
<div id="ref-Fefferman+2016" class="csl-entry">
Fefferman, C., Mitter, S., and Narayanan, H. (2016). <a href="https://doi.org/10.1090/jams/852">Testing the manifold hypothesis</a>. <em>Journal of the American Mathematical Society</em>, <em>29</em>, 983–1049.
</div>
<div id="ref-Fisk+1967" class="csl-entry">
Fisk, C. J., Caskey, D. L., and West, L. E. (1967). <a href="https://doi.org/10.1109/PROC.1967.6027">ACCEL: Automated circuit card etching layout</a>. <em>Proceedings of the IEEE</em>, <em>55</em>(11), 1971–1982.
</div>
<div id="ref-Gabriel1971" class="csl-entry">
Gabriel, K. R. (1971). <a href="http://www.jstor.org/stable/2334381">The biplot graphic display of matrices with application to principal component analysis</a>. <em>Biometrika</em>, <em>58</em>(3), 453–467.
</div>
<div id="ref-Gower2004" class="csl-entry">
Gower, J. C. (2004). <a href="http://www.jstor.org/stable/20441132">The geometry of biplot scaling</a>. <em>Biometrika</em>, <em>91</em>(3), 705–714.
</div>
<div id="ref-Hinton-Roweis2002" class="csl-entry">
Hinton, G. E., and Roweis, S. (2002). <a href="https://proceedings.neurips.cc/paper_files/paper/2002/file/6150ccc6069bea6b5716254057a194ef-Paper.pdf">Stochastic neighbor embedding</a>. In S. Becker, S. Thrun, and K. Obermayer, editors, <em>Advances in neural information processing systems</em>,Vol. 15. MIT Press.
</div>
<div id="ref-Hoffmann+2019" class="csl-entry">
Hoffman, M., Sountsov, P., Dillon, J. V., Langmore, I., Tran, D., and Vasudevan, S. (2019). <a href="https://arxiv.org/abs/1903.03704">NeuTra-lizing bad geometry in hamiltonian monte carlo using neural transport</a>. In <em>Symposium on advances in approximate bayesian inference</em>.
</div>
<div id="ref-Imai2016" class="csl-entry">
Imai, K., Lo, J., and Olmsted, J. (2016). <a href=""><span class="nocase">Fast Estimation of Ideal Points with Massive Data</span></a>. <em>American Political Science Review</em>, <em>110</em>(4), 631–656.
</div>
<div id="ref-Kamada-Kawai1989" class="csl-entry">
Kamada, T., and Kawai, S. (1989). <a href="https://doi.org/10.1016/0020-0190(89)90102-6">An algorithm for drawing general undirected graphs</a>. <em>Information Processing Letters</em>, <em>31</em>(1), 7–15.
</div>
<div id="ref-Kingma+2016" class="csl-entry">
Kingma, D., Salimans, T., Jozefowicz, R., Chen, X., Sutskever, I., and Welling, M. (2016). <a href="https://proceedings.neurips.cc/paper_files/paper/2016/file/ddeebdeefdb7e7e7a697e1c3e3d8ef54-Paper.pdf">Improved variational inference with inverse autoregressive flow</a>. In D. Lee, M. Sugiyama, U. Luxburg, I. Guyon, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 29. Curran Associates, Inc.
</div>
<div id="ref-Kohonen1982" class="csl-entry">
Kohonen, T. (1982). <a href="https://doi.org/10.1007/BF00337288">Self-organized formation of topologically correct feature maps</a>. <em>Biological Cybernetics</em>, <em>43</em>(1), 59–69.
</div>
<div id="ref-Kohonen2013" class="csl-entry">
Kohonen, T. (2013). <a href="https://doi.org/10.1016/j.neunet.2012.09.018">Essentials of the self-organizing map</a>. <em>Neural Networks</em>, <em>37</em>, 52–65.
</div>
<div id="ref-Kruskal1964" class="csl-entry">
Kruskal, J. B. (1964). <a href="https://doi.org/10.1007/BF02289565">Multidimensional scaling by optimizing goodness of fit to a nonmetric hypothesis</a>. <em>Psychometrika</em>, <em>29</em>(1), 1–27.
</div>
<div id="ref-vanderMaaten2014" class="csl-entry">
Maaten, L. van der. (2014). <a href="http://jmlr.org/papers/v15/vandermaaten14a.html">Accelerating t-SNE using tree-based algorithms</a>. <em>Journal of Machine Learning Research</em>, <em>15</em>(93), 3221–3245.
</div>
<div id="ref-Martin-Quinn2002" class="csl-entry">
Martin, A. D., and Quinn, K. M. (2002). <a href="http://www.jstor.org/stable/25791672">Dynamic ideal point estimation via markov chain monte carlo for the u.s. Supreme court, 1953–1999</a>. <em>Political Analysis</em>, <em>10</em>(2), 134–153.
</div>
<div id="ref-McInnes+2018" class="csl-entry">
McInnes, L., Healy, J., Saul, N., and Großberger, L. (2018). <a href="https://doi.org/10.21105/joss.00861">UMAP: Uniform manifold approximation and projection</a>. <em>Journal of Open Source Software</em>, <em>3</em>(29), 861.
</div>
<div id="ref-Moon+2019" class="csl-entry">
Moon, K. R., Dijk, D. van, Wang, Z., Gigante, S., Burkhardt, D. B., Chen, W. S., … Krishnaswamy, S. (2019). <a href="https://doi.org/10.1038/s41587-019-0336-3">Visualizing structure and transitions in high-dimensional biological data</a>. <em>Nature Biotechnology</em>, <em>37</em>(12), 1482–1492.
</div>
<div id="ref-Murphy2022" class="csl-entry">
Murphy, K. P. (2022). <em><a href="https://probml.github.io/pml-book/book1.html">Probabilistic machine learning: An introduction</a></em>. MIT Press.
</div>
<div id="ref-Oudot2016" class="csl-entry">
Oudot, S. (2016). <em><a href="https://geometrica.saclay.inria.fr/team/Steve.Oudot/courses/EMA/Slides_Reeb_Mapper.pdf">Reeb graph and mapper</a></em>.
</div>
<div id="ref-Oulhaj+2024" class="csl-entry">
Oulhaj, Z., Carrière, M., and Michel, B. (2024). <a href="https://arxiv.org/abs/2402.12854">Differentiable mapper for topological optimization of data representation</a>.
</div>
<div id="ref-Oulhaj+2024DeepMapper" class="csl-entry">
Oulhaj, Z., Ishii, Y., Ohga, K., Yamazaki, K., Wada, M., Umeda, Y., … Kurihara, H. (2024). <a href="https://arxiv.org/abs/2402.19177">Deep mapper graph and its application to visualize plausible pathways on high-dimensional distribution with small time-complexity</a>.
</div>
<div id="ref-Quinn-Breuer1979" class="csl-entry">
Quinn, N., and Breuer, M. (1979). <a href="https://doi.org/10.1109/TCS.1979.1084652">A forced directed component placement procedure for printed circuit boards</a>. <em>IEEE Transactions on Circuits and Systems</em>, <em>26</em>(6), 377–388.
</div>
<div id="ref-Roweis-Saul2000" class="csl-entry">
Roweis, S. T., and Saul, L. K. (2000). <a href="https://doi.org/10.1126/science.290.5500.2323">Nonlinear dimensionality reduction by locally linear embedding</a>. <em>Science</em>, <em>290</em>(5500), 2323–2326.
</div>
<div id="ref-Sammon1969" class="csl-entry">
Sammon, J. W. (1969). <a href="https://doi.org/10.1109/T-C.1969.222678">A nonlinear mapping for data structure analysis</a>. <em>IEEE Transactions on Computers</em>, <em>C-18</em>(5), 401–409.
</div>
<div id="ref-Saul2020" class="csl-entry">
Saul, L. K. (2020). <a href="https://doi.org/10.1073/pnas.1916012117">A tractable latent variable model for nonlinear dimensionality reduction</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>117</em>(27), 15403–15408.
</div>
<div id="ref-Schnider2024" class="csl-entry">
Schnider, P. (2024). <em><a href="https://ti.inf.ethz.ch/ew/courses/TDA24/index.html">Introduction to topological data analysi</a></em>.
</div>
<div id="ref-Scholkopf+1998" class="csl-entry">
Schölkopf, B., Smola, A., and Müller, K.-R. (1998). <a href="https://doi.org/10.1162/089976698300017467">Nonlinear component analysis as a kernel eigenvalue problem</a>. <em>Neural Computation</em>, <em>10</em>(5), 1299–1319.
</div>
<div id="ref-Singh+2007" class="csl-entry">
Singh, G., Memoli, F., and Carlsson, G. (2007). <a href="https://doi.org//10.2312/SPBG/SPBG07/091-100
"><span class="nocase">Topological Methods for the Analysis of High Dimensional Data Sets and 3D Object Recognition </span></a>. In M. Botsch, R. Pajarola, B. Chen, and M. Zwicker, editors, <em>Eurographics symposium on point-based graphics</em>. The Eurographics Association.
</div>
<div id="ref-Szubert+2019" class="csl-entry">
Szubert, B., Cole, J. E., Monaco, C., and Drozdov, I. (2019). <a href="https://doi.org/10.1038/s41598-019-45301-0">Structure-preserving visualisation of high dimensional single-cell datasets</a>. <em>Scientific Reports</em>, <em>9</em>(1), 8914.
</div>
<div id="ref-Tang+2016" class="csl-entry">
Tang, J., Liu, J., Zhang, M., and Mei, Q. (2016). <a href="https://doi.org/10.1145/2872427.2883041">Visualizing large-scale and high-dimensional data</a>. In <em>Proceedings of the 25th international conference on world wide web</em>, pages 287–297. Republic; Canton of Geneva, CHE: International World Wide Web Conferences Steering Committee.
</div>
<div id="ref-Tenenbaum+2000" class="csl-entry">
Tenenbaum, J. B., Silva, V. de, and Langford, J. C. (2000). <a href="https://doi.org/10.1126/science.290.5500.2319"><span class="nocase">A Global Geometric Framework for Nonlinear Dimensionality Reduction</span></a>. <em>Science</em>, <em>290</em>(5500), 2319–2323.
</div>
<div id="ref-Torgenson1952" class="csl-entry">
Torgerson, W. S. (1952). <a href="https://doi.org/10.1007/BF02288916">Multidimensional scaling: I. Theory and method</a>. <em>Psychometrika</em>, <em>17</em>(4), 401–419.
</div>
<div id="ref-Tutte1963" class="csl-entry">
Tutte, W. T. (1963). <a href="https://doi.org/10.1112/plms/s3-13.1.743"><span class="nocase">How to Draw a Graph</span></a>. <em>Proceedings of the London Mathematical Society</em>, <em>s3-13</em>(1), 743–767.
</div>
<div id="ref-Maaten-Hinton2008" class="csl-entry">
van der Maaten, L., and Hinton, G. (2008). <a href="http://jmlr.org/papers/v9/vandermaaten08a.html">Visualizing data using t-SNE</a>. <em>Journal of Machine Learning Research</em>, <em>9</em>(86), 2579–2605.
</div>
<div id="ref-Wattemnerg+2016" class="csl-entry">
Wattenberg, M., Viégas, F., and Johnson, I. (2016). <a href="https://doi.org/10.23915/distill.00002">How to use t-SNE effectively</a>. <em>Distill</em>.
</div>
<div id="ref-Weinberger+2004" class="csl-entry">
Weinberger, K. Q., Sha, F., and Saul, L. K. (2004). <a href="https://doi.org/10.1145/1015330.1015345">Learning a kernel matrix for nonlinear dimensionality reduction</a>. In <em>Proceedings of the twenty-first international conference on machine learning</em>, page 106. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Wilk+2020" class="csl-entry">
Wilk, A. J., Rustagi, A., Zhao, N. Q., Roque, J., Martı́nez-Colón, G. J., McKechnie, J. L., … Blish, C. A. (2020). <a href="https://doi.org/10.1038/s41591-020-0944-y">A single-cell atlas of the peripheral immune response in patients with severe COVID-19</a>. <em>Nature Medicine</em>, <em>26</em>(7), 1070–1076.
</div>
<div id="ref-Wu-Fischer2020" class="csl-entry">
Wu, T., and Fischer, I. (2020). <a href="https://openreview.net/forum?id=HJloElBYvB">Phase transitions for the information bottleneck in representation learning</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Yao2011" class="csl-entry">
Yao, Y. (2011). <em><a href="https://www.math.pku.edu.cn/teachers/yaoy/Spring2011/">Mathematics of data – laplacian, diffusion, and hessian LLE</a></em>.
</div>
<div id="ref-Young-Hausholder1938" class="csl-entry">
Young, G., and Householder, A. S. (1938). <a href="https://doi.org/10.1007/BF02287916">Discussion of a set of points in terms of their mutual distances</a>. <em>Psychometrika</em>, <em>3</em>(1), 19–22.
</div>
<div id="ref-Zhang-Zha2004" class="csl-entry">
Zhang, Z., and Zha, H. (2004). <a href="https://doi.org/10.1137/S1064827502419154">Principal manifolds and nonlinear dimensionality reduction via tangent space alignment</a>. <em>SIAM Journal on Scientific Computing</em>, <em>26</em>(1), 313–338.
</div>
<div id="ref-三輪洋文2017" class="csl-entry">
三輪洋文. (2017). <a href="https://doi.org/10.14854/jaes.33.1_41">Twitter データによる日本の政治家・言論人・政党・メディアのイデオロギー位置の推定</a>. <em>選挙研究</em>, <em>33</em>(1), 41–56.
</div>
<div id="ref-岡田謙介-加藤淳子2016" class="csl-entry">
岡田謙介, and 加藤淳子. (2016). <a href="https://doi.org/10.2333/jbhmk.43.155">政治学における空間分析と認知空間</a>. <em>行動計量学</em>, <em>43</em>(2), 155–166.
</div>
<div id="ref-本武陽一2017" class="csl-entry">
本武陽一. (2017). <em>高次元データセットに潜む幾何構造と深層学習 : その解析と大自由度力学系への応用</em> (PhD thesis). 東京大学. Retrieved from <a href="https://repository.dl.itc.u-tokyo.ac.jp/records/48134">https://repository.dl.itc.u-tokyo.ac.jp/records/48134</a>
</div>
<div id="ref-足立浩平2000" class="csl-entry">
足立浩平. (2000). <a href="https://doi.org/10.2333/jbhmk.27.12">計量多次元展開法の変量モデル</a>. <em>行動計量学</em>, <em>27</em>(1), 12–23.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><span class="citation" data-cites="本武陽一2017">(本武陽一, 2017)</span> も注目．↩︎</p></li>
<li id="fn2"><p>(Peripheral Blood Mononuclear Cell)↩︎</p></li>
<li id="fn3"><p>なお，<span class="citation" data-cites="Wilk+2020">(Wilk et al., 2020)</span> では最初の 50 の主成分がプロットされている．↩︎</p></li>
<li id="fn4"><p><span class="citation" data-cites="岡田謙介-加藤淳子2016">(岡田謙介 and 加藤淳子, 2016)</span> 参照．大変入門に良い日本語文献である．計量的多次元尺度法は <strong>主座標分析</strong> (PCoA: Principal Coordinate Analysis) <span class="citation" data-cites="Young-Hausholder1938">(Young and Householder, 1938)</span> とも呼ばれる．↩︎</p></li>
<li id="fn5"><p>どうやら相転移境界が近いため，アニーリングが必要？<span class="citation" data-cites="Wu-Fischer2020">(Wu and Fischer, 2020)</span>．<span class="citation" data-cites="Murphy2022">(Murphy, 2022, p. 700)</span> 20.4.10.1節も参照．↩︎</p></li>
<li id="fn6"><p>このアルゴリズムは Morse 理論における概念である Reeb グラフの拡張と見れる．<span class="citation" data-cites="Oudot2016">(Oudot, 2016)</span> のスライドや <span class="citation" data-cites="Schnider2024">(Schnider, 2024)</span> の講義資料も参照．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <category>Nature</category>
  <category>Statistics</category>
  <category>Geometry</category>
  <guid>https://162348.github.io/posts/2024/Kernels/Manifold.html</guid>
  <pubDate>Mon, 29 Jul 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" medium="image" type="image/png" height="93" width="144"/>
</item>
<item>
  <title>表現学習と非線型独立成分分析</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Kernels/NCL.html</link>
  <description><![CDATA[ 





<section id="関連ページ" class="level2 unnumbered unlisted">
<h2 class="unnumbered unlisted anchored" data-anchor-id="関連ページ">関連ページ</h2>
<div id="listing-kernel-listing" class="quarto-listing quarto-listing-container-grid">
<div class="list grid quarto-listing-cols-3">
<div class="g-col-1" data-index="0" data-categories="Kernel" data-listing-date-sort="1723215600000" data-listing-file-modified-sort="1724220374242" data-listing-date-modified-sort="1723302000000" data-listing-reading-time-sort="3" data-listing-word-count-sort="582">
<a href="../../../posts/2024/Kernels/Kernel.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/Gibbs.svg" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
カーネル法の概観
</h5>
<div class="card-subtitle listing-subtitle">
半正定値カーネルから距離学習まで
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-08-10
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="1" data-categories="Deep,Nature,Statistics,Geometry" data-listing-date-sort="1722265200000" data-listing-file-modified-sort="1726557394692" data-listing-date-modified-sort="1723647600000" data-listing-reading-time-sort="3" data-listing-word-count-sort="597">
<a href="../../../posts/2024/Kernels/Manifold.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Kernels/Images/UMAPvSNE.png" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
非線型な次元縮約法の概観
</h5>
<div class="card-subtitle listing-subtitle">
最古にして最難のタスクと多様体学習
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-07-30
</div>
</div>
</div>
</div>
</a>
</div>
<div class="g-col-1" data-index="2" data-categories="Deep,Nature,Sampling" data-listing-date-sort="1711724400000" data-listing-file-modified-sort="1725250592261" data-listing-date-modified-sort="1722438000000" data-listing-reading-time-sort="5" data-listing-word-count-sort="880">
<a href="../../../posts/2024/Samplers/EBM.html" class="quarto-grid-link">
<div class="quarto-grid-item card h-100 card-left">
<p class="card-img-top">
<img src="https://162348.github.io/posts/2024/Samplers/Files/NCL/thumb_checkerboard.gif" class="thumbnail-image card-img" style="height: 150px;">
</p>
<div class="card-body post-contents">
<h5 class="no-anchor card-title listing-title">
エネルギーベースモデル
</h5>
<div class="card-subtitle listing-subtitle">
深層生成モデル５
</div>
<div class="card-attribution card-text-small end">
<div class="listing-date">
2024-03-30
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
</section>
<section id="表現学習とは何か" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="表現学習とは何か"><span class="header-section-number">1</span> 表現学習とは何か？</h2>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="表現学習５つのアプローチ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
表現学習５つのアプローチ
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>教師あり学習による表現学習</li>
<li>生成による表現学習</li>
<li>自己教師あり表現学習</li>
<li>ノイズ対照による表現学習</li>
<li>独立成分分析による表現学習</li>
</ol>
</div>
</div>
<p>極めて高精度な分類器が完成してすぐのころ，分類タスクが極めて上手なニューラルネットワークは他の下流タスクでも良い成績が観察され，最初に考えられた方法が１であった（<a href="../../../posts/2024/Kernels/Kernel.html#sec-distance-learning">距離学習</a>でも同様）．</p>
<p>一方でこのスキームではすぐにドメインシフトと転移学習が問題になった．</p>
<p>これを克服するのが２の方法である．高精度なデータを生成できる深層潜在模型が学習された場合，その潜在変数は現実の何らかの表象になっているだろう，というアイデアは analysis-by-synthesis <span class="citation" data-cites="Roberts1963">(Roberts, 1963)</span>, <span class="citation" data-cites="Lee-Mumford2003">(Lee and Mumford, 2003)</span> とも呼ばれている．</p>
<p>この方法は，文字のストローク（トメ，ハネ）が集まった構造に注目するなど，データの生成過程がある程度明らかなものでは特に性能が良い <span class="citation" data-cites="Lake+2015">(Lake et al., 2015)</span>．</p>
<p><a href="../../../posts/2024/Kernels/Deep4.html#sec-beta-VAE"><img src="https://latex.codecogs.com/png.latex?%5Cbeta">-VAE</a> <span class="citation" data-cites="Higgins+2017">(Higgins et al., 2017)</span> や BiGAN <span class="citation" data-cites="Donahue+2017">(Donahue et al., 2017)</span> はその例であるが，ImageNet などの大規模データに対する分類や分割のタスクで十分な性能はまだ見られていないという．</p>
</section>
<section id="生成から雑音除去へ" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="生成から雑音除去へ"><span class="header-section-number">2</span> 生成から雑音除去へ</h2>
<p>２よりも表現学習として良い性質を持つのが３である．</p>
<p>生成のためには大変多くの特徴量が必要であるが，下流タスクに重要なのはその一部のみに限る．このような場合，<a href="../../../posts/2024/Kernels/Deep4.html#sec-denoising-autoencoder">Denoising Autoencoder</a> <span class="citation" data-cites="Vincent+2008">(Vincent et al., 2008)</span> のように「データにノイズを印加してこれを戻すのに必要な知識は何か？」を問うことが極めて普遍的な力を持つ．</p>
<p>雑音除去と同様に，表現学習に極めて有効なタスクがマスク除去 <span class="citation" data-cites="Devlin+2019">(Devlin et al., 2019)</span> である．これは画像領域にも応用されている：BEiT <span class="citation" data-cites="Bao+2022">(Bao et al., 2022)</span>．<strong>masked autoencoder</strong> <span class="citation" data-cites="He+2022">(He et al., 2022)</span> が現在の state of the art であるようである．</p>
</section>
<section id="sec-NCL4RL" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="sec-NCL4RL"><span class="header-section-number">3</span> 対照学習による表現学習</h2>
<p>ノイズ対照学習に基づいた方法が第４勢力として登場（再興）してきている．multiview representation learning とも呼ばれる．</p>
<section id="sec-NCL" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="sec-NCL"><span class="header-section-number">3.1</span> ノイズ対照学習 (NCL)</h3>
<p>この方法では，雑音やマスク除去とは違った方法で，「真のデータをノイズと見分ける」という予測問題として表現学習を解く．<sup>1</sup></p>
<p>この方法は最初自然言語処理で大きな成功を収めた <span class="citation" data-cites="Mnih-Kavukcuoglu2013">(Mnih and Kavukcuoglu, 2013)</span>．例えば word2vec <span class="citation" data-cites="Mikolov2013">(Mikolov, Chen, et al., 2013)</span>, <span class="citation" data-cites="Mikolov2013b">(Mikolov, Sutskever, et al., 2013)</span> も NCL に基づく．</p>
<p>一方で前述の通り，BART や GPT などの現代の言語モデルは，ノイズ対照の先へ行き，デノイジングやデマスキングによる表現学習を行っている．</p>
<p>しかし NCL には，雑音・マスク除去と違い，ある程度どのようなデータを「似ている」とするかの制御が効くという美点がある．これを <a href="../../../posts/2024/Kernels/Kernel.html#sec-distance-learning"><strong>距離学習</strong></a> ともいう．<sup>2</sup></p>
<p>発展した対照学習法，例えば CPC (Contrastive Predictive Coding) <span class="citation" data-cites="Oord+2019">(Oord et al., 2019)</span> は，言語，音声，画像，３次元空間での強化学習など，多くの領域で有力な代替を提供するようである．</p>
<p>また CLIP <span class="citation" data-cites="Radford+2019">(Radford et al., 2019)</span> では，データのモーダリティを超えて，言語と画像の関係について大規模に事前学習をさせることが可能になっている．</p>
</section>
<section id="sec-CPC" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="sec-CPC"><span class="header-section-number">3.2</span> 対照的予測符号化 (CPC) <span class="citation" data-cites="Oord+2019">(Oord et al., 2019)</span></h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/contrastive_repr4.jpeg" class="img-fluid figure-img"></p>
<figcaption>Contrastive Predictive Coding <span class="citation" data-cites="Oord+2019">(Oord et al., 2019)</span></figcaption>
</figure>
</div>
<p>まずエンコーダー <img src="https://latex.codecogs.com/png.latex?z_t=g_%7B%5Ctext%7Benc%7D%7D(x_t)"> を作る．続いて，自己回帰モデル <img src="https://latex.codecogs.com/png.latex?g_%7B%5Ctext%7Bar%7D%7D"> を用いて <img src="https://latex.codecogs.com/png.latex?z_%7B1:t%7D"> を要約して予測しようとする．</p>
<p>この段階で潜在表現 <img src="https://latex.codecogs.com/png.latex?c_t=g_%7B%5Ctext%7Bar%7D%7D(z_%7B1:t%7D)"> が作られることを期待するのであるが，直接 <img src="https://latex.codecogs.com/png.latex?p(x%7Cc)"> を予測しようとしてしまうと，必ずしも有用な潜在表現 <img src="https://latex.codecogs.com/png.latex?c"> が得られるとは限らない．</p>
<p>そこで，距離 <img src="https://latex.codecogs.com/png.latex?k"> だけ離れたデータ <img src="https://latex.codecogs.com/png.latex?x_%7Bt+k%7D"> の尤度比 <img src="https://latex.codecogs.com/png.latex?%0Af_k(x_%7Bt+k%7D,c_t)%5C,%5Cpropto%5C,%5Cfrac%7Bp(x_%7Bt+k%7D%7Cc_t)%7D%7Bp(x_%7Bt+k%7D)%7D%0A"> を， <img src="https://latex.codecogs.com/png.latex?%0Af_k(x_%7Bt+k%7D,c_t)=%5Cexp%5Cleft(z_%7Bt+k%7D%5E%5Ctop%20W_kc_t%5Cright)%0A"> の形で予測しようとし，この荷重 <img src="https://latex.codecogs.com/png.latex?W_k"> の推定を考える．</p>
<p>これは，表現学習においては予測 <img src="https://latex.codecogs.com/png.latex?p(x%7Cc)"> が至上命題であるわけではなく，<img src="https://latex.codecogs.com/png.latex?x"> と <img src="https://latex.codecogs.com/png.latex?c"> の相互情報量が近ければ十分であるために用意された，表現学習のための代理目標（<strong>InfoMax</strong> <span class="citation" data-cites="Linsker1988">(Linsker, 1988)</span> ともいう）であり，<strong>InfoNCE 損失</strong> または <a href="../../../posts/2024/Kernels/Kernel.html#sec-triplet-loss"><img src="https://latex.codecogs.com/png.latex?n">-ペア損失</a> <span class="citation" data-cites="Sohn2016">(Sohn, 2016)</span> とも呼ばれる．<sup>3</sup></p>
<p>このモデルに対しては，GAN 様の敵対的生成であるノイズ対照学習の損失を用いることができる．<span class="citation" data-cites="Oord+2019">(Oord et al., 2019)</span> では，エンコーダとして残差接続を持つ strided convolutional layer が，自己回帰モデルとして GRU (Gated Recurrent Unit) <span class="citation" data-cites="Cho+2014">(Cho et al., 2014)</span> という RNN の変種が使われている．</p>
<p>こうして推定された <img src="https://latex.codecogs.com/png.latex?(z_t,c_t)"> は，<img src="https://latex.codecogs.com/png.latex?x_%7B1:t%7D"> までのヒストリを見た要約が欲しい場合は <img src="https://latex.codecogs.com/png.latex?c_t"> を，そうでない場合は <img src="https://latex.codecogs.com/png.latex?z_t"> を，データ <img src="https://latex.codecogs.com/png.latex?x_t"> の潜在表現として使える．</p>
</section>
<section id="対照的言語-画像事前学習-clip-radford2019" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="対照的言語-画像事前学習-clip-radford2019"><span class="header-section-number">3.3</span> 対照的言語-画像事前学習 (CLIP) <span class="citation" data-cites="Radford+2019">(Radford et al., 2019)</span></h3>
<p>ノイズ対照学習に基づくアプローチの美点は，別のモーダリティを持つデータを統合しやすい点にある．</p>
<p>これを用いて，言語と画像の関係について大規模に事前学習をさせたのが OpenAI の <a href="https://openai.com/index/clip/">CLIP</a> <span class="citation" data-cites="Radford+2019">(Radford et al., 2019)</span> である．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Kernels/Images/CLIP.png" class="img-fluid figure-img"></p>
<figcaption>画像に対する種々のノイズ対照学習法がどのようなノイズと対照させるか <span class="citation" data-cites="Murphy2023">(Murphy, 2023, p. 1055)</span></figcaption>
</figure>
</div>
<p><a href="../../../posts/2024/Kernels/Kernel.html#sec-deep-metric-learning">対照学習による深層距離学習において重要なのは，正のノイズと負のノイズを各サンプル <img src="https://latex.codecogs.com/png.latex?x"> に対してどう作るか？である</a> <span class="citation" data-cites="Tian+2020WhatMakes">(Tian, Sun, et al., 2020)</span>．</p>
<p>SimCLR <span class="citation" data-cites="Chen+2020SimCLR">(Chen et al., 2020)</span> は，<img src="https://latex.codecogs.com/png.latex?x"> に対する変換（ランダムなトリミング，リサイズ，並行移動など）を学習し，データ拡張によって正のノイズと負のノイズを作る．</p>
<p>CMC (Contrastive Multiple Coding) <span class="citation" data-cites="Tian+2020">(Tian, Krishnan, et al., 2020)</span> は，<img src="https://latex.codecogs.com/png.latex?x"> の輝度 (luma) と彩度 (chroma) を取り出して正のノイズと負のノイズとする．</p>
<p>SupCon (Supervised Contrastive Learning) <span class="citation" data-cites="Khosla+2020">(Khosla et al., 2020)</span> は画像に対するラベルングが得られるとき，これを教師的に用いて正のノイズと負のノイズを作る．これは <a href="../../../posts/2024/Kernels/Kernel.html#sec-NCA">近傍成分分析 (NCA)</a> <span class="citation" data-cites="Goldberger+2004">(Goldberger et al., 2004)</span> と対照学習を組み合わせた発想であり，実際後続の分類タスクがうまく，ロバストになるという．</p>
</section>
<section id="非対照学習" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="非対照学習"><span class="header-section-number">3.4</span> 非対照学習</h3>
<p>Vision Transformer (ViT) で用いられる DINO (Self-Distilation with no Labels) <span class="citation" data-cites="Caron+2021">(Caron et al., 2021)</span> などは，負のノイズを使わず，正のノイズのみを使った表現学習法である．</p>
<p>BYOL (Bootstrap Your Own Latent) <span class="citation" data-cites="Grill+2020">(Grill et al., 2020)</span> も負のノイズを使わない手法であるが，目的関数には似ているノイズを寄せるための項しかなく，深層表現が退化しない理由はどうやら学習ダイナミクスの方にあるという．</p>
<p>Barlow Twins <span class="citation" data-cites="Zbontar+2021">(Zbontar et al., 2021)</span> では，正のノイズとの間の，各特徴量に関する相関係数行列 <img src="https://latex.codecogs.com/png.latex?C"> から定まる <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D:=%5Csum_%7Bi=1%7D%5Ep(1-C_%7Bii%7D)%5E2+%5Clambda%5Csum_%7Bi%5Cne%20j%7DC_%7Bij%7D%5E2%0A"> を目的関数とする．</p>
<p>第二項の存在により，負のノイズがなくとも表現が縮退することが回避される．この方法は，HSIC <span class="citation" data-cites="Gretton+2007">(Gretton et al., 2007)</span> などのカーネル独立性検定法を，表現学習に応用している形とみれる．</p>
</section>
</section>
<section id="独立成分分析による表現学習" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="独立成分分析による表現学習"><span class="header-section-number">4</span> 独立成分分析による表現学習</h2>
<p>表現学習の１つの目標である <strong>disentangle</strong> とは，要因ごとにデータ内の変動を説明して分離することをいう．</p>
<p>これを達成するには，データやモデルに追加の仮定が必要な場合が多い <span class="citation" data-cites="Locatello+2020">(Locatello et al., 2020)</span>．どのような状況で安定した disentanglement が可能であるかについて，独立成分分析の知見，特に指数型分布族と識別可能性の概念を通じて理解する試みがある <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span>, <span class="citation" data-cites="Roeder+2021">(Roeder et al., 2021)</span>, <span class="citation" data-cites="Halva+2021">(Hälvä et al., 2021)</span>．</p>
<p>特に，独立成分分析が目指すように，現実に何らかの意味で則した方法でデータの潜在表現を得ることが，表現学習で最も好ましい，あるべき disentanglement であるとするならば，「深層模型がいつ識別可能になるか？」は基本的な問題だというべきだろう <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span>．<sup>4</sup></p>
<p>このような立場を <strong>因果的表現学習</strong> (causal representation learning) ともいう．<sup>5</sup></p>
<p>VAE などの深層生成モデル，ノイズ対照学習，独立成分分析などはいずれも，多層の階層モデルを学習するという点では共通しており，１つの分野の発見が他に資することが多い．</p>
</section>
<section id="sec-identifiability" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="sec-identifiability"><span class="header-section-number">5</span> 深層潜在モデルの識別可能性</h2>
<p>仮に追加に観測されている変数 <img src="https://latex.codecogs.com/png.latex?u"> が存在して，事前分布 <img src="https://latex.codecogs.com/png.latex?p_%5Ctheta(z%7Cu)"> は <img src="https://latex.codecogs.com/png.latex?z"> 上で積の形に分解し，指数型分布族に属するとする．すなわち，潜在変数は <img src="https://latex.codecogs.com/png.latex?U"> で条件づければ互いに独立であるとする．この仮定が識別可能性の鍵となる <span class="citation" data-cites="Hyvarinen+2019">(Hyvarinen et al., 2019)</span>．</p>
<p><img src="https://latex.codecogs.com/png.latex?u"> はタイムスタンプや前時点での観測，信頼できないラベルなどがありえる <span class="citation" data-cites="Hyvarinen-Morioka2016">(Hyvärinen and Morioka, 2016)</span>．</p>
<p>観測 <img src="https://latex.codecogs.com/png.latex?X"> と潜在変数 <img src="https://latex.codecogs.com/png.latex?Z"> に対して，<img src="https://latex.codecogs.com/png.latex?%5Ctheta=(f,T,%5Clambda)"> をパラメータとして <img src="https://latex.codecogs.com/png.latex?%0Ap_%5Ctheta(x,z%7Cu)=p_f(x%7Cz)p_%7BT,%5Clambda%7D(z%7Cu),%0A"> <img src="https://latex.codecogs.com/png.latex?%0AX=f(Z)+%5Cepsilon,%5Cqquad%20%5Cepsilon%5Csim%20p_%5Cepsilon(%5Cepsilon).%0A"> という形のモデルは，<img src="https://latex.codecogs.com/png.latex?p_%7BT,%5Clambda%7D"> が十分統計量 <img src="https://latex.codecogs.com/png.latex?T"> とパラメータ <img src="https://latex.codecogs.com/png.latex?%5Clambda"> を持つ指数型分布族である限り，いくつかの正則性条件を満たせば識別可能になる：</p>
<div class="callout callout-style-default callout-tip no-icon callout-titled" title="[@Khemakhem+2020 定理１]">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020 定理１)</span>
</div>
</div>
<div class="callout-body-container callout-body">
<p>次の４条件が成り立つ場合，パラメータ <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> は，ある線型変換 <img src="https://latex.codecogs.com/png.latex?A"> に対して <img src="https://latex.codecogs.com/png.latex?%0AT%5Ccirc%20f%5E%7B-1%7D=A%5Ccirc%20%5Cwidetilde%7BT%7D%5Ccirc%5Cwidetilde%7Bf%7D%5E%7B-1%7D+c%0A"> の違いを除いて識別可能である：</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?p_%5Cepsilon"> の特性関数は殆ど至る所零にならない．</li>
<li><img src="https://latex.codecogs.com/png.latex?f"> は単射である．</li>
<li>十分統計量 <img src="https://latex.codecogs.com/png.latex?%5C%7BT_%7Bi,j%7D%5C%7D_%7Bi%5Cin%5Bn%5D,j%5Cin%5Bk%5D%7D"> は殆ど至る所可微分で，任意の測度正集合上に線型独立な関数を定める．</li>
<li>ある点 <img src="https://latex.codecogs.com/png.latex?u%5E0,%5Ccdots,u%5E%7Bnk%7D"> が存在して，行列 <img src="https://latex.codecogs.com/png.latex?(%5Clambda(u%5E1)%5C;%5Ccdots%5C;%5Clambda(u%5E%7Bnk%7D))-(%5Clambda(u%5E0)%5C;%5Ccdots%5C;%5Clambda(u%5E0))"> は可逆：</li>
</ol>
</div>
</div>
<p>加えて，モデルが真の分布を含む場合，変分下界の最大化は上述の線型変換 <img src="https://latex.codecogs.com/png.latex?A"> の違いを除いて <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> の一致推定に成功する．</p>
</section>
<section id="非線型独立成分分析" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="非線型独立成分分析"><span class="header-section-number">6</span> 非線型独立成分分析</h2>
<p>非線型独立成分分析は，ある独立な成分からなる潜在変数 <img src="https://latex.codecogs.com/png.latex?%0Ap(z)=%5Cprod_%7Bi=1%7D%5Edp_i(z_i)%0A"> に対して，観測がこの非線型変換 <img src="https://latex.codecogs.com/png.latex?x=f(z)"> であると仮定し，データ生成過程を特定しようとする営みである．</p>
<p>これは上のモデルの <img src="https://latex.codecogs.com/png.latex?%5Cepsilon=0"> とした場合に他ならない．</p>
<p>つまるところ，従来からの深層生成モデリングのうち，統計的に特別な意味を持つものが非線型独立成分分析と捉えることもできるはずである．すなわち，生成モデルと非線型独立成分分析は，モデルの骨子自体は共通で，その適用目的が違うに過ぎない（<a href="../../../posts/2024/Samplers/Sampling.html#sec-sampling-as-synthesis">この稿</a> も参照）．</p>
<p>ただし，統計モデルと見る以上は識別可能性が肝要である．しかし近年の ICA は，識別可能性を緩めた形 5 で得ることに成功しており，これにより深層生成モデルとの同一視が進むことになる <span class="citation" data-cites="Hyvarinen+2019">(Hyvarinen et al., 2019)</span>, <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span>．</p>
</section>
<section id="vae-の識別可能性" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="vae-の識別可能性"><span class="header-section-number">7</span> VAE の識別可能性</h2>
<p>これにより，VAE などの深層生成モデルをより統計的に意味のあるものとすることができる．上述の定理により識別可能性を確保した VAE を iVAE (identifiable VAE) <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span> と呼ぶ．</p>
<p>また逆の方向には，非線型 ICA モデルを変分ベイズや確率的勾配降下法により推定することができる．</p>
<p>また <span class="citation" data-cites="Kivva+2021">(Kivva et al., 2021)</span>, <span class="citation" data-cites="Kivva+2022">(Kivva et al., 2022)</span>, <span class="citation" data-cites="Lopez+2024">(Lopez et al., 2024)</span> によると，VAE の事前分布が特定の混合分布の形を持つならば，補助変数 <img src="https://latex.codecogs.com/png.latex?u"> が存在しない場合でも，VAE は識別可能な因果グラフを与えるという．</p>
</section>
<section id="sec-InfoMax" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="sec-InfoMax"><span class="header-section-number">8</span> InfoMax</h2>
<p>CPC 3.2 が目指したように，元データの情報量を最大限保った潜在表現を獲得することが，後続タスクにおいて有利になるだろう．</p>
<p>実は，生物の脳の認識様式もこれに沿っていると考えられ，視覚神経に関する研究を起源として <strong>効率的符号化仮説</strong> (Efficient Coding Hypothesis) <span class="citation" data-cites="Barlow1961">(H. B. Barlow, 1961)</span>, <span class="citation" data-cites="Barlow1972">(H. B. Barlow, 1972)</span> または情報処理分野において <strong>情報量最大化仮説</strong> (InfoMax) <span class="citation" data-cites="Linsker1988">(Linsker, 1988)</span>, <span class="citation" data-cites="Bell-Sejnowski1995">(Bell and Sejnowski, 1995)</span> と呼ばれている．</p>
<p>この仮説は視覚の研究における vision as inverse graphics <span class="citation" data-cites="Romaszko+2017">(Romaszko et al., 2017)</span> / analysis by synthesis <span class="citation" data-cites="Kersten+2004">(Kersten et al., 2004)</span>, <span class="citation" data-cites="Yuille-Kersten2006">(Yuille and Kersten, 2006)</span> から，一般に脳が外界モデルを獲得するプロセスに拡張され，<strong>ベイズ脳仮説</strong> <span class="citation" data-cites="Doya+2006">(Doya et al., 2006)</span> とも呼ばれる <span class="citation" data-cites="島崎秀昭2019">(島崎秀昭, 2019)</span>．</p>
<p>情報理論においては，information bottleneck principle <span class="citation" data-cites="Tishby+2000">(Tishby et al., 2000)</span>, <span class="citation" data-cites="Tishby-Zaslavsky2015">(Tishby and Zaslavsky, 2015)</span> としても継承されている．</p>
</section>



<div id="quarto-appendix" class="default"><section id="参考文献" class="level2 appendix" data-number="9"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">9</span> 参考文献</h2><div class="quarto-appendix-contents">

<p><span class="citation" data-cites="Hyvarinen-Morioka2016">(Hyvärinen and Morioka, 2016)</span>, <span class="citation" data-cites="Hyvarinen-Morioka2017">(Hyvarinen and Morioka, 2017)</span>, <span class="citation" data-cites="Hyvarinen+2019">(Hyvarinen et al., 2019)</span> は深層潜在モデルが識別可能になるための条件を示した非線型 ICA の論文である．</p>
<p>Efficient coding 仮説と InfoMax については，<span class="citation" data-cites="島崎秀昭2019">(島崎秀昭, 2019)</span> が大変良い日本語文献である．</p>
<blockquote class="blockquote">
<p>例えばハエの視覚細胞を用いた実験で神経細胞の非線形な応答関数が外界の視覚刺激の分布に適応し，出力が一様に分布することで神経細胞のダイナミックレンジが効率よく使用されていることが示されている <span class="citation" data-cites="Laughlin1981">(Laughlin, 1981)</span>, <span class="citation" data-cites="Brenner+2000">(Brenner et al., 2000)</span>．このように非線形器を外界の分布に適応させる過程を学習と呼ぶ． <span class="citation" data-cites="島崎秀昭2019">(島崎秀昭, 2019)</span></p>
</blockquote>




</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Bao+2022" class="csl-entry">
Bao, H., Dong, L., Piao, S., and Wei, F. (2022). <a href="https://openreview.net/forum?id=p-BhZSz59o4"><span>BE</span>iT: <span>BERT</span> pre-training of image transformers</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Barlow1961" class="csl-entry">
Barlow, H. B. (1961). <a href="https://doi.org/10.7551/mitpress/9780262518420.003.0013"><span class="nocase">Possible Principles Underlying the Transformations of Sensory Messages</span></a>. In <em><span>Sensory Communication</span></em>. The MIT Press.
</div>
<div id="ref-Barlow1972" class="csl-entry">
Barlow, H. B. (1972). <a href="https://doi.org/10.1068/p010371">Single units and sensation: A neuron doctrine for perceptual psychology?</a> <em>Perception</em>, <em>1</em>(4), 371–394.
</div>
<div id="ref-Bell-Sejnowski1995" class="csl-entry">
Bell, A. J., and Sejnowski, T. J. (1995). <a href="https://doi.org/10.1162/neco.1995.7.6.1129"><span class="nocase">An Information-Maximization Approach to Blind Separation and Blind Deconvolution</span></a>. <em>Neural Computation</em>, <em>7</em>(6), 1129–1159.
</div>
<div id="ref-Brenner+2000" class="csl-entry">
Brenner, N., Bialek, W., and de Ruyter van Steveninck, R. (2000). <a href="https://doi.org/10.1016/S0896-6273(00)81205-2">Adaptive rescaling maximizes information transmission</a>. <em>Neuron</em>, <em>26</em>(3), 695–702.
</div>
<div id="ref-Caron+2021" class="csl-entry">
Caron, M., Touvron, H., Misra, I., Jegou, H., Mairal, J., Bojanowski, P., and Joulin, A. (2021). <a href="https://doi.org/10.1109/ICCV48922.2021.00951">Emerging properties in self-supervised vision transformers</a>. In <em>2021 IEEE/CVF international conference on computer vision (ICCV)</em>, pages 9630–9640.
</div>
<div id="ref-Chen+2020SimCLR" class="csl-entry">
Chen, T., Kornblith, S., Norouzi, M., and Hinton, G. (2020). <a href="https://proceedings.mlr.press/v119/chen20j.html">A simple framework for contrastive learning of visual representations</a>. In H. D. III and A. Singh, editors, <em>Proceedings of the 37th international conference on machine learning</em>,Vol. 119, pages 1597–1607. PMLR.
</div>
<div id="ref-Cho+2014" class="csl-entry">
Cho, K., Merriënboer, B. van, Gulcehre, C., Bahdanau, D., Bougares, F., Schwenk, H., and Bengio, Y. (2014). <a href="https://doi.org/10.3115/v1/D14-1179">Learning phrase representations using <span>RNN</span> encoder<span>–</span>decoder for statistical machine translation</a>. In A. Moschitti, B. Pang, and W. Daelemans, editors, <em>Proceedings of the 2014 conference on empirical methods in natural language processing (<span>EMNLP</span>)</em>, pages 1724–1734. Doha, Qatar: Association for Computational Linguistics.
</div>
<div id="ref-Devlin+2019" class="csl-entry">
Devlin, J., Chang, M.-W., Lee, K., and Toutanova, K. (2019). <a href="https://aclanthology.org/N19-1423/">BERT: Pre-training of deep bidirectional transformers for language understanding</a>. In <em>Proceedings of the 2019 conference of the north american chapter of the association for computational linguistics: Human language technologies</em>,Vol. 1, pages 4171–4186.
</div>
<div id="ref-Donahue+2017" class="csl-entry">
Donahue, J., Krähenbühl, P., and Darrell, T. (2017). <a href="https://openreview.net/forum?id=BJtNZAFgg">Adversarial feature learning</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Doya+2006" class="csl-entry">
Doya, K., Ishii, S., Pouget, A., and Rao, R. P. N. (2006). <em><a href="https://doi.org/10.7551/mitpress/9780262042383.001.0001"><span class="nocase">Bayesian Brain: Probabilistic Approaches to Neural Coding </span></a></em>. The MIT Press.
</div>
<div id="ref-Elias1955" class="csl-entry">
Elias, P. (1955). <a href="https://doi.org/10.1109/TIT.1955.1055126">Predictive coding–i</a>. <em>IRE Transactions on Information Theory</em>, <em>1</em>(1), 16–24.
</div>
<div id="ref-Goldberger+2004" class="csl-entry">
Goldberger, J., Hinton, G. E., Roweis, S., and Salakhutdinov, R. R. (2004). <a href="https://proceedings.neurips.cc/paper_files/paper/2004/file/42fe880812925e520249e808937738d2-Paper.pdf">Neighbourhood components analysis</a>. In L. Saul, Y. Weiss, and L. Bottou, editors, <em>Advances in neural information processing systems</em>,Vol. 17. MIT Press.
</div>
<div id="ref-Gretton+2007" class="csl-entry">
Gretton, A., Fukumizu, K., Teo, C., Song, L., Schölkopf, B., and Smola, A. (2007). <a href="https://proceedings.neurips.cc/paper_files/paper/2007/file/d5cfead94f5350c12c322b5b664544c1-Paper.pdf">A kernel statistical test of independence</a>. In J. Platt, D. Koller, Y. Singer, and S. Roweis, editors, <em>Advances in neural information processing systems</em>,Vol. 20. Curran Associates, Inc.
</div>
<div id="ref-Grill+2020" class="csl-entry">
Grill, J.-B., Strub, F., Altché, F., Tallec, C., Richemond, P., Buchatskaya, E., … Valko, M. (2020). <a href="https://proceedings.neurips.cc/paper_files/paper/2020/file/f3ada80d5c4ee70142b17b8192b2958e-Paper.pdf">Bootstrap your own latent - a new approach to self-supervised learning</a>. In H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, <em>Advances in neural information processing systems</em>,Vol. 33, pages 21271–21284. Curran Associates, Inc.
</div>
<div id="ref-Halva+2021" class="csl-entry">
Hälvä, H., Le Corff, S., Lehéricy, L., So, J., Zhu, Y., Gassiat, E., and Hyvarinen, A. (2021). <a href="https://proceedings.neurips.cc/paper_files/paper/2021/file/0cdbb4e65815fbaf79689b15482e7575-Paper.pdf">Disentangling identifiable features from noisy data with structured nonlinear ICA</a>. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P. S. Liang, and J. W. Vaughan, editors, <em>Advances in neural information processing systems</em>,Vol. 34, pages 1624–1633. Curran Associates, Inc.
</div>
<div id="ref-He+2022" class="csl-entry">
He, K., Chen, X., Xie, S., Li, Y., Dollár, P., and Girshick, R. (2022). Masked autoencoders are scalable vision learners. In <em>Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR)</em>, pages 16000–16009.
</div>
<div id="ref-Higgins+2017" class="csl-entry">
Higgins, I., Matthey, L., Pal, A., Burgess, C., Glorot, X., Botvinick, M., … Lerchner, A. (2017). <a href="https://openreview.net/forum?id=Sy2fzU9gl">Beta-<span>VAE</span>: Learning basic visual concepts with a constrained variational framework</a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-Hyvarinen-Morioka2017" class="csl-entry">
Hyvarinen, A., and Morioka, H. (2017). <a href="https://proceedings.mlr.press/v54/hyvarinen17a.html"><span class="nocase">Nonlinear ICA of Temporally Dependent Stationary Sources</span></a>. In A. Singh and J. Zhu, editors, <em>Proceedings of the 20th international conference on artificial intelligence and statistics</em>,Vol. 54, pages 460–469. PMLR.
</div>
<div id="ref-Hyvarinen+2019" class="csl-entry">
Hyvarinen, A., Sasaki, H., and Turner, R. (2019). <a href="https://proceedings.mlr.press/v89/hyvarinen19a.html">Nonlinear ICA using auxiliary variables and generalized contrastive learning</a>. In K. Chaudhuri and M. Sugiyama, editors, <em>Proceedings of the twenty-second international conference on artificial intelligence and statistics</em>,Vol. 89, pages 859–868. PMLR.
</div>
<div id="ref-Hyvarinen-Morioka2016" class="csl-entry">
Hyvärinen, A., and Morioka, H. (2016). Unsupervised feature extraction by time-contrastive learning and nonlinear ICA. In <em>Proceedings of the 30th international conference on neural information processing systems</em>, pages 3772–3780. Red Hook, NY, USA: Curran Associates Inc.
</div>
<div id="ref-Kersten+2004" class="csl-entry">
Kersten, D., Mamassian, P., and Yuille, A. (2004). <a href="https://doi.org/10.1146/annurev.psych.55.090902.142005">Object perception as bayesian inference</a>. <em>Annual Review of Psychology</em>, <em>55</em>(Volume 55, 2004), 271–304. Journal Article.
</div>
<div id="ref-Khemakhem+2020" class="csl-entry">
Khemakhem, I., Kingma, D., Monti, R., and Hyvarinen, A. (2020). <a href="https://proceedings.mlr.press/v108/khemakhem20a.html">Variational autoencoders and nonlinear ICA: A unifying framework</a>. In S. Chiappa and R. Calandra, editors, <em>Proceedings of the twenty third international conference on artificial intelligence and statistics</em>,Vol. 108, pages 2207–2217. PMLR.
</div>
<div id="ref-Khosla+2020" class="csl-entry">
Khosla, P., Teterwak, P., Wang, C., Sarna, A., Tian, Y., Isola, P., … Krishnan, D. (2020). <a href="https://proceedings.neurips.cc/paper_files/paper/2020/file/d89a66c7c80a29b1bdbab0f2a1a94af8-Paper.pdf">Supervised contrastive learning</a>. In H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, <em>Advances in neural information processing systems</em>,Vol. 33, pages 18661–18673. Curran Associates, Inc.
</div>
<div id="ref-Kivva+2022" class="csl-entry">
Kivva, B., Rajendran, G., Ravikumar, P. K., and Aragam, B. (2022). <a href="https://openreview.net/forum?id=UeG3kt_Ebg2">Identifiability of deep generative models under mixture priors without auxiliary information</a>. In <em>UAI 2022 workshop on causal representation learning</em>.
</div>
<div id="ref-Kivva+2021" class="csl-entry">
Kivva, B., Rajendran, G., Ravikumar, P., and Aragam, B. (2021). <a href="https://proceedings.neurips.cc/paper_files/paper/2021/file/966aad8981dcc75b5b8ab04427a833b2-Paper.pdf">Learning latent causal graphs via mixture oracles</a>. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P. S. Liang, and J. W. Vaughan, editors, <em>Advances in neural information processing systems</em>,Vol. 34, pages 18087–18101. Curran Associates, Inc.
</div>
<div id="ref-Lake+2015" class="csl-entry">
Lake, B. M., Salakhutdinov, R., and Tenenbaum, J. B. (2015). <a href="https://doi.org/10.1126/science.aab3050">Human-level concept learning through probabilistic program induction</a>. <em>Science</em>, <em>350</em>(6266), 1332–1338.
</div>
<div id="ref-Laughlin1981" class="csl-entry">
Laughlin, S. (1981). <a href="https://doi.org/doi:10.1515/znc-1981-9-1040">A simple coding procedure enhances a neuron’s information capacity</a>. <em>Zeitschrift f<span>ü</span>r Naturforschung C</em>, <em>36</em>(9-10), 910–912.
</div>
<div id="ref-Lee-Mumford2003" class="csl-entry">
Lee, T. S., and Mumford, D. (2003). <a href="https://doi.org/10.1364/JOSAA.20.001434">Hierarchical bayesian inference in the visual cortex</a>. <em>J. Opt. Soc. Am. A</em>, <em>20</em>(7), 1434–1448.
</div>
<div id="ref-Linsker1988" class="csl-entry">
Linsker, R. (1988). <a href="https://doi.org/10.1109/2.36"><span class="nocase">Self-Organization in a Perceptual Network</span></a>. <em>Computer</em>, <em>21</em>(3), 105–117.
</div>
<div id="ref-Locatello+2020" class="csl-entry">
Locatello, F., Bauer, S., Lucic, M., Raetsch, G., Gelly, S., Schölkopf, B., and Bachem, O. (2020). <a href="http://jmlr.org/papers/v21/19-976.html">A sober look at the unsupervised learning of disentangled representations and their evaluation</a>. <em>Journal of Machine Learning Research</em>, <em>21</em>(209), 1–62.
</div>
<div id="ref-Lopez+2024" class="csl-entry">
Lopez, R., Huetter, J.-C., Hajiramezanali, E., Pritchard, J. K., and Regev, A. (2024). <a href="https://proceedings.mlr.press/v236/lopez24a.html">Toward the identifiability of comparative deep generative models</a>. In F. Locatello and V. Didelez, editors, <em>Proceedings of the third conference on causal learning and reasoning</em>,Vol. 236, pages 868–912. PMLR.
</div>
<div id="ref-Mikolov2013" class="csl-entry">
Mikolov, T., Chen, K., Corrado, G., and Dean, J. (2013). <em><a href="https://arxiv.org/abs/1301.3781">Efficient estimation of word representations in vector space</a></em>.
</div>
<div id="ref-Mikolov2013b" class="csl-entry">
Mikolov, T., Sutskever, I., Chen, K., Corrado, G. S., and Dean, J. (2013). <a href="https://proceedings.neurips.cc/paper_files/paper/2013/file/9aa42b31882ec039965f3c4923ce901b-Paper.pdf">Distributed representations of words and phrases and their compositionality</a>. In C. J. Burges, L. Bottou, M. Welling, Z. Ghahramani, and K. Q. Weinberger, editors, <em>Advances in neural information processing systems</em>,Vol. 26. Curran Associates, Inc.
</div>
<div id="ref-Mnih-Kavukcuoglu2013" class="csl-entry">
Mnih, A., and Kavukcuoglu, K. (2013). <a href="https://proceedings.neurips.cc/paper_files/paper/2013/file/db2b4182156b2f1f817860ac9f409ad7-Paper.pdf">Learning word embeddings efficiently with noise-contrastive estimation</a>. In C. J. Burges, L. Bottou, M. Welling, Z. Ghahramani, and K. Q. Weinberger, editors, <em>Advances in neural information processing systems</em>,Vol. 26. Curran Associates, Inc.
</div>
<div id="ref-Murphy2023" class="csl-entry">
Murphy, K. P. (2023). <em><a href="http://probml.github.io/book2">Probabilistic machine learning: Advanced topics</a></em>. MIT Press.
</div>
<div id="ref-Oord+2019" class="csl-entry">
Oord, A. van den, Li, Y., and Vinyals, O. (2019). <a href="https://arxiv.org/abs/1807.03748">Representation learning with contrastive predictive coding</a>.
</div>
<div id="ref-Radford+2019" class="csl-entry">
Radford, A., Wu, J., Child, R., Luan, D., Amodei, D., and Sutskever, I. (2019). <em><a href="https://github.com/openai/gpt-2?tab=readme-ov-file">Language models are unsupervised multitask learners</a></em>.
</div>
<div id="ref-Rao-Ballard1999" class="csl-entry">
Rao, R. P. N., and Ballard, D. H. (1999). <a href="https://doi.org/10.1038/4580">Predictive coding in the visual cortex: A functional interpretation of some extra-classical receptive-field effects</a>. <em>Nature Neuroscience</em>, <em>2</em>(1), 79–87.
</div>
<div id="ref-Roberts1963" class="csl-entry">
Roberts, L. G. (1963). <em>Machine perception of three-dimensional solids</em> (PhD thesis). Massachusetts Institute of Technology. Retrieved from <a href="http://hdl.handle.net/1721.1/11589">http://hdl.handle.net/1721.1/11589</a>
</div>
<div id="ref-Roeder+2021" class="csl-entry">
Roeder, G., Metz, L., and Kingma, D. (2021). <a href="https://proceedings.mlr.press/v139/roeder21a.html">On linear identifiability of learned representations</a>. In M. Meila and T. Zhang, editors, <em>Proceedings of the 38th international conference on machine learning</em>,Vol. 139, pages 9030–9039. PMLR.
</div>
<div id="ref-Romaszko+2017" class="csl-entry">
Romaszko, L., Williams, C. K. I., Moreno, P., and Kohli, P. (2017). <a href="https://doi.org/10.1109/ICCVW.2017.115">Vision-as-inverse-graphics: Obtaining a rich 3D explanation of a scene from a single image</a>. In <em>2017 IEEE international conference on computer vision workshops (ICCVW)</em>, pages 940–948.
</div>
<div id="ref-Sohn2016" class="csl-entry">
Sohn, K. (2016). <a href="https://proceedings.neurips.cc/paper_files/paper/2016/file/6b180037abbebea991d8b1232f8a8ca9-Paper.pdf">Improved deep metric learning with multi-class n-pair loss objective</a>. In D. Lee, M. Sugiyama, U. Luxburg, I. Guyon, and R. Garnett, editors, <em>Advances in neural information processing systems</em>,Vol. 29. Curran Associates, Inc.
</div>
<div id="ref-Tian+2020" class="csl-entry">
Tian, Y., Krishnan, D., and Isola, P. (2020). Contrastive multiview coding. In A. Vedaldi, H. Bischof, T. Brox, and J.-M. Frahm, editors, <em>Computer vision – ECCV 2020</em>, pages 776–794. Cham: Springer International Publishing.
</div>
<div id="ref-Tian+2020WhatMakes" class="csl-entry">
Tian, Y., Sun, C., Poole, B., Krishnan, D., Schmid, C., and Isola, P. (2020). <a href="https://proceedings.neurips.cc/paper_files/paper/2020/file/4c2e5eaae9152079b9e95845750bb9ab-Paper.pdf">What makes for good views for contrastive learning?</a> In H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, <em>Advances in neural information processing systems</em>,Vol. 33, pages 6827–6839. Curran Associates, Inc.
</div>
<div id="ref-Tishby+2000" class="csl-entry">
Tishby, N., Pereira, F. C., and Bialek, W. (2000). <a href="https://arxiv.org/abs/physics/0004057">The information bottleneck method</a>.
</div>
<div id="ref-Tishby-Zaslavsky2015" class="csl-entry">
Tishby, N., and Zaslavsky, N. (2015). <a href="https://doi.org/10.1109/ITW.2015.7133169">Deep learning and the information bottleneck principle</a>. In <em>2015 IEEE information theory workshop (ITW)</em>, pages 1–5.
</div>
<div id="ref-Vincent+2008" class="csl-entry">
Vincent, P., Larochelle, H., Bengio, Y., and Manzagol, P.-A. (2008). <a href="https://doi.org/10.1145/1390156.1390294">Extracting and composing robust features with denoising autoencoders</a>. In <em>Proceedings of the 25th international conference on machine learning</em>, pages 1096–1103. New York, NY, USA: Association for Computing Machinery.
</div>
<div id="ref-Yuille-Kersten2006" class="csl-entry">
Yuille, A., and Kersten, D. (2006). <a href="https://doi.org/10.1016/j.tics.2006.05.002"><span class="nocase">Vision as Bayesian Inference: Analysis by Synthesis?</span></a> <em>Trends in Cognitive Sciences</em>, <em>10</em>(7), 301–308.
</div>
<div id="ref-Zbontar+2021" class="csl-entry">
Zbontar, J., Jing, L., Misra, I., LeCun, Y., and Deny, S. (2021). <a href="https://proceedings.mlr.press/v139/zbontar21a.html">Barlow twins: Self-supervised learning via redundancy reduction</a>. In M. Meila and T. Zhang, editors, <em>Proceedings of the 38th international conference on machine learning</em>,Vol. 139, pages 12310–12320. PMLR.
</div>
<div id="ref-島崎秀昭2019" class="csl-entry">
島崎秀昭. (2019). <a href="https://doi.org/10.3902/jnns.26.72">ベイズ統計と熱力学から見る生物の学習と認識のダイナミクス</a>. <em>日本神経回路学会誌</em>, <em>26</em>(3), 72–98.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>予測符号化 (<a href="https://en.wikipedia.org/wiki/Predictive_coding">predictive coding</a>) <span class="citation" data-cites="Elias1955">(Elias, 1955)</span> は従来からデータ圧縮の原理であると同時に，認知科学において，脳のメンタルモデルとしても有名である <span class="citation" data-cites="Rao-Ballard1999">(Rao and Ballard, 1999)</span>．↩︎</p></li>
<li id="fn2"><p><span class="citation" data-cites="Murphy2023">(Murphy, 2023, p. 1056)</span> 第32.3.4.2節も参照．↩︎</p></li>
<li id="fn3"><p>相互情報量は<img src="https://latex.codecogs.com/png.latex?I(x;c)=%5Csum%20p(x,c)%5Clog%5Cfrac%7Bp(x%7Cc)%7D%7Bp(x)%7D"> と表される．密度比の推定が成功していれば，相互情報量は殆ど変わらない．↩︎</p></li>
<li id="fn4"><p>The advantage of the new framework over typical deep latent-variable models used with VAEs is that we actually recover the original latents, thus providing principled disentanglement. <span class="citation" data-cites="Khemakhem+2020">(Khemakhem et al., 2020)</span> Section 6．↩︎</p></li>
<li id="fn5"><p><span class="citation" data-cites="Murphy2023">(Murphy, 2023, p. 1060)</span> 33.4.1節も参照．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <guid>https://162348.github.io/posts/2024/Kernels/NCL.html</guid>
  <pubDate>Sun, 28 Jul 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Kernels/Images/contrastive_repr4.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>VAE：変分自己符号化器</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Kernels/VAE.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="vae-kingma-welling2014" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="vae-kingma-welling2014"><span class="header-section-number">1</span> VAE <span class="citation" data-cites="Kingma-Welling2014">(D. Kingma and Welling, 2014)</span></h2>
<section id="導入" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="導入"><span class="header-section-number">1.1</span> 導入</h3>
<p><code>PyTorch</code> を用いることで詳細を省略し，VAE の構造を概観することとする．</p>
<div id="3f7ccce7" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> save_image, make_grid</span></code></pre></div>
</div>
<p>今回は，MNIST データセットを用い，隠れ次元 400 を通じて潜在次元 200 まで圧縮する．</p>
<div id="b9e88711" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/hirofumi/datasets'</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">DEVICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">x_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span></span>
<span id="cb2-8">hidden_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb2-9">latent_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span></code></pre></div>
</div>
<div id="ad1f1ca3" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MNIST</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="cb3-4"></span>
<span id="cb3-5"></span>
<span id="cb3-6">mnist_transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.Compose([</span>
<span id="cb3-7">        transforms.ToTensor(),</span>
<span id="cb3-8">])</span>
<span id="cb3-9"></span>
<span id="cb3-10">kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_workers'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pin_memory'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>} </span>
<span id="cb3-11"></span>
<span id="cb3-12">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MNIST(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mnist_transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-13">test_dataset  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MNIST(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mnist_transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb3-16">test_loader  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_dataset,  batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span></code></pre></div>
</div>
<p>PyTorch の <a href="https://pytorch.org/tutorials/beginner/basics/data_tutorial.html">Dataset と DataLoader</a> は，訓練やテスト用のデータセットの簡単なアクセスと，それに対する iterable オブジェクトを提供する．</p>
<div class="callout callout-style-default callout-important no-icon callout-titled" title="M2 Mac 上での実行">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
M2 Mac 上での実行
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>まず，次のようにして仮想環境を用意する：</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv VAE</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> VAE/bin/activate</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch</span></code></pre></div>
<p>M2 Mac では Metal Performance Shaders (MPS) という Apple の GPU アクセラレーション技術が利用可能で，PyTorch 1.12 からはこれをサポートしている．</p>
<div id="b8aef1e6" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(torch.__version__)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(torch.backends.mps.is_available())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.4.0
True</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled" title="DataLoader worker (pid(s) 9044) exited unexpectedly">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
DataLoader worker (pid(s) 9044) exited unexpectedly
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>上記のエラーは，<code>DataLoader</code> が並列処理によりデータを読み込むことに失敗したことを意味する．</p>
<p>メモリ不足も考えられるが，<code>num_workers=0</code> として単一プロセスで実行することでもエラーが抑えられる．</p>
<p>今回は軽量な計算であるから，これで良いということである．</p>
</div>
</div>
</div>
</section>
<section id="モデルの定義" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="モデルの定義"><span class="header-section-number">1.2</span> モデルの定義</h3>
<section id="エンコーダー" class="level4" data-number="1.2.1">
<h4 data-number="1.2.1" class="anchored" data-anchor-id="エンコーダー"><span class="header-section-number">1.2.1</span> エンコーダー</h4>
<p>エンコーダーはデータを受け取り，２層の全結合隠れ層を通じて，「平均」と「対数分散」の名前がついた計 400 次元の潜在表現を得る．</p>
<div id="d81950e8" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="annotated-cell-4" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Encoder(nn.Module):</span>
<span id="annotated-cell-4-2">    </span>
<span id="annotated-cell-4-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_dim, hidden_dim, latent_dim):</span>
<span id="annotated-cell-4-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Encoder, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="annotated-cell-4-5"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="1">1</button><span id="annotated-cell-4-6" class="code-annotation-target">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(input_dim, hidden_dim)</span>
<span id="annotated-cell-4-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_input2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hidden_dim, hidden_dim)</span>
<span id="annotated-cell-4-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_mean  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hidden_dim, latent_dim)</span>
<span id="annotated-cell-4-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_var   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hidden_dim, latent_dim)</span>
<span id="annotated-cell-4-10">        </span>
<span id="annotated-cell-4-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.LeakyReLU(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="annotated-cell-4-12">        </span>
<span id="annotated-cell-4-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.training <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="annotated-cell-4-14">        </span>
<span id="annotated-cell-4-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="annotated-cell-4-16">        h_       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_input(x))</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="2">2</button><span id="annotated-cell-4-17" class="code-annotation-target">        h_       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_input2(h_))</span>
<span id="annotated-cell-4-18">        mean     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_mean(h_)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="3">3</button><span id="annotated-cell-4-19" class="code-annotation-target">        log_var  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_var(h_)</span>
<span id="annotated-cell-4-20">        </span>
<span id="annotated-cell-4-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> mean, log_var</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-4" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="6" data-code-annotation="1"><a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html#torch.nn.Linear"><code>nn.Linear</code></a> は PyTorch による全結合層 <img src="https://latex.codecogs.com/png.latex?y=xA%5E%5Ctop+b"> の実装である．</span>
</dd>
<dt data-target-cell="annotated-cell-4" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="17" data-code-annotation="2">ここまで２層の全結合層にデータを通して，最終的な出力<code>h_</code>を得ており，次の段階で最終的な潜在表現を得る．</span>
</dd>
<dt data-target-cell="annotated-cell-4" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="19" data-code-annotation="3">最後の隠れ層の出力<code>h_</code>に関して平均と対数分散という名前のついた最終的な出力を，やはり全結合層を通じて得る（最終層なので活性化なし）．</span>
</dd>
</dl>
</div>
</div>
</section>
<section id="デコーダー" class="level4" data-number="1.2.2">
<h4 data-number="1.2.2" class="anchored" data-anchor-id="デコーダー"><span class="header-section-number">1.2.2</span> デコーダー</h4>
<div id="75cb2125" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="annotated-cell-5" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Decoder(nn.Module):</span>
<span id="annotated-cell-5-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, latent_dim, hidden_dim, output_dim):</span>
<span id="annotated-cell-5-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Decoder, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="annotated-cell-5-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_hidden <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(latent_dim, hidden_dim)</span>
<span id="annotated-cell-5-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_hidden2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hidden_dim, hidden_dim)</span>
<span id="annotated-cell-5-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(hidden_dim, output_dim)</span>
<span id="annotated-cell-5-7">        </span>
<span id="annotated-cell-5-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.LeakyReLU(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="annotated-cell-5-9">        </span>
<span id="annotated-cell-5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="annotated-cell-5-11">        h     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_hidden(x))</span>
<span id="annotated-cell-5-12">        h     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.LeakyReLU(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_hidden2(h))</span>
<span id="annotated-cell-5-13">        </span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-5" data-target-annotation="1">1</button><span id="annotated-cell-5-14" class="code-annotation-target">        x_hat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.sigmoid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.FC_output(h))</span>
<span id="annotated-cell-5-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x_hat</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-5" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-5" data-code-lines="14" data-code-annotation="1">最後の出力は，エンコーダーとは違い，シグモイド関数を通して確率分布<code>x_hat</code>とする．</span>
</dd>
</dl>
</div>
</div>
</section>
<section id="モデル" class="level4" data-number="1.2.3">
<h4 data-number="1.2.3" class="anchored" data-anchor-id="モデル"><span class="header-section-number">1.2.3</span> モデル</h4>
<p>VAE はエンコーダーとデコーダーを連結し，１つのニューラルネットワークとして学習する．</p>
<div id="e12d6c1a" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="annotated-cell-6" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Model(nn.Module):</span>
<span id="annotated-cell-6-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, Encoder, Decoder):</span>
<span id="annotated-cell-6-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Model, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="annotated-cell-6-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.Encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Encoder</span>
<span id="annotated-cell-6-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.Decoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Decoder</span>
<span id="annotated-cell-6-6">        </span>
<span id="annotated-cell-6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> reparameterization(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, mean, var):</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="1">1</button><span id="annotated-cell-6-8" class="code-annotation-target">        epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn_like(var).to(DEVICE)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="2">2</button><span id="annotated-cell-6-9" class="code-annotation-target">        z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>epsilon</span>
<span id="annotated-cell-6-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> z</span>
<span id="annotated-cell-6-11">        </span>
<span id="annotated-cell-6-12">                </span>
<span id="annotated-cell-6-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="3">3</button><span id="annotated-cell-6-14" class="code-annotation-target">        mean, log_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.Encoder(x)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="4">4</button><span id="annotated-cell-6-15" class="code-annotation-target">        z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reparameterization(mean, torch.exp(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> log_var))</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="5">5</button><span id="annotated-cell-6-16" class="code-annotation-target">        x_hat            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.Decoder(z)</span>
<span id="annotated-cell-6-17">        </span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="6">6</button><span id="annotated-cell-6-18" class="code-annotation-target">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x_hat, mean, log_var</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-6" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="8" data-code-annotation="1">これは <strong>サンプリングイプシロン</strong> と呼ばれる値である．</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="9" data-code-annotation="2">ここで reparametrization trick を行っている．</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="14" data-code-annotation="3">入力 <code>x</code> があったならば，まずエンコーダーに通して <code>mean</code>, <code>log_var</code> を得る．</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="15" data-code-annotation="4">元々 <code>log_var</code> の名前の通り対数分散として扱うこととしていたので，２で割り指数関数に通すことで標準偏差を得る．この平均と標準偏差について reparametrization trick を実行し，デコーダーに繋ぐ．</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="16" data-code-annotation="5">デコーダーではデータの潜在表現 <code>z</code> を受け取り，デコードしたものを <code>x_hat</code> とする．</span>
</dd>
<dt data-target-cell="annotated-cell-6" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="18" data-code-annotation="6">返り値は，デコーダーの出力 <code>x_hat</code> だけでなく，潜在表現 <code>mean</code>, <code>log_var</code> も含むことに注意．</span>
</dd>
</dl>
</div>
</div>
<div id="64d271d4" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="annotated-cell-7" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-7-1">encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Encoder(input_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x_dim, hidden_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hidden_dim, latent_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>latent_dim)</span>
<span id="annotated-cell-7-2">decoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Decoder(latent_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>latent_dim, hidden_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hidden_dim, output_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_dim)</span>
<span id="annotated-cell-7-3"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-7" data-target-annotation="1">1</button><span id="annotated-cell-7-4" class="code-annotation-target">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model(Encoder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>encoder, Decoder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>decoder).to(DEVICE)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-7" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-7" data-code-lines="4" data-code-annotation="1"><code>.to(DEVICE)</code> により，モデルを M2 Mac の MPS デバイス上に移送している．</span>
</dd>
</dl>
</div>
</div>
</section>
</section>
<section id="sec-VAE-training" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="sec-VAE-training"><span class="header-section-number">1.3</span> モデルの訓練</h3>
<p>最適化には Adam <span class="citation" data-cites="Kingma-Ba2017">(D. P. Kingma and Ba, 2017)</span> を用い，バイナリ交差エントロピー（BCE）を用いる．これは <a href="https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html#torch.nn.BCELoss"><code>nn.BCELoss</code></a> に実装がある．</p>
<div id="2851ab92" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.optim <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Adam</span>
<span id="cb7-2"></span>
<span id="cb7-3">BCE_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.BCELoss()</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> loss_function(x, x_hat, mean, log_var):</span>
<span id="cb7-6">    reproduction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.functional.binary_cross_entropy(x_hat, x, reduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>)</span>
<span id="cb7-7">    KLD      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pow</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log_var.exp())</span>
<span id="cb7-8"></span>
<span id="cb7-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> reproduction_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> KLD</span>
<span id="cb7-10"></span>
<span id="cb7-11"></span>
<span id="cb7-12">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Adam(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr)</span></code></pre></div>
</div>
<p>ここでの損失関数は，真のデータ <code>x</code> をデコーダーが復元できているかを交差エントロピーで測った <code>reproduction_loss</code> と，潜在表現がどれだけ <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BN%7D_d(0,I_d),d=200"> に近いかを KL 乖離度で測った <code>KLD</code> の和で定義されている．<sup>1</sup></p>
<p><a href="../../../posts/2024/Kernels/Deep4.html#sec-objective">VAE の標準的な目的関数</a> とは違う形をしていることに注意．</p>
<div class="callout callout-style-default callout-important no-icon callout-titled" title="訓練の実行">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
訓練の実行
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div id="f5852a87" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="annotated-cell-18" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="annotated-cell-18-2"></span>
<span id="annotated-cell-18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start training VAE..."</span>)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="1">1</button><span id="annotated-cell-18-4" class="code-annotation-target">model.train()</span>
<span id="annotated-cell-18-5"></span>
<span id="annotated-cell-18-6">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="annotated-cell-18-7"></span>
<span id="annotated-cell-18-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(epochs):</span>
<span id="annotated-cell-18-9">    overall_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="annotated-cell-18-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader):</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="2">2</button><span id="annotated-cell-18-11" class="code-annotation-target">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.view(batch_size, x_dim)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="3">3</button><span id="annotated-cell-18-12" class="code-annotation-target">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="annotated-cell-18-13"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-18" data-target-annotation="4">4</button><span id="annotated-cell-18-14" class="code-annotation-target">        optimizer.zero_grad()</span>
<span id="annotated-cell-18-15"></span>
<span id="annotated-cell-18-16">        x_hat, mean, log_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(x)</span>
<span id="annotated-cell-18-17">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> loss_function(x, x_hat, mean, log_var)</span>
<span id="annotated-cell-18-18">        </span>
<span id="annotated-cell-18-19">        overall_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> loss.item()</span>
<span id="annotated-cell-18-20">        </span>
<span id="annotated-cell-18-21">        loss.backward()</span>
<span id="annotated-cell-18-22">        optimizer.step()</span>
<span id="annotated-cell-18-23">        </span>
<span id="annotated-cell-18-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Epoch"</span>, epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete!"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Average Loss: "</span>, overall_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (batch_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>batch_size))</span>
<span id="annotated-cell-18-25"></span>
<span id="annotated-cell-18-26">total_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="annotated-cell-18-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Finish!! Total time: "</span>, total_time)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-18" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="4" data-code-annotation="1"><code>PyTorch</code> のモデルオブジェクトを訓練モードにするメソッド．Dropout や Batch Normalization 層がある場合は，これにより訓練時の挙動を示すようになる．</span>
</dd>
<dt data-target-cell="annotated-cell-18" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="11" data-code-annotation="2">事前に定めた <code>batch_size</code> に従ってバッチを展開．</span>
</dd>
<dt data-target-cell="annotated-cell-18" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="12" data-code-annotation="3">データを GPU に移動．</span>
</dd>
<dt data-target-cell="annotated-cell-18" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-18" data-code-lines="14" data-code-annotation="4">勾配をゼロに初期化するとのこと．</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Start training VAE...
    Epoch 1 complete!   Average Loss:  174.45440591089314
    Epoch 2 complete!   Average Loss:  129.366964569856
    Epoch 3 complete!   Average Loss:  116.69913125065213
    Epoch 4 complete!   Average Loss:  112.35357475675605
    Epoch 5 complete!   Average Loss:  109.92540430339629
    Epoch 6 complete!   Average Loss:  108.33972220954195
    Epoch 7 complete!   Average Loss:  107.14160705668301
    Epoch 8 complete!   Average Loss:  106.20647785371452
    Epoch 9 complete!   Average Loss:  105.42789199446995
    Epoch 10 complete!  Average Loss:  104.9622272798414
    Epoch 11 complete!  Average Loss:  104.39062490218072
    Epoch 12 complete!  Average Loss:  103.96445004369261
    Epoch 13 complete!  Average Loss:  103.49826466963168
    Epoch 14 complete!  Average Loss:  103.10589126408598
    Epoch 15 complete!  Average Loss:  102.75672558104654
    Epoch 16 complete!  Average Loss:  102.47924416671015
    Epoch 17 complete!  Average Loss:  102.25440002543301
    Epoch 18 complete!  Average Loss:  102.09212112961707
    Epoch 19 complete!  Average Loss:  101.80551883347245
    Epoch 20 complete!  Average Loss:  101.61719139646807
    Epoch 21 complete!  Average Loss:  101.45744191164962
    Epoch 22 complete!  Average Loss:  101.27843764672892
    Epoch 23 complete!  Average Loss:  101.1599205544397
    Epoch 24 complete!  Average Loss:  101.04871442638773
    Epoch 25 complete!  Average Loss:  100.8713441999687
    Epoch 26 complete!  Average Loss:  100.73917756808223
    Epoch 27 complete!  Average Loss:  100.68475770163815
    Epoch 28 complete!  Average Loss:  100.58486650928631
    Epoch 29 complete!  Average Loss:  100.44012970836812
    Epoch 30 complete!  Average Loss:  100.39852615687604
Finish!! Total time:  130.87328815460205</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="モデルの評価" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="モデルの評価"><span class="header-section-number">1.4</span> モデルの評価</h3>
<p>テスト用データの最初のバッチについて処理し，入力データと出力データを見比べてみる．</p>
<div id="2fb148db" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="annotated-cell-9" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-9-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="annotated-cell-9-2"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="1">1</button><span id="annotated-cell-9-3" class="code-annotation-target"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="annotated-cell-9-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> batch_idx, (x, _) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(tqdm(test_loader)):</span>
<span id="annotated-cell-9-5">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.view(batch_size, x_dim)</span>
<span id="annotated-cell-9-6">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.to(DEVICE)</span>
<span id="annotated-cell-9-7">        </span>
<span id="annotated-cell-9-8">        x_hat, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(x)</span>
<span id="annotated-cell-9-9"></span>
<span id="annotated-cell-9-10"></span>
<span id="annotated-cell-9-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-9" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="3" data-code-annotation="1">勾配評価を無効化するコンテクストマネージャーで，メモリの使用を節約できるという．</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>  0%|          | 0/100 [00:00&lt;?, ?it/s]  0%|          | 0/100 [00:00&lt;?, ?it/s]</code></pre>
</div>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> show_image(x, idx):</span>
<span id="cb10-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.view(batch_size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span>
<span id="cb10-5"></span>
<span id="cb10-6">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb10-7">    plt.imshow(x[idx].cpu().numpy())</span>
<span id="cb10-8"></span>
<span id="cb10-9">show_image(x, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-10">show_image(x_hat, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div id="fig-reconstruction" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-reconstruction-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-reconstruction" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-reconstruction-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-reconstruction-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-reconstruction-output-1.png" data-ref-parent="fig-reconstruction" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-reconstruction-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) 左がテストデータ，右がその VAE による復元
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-reconstruction" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-reconstruction-2" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-reconstruction-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-reconstruction-output-2.png" id="fig-reconstruction-2" data-ref-parent="fig-reconstruction" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-reconstruction-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b)
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-reconstruction-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;1
</figcaption>
</figure>
</div>
<p>左が入力で右が出力である．</p>
</section>
<section id="データの生成" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="データの生成"><span class="header-section-number">1.5</span> データの生成</h3>
<p>ここで，エンコーダを取り外してデコーダーからデータを生成する．</p>
<p>損失関数（第 1.3 節）には，潜在空間におけるデータを標準正規分布に近付けるための項が入っていたため，データの潜在表現は極めて標準正規分布に近いとみなすことにする．</p>
<p>すると，潜在表現と同じ次元の正規乱数から，データセットに極めて似通ったデータが生成できるだろう．</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb11-2">    noise <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(batch_size, latent_dim).to(DEVICE)</span>
<span id="cb11-3">    generated_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decoder(noise)</span>
<span id="cb11-4"></span>
<span id="cb11-5">save_image(generated_images.view(batch_size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_sample.png'</span>)</span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb11-7">    show_image(generated_images, idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>i)</span></code></pre></div>
<div id="fig-generation" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-generation-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation-1" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-generation-output-1.png" id="fig-generation-1" data-ref-parent="fig-generation" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation-2" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-generation-output-2.png" id="fig-generation-2" data-ref-parent="fig-generation" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b)
</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation-3" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-generation-output-3.png" id="fig-generation-3" data-ref-parent="fig-generation" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(c)
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-generation" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-generation-4" class="quarto-figure quarto-figure-center quarto-float anchored" width="341" height="337">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-generation-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://162348.github.io/posts/2024/Kernels/VAE_files/figure-html/fig-generation-output-4.png" id="fig-generation-4" data-ref-parent="fig-generation" width="341" height="337" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-generation-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(d)
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-generation-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
図&nbsp;2
</figcaption>
</figure>
</div>
</section>
</section>
<section id="vq-vae-vandenoord2017" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="vq-vae-vandenoord2017"><span class="header-section-number">2</span> VQ-VAE <span class="citation" data-cites="vandenOord+2017">(van&nbsp;den&nbsp;Oord et al., 2017)</span></h2>
<section id="導入-1" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="導入-1"><span class="header-section-number">2.1</span> 導入</h3>
<div id="259a14eb" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">DEVICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb12-2"></span>
<span id="cb12-3">batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb12-4">img_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6">input_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb12-7">hidden_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span>
<span id="cb12-8">latent_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb12-9">n_embeddings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span>
<span id="cb12-10">output_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb12-11">commitment_beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-4</span></span>
<span id="cb12-14"></span>
<span id="cb12-15">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb12-16"></span>
<span id="cb12-17">print_step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span></code></pre></div>
</div>
<div id="0d6d277d" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CIFAR10</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="cb13-4"></span>
<span id="cb13-5"></span>
<span id="cb13-6">mnist_transform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.Compose([</span>
<span id="cb13-7">        transforms.ToTensor(),</span>
<span id="cb13-8">])</span>
<span id="cb13-9"></span>
<span id="cb13-10">kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_workers'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pin_memory'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>} </span>
<span id="cb13-11"></span>
<span id="cb13-12">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CIFAR10(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mnist_transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-13">test_dataset  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CIFAR10(dataset_path, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mnist_transform, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-14"></span>
<span id="cb13-15">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb13-16">test_loader  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_dataset,  batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Files already downloaded and verified
Files already downloaded and verified</code></pre>
</div>
</div>
</section>
<section id="モデルの定義-1" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="モデルの定義-1"><span class="header-section-number">2.2</span> モデルの定義</h3>
<section id="エンコーダー-1" class="level4" data-number="2.2.1">
<h4 data-number="2.2.1" class="anchored" data-anchor-id="エンコーダー-1"><span class="header-section-number">2.2.1</span> エンコーダー</h4>
<p>VQ-VAE は画像への応用を念頭に置いているため，エンコーダーには <a href="../../../posts/2024/Kernels/Deep.html#sec-CNN">CNN アーキテクチャ</a> を採用する．</p>
<div id="e00a07a8" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Encoder(nn.Module):</span>
<span id="cb15-2">    </span>
<span id="cb15-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, input_dim, hidden_dim, output_dim, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb15-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(Encoder, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb15-5">        </span>
<span id="cb15-6">        kernel_1, kernel_2, kernel_3, kernel_4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kernel_size</span>
<span id="cb15-7">        </span>
<span id="cb15-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.strided_conv_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Conv2d(input_dim, hidden_dim, kernel_1, stride, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.strided_conv_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Conv2d(hidden_dim, hidden_dim, kernel_2, stride, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-10">        </span>
<span id="cb15-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.residual_conv_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Conv2d(hidden_dim, hidden_dim, kernel_3, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.residual_conv_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Conv2d(hidden_dim, hidden_dim, kernel_4, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-13">        </span>
<span id="cb15-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.proj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Conv2d(hidden_dim, output_dim, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-15">        </span>
<span id="cb15-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb15-17">        </span>
<span id="cb15-18">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.strided_conv_1(x)</span>
<span id="cb15-19">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.strided_conv_2(x)</span>
<span id="cb15-20">        </span>
<span id="cb15-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.relu(x)</span>
<span id="cb15-22">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.residual_conv_1(x)</span>
<span id="cb15-23">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>x</span>
<span id="cb15-24">        </span>
<span id="cb15-25">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.relu(y)</span>
<span id="cb15-26">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.residual_conv_2(x)</span>
<span id="cb15-27">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>x</span>
<span id="cb15-28">        </span>
<span id="cb15-29">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.proj(y)</span>
<span id="cb15-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> y</span></code></pre></div>
</div>
</section>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="参考文献" class="level2 appendix" data-number="3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">3</span> 参考文献</h2><div class="quarto-appendix-contents">

<p>本稿は，<a href="https://velog.io/@mskang/about">Minsu Jackson Kang 氏</a> による <a href="https://github.com/Jackson-Kang/Pytorch-VAE-tutorial">チュートリアル</a> を参考にした．</p>
<p>VAE には数々の変種があるが，その PyTorch による簡単な実装は <a href="https://antixk.netlify.app/">Anand K Subramanian</a> の <a href="https://github.com/AntixK/PyTorch-VAE">このレポジトリ</a> にリストアップされている．</p>
<p>VAE の潜在表現は <a href="https://ja.wikipedia.org/wiki/T分布型確率的近傍埋め込み法">t-SNE</a> などを用いて可視化でき，<span class="citation" data-cites="Murphy2023">(Murphy, 2023, p. 635)</span> の例などでも，潜在空間において手書き数字がクラスごとによく分離されていることが確認できる．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Kingma-Ba2017" class="csl-entry">
Kingma, D. P., and Ba, J. (2017). <a href="https://arxiv.org/abs/1412.6980">Adam: A method for stochastic optimization</a>.
</div>
<div id="ref-Kingma-Welling2014" class="csl-entry">
Kingma, D., and Welling, M. (2014). <a href="https://openreview.net/forum?id=33X9fd2-9FyZd">Auto-encoding variational bayes</a>. In <em>International conference on learning representations</em>,Vol. 2.
</div>
<div id="ref-Murphy2023" class="csl-entry">
Murphy, K. P. (2023). <em><a href="http://probml.github.io/book2">Probabilistic machine learning: Advanced topics</a></em>. MIT Press.
</div>
<div id="ref-vandenOord+2017" class="csl-entry">
van&nbsp;den&nbsp;Oord, A., Vinyals, O., and Kavukcuoglu, K. (2017). <a href="https://papers.nips.cc/paper_files/paper/2017/hash/7a98af17e63a0ac09ce2e96d03992fbc-Abstract.html">Neural discrete representation learning</a>. In <em>Advances in neural information processing systems</em>,Vol. 30.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>なお，<code>mean.pow(2)</code> は Julia の <code>mean.^2</code> に同じ．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Deep</category>
  <category>Sampling</category>
  <category>Python</category>
  <guid>https://162348.github.io/posts/2024/Kernels/VAE.html</guid>
  <pubDate>Sat, 27 Jul 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>信念伝搬アルゴリズム</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Stat/Bayes3.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<section id="導入" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="導入"><span class="header-section-number">1</span> 導入</h2>
<section id="はじめに" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h3>
<p>MP は情報理論では低密度パリティ検査符号の文脈で <span class="citation" data-cites="Gallager1962">(Gallager, 1962)</span> が，因果推論の文脈で <span class="citation" data-cites="Pearl1982">(Pearl, 1982)</span> が独立に開発している．</p>
<p>信念伝搬法は変分手法とは違い，ある種のモデル（木やランダムグラフなど）では正確な推論が可能になる上に，一般に速い．<sup>1</sup> 当然 Monte Carlo 法よりも速い．</p>
<p>そのため，変分推論の改良の源泉が，メッセージ伝搬を通じて探求されている <span class="citation" data-cites="Winn-Bishop2005">(Winn and Bishop, 2005)</span>．</p>
</section>
<section id="ランダムグラフ上のスピン系の分配関数" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="ランダムグラフ上のスピン系の分配関数"><span class="header-section-number">1.2</span> ランダムグラフ上のスピン系の分配関数</h3>
<p>頂点数 <img src="https://latex.codecogs.com/png.latex?N">，辺数 <img src="https://latex.codecogs.com/png.latex?E"> の Erdös-Renyi ランダムグラフ <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D(N,E)"> 上のスピン <img src="https://latex.codecogs.com/png.latex?(%5Csigma_i)_%7Bi%5Cin%5BN%5D%7D"> と相互作用 <img src="https://latex.codecogs.com/png.latex?(%5Cpsi_%7Bij%7D)_%7B(i,j)%5Cin%20E%7D"> を考える： <img src="https://latex.codecogs.com/png.latex?%0A%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)=%5Cexp%5Cbiggr(-%5Cbeta%20J_%7Bij%7D%5Csigma_i%5Csigma_j%5Cbiggl).%0A"></p>
<p>ランダムグラフでは平均的なループの長さは <img src="https://latex.codecogs.com/png.latex?%5Clog%20N"> であり，局所的に木の構造を持つため，このことを利用した近似を使って信念伝搬を行う．</p>
<p><img src="https://latex.codecogs.com/png.latex?Z_%7Bi%5Cto%20j%7D(%5Csigma_i)"> を，<img src="https://latex.codecogs.com/png.latex?i"> を根とする木から <img src="https://latex.codecogs.com/png.latex?j"> を根とする木を除去し，<img src="https://latex.codecogs.com/png.latex?i"> におけるスピンの値が <img src="https://latex.codecogs.com/png.latex?%5Csigma_i"> であると条件付けた場合の部分木上の分配関数，<img src="https://latex.codecogs.com/png.latex?Z_i(%5Csigma_i)"> を <img src="https://latex.codecogs.com/png.latex?i"> におけるスピンの値が <img src="https://latex.codecogs.com/png.latex?%5Csigma_i"> であると条件付けた場合の木全体の分配関数とすると，次の関係がある： <img src="https://latex.codecogs.com/png.latex?%0AZ_i(%5Csigma_i)=%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)%5Cright).%0A"></p>
<p>するとこのとき， <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20%5Ceta_i(%5Csigma_i):=%5Cfrac%7BZ_i(%5Csigma_i)%7D%7B%5Csum_%7B%5Csigma'%7DZ_i(%5Csigma')%7D&amp;=%5Cfrac%7B1%7D%7B%5Csum_%7B%5Csigma'%7DZ_i(%5Csigma')%7D%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)%5Cright)%5C%5C%0A%20%20%20%20&amp;=:%5Cfrac%7B1%7D%7Bz_i%7D%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7D%5Ceta_%7Bj%5Cto%20i%7D(%5Csigma_j)%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)%5Cright).%0A%5Cend%7Balign*%7D"> は Boltzmann-Gibbs 分布の周辺分布になっている： <img src="https://latex.codecogs.com/png.latex?%0Am_i=%5Clangle%5Csigma_i%5Crangle=%5Csum_%7B%5Csigma%7D%5Ceta_i(%5Csigma)%5Csigma.%0A"></p>
<p>このときの正規化定数は <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20z_i&amp;=%5Csum_%7B%5Csigma_i%7D%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7D%5Ceta_%7Bj%5Cto%20i%7D(%5Csigma_j)%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)%5Cright)%0A%20%20%20%20=%5Csum_%7B%5Csigma_i%7D%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7D%5Cfrac%7BZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%7D%7B%5Csum_%7B%5Csigma'%7DZ_%7Bj%5Cto%20i%7D(%5Csigma')%7D%5Cpsi_%7Bij%7D(%5Csigma_i,%5Csigma_j)%5Cright)%5C%5C%0A%20%20%20%20&amp;=%5Csum_%7B%5Csigma_i%7D%5Cfrac%7BZ_i(%5Csigma_i)%7D%7B%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%7D=%5Cfrac%7BZ%7D%7B%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%7D,%5C%5C%0A%20%20%20%20z_%7Bj%5Cto%20i%7D&amp;=%5Cfrac%7B%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%7D%7B%5Cprod_%7Bk%5Cin%5Cpartial%20j%5Csetminus%20i%7D%5Csum_%7B%5Csigma_k%7DZ_%7Bk%5Cto%20j%7D(%5Csigma_k)%7D.%0A%5Cend%7Balign*%7D"></p>
<p>と表せる．</p>
<p><img src="https://latex.codecogs.com/png.latex?z_i"> の分母には <img src="https://latex.codecogs.com/png.latex?Z"> が現れていることを用いると <img src="https://latex.codecogs.com/png.latex?Z"> は，任意の位置 <img src="https://latex.codecogs.com/png.latex?i%5Cin%5BN%5D"> を起点として，次のような展開表示ができる： <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20Z&amp;=%5Csum_%7B%5Csigma_i%7DZ_i(%5Csigma_i)=z_i%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Csum_%7B%5Csigma_j%7DZ_%7Bj%5Cto%20i%7D(%5Csigma_j)%5Cright)=z_i%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(z_%7Bj%5Cto%20i%7D%5Cprod_%7Bk%5Cin%5Cpartial%20j%5Csetminus%20i%7D%5Csum_%7B%5Csigma_k%7DZ_%7Bk%5Cto%20j%7D(%5Csigma_k)%5Cright).%0A%5Cend%7Balign*%7D"> ここで，最右辺の <img src="https://latex.codecogs.com/png.latex?%5Csum_%7B%5Csigma_k%7DZ_%7Bk%5Cto%20j%7D(%5Csigma_k)"> は <img src="https://latex.codecogs.com/png.latex?z_%7Bj%5Cto%20i%7D"> を計算するのと同じ要領で計算されることになり，最終的に木の葉まで再帰的に計算することで，公式 <img src="https://latex.codecogs.com/png.latex?%0AZ=z_i%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(z_%7Bj%5Cto%20i%7D%5Cprod_%7Bk%5Cin%5Cpartial%20j%5Csetminus%20i%7Dz_%7Bk%5Cto%20j%7D%5Ccdots%5Cright)=z_i%5Cprod_%7Bj%5Cin%5Cpartial%20i%7D%5Cleft(%5Cfrac%7Bz_j%7D%7Bz_%7Bij%7D%7D%5Cprod_%7Bk%5Cin%5Cpartial%20j%5Csetminus%20i%7D%5Cfrac%7Bz_k%7D%7Bz_%7Bjk%7D%7D%5Ccdots%5Cright)=%5Cfrac%7B%5Cprod_%7Bi%5Cin%5BN%5D%7Dz_i%7D%7B%5Cprod_%7B(i,j)%5Cin%20E%7Dz_%7Bij%7D%7D.%0A"></p>
<p>よって，この再帰的計算により，自由エネルギー <img src="https://latex.codecogs.com/png.latex?%0AF=-T%5Clog%20Z=%5Csum_%7Bi%5Cin%5BN%5D%7D%5Cbiggr(-T%5Clog%20z_i%5Cbiggl)-%5Csum_%7B(i,j)%5Cin%20E%7D%5Cbiggr(-T%5Clog%20z_%7Bij%7D%5Cbiggl).%0A"> も得られることになる．</p>
</section>
<section id="無限レンジ極限での高温解の安定性" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="無限レンジ極限での高温解の安定性"><span class="header-section-number">1.3</span> 無限レンジ極限での高温解の安定性</h3>
<p><span class="citation" data-cites="Thouless+1977">(Thouless et al., 1977)</span> は TAP 方程式により，<span class="citation" data-cites="Sherrington-Kirkpatrick1975">(Sherrington and Kirkpatrick, 1975)</span> 模型を解いた．</p>
<p>その際の結果が，同じく無限サイズのグラフである <a href="https://ja.wikipedia.org/wiki/ベーテ格子">Bethe 格子</a> 上でならば，信念伝搬法により議論でき，有効 cavity 場が次のように与えられるという： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbeta%20h_0=%5Csum_%7Bi=1%7D%5Ek%5Coperatorname%7Batanh%7D%5Cbiggr(%5Ctanh(%5Cbeta%20J_%7Bij%7D)%5Ctanh(%5Cbeta%20h_i)%5Cbiggl)+H.%0A"></p>
<p>このモデルでもスピングラス相が出現することが，信念伝搬法が失敗する（局所不安定になる）こととして現れる．これはグラフの木構造を破壊するような長距離の相関が出現することによる．スピングラス相と常磁性相の境界は Almeida-Thouless 線 <span class="citation" data-cites="Thouless1986">(Thouless, 1986)</span> という．</p>
</section>
</section>
<section id="共同体抽出" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="共同体抽出"><span class="header-section-number">2</span> 共同体抽出</h2>
<section id="はじめに-1" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="はじめに-1"><span class="header-section-number">2.1</span> はじめに</h3>
<p>グラフの頂点をクラスタリングした際のクラスターに当たる概念を <strong>共同体</strong> (community) という．</p>
<p>最初におもつくような方法は，横断する辺の数が最小になるようなクラスター境界を決定する方法であるが，これは NP 困難である．</p>
<p>これを少し修正して，各辺に対して edge centrality を計算し，これを順に脱落させて edge centrality を計算しなおすというような反復を行う <a href="https://en.wikipedia.org/wiki/Girvan%E2%80%93Newman_algorithm">Girvan-Newman アルゴリズム</a> <span class="citation" data-cites="Girvan-Newman2002">(Girvan and Newman, 2002)</span> が最も有名なものである（引用数２万！）．</p>
</section>
<section id="modularity-最大化による方法" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="modularity-最大化による方法"><span class="header-section-number">2.2</span> modularity 最大化による方法</h3>
<p>Girvan-Newman アルゴリズムの中では，分割の「良さ」の指標として modularity <img src="https://latex.codecogs.com/png.latex?%0AQ=%5Cfrac%7B1%7D%7B2m%7D%5Csum_%7Bij%7D%5Cleft(A_%7Bij%7D-%5Cfrac%7Bd_id_j%7D%7B2N%7D%5Cright)%5Cdelta_%7Bs_i%7D%5Cdelta_%7Bs_j%7D%0A"> を定義し，アルゴリズムの停止の指標としていた．</p>
<p>現在では，逆にこの modularity を最適化することでクラスタリングを達成する手法が主流の１つである．</p>
<p>辺を全て消去した状況から１つずつ追加していき，この modularity の値を最大化する階層的クラスタリングアルゴリズムとして <span class="citation" data-cites="Newman2004">(Newman, 2004)</span>, <span class="citation" data-cites="Clauset+2004">(Clauset et al., 2004)</span> が提案された．</p>
<p>最適化問題として定式化された以上，模擬アニーリングが用いられることもある <span class="citation" data-cites="Guimera+2004">(Guimerà et al., 2004)</span>．</p>
</section>
<section id="スピングラス対応" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="スピングラス対応"><span class="header-section-number">2.3</span> スピングラス対応</h3>
<p>じきに <span class="citation" data-cites="Reichardt-Bornholdt2006">(Reichardt and Bornholdt, 2006)</span> によって，共同体抽出の問題は Potts 模型の基底状態探索と等価であることが示された．</p>
<p>実際，各頂点に割り当てられた未知の Potts スピン <img src="https://latex.codecogs.com/png.latex?%5Csigma_i"> に対して，同じ状態を持つ頂点同士は繋がろうとし，違う頂点を持つ場合は結合は疎になる傾向があるという状況は <img src="https://latex.codecogs.com/png.latex?%0AH(%5Csigma)=-%5Csum_%7Bi%3Cj%7DJ_%7Bij%7D%5Cdelta(%5Csigma_i,%5Csigma_j),%0A"> <img src="https://latex.codecogs.com/png.latex?%0AJ_%7Bij%7D:=J%5Cbiggr(A_%7Bij%7D-%5Cgamma%20p_%7Bij%7D%5Cbiggl)%0A"> というハミルトニアンで表現できる．<img src="https://latex.codecogs.com/png.latex?A_%7Bij%7D"> は隣接行列 <img src="https://latex.codecogs.com/png.latex?A=(A_%7Bij%7D)%5Cin%20M_n(2)"> の成分，<img src="https://latex.codecogs.com/png.latex?p_%7Bij%7D"> は辺の数の期待値，<img src="https://latex.codecogs.com/png.latex?%5Cgamma"> は推定されるクラスタ数を決定するハイパーパラメータ (resolution parameter とも表現するらしい) である．</p>
<p>こう捉えると，たしかに模擬アニーリングは１つの選択肢だ．</p>
</section>
<section id="信念伝搬による復号" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="信念伝搬による復号"><span class="header-section-number">2.4</span> 信念伝搬による復号</h3>
<p>Potts モデルではないが，<span class="citation" data-cites="Hastings2006">(Hastings, 2006)</span> は同様にスピングラスモデルと同一視をし，こちらでは信念伝搬により基底状態探索を行った．</p>
<p>一方で <span class="citation" data-cites="Newman-Leicht2007">(Newman and Leicht, 2007)</span> は混合モデルとみなし，EM アルゴリズムによる方法を見出している．ここまで来ると確率的ブロックモデル <span class="citation" data-cites="Snijders-Nowicki1997">(Snijders and Nowicki, 1997)</span> による方法に非常に似通っており，<span class="citation" data-cites="Decelle2011">(Decelle et al., 2011)</span> はまさにこの見方をしている．</p>
<p>そもそも，EM アルゴリズムと西森ラインは深い関係がある．<sup>2</sup> 実際，EM アルゴリズムも，確率的ブロックモデルにおけるクラスの割り当ても，<img src="https://latex.codecogs.com/png.latex?k">-平均法のクラスタ数も，相転移を起こす．背後に何か物理過程と対応がつくものが存在するのかもしれない．</p>
<p><strong>ブロックモデル</strong> (blockmodel / image graph) とはグラフの分割に関するモデルで，クラスタ数 <img src="https://latex.codecogs.com/png.latex?q">，<img src="https://latex.codecogs.com/png.latex?%5Bq%5D"> 上の確率分布（頂点数の分布）<img src="https://latex.codecogs.com/png.latex?%5C%7Bn_%5Calpha%5C%7D_%7B%5Calpha%5Cin%5Bq%5D%7D">，グループ間に辺が存在する確率を表す行列 <img src="https://latex.codecogs.com/png.latex?(p_%7Bab%7D)_%7Ba,b%5Cin%5Bq%5D%7D"> のパラメータからなる．<sup>3</sup></p>
</section>
<section id="スペクトルを通じた方法" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="スペクトルを通じた方法"><span class="header-section-number">2.5</span> スペクトルを通じた方法</h3>
<p>モジュラリティ最適化と対照的な手法として，スペクトルを用いた方法がある．有名なサーベイには <span class="citation" data-cites="Luxburg2007">(Luxburg, 2007)</span> がある．</p>
<p>最も直接的には，<a href="https://ja.wikipedia.org/wiki/ラプラシアン行列">Laplacian 行列</a> の固有空間分解を通じて頂点集合を別の潜在空間に埋め込み，そこで <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D%5EN">-クラスタリングを行うという <span class="citation" data-cites="Dpnath-Hoffman1973">(Donath and Hoffman, 1973)</span> 以来の方法である．この文献はグラフの分割を問題にしているが，<span class="citation" data-cites="Donetti-Munoz2004">(Donetti and Muñoz, 2004)</span> はコミュニティ抽出に集中している．</p>
<p>こちらの方が数学的にグラフの構造を捉えられそうなものであるが，現状，物理学的な背景を持った最適化・ベイズ推論に基づいた手法の方が性能が良いようである．<sup>4</sup></p>
</section>
</section>
<section id="圧縮センシング" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="圧縮センシング"><span class="header-section-number">3</span> 圧縮センシング</h2>
<section id="データ圧縮との違い" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="データ圧縮との違い"><span class="header-section-number">3.1</span> データ圧縮との違い</h3>
<p><span class="citation" data-cites="Krzakala+2015">(Krzakala et al., 2015, p. 30)</span> には大変魅力的な導入がなされている．</p>
<p>例えば JPEG 2000 ではデータ圧縮の技術が使われており，これは画像データが wavelet 基底表現では大変スパースなデータになることを用いている．</p>
<p>圧縮センシングは最初から観測がスパースであるとし，データの復元の代わりに観測がなんだったかを推定することを考える．この技術は MRI に応用される <span class="citation" data-cites="Lustig+2007">(Lustig et al., 2007)</span> ことで有名である．</p>
<p>即ち，「データは正しい基底に関してはスパースになるはずである」という事前情報の下， <img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7By%7D=G%5Cvec%7Bs%7D,%5Cqquad%20G%5Cin%20M_%7BMN%7D(%5Cmathbb%7BR%7D),M%3CN,%0A"> という計画行列 <img src="https://latex.codecogs.com/png.latex?G"> と低次元の観測のみを通じて，真の観測 <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bs%7D"> を，ある行列 <img src="https://latex.codecogs.com/png.latex?A"> に関して <img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bs%7D=A%5Cvec%7Bx%7D%0A"> として得られる <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bx%7D"> はスパースになるという追加情報を通じて推定することが，圧縮センシングの問題になる．</p>
</section>
<section id="スパースなデータの少数観測からの復元" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="スパースなデータの少数観測からの復元"><span class="header-section-number">3.2</span> スパースなデータの少数観測からの復元</h3>
<p><img src="https://latex.codecogs.com/png.latex?(A,%5Cvec%7Bx%7D)"> の組について最適化を行い，最もスパースな <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bx%7D"> を決定するという問題 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname*%7Bargmin%7D_%7B%5Cvec%7Bx%7D%7D%5C%7C%5Cvec%7By%7D-F%5Cvec%7Bx%7D%5C%7C_%7B%5Cell_0%7D%0A"> は NP-困難であるが，統計力学の方法により <img src="https://latex.codecogs.com/png.latex?M/N=:%5Crho"> を一定にした比例的高次元極限 <img src="https://latex.codecogs.com/png.latex?N%5Cto%5Cinfty"> に関する漸近論が得られる．</p>
<p>結論として，<img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bs%7D"> の長さ <img src="https://latex.codecogs.com/png.latex?N"> に対して，実際は <img src="https://latex.codecogs.com/png.latex?%0AM=O%5Cleft(N%5E%7B1/4%7D%5Clog%5E%7B5/2%7DN%5Cright)%0A"> の固定された (nonadaptive) 観測があれば十分な復元が可能であるという．</p>
<p>具体的には，特定の条件の下では，（適切な基底に関する）スパースな <img src="https://latex.codecogs.com/png.latex?l%5Ep">-展開係数が大きい順に <img src="https://latex.codecogs.com/png.latex?n"> 個わかれば，<img src="https://latex.codecogs.com/png.latex?l%5E2">-誤差が　<img src="https://latex.codecogs.com/png.latex?O(n%5E%7B1/2-1/p%7D)"> のオーダーに従う <span class="citation" data-cites="Pinkus1985">(Pinkus, 1985)</span>．</p>
<p>そして，<img src="https://latex.codecogs.com/png.latex?M=O%5Cleft(n%5Clog%20N%5Cright)"> の観測があれば，この <img src="https://latex.codecogs.com/png.latex?n"> 個の重要な係数が十分な精度で復元できる，というカラクリである．そのためのアルゴリズムには Basis Persuit <span class="citation" data-cites="Chen+1998">(Chen et al., 1998)</span> という凸最適化を通じた極めて効率的なアルゴリズムが利用可能である．</p>
</section>
<section id="ell_p-ノルム最適化の方法" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="ell_p-ノルム最適化の方法"><span class="header-section-number">3.3</span> <img src="https://latex.codecogs.com/png.latex?%5Cell_p">-ノルム最適化の方法</h3>
<p>代わりに <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname*%7Bargmin%7D_%7B%5Cvec%7Bx%7D%7D%5C%7C%5Cvec%7By%7D-F%5Cvec%7Bx%7D%5C%7C_%7B%5Cell_p%7D%0A"> という最適化問題を考えるとこれは凸最適化問題であるため，突然線型計画法により多項式時間で解ける問題に変貌する．</p>
<p><img src="https://latex.codecogs.com/png.latex?p=1"> と取ることが実用上スパースな結果をうまく出してくれるようである．実際，一定の条件の下では <img src="https://latex.codecogs.com/png.latex?p=0"> の場合（本当に解きたかった問題）の解に一致する <span class="citation" data-cites="Candes-Tao2006">(Candes and Tao, 2006)</span>．</p>
<p>こうして LASSO 様のアルゴリズムにたどり着くが，このアプローチでは観測数の比 <img src="https://latex.codecogs.com/png.latex?%5Crho"> は真の限界より大きく取る必要がある．一方で，後述の信念伝搬の方法だと復号限界ギリギリまで通用することが多い．</p>
</section>
<section id="スピングラス対応-1" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="スピングラス対応-1"><span class="header-section-number">3.4</span> スピングラス対応</h3>
<p>観測モデルが線型 Gauss であるとするとき，ランダムに観測されたスパース符号の復元の問題は，事前分布 <img src="https://latex.codecogs.com/png.latex?p(x)=(1-%5Crho)%5Cdelta(x)+%5Crho%5Cphi(x)"> が定める事後分布 <img src="https://latex.codecogs.com/png.latex?%0Ap(x%7CF,y)=%5Cfrac%7B1%7D%7BZ%7D%5Cprod_%7Bi=1%7D%5EN%5Cbiggr((1-%5Crho)%5Cdelta(x_i)+%5Crho%5Cphi(x_i)%5Cbiggl)%5Cprod_%7B%5Cmu=1%7D%5EM%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%5CDelta_%5Cmu%7D%7D%5Cexp%5Cleft(-%5Cfrac%7B%5Clvert%20y_%5Cmu-F_%7B%5Cmu-%7D%5Ccdot%20x%5Crvert%5E2%7D%7B2%5CDelta_%5Cmu%7D%5Cright)%0A"> を通じた Bayes 推論として定式化できる．するとこれは負の対数尤度 <img src="https://latex.codecogs.com/png.latex?%0AH(x)=-%5Csum_%7Bi=1%7D%5EN%5Clog%5Cbiggr((1-%5Crho)%5Cdelta(x_i)+%5Crho%5Cphi(x_i)%5Cbiggl)+%5Csum_%7B%5Cmu=1%7D%5EM%5Cfrac%7B1%7D%7B2%5CDelta_%5Cmu%7D%5Clvert%20y_%5Cmu-F_%7B%5Cmu-%7D%5Ccdot%20x%5Crvert%5E2%0A"> が定める Boltzmann 分布と見ることができるが，これは長距離無秩序を持つスピングラス系の Hamiltonian となっており，この系の基底状態の特定として問題が捉え直せる．</p>
</section>
<section id="平均場変分ベイズによる復号一般論" class="level3" data-number="3.5">
<h3 data-number="3.5" class="anchored" data-anchor-id="平均場変分ベイズによる復号一般論"><span class="header-section-number">3.5</span> 平均場変分ベイズによる復号（一般論）</h3>
<p>一般の事後分布が <img src="https://latex.codecogs.com/png.latex?p(x%7Cy)%5C,%5Cpropto%5C,p(y%7Cx)p(x)"> の形で与えられているとし，分布 <img src="https://latex.codecogs.com/png.latex?q"> に関するこの系の自由エネルギーは <span id="eq-L"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D=%5B%5Clog%20p(y%7Cx)p(x)%5D_q-%5Cint_%5COmega%20q(x)%5Clog%20q(x)%5C,dx=%5B-E(y,x)%5D_q-%5Cint_%5COmega%20q(x)%5Clog%20q(x)%5C,dx%0A%5Ctag%7B1%7D"></span> と表せる．ただし，<img src="https://latex.codecogs.com/png.latex?E:=-%5Clog%20p(y%7Cx)p(x)"> は内部エネルギーとした．</p>
<p>すると，この <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D"> を最小化する <img src="https://latex.codecogs.com/png.latex?q"> が平衡分布となるわけである．これで自由エネルギーに関する変分原理に問題が定式化し直された．</p>
<p>平均場近似とは，この <img src="https://latex.codecogs.com/png.latex?q"> に関して <img src="https://latex.codecogs.com/png.latex?%0Aq(x)=%5Cprod_%7Bi=1%7D%5ENq_i(x_i)%0A"> という積の形を仮定した場合の表現 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D_%7B%5Cmathrm%7BMF%7D%7D=%5B-E(y,x)%5D_q-%5Csum_%7Bi=1%7D%5EN%5Cint%20q_i(x_i)%5Clog%20q_i(x_i)%5C,dx%0A"> に関して最小化を考えることをいう．</p>
<p>実はこの場合の <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D_%7B%5Cmathrm%7BMF%7D%7D"> は KL-乖離度となっており，停留条件は <img src="https://latex.codecogs.com/png.latex?%0Aq_i(x_i)=%5Cfrac%7Be%5E%7B%5B-E(y,x)%5D_q%7D%7D%7BZ_i%7D%0A"> で得られ，これは平均場方程式と呼ばれるものである．<sup>5</sup></p>
<p>このことから，<img src="https://latex.codecogs.com/png.latex?q"> が一般の分布族の場合でも，KL 乖離度を最小化することによって推論をするという変分推論の指針が示唆される．</p>
</section>
<section id="平均場変分ベイズによる復号圧縮センシングの場合" class="level3" data-number="3.6">
<h3 data-number="3.6" class="anchored" data-anchor-id="平均場変分ベイズによる復号圧縮センシングの場合"><span class="header-section-number">3.6</span> 平均場変分ベイズによる復号（圧縮センシングの場合）</h3>
<p>この場合，<img src="https://latex.codecogs.com/png.latex?R_i,%5CSigma%5E2_i"> を用いれば <img src="https://latex.codecogs.com/png.latex?%0AQ_i(x_i)=%5Cfrac%7B1%7D%7BZ_i%7Dp(x_i)%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%5CSigma_i%5E2%7D%7De%5E%7B-%5Cfrac%7B(x_i-R)%5E2%7D%7B2%5CSigma_i%5E2%7D%7D%0A"> というように，事前分布と Gauss 分布の積の形を持ち，<img src="https://latex.codecogs.com/png.latex?%5CSigma_i%5E2,R_i"> の値も順次決定される．</p>
<p>するとその結果を用いれば逐次的に計算することができる．実際，これを <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7B%5Cmu%7DF%5E2_%7B%5Cmu%20i%7D=1%0A"> の仮定の下で行ったものが，Iterative Threshouding <span class="citation" data-cites="Maleki-Donoho2010">(Maleki and Donoho, 2010)</span> である．</p>
</section>
<section id="信念伝搬による復号-1" class="level3" data-number="3.7">
<h3 data-number="3.7" class="anchored" data-anchor-id="信念伝搬による復号-1"><span class="header-section-number">3.7</span> 信念伝搬による復号</h3>
<p>式 (1) は <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%7BL%7D=%5B%5Clog%20p(y%7Cx)%5D_q-%5Coperatorname%7BKL%7D(q,p)%0A"> とも表せる．第一項は人工的な分布 <img src="https://latex.codecogs.com/png.latex?q"> に関する平均であるから計算できるものとすると，<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKL%7D(q,p)"> も，平均場近似の下では，各 <img src="https://latex.codecogs.com/png.latex?x_i"> は独立と仮定しているから各項ごとに計算できる： <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BKL%7D(q_i,p_i)=-%5Clog%5Cwidetilde%7BZ%7D_i-%5Cfrac%7Bc_i+(a_i-R_i)%5E2%7D%7B2%5CSigma%5E2_i%7D.%0A"> 右辺はノルム，<img src="https://latex.codecogs.com/png.latex?q_i"> による <img src="https://latex.codecogs.com/png.latex?x_i"> の平均と分散によって計算できる．</p>
<p>実際，メッセージ <img src="https://latex.codecogs.com/png.latex?%0Am_%7B%5Cmu%5Cto%20i%7D(x_i)=%5Cfrac%7B1%7D%7BZ%5E%7B%5Cmu%5Cto%20i%7D%7D%5Cint%5Cprod_%7Bj%5Cne%20i%7Ddx_je%5E%7B-%5Cfrac%7B1%7D%7B2%5CDelta_%5Cmu%7D%5Cleft(%5Csum_%7Bj%5Cne%20i%7DF_%7B%5Cmu%20j%7Dx_j+F_%7B%5Cmu%20i%7Dx_i-y_%5Cmu%5Cright)%5E2%7D%5Cprod_%7Bj%5Cne%20i%7Dm_%7Bj%5Cto%5Cmu%7D(x_j)%0A"> <img src="https://latex.codecogs.com/png.latex?%0Am_%7Bi%5Cto%5Cmu%7D(x_i)=%5Cfrac%7B1%7D%7BZ%5E%7Bi%5Cto%5Cmu%7D%7D%5Cbiggr((1-%5Crho)%5Cdelta(x_i)+%5Crho%5Cphi(x_i)%5Cbiggl)%5Cprod_%7B%5Cgamma%5Cne%5Cmu%7Dm_%7B%5Cgamma%5Cto%20i%7D(x_i)%0A"> の伝播により計算できるところを，<img src="https://latex.codecogs.com/png.latex?N%5Cto%5Cinfty"> の極限では，密度 <img src="https://latex.codecogs.com/png.latex?m_%7B%5Cmu%5Cto%20i%7D,m_%7Bi%5Cto%5Cmu%7D"> そのものではなく平均 <img src="https://latex.codecogs.com/png.latex?a_%7Bi%5Cto%5Cmu%7D"> と分散 <img src="https://latex.codecogs.com/png.latex?v_%7Bi%5Cto%5Cmu%7D">，その局所的な近似 <img src="https://latex.codecogs.com/png.latex?a_i,v_i">（「信念」）を伝えるのみで近似計算が可能である．</p>
<p>その結果，とりわけ圧縮センシングの問題に関しては，正確性とスピードの面で極めて効率的な信念伝搬法が得られる <span class="citation" data-cites="Kschischang+2001">(Kschischang et al., 2001)</span>, <span class="citation" data-cites="Yedidia+2003">(Yedidia et al., 2003)</span>．アルゴリズムが停止したと判断されたのち，<img src="https://latex.codecogs.com/png.latex?a_i"> によって真の信号 <img src="https://latex.codecogs.com/png.latex?x_i%5E*"> の推定とし，<img src="https://latex.codecogs.com/png.latex?v_i"> は推定の不確実性を表す．<img src="https://latex.codecogs.com/png.latex?N%5Cto%5Cinfty"> の極限において一致性を持つ．</p>
<p>BP はあるクラスの分布（混合 Gauss など）に従う観測 <img src="https://latex.codecogs.com/png.latex?x"> について，理論的な復号限界ピッタリまで復元可能である．</p>
</section>
<section id="近似メッセージ伝搬-amp" class="level3" data-number="3.8">
<h3 data-number="3.8" class="anchored" data-anchor-id="近似メッセージ伝搬-amp"><span class="header-section-number">3.8</span> 近似メッセージ伝搬 (AMP)</h3>
<p>この信念伝搬方では <img src="https://latex.codecogs.com/png.latex?2M%5Ctimes%20N"> のメッセージが送信されるが，ある仮定の下では <img src="https://latex.codecogs.com/png.latex?N+M"> のメッセージで十分である <span class="citation" data-cites="Donoho+2009">(David L. Donoho et al., 2009)</span>．</p>
<p>これは物理的には TAP 方程式 <span class="citation" data-cites="Thouless+1977">(Thouless et al., 1977)</span> に基づく消息であり，<img src="https://latex.codecogs.com/png.latex?N%5Cto%5Cinfty"> の極限で信念伝搬法に一致する．</p>
<p>その後，AMP は必ずしもスパースな観測に限らずとも，一般の設定における復号（特に <img src="https://latex.codecogs.com/png.latex?M">-推定）においても有用であることが報告されている <span class="citation" data-cites="Donoho-Montanari2016">(D. Donoho and Montanari, 2016)</span>．</p>
<p>低ランク行列の推定問題に対する変種 <span class="citation" data-cites="Antenucci+2019">(Antenucci, Krzakala, et al., 2019)</span> も提案されている．</p>
</section>
</section>
<section id="低ランク行列分解" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="低ランク行列分解"><span class="header-section-number">4</span> 低ランク行列分解</h2>
<p>低ランク行列を分解するという推定問題においては，情報理論的な復号限界の手前に，<strong>困難相</strong> (hard phase) が生じ，そこではメッセージ伝搬法が無効になる．</p>
<p>低ランク行列分解における困難相は，AMP が適用可能な範囲にも出現し，そこでは AMP の効率が大きく落ちてしまうという <span class="citation" data-cites="Fabrizio+2019">(Antenucci, Franz, et al., 2019)</span>．</p>
<p>この困難相は物理的にはスピングラス相に由来するものであるから，そのことを踏まえて AMP を修正した ASP (Approximate Survey Propagation) が提案されている <span class="citation" data-cites="Antenucci+2019">(Antenucci, Krzakala, et al., 2019)</span> が，それでも性能は改善しないという！</p>
<p>この困難相というものは，何か背後の物理的な理由（はたまたもっと深遠な理由？）によって，効率的なアルゴリズムは存在しないということが本当に保証されている領域なのかもしれない：</p>
<blockquote class="blockquote">
<p>This result provides further evidence that the hard phase in inference problems is algorithmically impenetrable for some deep computational reasons that remain to be uncovered. <span class="citation" data-cites="Fabrizio+2019">(Antenucci, Franz, et al., 2019)</span></p>
</blockquote>
</section>



<div id="quarto-appendix" class="default"><section id="参考文献" class="level2 appendix" data-number="5"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5</span> 参考文献</h2><div class="quarto-appendix-contents">






</div></section><section id="krzakala2015" class="level3 appendix" data-number="5.1"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5.1</span> <span class="citation" data-cites="Krzakala+2015">(Krzakala et al., 2015)</span></h2><div class="quarto-appendix-contents">

<p>Lecture note なので歩み寄りやすい．Bayes 推論とスピングラス系の対応，これを解くための信念伝搬法について非常に良い入門になる．</p>
<p>第四章でグラフのコミュニティ抽出，第五章で圧縮センシングについて扱っている．クラスタリングはとかく物理的な背景が深いことが，相転移に関する詳細な解析を通じてよくわかる．クラスタリング面白すぎる．<img src="https://latex.codecogs.com/png.latex?k">-means，EM アルゴリズム，Gibbs サンプラーはいずれもクラスタリングに使用可能で，いずれも物理を背景に持ち，拡散過程を極限に持ち，それぞれに相転移があるのかもしれない．</p>
</div></section><section id="zdeborova-krzakala2016" class="level3 appendix" data-number="5.2"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5.2</span> <span class="citation" data-cites="Zdeborova-Krzakala2016">(Zdeborová and Krzakala, 2016)</span></h2><div class="quarto-appendix-contents">

<blockquote class="blockquote">
<p>In physics the origins of these methods trace back to the Bethe approximation <span class="citation" data-cites="Bethe1935">(Bethe and Bragg, 1935)</span>, the work of Peierls <span class="citation" data-cites="Peierls+1936">(Peierls and Bragg, 1936)</span> and the Thouless–Anderson–Palmer (TAP) equations <span class="citation" data-cites="Thouless+1977">(Thouless et al., 1977)</span>. Interestingly, these equations can be seen as “improved” variational mean-ﬁeld equations, and this is at the roots of many perturbation approaches (such as <span class="citation" data-cites="Plefka1982">(Plefka, 1982)</span>, <span class="citation" data-cites="Georges-Yedidia1991">(Georges and Yedidia, 1991)</span> or <span class="citation" data-cites="Kikuchi1951">(Kikuchi, 1951)</span>). <span class="citation" data-cites="Zdeborova-Krzakala2016">(Zdeborová and Krzakala, 2016, p. 471)</span></p>
</blockquote>
</div></section><section id="fortunato2010-共同体抽出のレビュー" class="level3 appendix" data-number="5.3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5.3</span> <span class="citation" data-cites="Fortunato2010">(Fortunato, 2010)</span> 共同体抽出のレビュー</h2><div class="quarto-appendix-contents">

<p>グラフによるモデリングとその共同体抽出が，社会学・疫学・生化学で活躍している様子がよくわかり，大変なモチベーションが上がるようなレビューである．</p>
<p><span class="citation" data-cites="村田剛志2009">(村田剛志, 2009)</span> では community detection は <strong>コミュニティ抽出</strong> としている．</p>
</div></section><section id="donoho2016-圧縮センシングのレビュー" class="level3 appendix" data-number="5.4"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5.4</span> <span class="citation" data-cites="Donoho2016">(D. L. Donoho, 2006)</span> 圧縮センシングのレビュー</h2><div class="quarto-appendix-contents">

<p>荘厳すぎる完成された理論の感じよ．</p>
<p><span class="citation" data-cites="池田思朗2012">(池田思朗, 2012)</span> が非常にわかりやすい入門的解説を日本語で与えている．</p>
</div></section><section id="yedidia2003" class="level3 appendix" data-number="5.5"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">5.5</span> <span class="citation" data-cites="Yedidia+2003">(Yedidia et al., 2003)</span></h2><div class="quarto-appendix-contents">

<p>BP アルゴリズムに関する詳細な解説．特に Bethe 近似や変分推論との関係を強調しており，BP アルゴリズムは自由エネルギーに対する Bethe 近似の停留点に収束することが示されている．</p>
<p>なお BP アルゴリズムは <span class="citation" data-cites="池田思朗+2004">(池田思朗 et al., 2004)</span> は <strong>確率伝搬法</strong>，<span class="citation" data-cites="Kabashima2005">(Kabashima, 2005)</span> は <strong>要約伝搬法</strong> と訳している．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Fabrizio+2019" class="csl-entry">
Antenucci, F., Franz, S., Urbani, P., and Zdeborová, L. (2019). <a href="https://doi.org/10.1103/PhysRevX.9.011020">Glassy nature of the hard phase in inference problems</a>. <em>Phys. Rev. X</em>, <em>9</em>, 011020.
</div>
<div id="ref-Antenucci+2019" class="csl-entry">
Antenucci, F., Krzakala, F., Urbani, P., and Zdeborová, L. (2019). <a href="https://doi.org/10.1088/1742-5468/aafa7d">Approximate survey propagation for statistical inference</a>. <em>Journal of Statistical Mechanics: Theory and Experiment</em>, <em>2019</em>(2), 023401.
</div>
<div id="ref-Bethe1935" class="csl-entry">
Bethe, H. A., and Bragg, W. L. (1935). <a href="https://doi.org/10.1098/rspa.1935.0122">Statistical theory of superlattices</a>. <em>Proceedings of the Royal Society of London. Series A - Mathematical and Physical Sciences</em>, <em>150</em>(871), 552–575.
</div>
<div id="ref-Candes-Tao2006" class="csl-entry">
Candes, E. J., and Tao, T. (2006). <a href="https://doi.org/10.1109/TIT.2006.885507">Near-optimal signal recovery from random projections: Universal encoding strategies?</a> <em>IEEE Transactions on Information Theory</em>, <em>52</em>(12), 5406–5425.
</div>
<div id="ref-Chen+1998" class="csl-entry">
Chen, S. S., Donoho, D. L., and Saunders, M. A. (1998). <a href="https://doi.org/10.1137/S1064827596304010">Atomic decomposition by basis pursuit</a>. <em>SIAM Journal on Scientific Computing</em>, <em>20</em>(1), 33–61.
</div>
<div id="ref-Clauset+2004" class="csl-entry">
Clauset, A., Newman, M. E. J., and Moore, C. (2004). <a href="https://doi.org/10.1103/PhysRevE.70.066111">Finding community structure in very large networks</a>. <em>Phys. Rev. E</em>, <em>70</em>, 066111.
</div>
<div id="ref-Decelle2011" class="csl-entry">
Decelle, A., Krzakala, F., Moore, C., and Zdeborová, L. (2011). <a href="https://doi.org/10.1103/PhysRevE.84.066106">Asymptotic analysis of the stochastic block model for modular networks and its algorithmic applications</a>. <em>Phys. Rev. E</em>, <em>84</em>, 066106.
</div>
<div id="ref-Dpnath-Hoffman1973" class="csl-entry">
Donath, W. E., and Hoffman, A. J. (1973). <a href="https://doi.org/10.1147/rd.175.0420">Lower bounds for the partitioning of graphs</a>. <em>IBM Journal of Research and Development</em>, <em>17</em>(5), 420–425.
</div>
<div id="ref-Donetti-Munoz2004" class="csl-entry">
Donetti, L., and Muñoz, M. A. (2004). <a href="https://doi.org/10.1088/1742-5468/2004/10/P10012">Detecting network communities: A new systematic and efficient algorithm</a>. <em>Journal of Statistical Mechanics: Theory and Experiment</em>, <em>2004</em>(10), P10012.
</div>
<div id="ref-Donoho2016" class="csl-entry">
Donoho, D. L. (2006). <a href="https://doi.org/10.1109/TIT.2006.871582">Compressed sensing</a>. <em>IEEE Transactions on Information Theory</em>, <em>52</em>(4), 1289–1306.
</div>
<div id="ref-Donoho+2009" class="csl-entry">
Donoho, David L., Maleki, A., and Montanari, A. (2009). <a href="https://doi.org/10.1073/pnas.0909892106">Message-passing algorithms for compressed sensing</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>106</em>(45), 18914–18919.
</div>
<div id="ref-Donoho-Montanari2016" class="csl-entry">
Donoho, D., and Montanari, A. (2016). <a href="https://doi.org/10.1007/s00440-015-0675-z">High dimensional robust m-estimation: Asymptotic variance via approximate message passing</a>. <em>Probability Theory and Related Fields</em>, <em>166</em>(3), 935–969.
</div>
<div id="ref-Fortunato2010" class="csl-entry">
Fortunato, S. (2010). <a href="https://doi.org/10.1016/j.physrep.2009.11.002">Community detection in graphs</a>. <em>Physics Reports</em>, <em>486</em>(3), 75–174.
</div>
<div id="ref-Gallager1962" class="csl-entry">
Gallager, R. (1962). <a href="https://doi.org/10.1109/TIT.1962.1057683">Low-density parity-check codes</a>. <em>IRE Transactions on Information Theory</em>, <em>8</em>(1), 21–28.
</div>
<div id="ref-Georges-Yedidia1991" class="csl-entry">
Georges, A., and Yedidia, J. S. (1991). <a href="https://doi.org/10.1088/0305-4470/24/9/024">How to expand around mean-field theory using high-temperature expansions</a>. <em>Journal of Physics A: Mathematical and General</em>, <em>24</em>(9), 2173.
</div>
<div id="ref-Girvan-Newman2002" class="csl-entry">
Girvan, M., and Newman, M. E. J. (2002). <a href="https://doi.org/10.1073/pnas.122653799">Community structure in social and biological networks</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>99</em>(12), 7821–7826.
</div>
<div id="ref-Guimera+2004" class="csl-entry">
Guimerà, R., Sales-Pardo, M., and Amaral, L. A. N. (2004). <a href="https://doi.org/10.1103/PhysRevE.70.025101">Modularity from fluctuations in random graphs and complex networks</a>. <em>Phys. Rev. E</em>, <em>70</em>, 025101.
</div>
<div id="ref-Hastings2006" class="csl-entry">
Hastings, M. B. (2006). <a href="https://doi.org/10.1103/PhysRevE.74.035102">Community detection as an inference problem</a>. <em>Phys. Rev. E</em>, <em>74</em>, 035102.
</div>
<div id="ref-Kabashima2005" class="csl-entry">
Kabashima, Y. (2005). <a href="https://doi.org/10.1143/JPSJ.74.2133">Replicated bethe free energy: A variational principle behind survey propagation</a>. <em>Journal of the Physical Society of Japan</em>, <em>74</em>(8), 2133–2136.
</div>
<div id="ref-Kikuchi1951" class="csl-entry">
Kikuchi, R. (1951). <a href="https://doi.org/10.1103/PhysRev.81.988">A theory of cooperative phenomena</a>. <em>Phys. Rev.</em>, <em>81</em>, 988–1003.
</div>
<div id="ref-Krzakala+2015" class="csl-entry">
Krzakala, F., Zdeborova, L., Angelini, M. C., and Caltagirone, F. (2015). <em><a href="https://indico.ictp.it/event/a14244/material/10/0.pdf">Statistical physics of inference and bayesian estimation</a></em>.
</div>
<div id="ref-Kschischang+2001" class="csl-entry">
Kschischang, F. R., Frey, B. J., and Loeliger, H.-A. (2001). <a href="https://doi.org/10.1109/18.910572">Factor graphs and the sum-product algorithm</a>. <em>IEEE Transactions on Information Theory</em>, <em>47</em>(2), 498–519.
</div>
<div id="ref-Lustig+2007" class="csl-entry">
Lustig, M., Donoho, D., and Pauly, J. M. (2007). <a href="https://doi.org/10.1002/mrm.21391">Sparse MRI: The application of compressed sensing for rapid MR imaging</a>. <em>Magnetic Resonance in Medicine</em>, <em>58</em>(6), 1182–1195.
</div>
<div id="ref-Luxburg2007" class="csl-entry">
Luxburg, U. von. (2007). <a href="https://doi.org/10.1007/s11222-007-9033-z">A tutorial on spectral clustering</a>. <em>Statistics and Computing</em>, <em>17</em>(4), 395–416.
</div>
<div id="ref-Maleki-Donoho2010" class="csl-entry">
Maleki, A., and Donoho, D. L. (2010). <a href="https://doi.org/10.1109/JSTSP.2009.2039176">Optimally tuned iterative reconstruction algorithms for compressed sensing</a>. <em>IEEE Journal of Selected Topics in Signal Processing</em>, <em>4</em>(2), 330–341.
</div>
<div id="ref-Newman2004" class="csl-entry">
Newman, M. E. J. (2004). <a href="https://doi.org/10.1103/PhysRevE.69.066133">Fast algorithm for detecting community structure in networks</a>. <em>Phys. Rev. E</em>, <em>69</em>, 066133.
</div>
<div id="ref-Newman-Leicht2007" class="csl-entry">
Newman, M. E. J., and Leicht, E. A. (2007). <a href="https://doi.org/10.1073/pnas.0610537104">Mixture models and exploratory analysis in networks</a>. <em>Proceedings of the National Academy of Sciences</em>, <em>104</em>(23), 9564–9569.
</div>
<div id="ref-Pearl1982" class="csl-entry">
Pearl, J. (1982). <em><a href="https://aaai.org/papers/00133-aaai82-032-reverend-bayes-on-inference-engines-a-distributed-hierarchical-approach/"><span class="nocase">Reverend Bayes on Inference Engines: A Distributed Hierarchical Approach</span></a></em>,Vol. 2, page 133.
</div>
<div id="ref-Peierls+1936" class="csl-entry">
Peierls, R., and Bragg, W. L. (1936). <a href="https://doi.org/10.1098/rspa.1936.0047">Statistical theory of superlattices with unequal concentrations of the components</a>. <em>Proceedings of the Royal Society of London. Series A - Mathematical and Physical Sciences</em>, <em>154</em>(881), 207–222.
</div>
<div id="ref-Pinkus1985" class="csl-entry">
Pinkus, A. (1985). <em><a href="https://doi.org/10.1007/978-3-642-69894-1"><span class="nocase"><img src="https://latex.codecogs.com/png.latex?n">-Width in Approximation Theory</span></a></em>. Springer Berlin, Heidelberg.
</div>
<div id="ref-Plefka1982" class="csl-entry">
Plefka, T. (1982). <a href="https://doi.org/10.1088/0305-4470/15/6/035">Convergence condition of the TAP equation for the infinite-ranged ising spin glass model</a>. <em>Journal of Physics A: Mathematical and General</em>, <em>15</em>(6), 1971.
</div>
<div id="ref-Reichardt-Bornholdt2006" class="csl-entry">
Reichardt, J., and Bornholdt, S. (2006). <a href="https://doi.org/10.1103/PhysRevE.74.016110">Statistical mechanics of community detection</a>. <em>Phys. Rev. E</em>, <em>74</em>, 016110.
</div>
<div id="ref-Sherrington-Kirkpatrick1975" class="csl-entry">
Sherrington, D., and Kirkpatrick, S. (1975). <a href="https://doi.org/10.1103/PhysRevLett.35.1792">Solvable model of a spin-glass</a>. <em>Phys. Rev. Lett.</em>, <em>35</em>, 1792–1796.
</div>
<div id="ref-Snijders-Nowicki1997" class="csl-entry">
Snijders, T. A. B., and Nowicki, K. (1997). <a href="https://doi.org/10.1007/s003579900004">Estimation and prediction for stochastic blockmodels for graphs with latent block structure</a>. <em>Journal of Classification</em>, <em>14</em>(1), 75–100.
</div>
<div id="ref-Thouless1986" class="csl-entry">
Thouless, D. J. (1986). <a href="https://doi.org/10.1103/PhysRevLett.56.1082"><span class="nocase">Spin-Glass on a Bethe Lattice</span></a>. <em>Phys. Rev. Lett.</em>, <em>56</em>, 1082–1085.
</div>
<div id="ref-Thouless+1977" class="csl-entry">
Thouless, D. J., Anderson, P. W., and Palmer, R. G. (1977). <a href="https://doi.org/10.1080/14786437708235992">Solution of ’solvable model of a spin glass’</a>. <em>Philosophical Magazine</em>, <em>35</em>(3), 593–601.
</div>
<div id="ref-Winn-Bishop2005" class="csl-entry">
Winn, J., and Bishop, C. M. (2005). <a href="http://jmlr.org/papers/v6/winn05a.html">Variational message passing</a>. <em>Journal of Machine Learning Research</em>, <em>6</em>(23), 661–694.
</div>
<div id="ref-Yedidia+2003" class="csl-entry">
Yedidia, J. S., Freeman, W. T., and Weiss, Y. (2003). Understanding belief propagation and its generalizations. In <em>Exploring artificial intelligence in the new millennium</em>, pages 239–269. San Francisco, CA, USA: Morgan Kaufmann Publishers Inc.
</div>
<div id="ref-Zdeborova-Krzakala2016" class="csl-entry">
Zdeborová, L., and Krzakala, F. (2016). <a href="https://doi.org/10.1080/00018732.2016.1211393">Statistical physics of inference: Thresholds and algorithms</a>. <em>Advances in Physics</em>, <em>65</em>(5), 453–552.
</div>
<div id="ref-村田剛志2009" class="csl-entry">
村田剛志. (2009). <a href="https://doi.org/10.3156/jsoft.21.4_500">ネットワークからのコミュニティ抽出</a>. <em>知能と情報</em>, <em>21</em>(4), 500–508.
</div>
<div id="ref-池田思朗2012" class="csl-entry">
池田思朗. (2012). スパースモデリングとベイズ統計. In <em>第55回自動制御連合講演会講演論文集</em>, pages 1043–1046. 京都大学.
</div>
<div id="ref-池田思朗+2004" class="csl-entry">
池田思朗, 田中利幸, and 甘利俊一. (2004). 情報幾何学に基づく確率伝搬法の解析. <em>統計数理</em>, <em>52</em>(2), 393–405.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><span class="citation" data-cites="Zdeborova-Krzakala2016">(Zdeborová and Krzakala, 2016, p. 471)</span>↩︎</p></li>
<li id="fn2"><p><span class="citation" data-cites="Krzakala+2015">(Krzakala et al., 2015, p. 23)</span>，<a href="../../../posts/2024/Stat/Bayes2.html#系の温度はハイパーパラメータに対応する">ベイズ統計学とスピングラスの稿</a> も参照．↩︎</p></li>
<li id="fn3"><p><span class="citation" data-cites="Krzakala+2015">(Krzakala et al., 2015, p. 21)</span> 4.1節，<span class="citation" data-cites="Fortunato2010">(Fortunato, 2010, p. 124)</span> 9.2節．↩︎</p></li>
<li id="fn4"><p><span class="citation" data-cites="Krzakala+2015">(Krzakala et al., 2015, p. 29)</span> “In fact previous methods like spectral methods are not so good as the algorithm proposed in this section.”↩︎</p></li>
<li id="fn5"><p>同様の事実を <span class="citation" data-cites="池田思朗+2004">(池田思朗 et al., 2004, p. 396)</span> 定理１は情報幾何学の言葉で述べている．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Bayesian</category>
  <category>Nature</category>
  <category>Computation</category>
  <guid>https://162348.github.io/posts/2024/Stat/Bayes3.html</guid>
  <pubDate>Thu, 25 Jul 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Stat/posterior.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>サンプリングとは何か</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Samplers/Sampling.html</link>
  <description><![CDATA[ 





<section id="サンプリングとは何か" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="サンプリングとは何か"><span class="header-section-number">1</span> サンプリングとは何か？</h2>
<section id="はじめに" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h3>
<p>計算機の登場が人類にもたらしたものは，<a href="https://ja.wikipedia.org/wiki/計算手">計算手</a> (computer) を代替する圧倒的計算資源だけではない．</p>
<p>1946 年に Los Alamos でお披露目された最初期の計算機 ENIAC の登場により，科学者たちは「一様乱数をシミュレーションする力」を手に入れた．</p>
<p>この力は何を意味するだろうか？</p>
<p>直ちにこの「力」の破壊的威力を理解したのは Stanislaw Ulam とその話を聴いた John von Neumann であったという．<sup>1</sup></p>
<p>その後，この「力」は Monte Carlo 法の名前を得て，<span class="citation" data-cites="Metropolis-Ulam1949">(Nicholas Metropolis and Ulam, 1949)</span> では Boltzmann 方程式や Schrödinger 方程式をシミュレーションすることに応用され，最終的に Los Alamos での研究成果は原爆として結実した．</p>
<p>この衝撃的な登場をした「力」は，その後平和が訪れた世界において，どのように使われているのであろうか？</p>
<p>本章では，Monte Carlo 法はその枠にとどまらず，「生成」「シミュレーション」「サンプリング」など種々の名前で，現代の生活を下支えしていると論じる．</p>
</section>
<section id="sec-sampling-as-synthesis" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="sec-sampling-as-synthesis"><span class="header-section-number">1.2</span> 「生成」としてのサンプリング</h3>
<p><a href="../../../posts/2024/Kernels/Deep3.html">GAN</a>，<a href="../../../posts/2024/Kernels/Deep4.html">VAE</a>，<a href="../../../posts/2024/Samplers/NF.html">正規化流</a>，<a href="../../../posts/2024/Samplers/Diffusion.html">拡散模型</a> などは，いずれも潜在変数モデルを学習していることに等しい．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Computation/incomplete.png" class="img-fluid figure-img"></p>
<figcaption>Missing Data Model / Latent State Model / Completed Model for <img src="https://latex.codecogs.com/png.latex?X"></figcaption>
</figure>
</div>
<p>数学的には <img src="https://latex.codecogs.com/png.latex?Z%5Cto%20X"> とは <a href="../../../posts/2024/Probability/Kernel.html">確率核</a> であり，<a href="../../../posts/2023/Probability/MarkovCategory.html">Markov 圏</a> における射とも見れる．</p>
<section id="階層モデルに内包される概念の総体について" class="level4" data-number="1.2.1">
<h4 data-number="1.2.1" class="anchored" data-anchor-id="階層モデルに内包される概念の総体について"><span class="header-section-number">1.2.1</span> 階層モデルに内包される概念の総体について</h4>
<p>欠測データモデル，潜在変数モデルは全て <a href="../../../posts/2024/Kernels/NCL.html#sec-hierarchical-models">階層モデル</a> の特別な場合とみなすことができる（<a href="https://ncatlab.org/nlab/show/concept+with+an+attitude">Concept with an attitude</a>）．そこで本稿では全て「階層モデル」と呼んでしまうこととする．</p>
<p>階層モデルには，これがひとたび推定されたのちは，そのモデルからデータをサンプリングすることが出来るという特徴がある．<sup>2</sup></p>
</section>
<section id="ベイズデータ解析" class="level4" data-number="1.2.2">
<h4 data-number="1.2.2" class="anchored" data-anchor-id="ベイズデータ解析"><span class="header-section-number">1.2.2</span> ベイズデータ解析</h4>
<p>ベイズ統計学の文脈では，こうして得たデータをモデルの正確さの検証に用いることが出来る点が，生成モデルの美点としてみなされている．<sup>3</sup></p>
<p>これはベイズ統計学では，階層モデルは物理的過程や社会的過程や因果など，何らかの現実を抽象化したものとみなされるためである．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://162348.github.io/posts/2024/Samplers/Files/McElreath.PNG" class="img-fluid figure-img"></p>
<figcaption><a href="https://youtu.be/R1vcdhPBlXA?si=zyjrzNi4greRUCIg">from McElreath’s Statistical Rethinking 2023 Lecture</a></figcaption>
</figure>
</div>
</section>
<section id="生成モデリング" class="level4" data-number="1.2.3">
<h4 data-number="1.2.3" class="anchored" data-anchor-id="生成モデリング"><span class="header-section-number">1.2.3</span> 生成モデリング</h4>
<p>一方で生成モデルの文脈では，純粋に「データ分布からの複製」を目標とするため，階層モデルはモデリングの道具ではなく，ひとえに正確なデータ分布を学習するための装置とみなされる．</p>
<p>このように，<u>統計と機械学習とでは階層モデルに対する態度と姿勢が違うのみで，生成モデルとベイズモデリングは数理的には同じ営為であると言える</u>．</p>
<p>このことは表現学習の初期から意識されていたことであり <span class="citation" data-cites="Kersten+2004">(Kersten et al., 2004)</span>, <span class="citation" data-cites="Yuille-Kersten2006">(Yuille and Kersten, 2006)</span>，実際データの背後にある因果構造を正しく特定できている形の階層モデルを推定した際は，その階層的な構造がデータの背後にある因果的な変動要因をうまく分解して陽の下に晒してくれるはずである <span class="citation" data-cites="Chen+2017">(Chen et al., 2017)</span>．</p>
<div class="table-responsive-sm">
<table class="table-striped table-hover table">
<caption>階層モデルの使い方の違い</caption>
<colgroup>
<col style="width: 5%">
<col style="width: 20%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">ベイズ統計</th>
<th style="text-align: center;">生成モデル</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">目標</td>
<td style="text-align: center;">正しいモデルを得る</td>
<td style="text-align: center;">高精度の生成をする</td>
</tr>
<tr class="even">
<td style="text-align: center;">生成</td>
<td style="text-align: center;">おまけ</td>
<td style="text-align: center;">主目的</td>
</tr>
<tr class="odd">
<td style="text-align: center;">価値観</td>
<td style="text-align: center;">不偏性は嬉しい</td>
<td style="text-align: center;">精度が重要</td>
</tr>
<tr class="even">
<td style="text-align: center;">推定法</td>
<td style="text-align: center;">MCMC などの Monte Carlo 法</td>
<td style="text-align: center;">変分推論などの最適化</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="シミュレーションとしてのサンプリング" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="シミュレーションとしてのサンプリング"><span class="header-section-number">1.3</span> 「シミュレーション」としてのサンプリング</h3>
<section id="観測シミュレーション前夜" class="level4" data-number="1.3.1">
<h4 data-number="1.3.1" class="anchored" data-anchor-id="観測シミュレーション前夜"><span class="header-section-number">1.3.1</span> 「観測」：シミュレーション前夜</h4>
<p>現代の科学技術のミトコンドリア・イブは Newton 力学だとする言説に，異論は少ないだろう．</p>
<p>Newton 力学から始まる全ての物理学における理論は，観測データを説明するために作られた．</p>
<p>統計モデルのように尤度を最適化するわけではないが，最もデータをよく説明する模型のみが残ってきたのは物理学も同じである．</p>
<p>Newton 力学の大きなモチベーションに Kepler の三法則の説明があり，この法則は <a href="https://ja.wikipedia.org/wiki/ティコ・ブラーエ">Tycho Brahe</a> の観測から見出されたものである．</p>
<blockquote class="blockquote">
<p>ティコ・ブラーエは彼のためにオラネンブルグに建てられたよく整備された「天文台」の中で，同じ一様な製図の上に惑星の位置を書き記すだけでなく，前もって印刷した同じ星図の上に惑星の位置を書き記すだけでなく，前もって印刷した同じ星図をヨーロッパ中の天文学者に送ってそこへ書き記すように求めて，彼らからの観測結果をも集めた． <strong>彼（ティコ・ブラーエのこと）の精神が突然に変化を遂げたのでは無い．彼の目が突然に古い偏見から自由になるのでは無い．以前の誰よりも夏の空を注意深く観測している訳でも無い．彼は，夏の空＋自分の観測＋同僚の観測＋コペルニクスの書物＋プトレマイオスの『アルマゲスト』の多くの版とを一望のもとに見て考えた最初の人物である</strong>．長いネットワークの始点と終点に座り，不変で結合可能な可動物を私が呼ぶものを生み出した最初の人物である．<span class="citation" data-cites="ラトゥール1999">(ブルーノ・ラトゥール, 1999)</span></p>
</blockquote>
</section>
<section id="sec-physical-simulation" class="level4" data-number="1.3.2">
<h4 data-number="1.3.2" class="anchored" data-anchor-id="sec-physical-simulation"><span class="header-section-number">1.3.2</span> 「実験」：最初のシミュレーション</h4>
<p>まもなくして実験が物理学を駆動する方法論となり，長い間物理学においては，実験と理論の２者が相補的な関係にあった．</p>
<blockquote class="blockquote">
<p>If it disagrees with experiment, it’s wrong. In that simple statement, is the key to science. <span class="citation" data-cites="Feynman1964">(Feynman, 1964)</span></p>
</blockquote>
<p>だが，多くの物理理論は，特定の「この数値を測定すれば良い」というようなところまで提供し，実験はこれを確認する役割を果たすことが多かった．</p>
<p>このようなスキームでは，実験から集中される観察データ自体が複雑な構造を持つということは稀だったと言えるだろう．</p>
</section>
<section id="数値実験ラボからコンピュータへ" class="level4" data-number="1.3.3">
<h4 data-number="1.3.3" class="anchored" data-anchor-id="数値実験ラボからコンピュータへ"><span class="header-section-number">1.3.3</span> 「数値実験」：ラボからコンピュータへ</h4>
<p>しかし，統計力学の扱う対象などは，例えば Ising 模型など，環境を整えて実験的に再現するということは難しい．その結果，計算機内でのシミュレーションが実験の代わりを果たすようになっている．３次元の Ising 模型の臨界指数の conformal bootstrap による計算 <span class="citation" data-cites="El-Showk+2012">(El-Showk et al., 2012)</span> などはその良い例である．</p>
<blockquote class="blockquote">
<p>The computer becomes the virtual laboratory in which a system is studied - a numerical experiment. <span class="citation" data-cites="Rapaport2004">(Rapaport, 2004, p. 3)</span></p>
</blockquote>
<p>また，天体観測の時代とは違い，データ自体が複雑な構造を持つ一つの宇宙のような様相を呈しているのが計算機時代である．例えば，高次元における測度の集中の現象 <span class="citation" data-cites="ConvexityAndConcentration2017">(Carlen et al., 2017)</span> が発見されたように，高次元データにおける多様体仮説も広く観察されている <span class="citation" data-cites="本武陽一2017">(本武陽一, 2017)</span>．</p>
<p>現代では，そのようなデータを料理すること自体が一つの重要な実験技法と言えるかもしれない．</p>
</section>
<section id="社会科学" class="level4" data-number="1.3.4">
<h4 data-number="1.3.4" class="anchored" data-anchor-id="社会科学"><span class="header-section-number">1.3.4</span> 社会「科学」</h4>
<p>「数値実験」「シミュレーション」という新たな「実験」技術が，真の意味で社会科学を「科学」たらしめるかもしれない．</p>
<blockquote class="blockquote">
<p>Social science is an example of a science which is not a science.<br><a href="https://youtu.be/zkFPCTwPlkU?si=uA2tM0e18lfip_gI">Feynman on the social sciences</a></p>
</blockquote>
<p>結局，このような「社会科学は科学か？」という論争も，自然科学の理論の実験による検証よりも，社会科学の理論の実験による検証の方が，はるかに実験技術の発達を必要とした，というだけに過ぎないかもしれない．</p>
</section>
<section id="意味論的シミュレーション" class="level4" data-number="1.3.5">
<h4 data-number="1.3.5" class="anchored" data-anchor-id="意味論的シミュレーション"><span class="header-section-number">1.3.5</span> 意味論的シミュレーション</h4>
<p>大規模言語モデル（LLM）は，物理学的なシミュレーションと相補的な世界モデルを提供しつつある．産業界では，初めて言語を生成できるモデルとして，会話やディスカッションのシミュレーションツールとしても使われている．</p>
<p>加えて，計算科学の意味での数値実験によるシミュレーションだけでなく，生成モデルを汎用物理シミュレーターとして用いる考え方が，Sora <span class="citation" data-cites="Brooks+2024">(Brooks et al., 2024)</span> の出現以降広まった．</p>
<p>実際，動画の生成・自動運転のシミュレーション・自律的エージェントのシミュレーションなどは，物理法則のシミュレーションとタスクとして一致するところが多い <span class="citation" data-cites="Zhu+2024">(Zhu et al., 2024)</span>．</p>
</section>
</section>
<section id="結論サンプリングとは輸送である" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="結論サンプリングとは輸送である"><span class="header-section-number">1.4</span> 結論：「サンプリングとは輸送である」</h3>
</section>
</section>
<section id="サンプリングと最適化の双対性" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="サンプリングと最適化の双対性"><span class="header-section-number">2</span> サンプリングと最適化の双対性</h2>
<p>「生成」「シミュレーション」などの「隠れたサンプリング」が多いのと同様，隠れた最適化も多い．ほとんどの物理法則は変分法的解釈を持つ．</p>
<section id="サンプリングによる最適化" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="サンプリングによる最適化"><span class="header-section-number">2.1</span> サンプリングによる最適化</h3>
<p>統計力学的な系は自由エネルギー最小化原理に従って基底状態に緩和する．</p>
<p>このことにより，最適化にサンプリングが利用できる．模擬アニーリング <span class="citation" data-cites="Kirkpartick+1983">(Kirkpartick et al., 1983)</span> などはその例と言えよう．</p>
<p>一般に，サンプリングが勾配フリーの最適化ソルバーとして利用可能であることが理解されてきている <span class="citation" data-cites="Andrieu+2024">(Andrieu et al., 2024)</span>．</p>
</section>
<section id="最適化によるサンプリング" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="最適化によるサンプリング"><span class="header-section-number">2.2</span> 最適化によるサンプリング</h3>
<p>生成モデルは，その生成の精度が重視されるために，多くの場合は最適化によってベイズ推論問題が解かれる．</p>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="あとがき" class="level2 appendix" data-number="3"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">3</span> あとがき</h2><div class="quarto-appendix-contents">

<p>本稿は，下掲の稿からの思索の発展を記したものである：</p>
<div class="article-card-container">
    <div class="article-card">
        <a href="https://162348.github.io/posts/2024/Computation/AboutSimulation.html" target="_blank">
            <img src="https://162348.github.io/posts/2024/Computation/Files/feynman.jpg" alt="Article Image" class="article-image">
            <div class="article-content">
                <h3 class="article-title anchored">計算とは何か</h3>
                <p class="article-description">計算とサンプリングのはざまにある Monte Carlo 法</p>
            </div>
        </a>
    </div>
</div>
<p>概要で提起した問題意識</p>
<blockquote class="blockquote">
<p>初まりは Los Alamos 研究所にて，確率変数をシミュレーションすることが可能になったことは，人類に何をもたらしただろうか？</p>
</blockquote>
<p>への回答は「原爆」であると同時に，「平和」でもあると応えたい．そのような研究がしていきたいと思う．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Andrieu+2024" class="csl-entry">
Andrieu, C., Chopin, N., Fincato, E., and Gerber, M. (2024). <a href="https://arxiv.org/abs/2408.00888">Gradient-free optimization via integration</a>.
</div>
<div id="ref-Brooks+2024" class="csl-entry">
Brooks, T., Peebles, B., Holmes, C., DePue, W., Guo, Y., Jing, L., … Ramesh, A. (2024). <em>Video generation models as world simulators</em>. OpenAI. Retrieved from <a href="https://openai.com/research/video-generation-models-as-world-simulators">https://openai.com/research/video-generation-models-as-world-simulators</a>
</div>
<div id="ref-ConvexityAndConcentration2017" class="csl-entry">
Carlen, E., Madiman, M., and Werner, E. M. (Eds.). (2017). <em><a href="https://doi.org/10.1007/978-1-4939-7005-6">Convexity and concentration</a></em>,Vol. 161. Springer New York.
</div>
<div id="ref-Chen+2017" class="csl-entry">
Chen, X., Kingma, D. P., Salimans, T., Duan, Y., Dhariwal, P., Schulman, J., … Abbeel, P. (2017). <a href="https://openreview.net/forum?id=BysvGP5ee"><span>Variational Lossy Autoencoder</span></a>. In <em>International conference on learning representations</em>.
</div>
<div id="ref-El-Showk+2012" class="csl-entry">
El-Showk, S., Paulos, M. F., Poland, D., Rychkov, S., Simmons-Duffin, D., and Vichi, A. (2012). <a href="https://doi.org/10.1103/PhysRevD.86.025022">Solving the 3D ising model with the conformal bootstrap</a>. <em>Phys. Rev. D</em>, <em>86</em>, 025022.
</div>
<div id="ref-Feynman1964" class="csl-entry">
Feynman, R. P. (1964). <em><a href="https://www.feynmanlectures.caltech.edu/messenger.html">Seeking new laws</a></em>.
</div>
<div id="ref-Kersten+2004" class="csl-entry">
Kersten, D., Mamassian, P., and Yuille, A. (2004). <a href="https://doi.org/10.1146/annurev.psych.55.090902.142005">Object perception as bayesian inference</a>. <em>Annual Review of Psychology</em>, <em>55</em>(Volume 55, 2004), 271–304. Journal Article.
</div>
<div id="ref-Kirkpartick+1983" class="csl-entry">
Kirkpartick, S., Gelatt, C. D., and Vecchi, M. P. (1983). Optimization by simulated annealing. <em>Science</em>, <em>220</em>(4598), 671–680.
</div>
<div id="ref-Metropolis1987" class="csl-entry">
Metropolis, N. (1987). <a href="https://library.lanl.gov/cgi-bin/getfile?00326866.pdf">The beginning of the monte carlo method</a>. <em>Los Alamos Science Special Issue</em>, <em>15</em>, 125–130.
</div>
<div id="ref-Metropolis-Ulam1949" class="csl-entry">
Metropolis, Nicholas, and Ulam, S. M. (1949). <a href="https://doi.org/10.2307/2280232">The monte carlo method</a>. <em>Journal of the American Statistical Association</em>, <em>44</em>(247), 335–341.
</div>
<div id="ref-Rapaport2004" class="csl-entry">
Rapaport, D. C. (2004). <em><a href="https://doi.org/10.1017/CBO9780511816581">The art of molecular dynamics simulation</a></em>. Cambridge University Press.
</div>
<div id="ref-Yuille-Kersten2006" class="csl-entry">
Yuille, A., and Kersten, D. (2006). <a href="https://doi.org/10.1016/j.tics.2006.05.002"><span class="nocase">Vision as Bayesian Inference: Analysis by Synthesis?</span></a> <em>Trends in Cognitive Sciences</em>, <em>10</em>(7), 301–308.
</div>
<div id="ref-Zhu+2024" class="csl-entry">
Zhu, Z., Wang, X., Zhao, W., Min, C., Deng, N., Dou, M., … Huang, G. (2024). <a href="https://arxiv.org/abs/2405.03520">Is sora a world simulator? A comprehensive survey on general world models and beyond</a>.
</div>
<div id="ref-ラトゥール1999" class="csl-entry">
ブルーノ・ラトゥール. (1999). <em><a href="">科学が作られているとき――人類学的考察</a></em>. 産業図書.
</div>
<div id="ref-本武陽一2017" class="csl-entry">
本武陽一. (2017). <em>高次元データセットに潜む幾何構造と深層学習 : その解析と大自由度力学系への応用</em> (PhD thesis). 東京大学. Retrieved from <a href="https://repository.dl.itc.u-tokyo.ac.jp/records/48134">https://repository.dl.itc.u-tokyo.ac.jp/records/48134</a>
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>当時の歴史は <span class="citation" data-cites="Metropolis1987">(N. Metropolis, 1987)</span> に詳しい．↩︎</p></li>
<li id="fn2"><p>圏論的には，射の列を終対象から辿ることにあたる：<img src="https://latex.codecogs.com/png.latex?%5C%7B*%5C%7D%5Cto%20Z%5Cto%20X">．↩︎</p></li>
<li id="fn3"><p>特に Richard McElreath の統計観に強く現れている．↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Computation</category>
  <category>Sampling</category>
  <category>Opinion</category>
  <guid>https://162348.github.io/posts/2024/Samplers/Sampling.html</guid>
  <pubDate>Thu, 25 Jul 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>大規模な不均衡データに対するロジスティック回帰（後編）</title>
  <dc:creator>司馬博文 </dc:creator>
  <link>https://162348.github.io/posts/2024/Stat/Logistic2.html</link>
  <description><![CDATA[ 





<div class="hidden">
<p>A Blog Entry on Bayesian Computation by an Applied Mathematician</p>
<p>$$</p>
<p>$$</p>
</div>
<p>前稿はこちら：</p>
<div id="listing-lst-listing" class="listing quarto-float quarto-listing quarto-listing-container-default">
<div class="list quarto-listing-default">
<div class="quarto-post image-right" data-index="0" data-categories="Bayesian,Computation,Python,MCMC,Statistics" data-listing-date-sort="1720710000000" data-listing-file-modified-sort="1724916755806" data-listing-date-modified-sort="1721228400000" data-listing-reading-time-sort="10" data-listing-word-count-sort="1912">
<div class="thumbnail">
<p><a href="../../../posts/2024/Stat/Logistic.html" class="no-external"></a></p><a href="../../../posts/2024/Stat/Logistic.html" class="no-external">
<p><img src="https://162348.github.io/posts/2024/Stat/Logistic_WhiteBackground.svg" class="thumbnail-image"></p>
</a><p><a href="../../../posts/2024/Stat/Logistic.html" class="no-external"></a></p>
</div>
<div class="body">
<h3 class="no-anchor listing-title">
<a href="../../../posts/2024/Stat/Logistic.html" class="no-external">大規模な不均衡データに対するロジスティック回帰（前編）</a>
</h3>
<div class="listing-subtitle">
<a href="../../../posts/2024/Stat/Logistic.html" class="no-external">離散時間 MCMC から連続時間 MCMC へ</a>
</div>
</div>
<div class="metadata">
<p><a href="../../../posts/2024/Stat/Logistic.html" class="no-external"></a></p><a href="../../../posts/2024/Stat/Logistic.html" class="no-external">
</a>
</div>
</div>
</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div>
<section id="zig-zag-サンプラーによる解決" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Zig-Zag サンプラーによる解決</h1>
<section id="はじめに" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="はじめに"><span class="header-section-number">1.1</span> はじめに</h2>
<p>説明変数 <img src="https://latex.codecogs.com/png.latex?X%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Ep)"> と係数 <img src="https://latex.codecogs.com/png.latex?%5Cxi%5Cin%5Cmathcal%7BL%7D(%5COmega;%5Cmathbb%7BR%7D%5Ep)"> に関するロジスティックモデル</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BP%7D%5BY=1%5C,%7C%5C,X,%5Cxi%5D=g%5E%7B-1%7D(X%5E%5Ctop%5Cxi)=%5Cfrac%7B%5Cexp(X%5E%5Ctop%5Cxi)%7D%7B1+%5Cexp(X%5E%5Ctop%5Cxi)%7D%5Ctag%7B1%7D%0A"></p>
<p>において，<img src="https://latex.codecogs.com/png.latex?%5C%7By%5Ei%5C%7D"> または <img src="https://latex.codecogs.com/png.latex?%5C%7Bx%5Ei_j%5C%7D"> が不均衡であった場合は，前節で見たように Gibbs サンプラーによる方法ではスケールしない．</p>
<p>よく調整された Metropolis-Hastings 法を用いることが解決の１つとしてあり得るが，やはり本当に大きな <img src="https://latex.codecogs.com/png.latex?n,p"> に関してスケールしないことが問題である．</p>
</section>
<section id="事後分布の特徴" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="事後分布の特徴"><span class="header-section-number">1.2</span> 事後分布の特徴</h2>
<p>実は，ロジスティック回帰ではポテンシャル <img src="https://latex.codecogs.com/png.latex?U"> の勾配が有界になり，簡単なサブサンプリングが可能である．</p>
<p>事後分布の負の対数密度は <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20U(%5Cxi)&amp;:=-%5Clog%20p_0(%5Cxi)-%5Csum_%7Bi=1%7D%5En%5Clog%5Cleft(%5Cfrac%7B%5Cexp(y%5Ei(x%5Ei)%5E%5Ctop%5Cxi)%7D%7B1+%5Cexp((x%5Ei)%5E%5Ctop%5Cxi)%7D%5Cright)%5C%5C%0A%20%20%20%20&amp;=:U_0(%5Cxi)+U_1(%5Cxi)%0A%5Cend%7Balign*%7D"> と表せる．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AU_1(%5Cxi)=%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bj=1%7D%5EnU%5Ej_1(%5Cxi)%0A"> <img src="https://latex.codecogs.com/png.latex?%0AU_1%5Ej(%5Cxi)=-n%5Clog%5Cleft(%5Cfrac%7B%5Cexp%5Cleft(y%5Ej(x%5Ej)%5E%5Ctop%5Cxi%5Cright)%7D%7B1+%5Cexp%5Cleft((x%5Ej)%5E%5Ctop%5Cxi%5Cright)%7D%5Cright)%0A"> であるから， <img src="https://latex.codecogs.com/png.latex?%0A%5Cpartial_iU%5Ej_1(%5Cxi)=n%5Cfrac%7Bx%5Ej_i%5Cexp%5Cleft((x%5Ej)%5E%5Ctop%5Cxi%5Cright)%7D%7B1+%5Cexp%5Cleft((x%5Ej)%5E%5Ctop%5Cxi%5Cright)%7D-ny%5Ejx%5Ej_i%3Cnx%5Ej_i(1-y%5Ej)%0A"> を得る．</p>
</section>
<section id="poisson-剪定" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="poisson-剪定"><span class="header-section-number">1.3</span> Poisson 剪定</h2>
<p>特に各 <img src="https://latex.codecogs.com/png.latex?%5Cpartial_iU_1(%5Cxi)"> のバウンドとして <span id="eq-bound-U1"><img src="https://latex.codecogs.com/png.latex?%0A%5Clvert%5Cpartial_iU%5Ej_1(%5Cxi)%5Crvert%5Cle%20n%5Cmax_%7Bj%5Cin%5Bn%5D%7D%5Clvert%20x%5Ej_i%5Crvert%5Cqquad%20i%5Cin%5Bd%5D%0A%5Ctag%7B1%7D"></span> を得るから， <img src="https://latex.codecogs.com/png.latex?%0A%5Clambda_i(%5Cxi,%5Ctheta)=%5Cbiggr(%5Ctheta_i%5Cpartial_iU(%5Cxi)%5Cbiggl)_+%5Cle%5Cbiggr(n%5Ctheta_i%5Cmax_%7Bj%5Cin%5Bn%5D%7D%5Clvert%20x%5Ej_i%5Crvert%5Cbiggl)_+%0A"> を元に剪定を実行できる．</p>
<div id="4efee84b" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>サブサンプリングなしの Zig-Zag 過程のシミュレーションをする関数 ZZ1d() を定義</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ZigZagBoomerang</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Distributions</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LinearAlgebra</span></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just for sure</span></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StatsFuns</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ∇U(i,j,ξ,x,y)</span></span>
<span id="cb1-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        i ∈ [d]: 次元を表すインデックス</span></span>
<span id="cb1-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        j ∈ [n]: サンプル番号を表すインデックス</span></span>
<span id="cb1-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ξ: パラメータ空間 R^d 上の位置</span></span>
<span id="cb1-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        他，観測 (x,y) を引数にとる．</span></span>
<span id="cb1-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    この関数を実装する際，log の中身をそのまま計算しようとすると大変大きくなり，数値的に不安定になる（除算の後は 1 近くになるはずだが，Inf になってしまう）</span></span>
<span id="cb1-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x[i,j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dot</span>(x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,j],ξ)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y[j])</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ∇U(i,ξ,x,y)：∇U(i,j,ξ,x,y) を全データ j ∈ [n] について足し合わせたもの</span></span>
<span id="cb1-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        i ∈ [d]: 次元を表すインデックス</span></span>
<span id="cb1-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ξ: パラメータ空間 R^d 上の位置</span></span>
<span id="cb1-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        他，観測 (x,y) を引数にとる．</span></span>
<span id="cb1-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>)</span>
<span id="cb1-25">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb1-26">    U_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n</span>
<span id="cb1-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(U_list, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(i, j, ξ, x, y))</span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(U_list)</span>
<span id="cb1-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-32"></span>
<span id="cb1-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(ξ, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1次元の場合のショートカット</span></span>
<span id="cb1-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ξ, x, y)</span>
<span id="cb1-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(x), x)</span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    λ(i, ξ, θ, ∇U, x, y)：第 i ∈ [d] 次元のレート関数</span></span>
<span id="cb1-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        i ∈ [d]: 次元を表すインデックス</span></span>
<span id="cb1-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        (ξ,θ): E 上の座標</span></span>
<span id="cb1-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ∇U</span></span>
<span id="cb1-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        (x,y): 観測</span></span>
<span id="cb1-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, θ, ∇U, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(i, ξ, x, y))</span>
<span id="cb1-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ</span>(ξ, θ, ∇U, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(ξ, x, y))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1次元の場合のショートカット</span></span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    λ(τ, a, b)：代理レート関数の時刻 τ における値</span></span>
<span id="cb1-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        τ: 時間</span></span>
<span id="cb1-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        a,b: 1次関数の係数</span></span>
<span id="cb1-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ_bar</span>(τ, a, b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>τ)</span>
<span id="cb1-55"></span>
<span id="cb1-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`x`: current location, `θ`: current velocity, `t`: current time,</span></span>
<span id="cb1-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-59"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">move_forward</span>(τ, t, ξ, θ, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZag1d</span>)</span>
<span id="cb1-60">    τ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t, ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> θ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>τ , θ</span>
<span id="cb1-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-62"></span>
<span id="cb1-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ZZ1d(∇U, ξ, θ, T, x, y, Flow; rng=Random.GLOBAL_RNG, ab=ab_Global)：ZigZag sampler without subsampling</span></span>
<span id="cb1-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `∇U`: gradient of the negative log-density</span></span>
<span id="cb1-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `(ξ,θ)`: initial state</span></span>
<span id="cb1-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `T`: Time Horizon</span></span>
<span id="cb1-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `(x,y)`: observation</span></span>
<span id="cb1-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `Flow`: continuous dynamics</span></span>
<span id="cb1-70"></span>
<span id="cb1-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `a+bt`: computational bound for intensity m(t)</span></span>
<span id="cb1-72"></span>
<span id="cb1-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `num`: ポアソン時刻に到着した回数</span></span>
<span id="cb1-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        `acc`: 受容回数．`acc/num` は acceptance rate</span></span>
<span id="cb1-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ1d</span>(∇U, ξ, θ, T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, Flow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZagBoomerang.ContinuousDynamics</span>; rng<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span>.GLOBAL_RNG, ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab_Global)</span>
<span id="cb1-77">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(T)</span>
<span id="cb1-78">    Ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(t, ξ, θ)]</span>
<span id="cb1-79">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-80">    epoch_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num]</span>
<span id="cb1-81">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb1-82">    t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># イベントは a,b が定める affine proxy に従って生成する</span></span>
<span id="cb1-83"></span>
<span id="cb1-84">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> T</span>
<span id="cb1-85">        τ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t</span>
<span id="cb1-86">        t, ξ, θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">move_forward</span>(τ, t, ξ, θ, Flow)</span>
<span id="cb1-87">        l, lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ</span>(ξ, θ, ∇U, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ_bar</span>(τ, a, b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># λ が真のレート, λ_bar が affine proxy</span></span>
<span id="cb1-88">        num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> l</span>
<span id="cb1-90">            acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-91">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb1-92">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lb)</span>
<span id="cb1-93">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(l)</span>
<span id="cb1-94">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-95">            θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>θ</span>
<span id="cb1-96">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(Ξ, (t, ξ, θ))</span>
<span id="cb1-97">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(epoch_list, num)</span>
<span id="cb1-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-99">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb1-100">        t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())</span>
<span id="cb1-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-102"></span>
<span id="cb1-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Ξ, epoch_list, acc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>num</span>
<span id="cb1-104"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</details>
</div>
<div id="9c0cbcd4" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_Global</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">maximum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vec</span>(x)))</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_Global</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab_Global</span>(ξ, θ, x, y, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZag1d</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_Global</span>(ξ, θ, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_Global</span>(ξ, θ, x, y))</span></code></pre></div>
</div>
<p>そこで，さらにタイトに，次の affine 関数による評価を考えることになる： <img src="https://latex.codecogs.com/png.latex?%0A%5Coverline%7Bm%7D_i(t):=a_i+b_it,%5Cqquad%20i%5Cin%5Bd%5D,%0A"> <img src="https://latex.codecogs.com/png.latex?%0Aa_i:=(%5Ctheta_i%5Cpartial_iU(%5Cxi_*))_++C_i%5Clvert%5Cxi-%5Cxi_*%5Crvert%0A"> <img src="https://latex.codecogs.com/png.latex?%0Ab_i:=C_i%5Csqrt%7Bd%7D,%5Cqquad%20C_i:=%5Cfrac%7Bn%7D%7B4%7D%5Cmax_%7Bj%5Cin%5Bn%5D%7D%5Clvert%20x%5Ej_i%5Crvert%5Clvert%20x%5Ej%5Crvert.%0A"></p>
<div id="b51e5bd0" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>観測を生成</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StatsFuns</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Distributions</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True value</span></span>
<span id="cb3-5">n_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 実験で用いるサンプルサイズの列</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">Σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb3-8">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MvNormal</span>(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, Σ), n_list[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span>])</span>
<span id="cb3-9">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Bernoulli</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic</span>.(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BitVector になってしまう</span></span>
<span id="cb3-10">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Float64</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vec</span>(y))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Vector{Float64} に変換</span></span></code></pre></div>
</details>
</div>
<div id="a9f0492c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LinearAlgebra</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    U(ξ, x, y)：ポテンシャル関数</span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ξ: パラメータ空間上の点</span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        (x,y): 観測</span></span>
<span id="cb4-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(ξ, x, y)</span>
<span id="cb4-10">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb4-11">    U_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n</span>
<span id="cb4-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(U_list, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(j, ξ, x, y))</span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb4-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(U_list)</span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb4-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(j, ξ, x, y)</span>
<span id="cb4-18">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb4-19">    product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dot</span>(x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,j],ξ)</span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(y[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> product) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(product)))</span>
<span id="cb4-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Optim</span></span>
<span id="cb4-24"></span>
<span id="cb4-25">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimize</span>(ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(ξ, x, y), [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LBFGS</span>())</span>
<span id="cb4-26">ξ_star <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Optim.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">minimizer</span>(result)</span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span>(ξ, θ, x, y)</span>
<span id="cb4-29">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb4-30">    max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">maximum</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_Affine</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(ξ_star,x,y)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ξ_star[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb4-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_Affine</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span>(ξ, θ, x, y)</span>
<span id="cb4-36"></span>
<span id="cb4-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># computational bounds for intensity m(t)</span></span>
<span id="cb4-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab_Affine</span>(ξ, θ, x, y, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZag1d</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_Affine</span>(ξ, θ, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_Affine</span>(ξ, θ, x, y))</span></code></pre></div>
</div>
</section>
<section id="サブサンプリング" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="サブサンプリング"><span class="header-section-number">1.4</span> サブサンプリング</h2>
<p>Poisson 過程の強度関数を確率化し，<img src="https://latex.codecogs.com/png.latex?K%5Csim%5Cmathrm%7BU%7D(%5Bn%5D)"> に対して <img src="https://latex.codecogs.com/png.latex?%0Am_i%5EK(t):=%5Cbiggr(%5Ctheta_i%20E%5EK_i(x+%5Ctheta%20t)%5Cbiggl)_+%0A"> <img src="https://latex.codecogs.com/png.latex?%0AE%5EK_i(x):=%5Cpartial_iU(%5Cxi_*)+%5Cpartial_iU%5EK(%5Cxi)-%5Cpartial_iU%5EK(%5Cxi_*)%0A"> としても，引き続き同様の上界を持つ．</p>
<p>ここで，<img src="https://latex.codecogs.com/png.latex?m_i%5EK"> の評価は <img src="https://latex.codecogs.com/png.latex?m_i"> より <img src="https://latex.codecogs.com/png.latex?n"> 倍軽量になっていることに注意．</p>
<div id="e946b36c" class="cell" data-execution_count="9">
<details class="code-fold">
<summary>サブサンプリングありの Zig-Zag 過程のシミュレーションをする関数 ZZ1d_SS() と ZZ1d_CV() を定義</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ZigZagBoomerang</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Distributions</span></span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span></span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LinearAlgebra</span></span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># just for sure</span></span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StatsFuns</span></span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj_Global</span>(j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, θ, ∇U, x, y)</span>
<span id="cb5-9">    Eʲ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, j, ξ, x, y)</span>
<span id="cb5-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Eʲ)</span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ1d_SS</span>(∇U, ξ, θ, T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, Flow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZagBoomerang.ContinuousDynamics</span>; rng<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span>.GLOBAL_RNG, ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab_Global)</span>
<span id="cb5-14">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(T)</span>
<span id="cb5-15">    Ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(t, ξ, θ)]</span>
<span id="cb5-16">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb5-17">    epoch_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num]</span>
<span id="cb5-18">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb5-19">    t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># イベントは a,b が定める affine proxy に従って生成する</span></span>
<span id="cb5-20"></span>
<span id="cb5-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> T</span>
<span id="cb5-22">        τ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t</span>
<span id="cb5-23">        t, ξ, θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">move_forward</span>(τ, t, ξ, θ, Flow)</span>
<span id="cb5-24">        j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y))</span>
<span id="cb5-25">        l, lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj_Global</span>(j, ξ, θ, ∇U, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ_bar</span>(τ, a, b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># λ が真のレート, λ_bar が affine proxy</span></span>
<span id="cb5-26">        num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> l</span>
<span id="cb5-28">            acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb5-30">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lb)</span>
<span id="cb5-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-32">            θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>θ</span>
<span id="cb5-33">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(Ξ, (t, ξ, θ))</span>
<span id="cb5-34">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(epoch_list, num)</span>
<span id="cb5-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-36">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb5-37">        t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())</span>
<span id="cb5-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-39"></span>
<span id="cb5-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Ξ, epoch_list, acc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>num</span>
<span id="cb5-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-42"></span>
<span id="cb5-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj</span>(j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, θ, ∇U, x, y)</span>
<span id="cb5-44">    Eʲ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(ξ_star, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, j, ξ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, j, ξ_star, x, y)</span>
<span id="cb5-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Eʲ)</span>
<span id="cb5-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-47"></span>
<span id="cb5-48"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ1d_CV</span>(∇U, ξ, θ, T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, Flow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZagBoomerang.ContinuousDynamics</span>; rng<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span>.GLOBAL_RNG, ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab_Affine)</span>
<span id="cb5-49">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(T)</span>
<span id="cb5-50">    Ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(t, ξ, θ)]</span>
<span id="cb5-51">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb5-52">    epoch_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num]</span>
<span id="cb5-53">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb5-54">    t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># イベントは a,b が定める affine proxy に従って生成する</span></span>
<span id="cb5-55"></span>
<span id="cb5-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> T</span>
<span id="cb5-57">        τ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t</span>
<span id="cb5-58">        t, ξ, θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">move_forward</span>(τ, t, ξ, θ, Flow)</span>
<span id="cb5-59">        j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y))</span>
<span id="cb5-60">        l, lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj</span>(j, ξ, θ, ∇U, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ_bar</span>(τ, a, b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># λ が真のレート, λ_bar が affine proxy</span></span>
<span id="cb5-61">        num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> l</span>
<span id="cb5-63">            acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-64">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb5-65">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lb)</span>
<span id="cb5-66">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-67">            θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>θ</span>
<span id="cb5-68">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(Ξ, (t, ξ, θ))</span>
<span id="cb5-69">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(epoch_list, num)</span>
<span id="cb5-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-71">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb5-72">        t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())</span>
<span id="cb5-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb5-74"></span>
<span id="cb5-75">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Ξ, epoch_list, acc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>num</span>
<span id="cb5-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</details>
</div>
</section>
<section id="数値実験による性能比較" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="数値実験による性能比較"><span class="header-section-number">1.5</span> 数値実験による性能比較</h2>
<div id="f81172e5" class="cell" data-execution_count="10">
<details class="code-fold">
<summary>サブサンプリングなしの実験を実行する関数 experiment_ZZ() を定義</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ESS</span>(samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, T, dt)</span>
<span id="cb6-4">    B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dt</span>
<span id="cb6-5">    V <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ((dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(samples))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-6">    Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> B)</span>
<span id="cb6-7">    ESS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> V <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(Y)</span>
<span id="cb6-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ESS</span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch</span>(ab, T ,dt, x, y; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb6-12">    trace, epochs, acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ1d</span>(∇U, ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, T, x, y, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZigZag1d</span>(); ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab)</span>
<span id="cb6-13">    traj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discretize</span>(trace, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZigZag1d</span>(), dt)</span>
<span id="cb6-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ESS</span>(traj.x, T, dt) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> epochs[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span>]</span>
<span id="cb6-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb6-18">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">500.0</span></span>
<span id="cb6-19">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb6-20"></span>
<span id="cb6-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_ZZ</span>(N, T, dt; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, n_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># サブサンプリングなしの ZZ() に関して N 回実験</span></span>
<span id="cb6-22">    ESSs_sum_Affine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(n_list)</span>
<span id="cb6-23">    ESSs_sum_Global <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(n_list)</span>
<span id="cb6-24"></span>
<span id="cb6-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>N</span>
<span id="cb6-26">        ESSs_Affine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-27">        ESSs_Global <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> n_list</span>
<span id="cb6-29">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_Affine, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch</span>(ab_Affine, T, dt, x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n], y[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb6-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_Global, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch</span>(ab_Global, T, dt, x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n], y[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb6-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb6-32">        ESSs_sum_Affine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_Affine ESSs_Affine]</span>
<span id="cb6-33">        ESSs_sum_Global <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_Global ESSs_Global]</span>
<span id="cb6-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb6-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_Affine, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_Affine, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_Global, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_Global, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb6-37"></span>
<span id="cb6-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ESS_Affine, var_ESS_Affine, ESS_Global, var_ESS_Global = experiment_ZZ(2, T, dt; ξ0=0.0, θ0=1.0, n_list=n_list)</span></span></code></pre></div>
</details>
</div>
<div id="a0a3ecaa" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>実験には 10分 かかるので，保持した実行結果を用いる</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">JLD2</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">@load</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Logistic2_Experiment1.jld2"</span> ESS_Affine var_ESS_Affine ESS_Global var_ESS_Global</span></code></pre></div>
</details>
</div>
<div id="7f34b0b9" class="cell" data-execution_count="13">
<details class="code-fold">
<summary>サブサンプリング付きの実験を実行する関数 experiment_ZZ() を定義</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># function ESS(samples::Vector{Float64}, T, dt)</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     B = T / dt</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     V = (dt / T) * sum(samples.^2) - ((dt / T) * sum(samples))^2</span></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     Y = samples .* sqrt(T / B)</span></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ESS = T * V / var(Y)</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     return ESS</span></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># end</span></span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab, ZZ, T ,dt, x, y; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb8-12">    trace, epochs, acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ</span>(∇U, ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, T, x, y, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZigZag1d</span>(); ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab)</span>
<span id="cb8-13">    traj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discretize</span>(trace, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZigZag1d</span>(), dt)</span>
<span id="cb8-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ESS</span>(traj.x, T, dt) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> epochs[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># サブサンプリングをしているので length(y) で補正する必要あり</span></span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb8-16"></span>
<span id="cb8-17">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb8-18">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">500.0</span></span>
<span id="cb8-19">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb8-20"></span>
<span id="cb8-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_ZZ_SS</span>(N, T, dt; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, n_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># サブサンプリングなしの ZZ() に関して N 回実験</span></span>
<span id="cb8-22">    ESSs_sum_CV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(n_list)</span>
<span id="cb8-23">    ESSs_sum_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(n_list)</span>
<span id="cb8-24"></span>
<span id="cb8-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>N</span>
<span id="cb8-26">        ESSs_CV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-27">        ESSs_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> n_list</span>
<span id="cb8-29">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_CV, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab_Affine, ZZ1d_CV, T, dt, x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n], y[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb8-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_SS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab_Global, ZZ1d_SS, T, dt, x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n], y[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb8-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb8-32">        ESSs_sum_CV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_CV ESSs_CV]</span>
<span id="cb8-33">        ESSs_sum_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_SS ESSs_SS]</span>
<span id="cb8-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb8-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_CV, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_CV, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_SS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_SS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb8-37"></span>
<span id="cb8-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ESS_CV, var_ESS_CV, ESS_SS, var_ESS_SS = experiment_ZZ_SS(2, T, dt; ξ0=0.0, θ0=1.0, n_list=n_list)</span></span></code></pre></div>
</details>
</div>
<div id="7383c8a7" class="cell" data-execution_count="15">
<details class="code-fold">
<summary>結果をプロット</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb9-1">q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPlot</span>(q, n_list, ESS_CV, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_CV); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-CV"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>)</span>
<span id="cb9-2">q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPlot</span>(q, n_list, ESS_SS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_SS); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-SS"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb9-3">q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot!</span>(q, legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>bottomleft)</span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>(q)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<!--?xml version="1.0" encoding="utf-8"?-->
<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="576" height="384" viewbox="0 0 2304 1536">
<defs>
  <clippath id="clip870">
    <rect x="0" y="0" width="2304" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip870)" d="M0 1536 L2304 1536 L2304 8.52651e-14 L0 8.52651e-14  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip871">
    <rect x="460" y="0" width="1614" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip870)" d="M250.111 1347.54 L2256.76 1347.54 L2256.76 47.2441 L250.111 47.2441  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip872">
    <rect x="250" y="47" width="2008" height="1301"></rect>
  </clippath>
</defs>
<polyline clip-path="url(#clip872)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="306.903,1347.54 306.903,47.2441 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1253.43,1347.54 1253.43,47.2441 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2199.96,1347.54 2199.96,47.2441 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1347.54 2256.76,1347.54 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,1347.54 306.903,1328.64 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,1347.54 1253.43,1328.64 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1347.54 2199.96,1328.64 "></polyline>
<path clip-path="url(#clip870)" d="M273.231 1420.89 L280.87 1420.89 L280.87 1394.53 L272.559 1396.19 L272.559 1391.94 L280.823 1390.27 L285.499 1390.27 L285.499 1420.89 L293.138 1420.89 L293.138 1424.83 L273.231 1424.83 L273.231 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M312.582 1393.35 Q308.971 1393.35 307.143 1396.91 Q305.337 1400.45 305.337 1407.58 Q305.337 1414.69 307.143 1418.25 Q308.971 1421.8 312.582 1421.8 Q316.217 1421.8 318.022 1418.25 Q319.851 1414.69 319.851 1407.58 Q319.851 1400.45 318.022 1396.91 Q316.217 1393.35 312.582 1393.35 M312.582 1389.64 Q318.392 1389.64 321.448 1394.25 Q324.527 1398.83 324.527 1407.58 Q324.527 1416.31 321.448 1420.92 Q318.392 1425.5 312.582 1425.5 Q306.772 1425.5 303.693 1420.92 Q300.638 1416.31 300.638 1407.58 Q300.638 1398.83 303.693 1394.25 Q306.772 1389.64 312.582 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M325.072 1394.22 L331.279 1394.22 L331.279 1372.8 L324.527 1374.15 L324.527 1370.69 L331.241 1369.34 L335.04 1369.34 L335.04 1394.22 L341.247 1394.22 L341.247 1397.42 L325.072 1397.42 L325.072 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1219.21 1420.89 L1226.85 1420.89 L1226.85 1394.53 L1218.54 1396.19 L1218.54 1391.94 L1226.8 1390.27 L1231.47 1390.27 L1231.47 1420.89 L1239.11 1420.89 L1239.11 1424.83 L1219.21 1424.83 L1219.21 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1258.56 1393.35 Q1254.95 1393.35 1253.12 1396.91 Q1251.31 1400.45 1251.31 1407.58 Q1251.31 1414.69 1253.12 1418.25 Q1254.95 1421.8 1258.56 1421.8 Q1262.19 1421.8 1264 1418.25 Q1265.83 1414.69 1265.83 1407.58 Q1265.83 1400.45 1264 1396.91 Q1262.19 1393.35 1258.56 1393.35 M1258.56 1389.64 Q1264.37 1389.64 1267.42 1394.25 Q1270.5 1398.83 1270.5 1407.58 Q1270.5 1416.31 1267.42 1420.92 Q1264.37 1425.5 1258.56 1425.5 Q1252.75 1425.5 1249.67 1420.92 Q1246.61 1416.31 1246.61 1407.58 Q1246.61 1398.83 1249.67 1394.25 Q1252.75 1389.64 1258.56 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1275.07 1394.22 L1288.33 1394.22 L1288.33 1397.42 L1270.5 1397.42 L1270.5 1394.22 Q1272.67 1391.98 1276.39 1388.22 Q1280.13 1384.44 1281.09 1383.35 Q1282.92 1381.3 1283.63 1379.89 Q1284.36 1378.46 1284.36 1377.09 Q1284.36 1374.85 1282.78 1373.44 Q1281.22 1372.03 1278.7 1372.03 Q1276.92 1372.03 1274.92 1372.65 Q1272.95 1373.27 1270.69 1374.53 L1270.69 1370.69 Q1272.98 1369.77 1274.98 1369.3 Q1276.97 1368.83 1278.63 1368.83 Q1282.99 1368.83 1285.59 1371.01 Q1288.18 1373.19 1288.18 1376.84 Q1288.18 1378.57 1287.52 1380.13 Q1286.88 1381.68 1285.17 1383.78 Q1284.7 1384.33 1282.18 1386.94 Q1279.66 1389.54 1275.07 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M2165.41 1420.89 L2173.05 1420.89 L2173.05 1394.53 L2164.74 1396.19 L2164.74 1391.94 L2173 1390.27 L2177.68 1390.27 L2177.68 1420.89 L2185.31 1420.89 L2185.31 1424.83 L2165.41 1424.83 L2165.41 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M2204.76 1393.35 Q2201.15 1393.35 2199.32 1396.91 Q2197.51 1400.45 2197.51 1407.58 Q2197.51 1414.69 2199.32 1418.25 Q2201.15 1421.8 2204.76 1421.8 Q2208.39 1421.8 2210.2 1418.25 Q2212.03 1414.69 2212.03 1407.58 Q2212.03 1400.45 2210.2 1396.91 Q2208.39 1393.35 2204.76 1393.35 M2204.76 1389.64 Q2210.57 1389.64 2213.63 1394.25 Q2216.7 1398.83 2216.7 1407.58 Q2216.7 1416.31 2213.63 1420.92 Q2210.57 1425.5 2204.76 1425.5 Q2198.95 1425.5 2195.87 1420.92 Q2192.81 1416.31 2192.81 1407.58 Q2192.81 1398.83 2195.87 1394.25 Q2198.95 1389.64 2204.76 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M2229.4 1382.28 Q2232.13 1382.86 2233.65 1384.7 Q2235.19 1386.55 2235.19 1389.26 Q2235.19 1393.41 2232.33 1395.69 Q2229.47 1397.96 2224.21 1397.96 Q2222.44 1397.96 2220.56 1397.61 Q2218.7 1397.27 2216.7 1396.57 L2216.7 1392.9 Q2218.28 1393.83 2220.16 1394.3 Q2222.05 1394.77 2224.1 1394.77 Q2227.67 1394.77 2229.53 1393.36 Q2231.41 1391.95 2231.41 1389.26 Q2231.41 1386.77 2229.66 1385.38 Q2227.93 1383.97 2224.83 1383.97 L2221.56 1383.97 L2221.56 1380.85 L2224.98 1380.85 Q2227.78 1380.85 2229.27 1379.74 Q2230.75 1378.61 2230.75 1376.5 Q2230.75 1374.34 2229.21 1373.19 Q2227.69 1372.03 2224.83 1372.03 Q2223.27 1372.03 2221.48 1372.37 Q2219.69 1372.7 2217.55 1373.42 L2217.55 1370.03 Q2219.71 1369.43 2221.59 1369.13 Q2223.49 1368.83 2225.17 1368.83 Q2229.49 1368.83 2232.01 1370.81 Q2234.53 1372.76 2234.53 1376.11 Q2234.53 1378.44 2233.2 1380.06 Q2231.86 1381.66 2229.4 1382.28 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1063.43 1466.23 Q1056.43 1466.23 1052.29 1471.45 Q1048.19 1476.67 1048.19 1485.67 Q1048.19 1494.65 1052.29 1499.87 Q1056.43 1505.09 1063.43 1505.09 Q1070.44 1505.09 1074.51 1499.87 Q1078.62 1494.65 1078.62 1485.67 Q1078.62 1476.67 1074.51 1471.45 Q1070.44 1466.23 1063.43 1466.23 M1063.43 1461.01 Q1073.43 1461.01 1079.41 1467.72 Q1085.39 1474.41 1085.39 1485.67 Q1085.39 1496.91 1079.41 1503.62 Q1073.43 1510.31 1063.43 1510.31 Q1053.41 1510.31 1047.39 1503.62 Q1041.41 1496.94 1041.41 1485.67 Q1041.41 1474.41 1047.39 1467.72 Q1053.41 1461.01 1063.43 1461.01 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1120.79 1491.59 Q1120.79 1485.13 1118.11 1481.47 Q1115.47 1477.78 1110.83 1477.78 Q1106.18 1477.78 1103.51 1481.47 Q1100.86 1485.13 1100.86 1491.59 Q1100.86 1498.05 1103.51 1501.75 Q1106.18 1505.41 1110.83 1505.41 Q1115.47 1505.41 1118.11 1501.75 Q1120.79 1498.05 1120.79 1491.59 M1100.86 1479.15 Q1102.71 1475.97 1105.51 1474.44 Q1108.34 1472.88 1112.26 1472.88 Q1118.75 1472.88 1122.79 1478.03 Q1126.87 1483.19 1126.87 1491.59 Q1126.87 1500 1122.79 1505.15 Q1118.75 1510.31 1112.26 1510.31 Q1108.34 1510.31 1105.51 1508.78 Q1102.71 1507.22 1100.86 1504.04 L1100.86 1509.39 L1094.98 1509.39 L1094.98 1459.86 L1100.86 1459.86 L1100.86 1479.15 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1159.3 1474.79 L1159.3 1480.33 Q1156.82 1479.05 1154.14 1478.42 Q1151.47 1477.78 1148.61 1477.78 Q1144.25 1477.78 1142.05 1479.12 Q1139.89 1480.45 1139.89 1483.13 Q1139.89 1485.16 1141.44 1486.34 Q1143 1487.49 1147.72 1488.54 L1149.72 1488.98 Q1155.96 1490.32 1158.57 1492.77 Q1161.21 1495.19 1161.21 1499.55 Q1161.21 1504.52 1157.26 1507.41 Q1153.35 1510.31 1146.47 1510.31 Q1143.61 1510.31 1140.49 1509.74 Q1137.4 1509.19 1133.97 1508.08 L1133.97 1502.03 Q1137.21 1503.72 1140.36 1504.58 Q1143.51 1505.41 1146.6 1505.41 Q1150.74 1505.41 1152.97 1504.01 Q1155.19 1502.57 1155.19 1500 Q1155.19 1497.61 1153.57 1496.34 Q1151.98 1495.06 1146.54 1493.88 L1144.5 1493.41 Q1139.06 1492.26 1136.64 1489.91 Q1134.22 1487.52 1134.22 1483.38 Q1134.22 1478.35 1137.78 1475.62 Q1141.35 1472.88 1147.91 1472.88 Q1151.15 1472.88 1154.02 1473.36 Q1156.88 1473.83 1159.3 1474.79 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1201.03 1490.1 L1201.03 1492.96 L1174.1 1492.96 Q1174.48 1499.01 1177.73 1502.19 Q1181.01 1505.34 1186.83 1505.34 Q1190.21 1505.34 1193.36 1504.52 Q1196.54 1503.69 1199.66 1502.03 L1199.66 1507.57 Q1196.51 1508.91 1193.2 1509.61 Q1189.89 1510.31 1186.48 1510.31 Q1177.95 1510.31 1172.96 1505.34 Q1167.99 1500.38 1167.99 1491.91 Q1167.99 1483.16 1172.7 1478.03 Q1177.44 1472.88 1185.46 1472.88 Q1192.66 1472.88 1196.83 1477.53 Q1201.03 1482.14 1201.03 1490.1 M1195.17 1488.38 Q1195.11 1483.57 1192.47 1480.71 Q1189.86 1477.84 1185.53 1477.84 Q1180.63 1477.84 1177.67 1480.61 Q1174.74 1483.38 1174.29 1488.41 L1195.17 1488.38 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1231.3 1479.21 Q1230.31 1478.64 1229.13 1478.38 Q1227.99 1478.1 1226.59 1478.1 Q1221.62 1478.1 1218.95 1481.34 Q1216.31 1484.56 1216.31 1490.61 L1216.31 1509.39 L1210.42 1509.39 L1210.42 1473.74 L1216.31 1473.74 L1216.31 1479.28 Q1218.15 1476.03 1221.11 1474.47 Q1224.07 1472.88 1228.3 1472.88 Q1228.91 1472.88 1229.64 1472.97 Q1230.37 1473.04 1231.27 1473.2 L1231.3 1479.21 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1233.24 1473.74 L1239.44 1473.74 L1250.58 1503.66 L1261.72 1473.74 L1267.93 1473.74 L1254.56 1509.39 L1246.61 1509.39 L1233.24 1473.74 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1292.22 1491.47 Q1285.12 1491.47 1282.38 1493.09 Q1279.64 1494.71 1279.64 1498.63 Q1279.64 1501.75 1281.68 1503.59 Q1283.75 1505.41 1287.28 1505.41 Q1292.15 1505.41 1295.08 1501.97 Q1298.04 1498.5 1298.04 1492.77 L1298.04 1491.47 L1292.22 1491.47 M1303.9 1489.05 L1303.9 1509.39 L1298.04 1509.39 L1298.04 1503.97 Q1296.04 1507.22 1293.04 1508.78 Q1290.05 1510.31 1285.72 1510.31 Q1280.25 1510.31 1277 1507.25 Q1273.79 1504.17 1273.79 1499.01 Q1273.79 1492.99 1277.8 1489.94 Q1281.84 1486.88 1289.83 1486.88 L1298.04 1486.88 L1298.04 1486.31 Q1298.04 1482.27 1295.37 1480.07 Q1292.73 1477.84 1287.92 1477.84 Q1284.86 1477.84 1281.97 1478.58 Q1279.07 1479.31 1276.4 1480.77 L1276.4 1475.36 Q1279.61 1474.12 1282.64 1473.51 Q1285.66 1472.88 1288.52 1472.88 Q1296.26 1472.88 1300.08 1476.89 Q1303.9 1480.9 1303.9 1489.05 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1321.75 1463.62 L1321.75 1473.74 L1333.82 1473.74 L1333.82 1478.29 L1321.75 1478.29 L1321.75 1497.64 Q1321.75 1502 1322.93 1503.24 Q1324.14 1504.48 1327.8 1504.48 L1333.82 1504.48 L1333.82 1509.39 L1327.8 1509.39 Q1321.02 1509.39 1318.44 1506.87 Q1315.87 1504.32 1315.87 1497.64 L1315.87 1478.29 L1311.57 1478.29 L1311.57 1473.74 L1315.87 1473.74 L1315.87 1463.62 L1321.75 1463.62 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1341.52 1473.74 L1347.38 1473.74 L1347.38 1509.39 L1341.52 1509.39 L1341.52 1473.74 M1341.52 1459.86 L1347.38 1459.86 L1347.38 1467.28 L1341.52 1467.28 L1341.52 1459.86 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1373.44 1477.84 Q1368.73 1477.84 1366 1481.54 Q1363.26 1485.2 1363.26 1491.59 Q1363.26 1497.99 1365.96 1501.68 Q1368.7 1505.34 1373.44 1505.34 Q1378.12 1505.34 1380.86 1501.65 Q1383.6 1497.96 1383.6 1491.59 Q1383.6 1485.26 1380.86 1481.57 Q1378.12 1477.84 1373.44 1477.84 M1373.44 1472.88 Q1381.08 1472.88 1385.44 1477.84 Q1389.8 1482.81 1389.8 1491.59 Q1389.8 1500.35 1385.44 1505.34 Q1381.08 1510.31 1373.44 1510.31 Q1365.77 1510.31 1361.41 1505.34 Q1357.08 1500.35 1357.08 1491.59 Q1357.08 1482.81 1361.41 1477.84 Q1365.77 1472.88 1373.44 1472.88 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1429.14 1487.87 L1429.14 1509.39 L1423.29 1509.39 L1423.29 1488.06 Q1423.29 1483 1421.31 1480.49 Q1419.34 1477.97 1415.39 1477.97 Q1410.65 1477.97 1407.91 1480.99 Q1405.18 1484.02 1405.18 1489.24 L1405.18 1509.39 L1399.29 1509.39 L1399.29 1473.74 L1405.18 1473.74 L1405.18 1479.28 Q1407.28 1476.06 1410.11 1474.47 Q1412.97 1472.88 1416.7 1472.88 Q1422.84 1472.88 1425.99 1476.7 Q1429.14 1480.49 1429.14 1487.87 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M1463.55 1474.79 L1463.55 1480.33 Q1461.07 1479.05 1458.39 1478.42 Q1455.72 1477.78 1452.86 1477.78 Q1448.49 1477.78 1446.3 1479.12 Q1444.13 1480.45 1444.13 1483.13 Q1444.13 1485.16 1445.69 1486.34 Q1447.25 1487.49 1451.96 1488.54 L1453.97 1488.98 Q1460.21 1490.32 1462.82 1492.77 Q1465.46 1495.19 1465.46 1499.55 Q1465.46 1504.52 1461.51 1507.41 Q1457.6 1510.31 1450.72 1510.31 Q1447.86 1510.31 1444.74 1509.74 Q1441.65 1509.19 1438.21 1508.08 L1438.21 1502.03 Q1441.46 1503.72 1444.61 1504.58 Q1447.76 1505.41 1450.85 1505.41 Q1454.99 1505.41 1457.22 1504.01 Q1459.44 1502.57 1459.44 1500 Q1459.44 1497.61 1457.82 1496.34 Q1456.23 1495.06 1450.79 1493.88 L1448.75 1493.41 Q1443.31 1492.26 1440.89 1489.91 Q1438.47 1487.52 1438.47 1483.38 Q1438.47 1478.35 1442.03 1475.62 Q1445.6 1472.88 1452.16 1472.88 Q1455.4 1472.88 1458.27 1473.36 Q1461.13 1473.83 1463.55 1474.79 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip872)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="250.111,1021.13 2256.76,1021.13 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="250.111,455.462 2256.76,455.462 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1347.54 250.111,47.2441 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1021.13 269.009,1021.13 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,455.462 269.009,455.462 "></polyline>
<path clip-path="url(#clip870)" d="M115.411 1040.92 L123.05 1040.92 L123.05 1014.55 L114.74 1016.22 L114.74 1011.96 L123.004 1010.29 L127.68 1010.29 L127.68 1040.92 L135.319 1040.92 L135.319 1044.85 L115.411 1044.85 L115.411 1040.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M154.763 1013.37 Q151.152 1013.37 149.323 1016.94 Q147.518 1020.48 147.518 1027.61 Q147.518 1034.71 149.323 1038.28 Q151.152 1041.82 154.763 1041.82 Q158.397 1041.82 160.203 1038.28 Q162.032 1034.71 162.032 1027.61 Q162.032 1020.48 160.203 1016.94 Q158.397 1013.37 154.763 1013.37 M154.763 1009.67 Q160.573 1009.67 163.629 1014.27 Q166.707 1018.86 166.707 1027.61 Q166.707 1036.33 163.629 1040.94 Q160.573 1045.52 154.763 1045.52 Q148.953 1045.52 145.874 1040.94 Q142.819 1036.33 142.819 1027.61 Q142.819 1018.86 145.874 1014.27 Q148.953 1009.67 154.763 1009.67 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M166.707 1003.77 L190.819 1003.77 L190.819 1006.97 L166.707 1006.97 L166.707 1003.77 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M202.292 1014.25 L215.551 1014.25 L215.551 1017.44 L197.721 1017.44 L197.721 1014.25 Q199.884 1012.01 203.608 1008.25 Q207.351 1004.47 208.31 1003.37 Q210.135 1001.32 210.849 999.914 Q211.583 998.485 211.583 997.112 Q211.583 994.874 210.003 993.463 Q208.442 992.053 205.922 992.053 Q204.135 992.053 202.141 992.673 Q200.166 993.294 197.91 994.554 L197.91 990.717 Q200.204 989.796 202.198 989.325 Q204.191 988.855 205.846 988.855 Q210.21 988.855 212.805 991.037 Q215.401 993.219 215.401 996.867 Q215.401 998.598 214.743 1000.16 Q214.103 1001.7 212.392 1003.81 Q211.921 1004.35 209.401 1006.97 Q206.881 1009.56 202.292 1014.25 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M144.846 475.254 L152.484 475.254 L152.484 448.889 L144.174 450.555 L144.174 446.296 L152.438 444.629 L157.114 444.629 L157.114 475.254 L164.753 475.254 L164.753 479.189 L144.846 479.189 L144.846 475.254 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M184.197 447.708 Q180.586 447.708 178.757 451.273 Q176.952 454.814 176.952 461.944 Q176.952 469.051 178.757 472.615 Q180.586 476.157 184.197 476.157 Q187.831 476.157 189.637 472.615 Q191.466 469.051 191.466 461.944 Q191.466 454.814 189.637 451.273 Q187.831 447.708 184.197 447.708 M184.197 444.004 Q190.007 444.004 193.063 448.611 Q196.142 453.194 196.142 461.944 Q196.142 470.671 193.063 475.277 Q190.007 479.861 184.197 479.861 Q178.387 479.861 175.308 475.277 Q172.253 470.671 172.253 461.944 Q172.253 453.194 175.308 448.611 Q178.387 444.004 184.197 444.004 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M205.846 426.2 Q202.912 426.2 201.427 429.097 Q199.96 431.974 199.96 437.767 Q199.96 443.541 201.427 446.438 Q202.912 449.315 205.846 449.315 Q208.799 449.315 210.266 446.438 Q211.752 443.541 211.752 437.767 Q211.752 431.974 210.266 429.097 Q208.799 426.2 205.846 426.2 M205.846 423.191 Q210.567 423.191 213.05 426.934 Q215.551 430.658 215.551 437.767 Q215.551 444.858 213.05 448.6 Q210.567 452.324 205.846 452.324 Q201.126 452.324 198.624 448.6 Q196.142 444.858 196.142 437.767 Q196.142 430.658 198.624 426.934 Q201.126 423.191 205.846 423.191 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M18.4042 928.052 L18.4042 898.006 L23.815 898.006 L23.815 921.622 L37.8832 921.622 L37.8832 898.992 L43.2941 898.992 L43.2941 921.622 L60.5133 921.622 L60.5133 897.433 L65.9242 897.433 L65.9242 928.052 L18.4042 928.052 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M19.9638 858.379 L26.234 858.379 Q24.4834 862.039 23.624 865.286 Q22.7647 868.532 22.7647 871.556 Q22.7647 876.808 24.8017 879.672 Q26.8387 882.505 30.5945 882.505 Q33.7455 882.505 35.3688 880.627 Q36.9602 878.718 37.9469 873.434 L38.7426 869.551 Q40.1112 862.358 43.5805 858.952 Q47.018 855.515 52.8108 855.515 Q59.7176 855.515 63.2824 860.161 Q66.8472 864.777 66.8472 873.72 Q66.8472 877.094 66.0833 880.914 Q65.3194 884.701 63.8235 888.775 L57.2031 888.775 Q59.3993 884.86 60.5133 881.105 Q61.6273 877.349 61.6273 873.72 Q61.6273 868.214 59.463 865.222 Q57.2986 862.23 53.2882 862.23 Q49.7871 862.23 47.8137 864.395 Q45.8404 866.527 44.8537 871.429 L44.0898 875.344 Q42.6575 882.537 39.602 885.752 Q36.5464 888.966 31.1037 888.966 Q24.8017 888.966 21.1732 884.542 Q17.5448 880.086 17.5448 872.288 Q17.5448 868.946 18.1495 865.477 Q18.7543 862.008 19.9638 858.379 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M19.9638 817.002 L26.234 817.002 Q24.4834 820.662 23.624 823.909 Q22.7647 827.155 22.7647 830.179 Q22.7647 835.431 24.8017 838.295 Q26.8387 841.128 30.5945 841.128 Q33.7455 841.128 35.3688 839.25 Q36.9602 837.34 37.9469 832.057 L38.7426 828.174 Q40.1112 820.981 43.5805 817.575 Q47.018 814.137 52.8108 814.137 Q59.7176 814.137 63.2824 818.784 Q66.8472 823.4 66.8472 832.343 Q66.8472 835.717 66.0833 839.537 Q65.3194 843.324 63.8235 847.398 L57.2031 847.398 Q59.3993 843.483 60.5133 839.728 Q61.6273 835.972 61.6273 832.343 Q61.6273 826.837 59.463 823.845 Q57.2986 820.853 53.2882 820.853 Q49.7871 820.853 47.8137 823.018 Q45.8404 825.15 44.8537 830.052 L44.0898 833.967 Q42.6575 841.16 39.602 844.375 Q36.5464 847.589 31.1037 847.589 Q24.8017 847.589 21.1732 843.165 Q17.5448 838.709 17.5448 830.911 Q17.5448 827.569 18.1495 824.1 Q18.7543 820.63 19.9638 817.002 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M60.577 777.98 L79.4831 777.98 L79.4831 783.868 L30.2762 783.868 L30.2762 777.98 L35.6871 777.98 Q32.5042 776.134 30.9764 773.333 Q29.4168 770.501 29.4168 766.586 Q29.4168 760.093 34.5731 756.05 Q39.7293 751.976 48.132 751.976 Q56.5347 751.976 61.691 756.05 Q66.8472 760.093 66.8472 766.586 Q66.8472 770.501 65.3194 773.333 Q63.7598 776.134 60.577 777.98 M48.132 758.056 Q41.6708 758.056 38.0105 760.729 Q34.3184 763.371 34.3184 768.018 Q34.3184 772.665 38.0105 775.338 Q41.6708 777.98 48.132 777.98 Q54.5932 777.98 58.2853 775.338 Q61.9456 772.665 61.9456 768.018 Q61.9456 763.371 58.2853 760.729 Q54.5932 758.056 48.132 758.056 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M46.6361 711.777 L49.5006 711.777 L49.5006 738.704 Q55.5481 738.322 58.7309 735.075 Q61.8819 731.797 61.8819 725.972 Q61.8819 722.599 61.0544 719.448 Q60.2269 716.265 58.5718 713.145 L64.1099 713.145 Q65.4467 716.297 66.147 719.607 Q66.8472 722.917 66.8472 726.323 Q66.8472 734.853 61.8819 739.85 Q56.9167 744.815 48.4503 744.815 Q39.6974 744.815 34.5731 740.104 Q29.4168 735.362 29.4168 727.341 Q29.4168 720.148 34.0638 715.978 Q38.6789 711.777 46.6361 711.777 M44.9173 717.633 Q40.1112 717.697 37.2466 720.339 Q34.3821 722.949 34.3821 727.277 Q34.3821 732.179 37.1512 735.139 Q39.9202 738.067 44.9492 738.513 L44.9173 717.633 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M35.7507 681.508 Q35.1778 682.495 34.9232 683.672 Q34.6367 684.818 34.6367 686.219 Q34.6367 691.184 37.8832 693.857 Q41.0979 696.499 47.1453 696.499 L65.9242 696.499 L65.9242 702.387 L30.2762 702.387 L30.2762 696.499 L35.8144 696.499 Q32.5679 694.653 31.0083 691.693 Q29.4168 688.733 29.4168 684.5 Q29.4168 683.895 29.5123 683.163 Q29.576 682.431 29.7351 681.54 L35.7507 681.508 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M18.4042 654.39 L18.4042 624.344 L23.815 624.344 L23.815 647.961 L37.8832 647.961 L37.8832 625.331 L43.2941 625.331 L43.2941 647.961 L60.5133 647.961 L60.5133 623.771 L65.9242 623.771 L65.9242 654.39 L18.4042 654.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M60.577 607.793 L79.4831 607.793 L79.4831 613.681 L30.2762 613.681 L30.2762 607.793 L35.6871 607.793 Q32.5042 605.947 30.9764 603.146 Q29.4168 600.313 29.4168 596.398 Q29.4168 589.905 34.5731 585.863 Q39.7293 581.789 48.132 581.789 Q56.5347 581.789 61.691 585.863 Q66.8472 589.905 66.8472 596.398 Q66.8472 600.313 65.3194 603.146 Q63.7598 605.947 60.577 607.793 M48.132 587.868 Q41.6708 587.868 38.0105 590.542 Q34.3184 593.184 34.3184 597.831 Q34.3184 602.478 38.0105 605.151 Q41.6708 607.793 48.132 607.793 Q54.5932 607.793 58.2853 605.151 Q61.9456 602.478 61.9456 597.831 Q61.9456 593.184 58.2853 590.542 Q54.5932 587.868 48.132 587.868 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M34.3821 558.268 Q34.3821 562.978 38.0742 565.716 Q41.7345 568.453 48.132 568.453 Q54.5295 568.453 58.2217 565.748 Q61.8819 563.01 61.8819 558.268 Q61.8819 553.589 58.1898 550.852 Q54.4977 548.115 48.132 548.115 Q41.7981 548.115 38.106 550.852 Q34.3821 553.589 34.3821 558.268 M29.4168 558.268 Q29.4168 550.629 34.3821 546.268 Q39.3473 541.908 48.132 541.908 Q56.8849 541.908 61.8819 546.268 Q66.8472 550.629 66.8472 558.268 Q66.8472 565.939 61.8819 570.299 Q56.8849 574.628 48.132 574.628 Q39.3473 574.628 34.3821 570.299 Q29.4168 565.939 29.4168 558.268 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M31.6448 506.546 L37.1193 506.546 Q35.7507 509.029 35.0823 511.544 Q34.3821 514.026 34.3821 516.572 Q34.3821 522.27 38.0105 525.421 Q41.6072 528.572 48.132 528.572 Q54.6569 528.572 58.2853 525.421 Q61.8819 522.27 61.8819 516.572 Q61.8819 514.026 61.2135 511.544 Q60.5133 509.029 59.1447 506.546 L64.5555 506.546 Q65.7014 508.997 66.2743 511.639 Q66.8472 514.249 66.8472 517.209 Q66.8472 525.262 61.7864 530.004 Q56.7257 534.747 48.132 534.747 Q39.411 534.747 34.4139 529.972 Q29.4168 525.166 29.4168 516.827 Q29.4168 514.122 29.9897 511.544 Q30.5308 508.965 31.6448 506.546 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M44.4081 466.729 L65.9242 466.729 L65.9242 472.585 L44.599 472.585 Q39.5383 472.585 37.0238 474.559 Q34.5094 476.532 34.5094 480.479 Q34.5094 485.221 37.5331 487.959 Q40.5568 490.696 45.7767 490.696 L65.9242 490.696 L65.9242 496.584 L16.399 496.584 L16.399 490.696 L35.8144 490.696 Q32.5997 488.595 31.0083 485.762 Q29.4168 482.898 29.4168 479.174 Q29.4168 473.031 33.2363 469.88 Q37.0238 466.729 44.4081 466.729 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip872)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,701.205 306.903,616.506 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,1009.52 1253.43,924.797 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1310.74 2199.96,1225.4 "></polyline>
<line clip-path="url(#clip872)" x1="326.903" y1="701.205" x2="286.903" y2="701.205" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="326.903" y1="616.506" x2="286.903" y2="616.506" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="1009.52" x2="1233.43" y2="1009.52" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="924.797" x2="1233.43" y2="924.797" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="1310.74" x2="2179.96" y2="1310.74" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="1225.4" x2="2179.96" y2="1225.4" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip872)" cx="306.903" cy="651.695" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="1253.43" cy="959.996" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="2199.96" cy="1260.8" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip872)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,652.944 326.025,659.096 345.147,665.249 364.269,671.402 383.39,677.554 402.512,683.707 421.634,689.86 440.756,696.012 459.878,702.165 479,708.317 498.121,714.47 517.243,720.623 536.365,726.775 555.487,732.928 574.609,739.08 593.731,745.233 612.852,751.386 631.974,757.538 651.096,763.691 670.218,769.844 689.34,775.996 708.461,782.149 727.583,788.301 746.705,794.454 765.827,800.607 784.949,806.759 804.071,812.912 823.192,819.065 842.314,825.217 861.436,831.37 880.558,837.522 899.68,843.675 918.802,849.828 937.923,855.98 957.045,862.133 976.167,868.285 995.289,874.438 1014.41,880.591 1033.53,886.743 1052.65,892.896 1071.78,899.049 1090.9,905.201 1110.02,911.354 1129.14,917.506 1148.26,923.659 1167.39,929.812 1186.51,935.964 1205.63,942.117 1224.75,948.27 1243.87,954.422 1262.99,960.575 1282.12,966.727 1301.24,972.88 1320.36,979.033 1339.48,985.185 1358.6,991.338 1377.73,997.49 1396.85,1003.64 1415.97,1009.8 1435.09,1015.95 1454.21,1022.1 1473.33,1028.25 1492.46,1034.41 1511.58,1040.56 1530.7,1046.71 1549.82,1052.86 1568.94,1059.02 1588.07,1065.17 1607.19,1071.32 1626.31,1077.47 1645.43,1083.63 1664.55,1089.78 1683.67,1095.93 1702.8,1102.09 1721.92,1108.24 1741.04,1114.39 1760.16,1120.54 1779.28,1126.7 1798.41,1132.85 1817.53,1139 1836.65,1145.15 1855.77,1151.31 1874.89,1157.46 1894.01,1163.61 1913.14,1169.76 1932.26,1175.92 1951.38,1182.07 1970.5,1188.22 1989.62,1194.37 2008.75,1200.53 2027.87,1206.68 2046.99,1212.83 2066.11,1218.98 2085.23,1225.14 2104.35,1231.29 2123.48,1237.44 2142.6,1243.6 2161.72,1249.75 2180.84,1255.9 2199.96,1262.05 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,632.994 306.903,548.097 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,864.588 1253.43,779.67 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1015.46 2199.96,929.77 "></polyline>
<line clip-path="url(#clip872)" x1="326.903" y1="632.994" x2="286.903" y2="632.994" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="326.903" y1="548.097" x2="286.903" y2="548.097" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="864.588" x2="1233.43" y2="864.588" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="779.67" x2="1233.43" y2="779.67" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="1015.46" x2="2179.96" y2="1015.46" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="929.77" x2="2179.96" y2="929.77" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip872)" cx="306.903" cy="583.353" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="1253.43" cy="814.932" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="2199.96" cy="965.29" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip872)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,596.89 326.025,600.748 345.147,604.606 364.269,608.463 383.39,612.321 402.512,616.179 421.634,620.037 440.756,623.895 459.878,627.753 479,631.611 498.121,635.469 517.243,639.327 536.365,643.185 555.487,647.043 574.609,650.901 593.731,654.759 612.852,658.617 631.974,662.475 651.096,666.333 670.218,670.191 689.34,674.049 708.461,677.907 727.583,681.765 746.705,685.623 765.827,689.481 784.949,693.339 804.071,697.196 823.192,701.054 842.314,704.912 861.436,708.77 880.558,712.628 899.68,716.486 918.802,720.344 937.923,724.202 957.045,728.06 976.167,731.918 995.289,735.776 1014.41,739.634 1033.53,743.492 1052.65,747.35 1071.78,751.208 1090.9,755.066 1110.02,758.924 1129.14,762.782 1148.26,766.64 1167.39,770.498 1186.51,774.356 1205.63,778.214 1224.75,782.072 1243.87,785.929 1262.99,789.787 1282.12,793.645 1301.24,797.503 1320.36,801.361 1339.48,805.219 1358.6,809.077 1377.73,812.935 1396.85,816.793 1415.97,820.651 1435.09,824.509 1454.21,828.367 1473.33,832.225 1492.46,836.083 1511.58,839.941 1530.7,843.799 1549.82,847.657 1568.94,851.515 1588.07,855.373 1607.19,859.231 1626.31,863.089 1645.43,866.947 1664.55,870.804 1683.67,874.662 1702.8,878.52 1721.92,882.378 1741.04,886.236 1760.16,890.094 1779.28,893.952 1798.41,897.81 1817.53,901.668 1836.65,905.526 1855.77,909.384 1874.89,913.242 1894.01,917.1 1913.14,920.958 1932.26,924.816 1951.38,928.674 1970.5,932.532 1989.62,936.39 2008.75,940.248 2027.87,944.106 2046.99,947.964 2066.11,951.822 2085.23,955.68 2104.35,959.537 2123.48,963.395 2142.6,967.253 2161.72,971.111 2180.84,974.969 2199.96,978.827 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,352.954 306.903,267.518 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,298.83 1253.43,213.726 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,169.07 2199.96,84.0448 "></polyline>
<line clip-path="url(#clip872)" x1="326.903" y1="352.954" x2="286.903" y2="352.954" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="326.903" y1="267.518" x2="286.903" y2="267.518" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="298.83" x2="1233.43" y2="298.83" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="213.726" x2="1233.43" y2="213.726" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="169.07" x2="2179.96" y2="169.07" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="84.0448" x2="2179.96" y2="84.0448" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip872)" cx="306.903" cy="302.953" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="1253.43" cy="249.051" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="2199.96" cy="119.343" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip872)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,315.587 326.025,313.732 345.147,311.878 364.269,310.023 383.39,308.169 402.512,306.314 421.634,304.459 440.756,302.605 459.878,300.75 479,298.895 498.121,297.041 517.243,295.186 536.365,293.331 555.487,291.477 574.609,289.622 593.731,287.767 612.852,285.913 631.974,284.058 651.096,282.203 670.218,280.349 689.34,278.494 708.461,276.64 727.583,274.785 746.705,272.93 765.827,271.076 784.949,269.221 804.071,267.366 823.192,265.512 842.314,263.657 861.436,261.802 880.558,259.948 899.68,258.093 918.802,256.238 937.923,254.384 957.045,252.529 976.167,250.674 995.289,248.82 1014.41,246.965 1033.53,245.111 1052.65,243.256 1071.78,241.401 1090.9,239.547 1110.02,237.692 1129.14,235.837 1148.26,233.983 1167.39,232.128 1186.51,230.273 1205.63,228.419 1224.75,226.564 1243.87,224.709 1262.99,222.855 1282.12,221 1301.24,219.145 1320.36,217.291 1339.48,215.436 1358.6,213.582 1377.73,211.727 1396.85,209.872 1415.97,208.018 1435.09,206.163 1454.21,204.308 1473.33,202.454 1492.46,200.599 1511.58,198.744 1530.7,196.89 1549.82,195.035 1568.94,193.18 1588.07,191.326 1607.19,189.471 1626.31,187.616 1645.43,185.762 1664.55,183.907 1683.67,182.053 1702.8,180.198 1721.92,178.343 1741.04,176.489 1760.16,174.634 1779.28,172.779 1798.41,170.925 1817.53,169.07 1836.65,167.215 1855.77,165.361 1874.89,163.506 1894.01,161.651 1913.14,159.797 1932.26,157.942 1951.38,156.087 1970.5,154.233 1989.62,152.378 2008.75,150.524 2027.87,148.669 2046.99,146.814 2066.11,144.96 2085.23,143.105 2104.35,141.25 2123.48,139.396 2142.6,137.541 2161.72,135.686 2180.84,133.832 2199.96,131.977 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,418.738 306.903,334.03 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,448.112 1253.43,363.417 "></polyline>
<polyline clip-path="url(#clip872)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,474.059 2199.96,389.378 "></polyline>
<line clip-path="url(#clip872)" x1="326.903" y1="418.738" x2="286.903" y2="418.738" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="326.903" y1="334.03" x2="286.903" y2="334.03" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="448.112" x2="1233.43" y2="448.112" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="1273.43" y1="363.417" x2="1233.43" y2="363.417" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="474.059" x2="2179.96" y2="474.059" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip872)" x1="2219.96" y1="389.378" x2="2179.96" y2="389.378" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip872)" cx="306.903" cy="369.222" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="1253.43" cy="398.605" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip872)" cx="2199.96" cy="424.561" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip872)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,369.793 326.025,370.352 345.147,370.911 364.269,371.47 383.39,372.029 402.512,372.588 421.634,373.147 440.756,373.706 459.878,374.265 479,374.824 498.121,375.383 517.243,375.942 536.365,376.501 555.487,377.06 574.609,377.619 593.731,378.178 612.852,378.737 631.974,379.296 651.096,379.855 670.218,380.414 689.34,380.973 708.461,381.532 727.583,382.091 746.705,382.65 765.827,383.209 784.949,383.768 804.071,384.327 823.192,384.886 842.314,385.445 861.436,386.004 880.558,386.563 899.68,387.122 918.802,387.681 937.923,388.24 957.045,388.798 976.167,389.357 995.289,389.916 1014.41,390.475 1033.53,391.034 1052.65,391.593 1071.78,392.152 1090.9,392.711 1110.02,393.27 1129.14,393.829 1148.26,394.388 1167.39,394.947 1186.51,395.506 1205.63,396.065 1224.75,396.624 1243.87,397.183 1262.99,397.742 1282.12,398.301 1301.24,398.86 1320.36,399.419 1339.48,399.978 1358.6,400.537 1377.73,401.096 1396.85,401.655 1415.97,402.214 1435.09,402.773 1454.21,403.332 1473.33,403.891 1492.46,404.45 1511.58,405.009 1530.7,405.568 1549.82,406.127 1568.94,406.686 1588.07,407.245 1607.19,407.804 1626.31,408.363 1645.43,408.922 1664.55,409.481 1683.67,410.04 1702.8,410.599 1721.92,411.158 1741.04,411.717 1760.16,412.276 1779.28,412.835 1798.41,413.394 1817.53,413.953 1836.65,414.512 1855.77,415.071 1874.89,415.63 1894.01,416.189 1913.14,416.748 1932.26,417.307 1951.38,417.866 1970.5,418.425 1989.62,418.984 2008.75,419.542 2027.87,420.101 2046.99,420.66 2066.11,421.219 2085.23,421.778 2104.35,422.337 2123.48,422.896 2142.6,423.455 2161.72,424.014 2180.84,424.573 2199.96,425.132 "></polyline>
<path clip-path="url(#clip870)" d="M316.999 1304.19 L944.05 1304.19 L944.05 1044.99 L316.999 1044.99  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<polyline clip-path="url(#clip870)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="316.999,1304.19 944.05,1304.19 944.05,1044.99 316.999,1044.99 316.999,1304.19 "></polyline>
<polyline clip-path="url(#clip870)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1096.83 473.072,1096.83 "></polyline>
<path clip-path="url(#clip870)" d="M495.9 1079.55 L523.053 1079.55 L523.053 1083.12 L501.201 1110.18 L523.585 1110.18 L523.585 1114.11 L495.368 1114.11 L495.368 1110.55 L517.22 1083.49 L495.9 1083.49 L495.9 1079.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M528.377 1079.55 L555.53 1079.55 L555.53 1083.12 L533.678 1110.18 L556.062 1110.18 L556.062 1114.11 L527.844 1114.11 L527.844 1110.55 L549.696 1083.49 L528.377 1083.49 L528.377 1079.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M587.96 1078.14 Q584.858 1083.47 583.353 1088.67 Q581.849 1093.88 581.849 1099.23 Q581.849 1104.58 583.353 1109.83 Q584.881 1115.06 587.96 1120.36 L584.256 1120.36 Q580.784 1114.92 579.048 1109.67 Q577.335 1104.41 577.335 1099.23 Q577.335 1094.07 579.048 1088.84 Q580.761 1083.6 584.256 1078.14 L587.96 1078.14 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M619.974 1109.18 L619.974 1099.9 L612.335 1099.9 L612.335 1096.06 L624.603 1096.06 L624.603 1110.9 Q621.895 1112.82 618.631 1113.81 Q615.367 1114.78 611.663 1114.78 Q603.562 1114.78 598.978 1110.06 Q594.418 1105.32 594.418 1096.87 Q594.418 1088.4 598.978 1083.67 Q603.562 1078.93 611.663 1078.93 Q615.043 1078.93 618.075 1079.76 Q621.131 1080.6 623.7 1082.22 L623.7 1087.19 Q621.108 1084.99 618.191 1083.88 Q615.275 1082.77 612.057 1082.77 Q605.714 1082.77 602.52 1086.31 Q599.349 1089.85 599.349 1096.87 Q599.349 1103.86 602.52 1107.4 Q605.714 1110.94 612.057 1110.94 Q614.534 1110.94 616.478 1110.53 Q618.423 1110.09 619.974 1109.18 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M632.96 1078.1 L637.219 1078.1 L637.219 1114.11 L632.96 1114.11 L632.96 1078.1 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M656.177 1091.17 Q652.751 1091.17 650.761 1093.86 Q648.77 1096.52 648.77 1101.17 Q648.77 1105.83 650.737 1108.51 Q652.728 1111.17 656.177 1111.17 Q659.58 1111.17 661.571 1108.49 Q663.561 1105.8 663.561 1101.17 Q663.561 1096.57 661.571 1093.88 Q659.58 1091.17 656.177 1091.17 M656.177 1087.56 Q661.733 1087.56 664.904 1091.17 Q668.075 1094.78 668.075 1101.17 Q668.075 1107.54 664.904 1111.17 Q661.733 1114.78 656.177 1114.78 Q650.598 1114.78 647.427 1111.17 Q644.279 1107.54 644.279 1101.17 Q644.279 1094.78 647.427 1091.17 Q650.598 1087.56 656.177 1087.56 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M693.746 1101.17 Q693.746 1096.47 691.802 1093.81 Q689.881 1091.13 686.501 1091.13 Q683.121 1091.13 681.177 1093.81 Q679.256 1096.47 679.256 1101.17 Q679.256 1105.87 681.177 1108.56 Q683.121 1111.22 686.501 1111.22 Q689.881 1111.22 691.802 1108.56 Q693.746 1105.87 693.746 1101.17 M679.256 1092.12 Q680.598 1089.81 682.635 1088.7 Q684.696 1087.56 687.543 1087.56 Q692.265 1087.56 695.205 1091.31 Q698.168 1095.06 698.168 1101.17 Q698.168 1107.28 695.205 1111.03 Q692.265 1114.78 687.543 1114.78 Q684.696 1114.78 682.635 1113.67 Q680.598 1112.54 679.256 1110.22 L679.256 1114.11 L674.973 1114.11 L674.973 1078.1 L679.256 1078.1 L679.256 1092.12 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M717.01 1101.08 Q711.848 1101.08 709.857 1102.26 Q707.867 1103.44 707.867 1106.29 Q707.867 1108.56 709.348 1109.9 Q710.853 1111.22 713.422 1111.22 Q716.964 1111.22 719.093 1108.72 Q721.246 1106.2 721.246 1102.03 L721.246 1101.08 L717.01 1101.08 M725.505 1099.32 L725.505 1114.11 L721.246 1114.11 L721.246 1110.18 Q719.788 1112.54 717.612 1113.67 Q715.436 1114.78 712.288 1114.78 Q708.306 1114.78 705.945 1112.56 Q703.607 1110.32 703.607 1106.57 Q703.607 1102.19 706.524 1099.97 Q709.464 1097.75 715.274 1097.75 L721.246 1097.75 L721.246 1097.33 Q721.246 1094.39 719.302 1092.79 Q717.381 1091.17 713.885 1091.17 Q711.663 1091.17 709.556 1091.71 Q707.45 1092.24 705.506 1093.3 L705.506 1089.37 Q707.844 1088.47 710.043 1088.03 Q712.242 1087.56 714.325 1087.56 Q719.95 1087.56 722.728 1090.48 Q725.505 1093.4 725.505 1099.32 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M734.279 1078.1 L738.538 1078.1 L738.538 1114.11 L734.279 1114.11 L734.279 1078.1 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M781.13 1101.17 Q781.13 1096.47 779.186 1093.81 Q777.264 1091.13 773.885 1091.13 Q770.505 1091.13 768.561 1093.81 Q766.64 1096.47 766.64 1101.17 Q766.64 1105.87 768.561 1108.56 Q770.505 1111.22 773.885 1111.22 Q777.264 1111.22 779.186 1108.56 Q781.13 1105.87 781.13 1101.17 M766.64 1092.12 Q767.982 1089.81 770.019 1088.7 Q772.079 1087.56 774.927 1087.56 Q779.649 1087.56 782.589 1091.31 Q785.551 1095.06 785.551 1101.17 Q785.551 1107.28 782.589 1111.03 Q779.649 1114.78 774.927 1114.78 Q772.079 1114.78 770.019 1113.67 Q767.982 1112.54 766.64 1110.22 L766.64 1114.11 L762.357 1114.11 L762.357 1078.1 L766.64 1078.1 L766.64 1092.12 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M802.658 1091.17 Q799.232 1091.17 797.241 1093.86 Q795.25 1096.52 795.25 1101.17 Q795.25 1105.83 797.218 1108.51 Q799.209 1111.17 802.658 1111.17 Q806.061 1111.17 808.051 1108.49 Q810.042 1105.8 810.042 1101.17 Q810.042 1096.57 808.051 1093.88 Q806.061 1091.17 802.658 1091.17 M802.658 1087.56 Q808.213 1087.56 811.385 1091.17 Q814.556 1094.78 814.556 1101.17 Q814.556 1107.54 811.385 1111.17 Q808.213 1114.78 802.658 1114.78 Q797.079 1114.78 793.908 1111.17 Q790.76 1107.54 790.76 1101.17 Q790.76 1094.78 793.908 1091.17 Q797.079 1087.56 802.658 1087.56 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M821.176 1103.88 L821.176 1088.19 L825.435 1088.19 L825.435 1103.72 Q825.435 1107.4 826.871 1109.25 Q828.306 1111.08 831.176 1111.08 Q834.625 1111.08 836.616 1108.88 Q838.63 1106.68 838.63 1102.89 L838.63 1088.19 L842.889 1088.19 L842.889 1114.11 L838.63 1114.11 L838.63 1110.13 Q837.079 1112.49 835.019 1113.65 Q832.982 1114.78 830.273 1114.78 Q825.806 1114.78 823.491 1112.01 Q821.176 1109.23 821.176 1103.88 M831.894 1087.56 L831.894 1087.56 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M873.213 1098.47 L873.213 1114.11 L868.954 1114.11 L868.954 1098.6 Q868.954 1094.92 867.519 1093.1 Q866.083 1091.27 863.213 1091.27 Q859.764 1091.27 857.773 1093.47 Q855.783 1095.66 855.783 1099.46 L855.783 1114.11 L851.5 1114.11 L851.5 1088.19 L855.783 1088.19 L855.783 1092.22 Q857.31 1089.88 859.37 1088.72 Q861.454 1087.56 864.162 1087.56 Q868.63 1087.56 870.921 1090.34 Q873.213 1093.1 873.213 1098.47 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M898.768 1092.12 L898.768 1078.1 L903.028 1078.1 L903.028 1114.11 L898.768 1114.11 L898.768 1110.22 Q897.426 1112.54 895.366 1113.67 Q893.329 1114.78 890.458 1114.78 Q885.759 1114.78 882.796 1111.03 Q879.856 1107.28 879.856 1101.17 Q879.856 1095.06 882.796 1091.31 Q885.759 1087.56 890.458 1087.56 Q893.329 1087.56 895.366 1088.7 Q897.426 1089.81 898.768 1092.12 M884.255 1101.17 Q884.255 1105.87 886.176 1108.56 Q888.12 1111.22 891.5 1111.22 Q894.88 1111.22 896.824 1108.56 Q898.768 1105.87 898.768 1101.17 Q898.768 1096.47 896.824 1093.81 Q894.88 1091.13 891.5 1091.13 Q888.12 1091.13 886.176 1093.81 Q884.255 1096.47 884.255 1101.17 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M911.129 1078.14 L914.833 1078.14 Q918.305 1083.6 920.018 1088.84 Q921.754 1094.07 921.754 1099.23 Q921.754 1104.41 920.018 1109.67 Q918.305 1114.92 914.833 1120.36 L911.129 1120.36 Q914.208 1115.06 915.713 1109.83 Q917.241 1104.58 917.241 1099.23 Q917.241 1093.88 915.713 1088.67 Q914.208 1083.47 911.129 1078.14 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip870)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1148.67 473.072,1148.67 "></polyline>
<path clip-path="url(#clip870)" d="M495.9 1131.39 L523.053 1131.39 L523.053 1134.96 L501.201 1162.02 L523.585 1162.02 L523.585 1165.95 L495.368 1165.95 L495.368 1162.39 L517.22 1135.33 L495.9 1135.33 L495.9 1131.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M528.377 1131.39 L555.53 1131.39 L555.53 1134.96 L533.678 1162.02 L556.062 1162.02 L556.062 1165.95 L527.844 1165.95 L527.844 1162.39 L549.696 1135.33 L528.377 1135.33 L528.377 1131.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M587.96 1129.98 Q584.858 1135.31 583.353 1140.51 Q581.849 1145.72 581.849 1151.07 Q581.849 1156.42 583.353 1161.67 Q584.881 1166.9 587.96 1172.2 L584.256 1172.2 Q580.784 1166.76 579.048 1161.51 Q577.335 1156.25 577.335 1151.07 Q577.335 1145.91 579.048 1140.68 Q580.761 1135.44 584.256 1129.98 L587.96 1129.98 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M607.96 1136 L601.617 1153.2 L614.326 1153.2 L607.96 1136 M605.321 1131.39 L610.622 1131.39 L623.793 1165.95 L618.932 1165.95 L615.784 1157.09 L600.205 1157.09 L597.057 1165.95 L592.127 1165.95 L605.321 1131.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M640.089 1129.94 L640.089 1133.48 L636.015 1133.48 Q633.724 1133.48 632.821 1134.4 Q631.941 1135.33 631.941 1137.74 L631.941 1140.03 L638.955 1140.03 L638.955 1143.34 L631.941 1143.34 L631.941 1165.95 L627.659 1165.95 L627.659 1143.34 L623.585 1143.34 L623.585 1140.03 L627.659 1140.03 L627.659 1138.22 Q627.659 1133.89 629.673 1131.93 Q631.687 1129.94 636.062 1129.94 L640.089 1129.94 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M656.779 1129.94 L656.779 1133.48 L652.705 1133.48 Q650.413 1133.48 649.511 1134.4 Q648.631 1135.33 648.631 1137.74 L648.631 1140.03 L655.645 1140.03 L655.645 1143.34 L648.631 1143.34 L648.631 1165.95 L644.349 1165.95 L644.349 1143.34 L640.274 1143.34 L640.274 1140.03 L644.349 1140.03 L644.349 1138.22 Q644.349 1133.89 646.362 1131.93 Q648.376 1129.94 652.751 1129.94 L656.779 1129.94 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M660.344 1140.03 L664.603 1140.03 L664.603 1165.95 L660.344 1165.95 L660.344 1140.03 M660.344 1129.94 L664.603 1129.94 L664.603 1135.33 L660.344 1135.33 L660.344 1129.94 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M695.066 1150.31 L695.066 1165.95 L690.807 1165.95 L690.807 1150.44 Q690.807 1146.76 689.371 1144.94 Q687.936 1143.11 685.066 1143.11 Q681.617 1143.11 679.626 1145.31 Q677.635 1147.5 677.635 1151.3 L677.635 1165.95 L673.353 1165.95 L673.353 1140.03 L677.635 1140.03 L677.635 1144.06 Q679.163 1141.72 681.223 1140.56 Q683.307 1139.4 686.015 1139.4 Q690.483 1139.4 692.774 1142.18 Q695.066 1144.94 695.066 1150.31 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M725.737 1151.93 L725.737 1154.01 L706.154 1154.01 Q706.432 1158.41 708.793 1160.72 Q711.177 1163.01 715.413 1163.01 Q717.867 1163.01 720.158 1162.41 Q722.473 1161.81 724.742 1160.61 L724.742 1164.63 Q722.45 1165.61 720.043 1166.12 Q717.635 1166.62 715.158 1166.62 Q708.955 1166.62 705.32 1163.01 Q701.709 1159.4 701.709 1153.25 Q701.709 1146.88 705.135 1143.15 Q708.584 1139.4 714.418 1139.4 Q719.649 1139.4 722.681 1142.78 Q725.737 1146.14 725.737 1151.93 M721.478 1150.68 Q721.431 1147.18 719.51 1145.1 Q717.612 1143.01 714.464 1143.01 Q710.899 1143.01 708.746 1145.03 Q706.617 1147.04 706.293 1150.7 L721.478 1150.68 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M766.408 1153.01 Q766.408 1148.31 764.464 1145.65 Q762.542 1142.97 759.163 1142.97 Q755.783 1142.97 753.839 1145.65 Q751.917 1148.31 751.917 1153.01 Q751.917 1157.71 753.839 1160.4 Q755.783 1163.06 759.163 1163.06 Q762.542 1163.06 764.464 1160.4 Q766.408 1157.71 766.408 1153.01 M751.917 1143.96 Q753.26 1141.65 755.297 1140.54 Q757.357 1139.4 760.204 1139.4 Q764.927 1139.4 767.866 1143.15 Q770.829 1146.9 770.829 1153.01 Q770.829 1159.12 767.866 1162.87 Q764.927 1166.62 760.204 1166.62 Q757.357 1166.62 755.297 1165.51 Q753.26 1164.38 751.917 1162.06 L751.917 1165.95 L747.635 1165.95 L747.635 1129.94 L751.917 1129.94 L751.917 1143.96 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M787.936 1143.01 Q784.51 1143.01 782.519 1145.7 Q780.528 1148.36 780.528 1153.01 Q780.528 1157.67 782.496 1160.35 Q784.487 1163.01 787.936 1163.01 Q791.338 1163.01 793.329 1160.33 Q795.32 1157.64 795.32 1153.01 Q795.32 1148.41 793.329 1145.72 Q791.338 1143.01 787.936 1143.01 M787.936 1139.4 Q793.491 1139.4 796.663 1143.01 Q799.834 1146.62 799.834 1153.01 Q799.834 1159.38 796.663 1163.01 Q793.491 1166.62 787.936 1166.62 Q782.357 1166.62 779.186 1163.01 Q776.038 1159.38 776.038 1153.01 Q776.038 1146.62 779.186 1143.01 Q782.357 1139.4 787.936 1139.4 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M806.454 1155.72 L806.454 1140.03 L810.713 1140.03 L810.713 1155.56 Q810.713 1159.24 812.149 1161.09 Q813.584 1162.92 816.454 1162.92 Q819.903 1162.92 821.894 1160.72 Q823.908 1158.52 823.908 1154.73 L823.908 1140.03 L828.167 1140.03 L828.167 1165.95 L823.908 1165.95 L823.908 1161.97 Q822.357 1164.33 820.297 1165.49 Q818.26 1166.62 815.551 1166.62 Q811.084 1166.62 808.769 1163.85 Q806.454 1161.07 806.454 1155.72 M817.172 1139.4 L817.172 1139.4 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M858.491 1150.31 L858.491 1165.95 L854.232 1165.95 L854.232 1150.44 Q854.232 1146.76 852.796 1144.94 Q851.361 1143.11 848.491 1143.11 Q845.042 1143.11 843.051 1145.31 Q841.06 1147.5 841.06 1151.3 L841.06 1165.95 L836.778 1165.95 L836.778 1140.03 L841.06 1140.03 L841.06 1144.06 Q842.588 1141.72 844.648 1140.56 Q846.732 1139.4 849.44 1139.4 Q853.908 1139.4 856.199 1142.18 Q858.491 1144.94 858.491 1150.31 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M884.046 1143.96 L884.046 1129.94 L888.306 1129.94 L888.306 1165.95 L884.046 1165.95 L884.046 1162.06 Q882.704 1164.38 880.644 1165.51 Q878.607 1166.62 875.736 1166.62 Q871.037 1166.62 868.074 1162.87 Q865.134 1159.12 865.134 1153.01 Q865.134 1146.9 868.074 1143.15 Q871.037 1139.4 875.736 1139.4 Q878.607 1139.4 880.644 1140.54 Q882.704 1141.65 884.046 1143.96 M869.532 1153.01 Q869.532 1157.71 871.454 1160.4 Q873.398 1163.06 876.778 1163.06 Q880.157 1163.06 882.102 1160.4 Q884.046 1157.71 884.046 1153.01 Q884.046 1148.31 882.102 1145.65 Q880.157 1142.97 876.778 1142.97 Q873.398 1142.97 871.454 1145.65 Q869.532 1148.31 869.532 1153.01 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M896.407 1129.98 L900.111 1129.98 Q903.583 1135.44 905.296 1140.68 Q907.032 1145.91 907.032 1151.07 Q907.032 1156.25 905.296 1161.51 Q903.583 1166.76 900.111 1172.2 L896.407 1172.2 Q899.486 1166.9 900.991 1161.67 Q902.518 1156.42 902.518 1151.07 Q902.518 1145.72 900.991 1140.51 Q899.486 1135.31 896.407 1129.98 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip870)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1200.51 473.072,1200.51 "></polyline>
<path clip-path="url(#clip870)" d="M495.9 1183.23 L523.053 1183.23 L523.053 1186.8 L501.201 1213.86 L523.585 1213.86 L523.585 1217.79 L495.368 1217.79 L495.368 1214.23 L517.22 1187.17 L495.9 1187.17 L495.9 1183.23 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M528.377 1183.23 L555.53 1183.23 L555.53 1186.8 L533.678 1213.86 L556.062 1213.86 L556.062 1217.79 L527.844 1217.79 L527.844 1214.23 L549.696 1187.17 L528.377 1187.17 L528.377 1183.23 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M559.673 1202.91 L572.15 1202.91 L572.15 1206.71 L559.673 1206.71 L559.673 1202.91 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M604.997 1185.9 L604.997 1190.83 Q602.636 1188.63 599.951 1187.54 Q597.289 1186.45 594.279 1186.45 Q588.353 1186.45 585.205 1190.09 Q582.057 1193.7 582.057 1200.55 Q582.057 1207.38 585.205 1211.01 Q588.353 1214.62 594.279 1214.62 Q597.289 1214.62 599.951 1213.53 Q602.636 1212.45 604.997 1210.25 L604.997 1215.13 Q602.543 1216.8 599.789 1217.63 Q597.057 1218.46 594.002 1218.46 Q586.154 1218.46 581.641 1213.67 Q577.127 1208.86 577.127 1200.55 Q577.127 1192.21 581.641 1187.42 Q586.154 1182.61 594.002 1182.61 Q597.103 1182.61 599.835 1183.44 Q602.589 1184.25 604.997 1185.9 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M621.131 1217.79 L607.937 1183.23 L612.821 1183.23 L623.77 1212.33 L634.742 1183.23 L639.603 1183.23 L626.432 1217.79 L621.131 1217.79 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip870)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1252.35 473.072,1252.35 "></polyline>
<path clip-path="url(#clip870)" d="M495.9 1235.07 L523.053 1235.07 L523.053 1238.64 L501.201 1265.7 L523.585 1265.7 L523.585 1269.63 L495.368 1269.63 L495.368 1266.07 L517.22 1239.01 L495.9 1239.01 L495.9 1235.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M528.377 1235.07 L555.53 1235.07 L555.53 1238.64 L533.678 1265.7 L556.062 1265.7 L556.062 1269.63 L527.844 1269.63 L527.844 1266.07 L549.696 1239.01 L528.377 1239.01 L528.377 1235.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M559.673 1254.75 L572.15 1254.75 L572.15 1258.55 L559.673 1258.55 L559.673 1254.75 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M599.835 1236.21 L599.835 1240.77 Q597.173 1239.49 594.812 1238.87 Q592.451 1238.24 590.252 1238.24 Q586.432 1238.24 584.349 1239.73 Q582.289 1241.21 582.289 1243.94 Q582.289 1246.23 583.654 1247.41 Q585.043 1248.57 588.886 1249.29 L591.71 1249.87 Q596.941 1250.86 599.418 1253.38 Q601.918 1255.88 601.918 1260.1 Q601.918 1265.12 598.539 1267.71 Q595.182 1270.3 588.678 1270.3 Q586.224 1270.3 583.446 1269.75 Q580.691 1269.19 577.728 1268.11 L577.728 1263.29 Q580.576 1264.89 583.307 1265.7 Q586.039 1266.51 588.678 1266.51 Q592.682 1266.51 594.858 1264.93 Q597.034 1263.36 597.034 1260.44 Q597.034 1257.9 595.46 1256.46 Q593.909 1255.03 590.344 1254.31 L587.497 1253.75 Q582.266 1252.71 579.928 1250.49 Q577.59 1248.27 577.59 1244.31 Q577.59 1239.73 580.807 1237.09 Q584.048 1234.45 589.719 1234.45 Q592.15 1234.45 594.673 1234.89 Q597.196 1235.33 599.835 1236.21 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip870)" d="M629.927 1236.21 L629.927 1240.77 Q627.265 1239.49 624.904 1238.87 Q622.543 1238.24 620.344 1238.24 Q616.525 1238.24 614.441 1239.73 Q612.381 1241.21 612.381 1243.94 Q612.381 1246.23 613.747 1247.41 Q615.136 1248.57 618.978 1249.29 L621.802 1249.87 Q627.034 1250.86 629.511 1253.38 Q632.011 1255.88 632.011 1260.1 Q632.011 1265.12 628.631 1267.71 Q625.275 1270.3 618.77 1270.3 Q616.316 1270.3 613.538 1269.75 Q610.784 1269.19 607.821 1268.11 L607.821 1263.29 Q610.668 1264.89 613.4 1265.7 Q616.131 1266.51 618.77 1266.51 Q622.775 1266.51 624.95 1264.93 Q627.126 1263.36 627.126 1260.44 Q627.126 1257.9 625.552 1256.46 Q624.001 1255.03 620.437 1254.31 L617.589 1253.75 Q612.358 1252.71 610.02 1250.49 Q607.682 1248.27 607.682 1244.31 Q607.682 1239.73 610.9 1237.09 Q614.14 1234.45 619.812 1234.45 Q622.242 1234.45 624.765 1234.89 Q627.288 1235.33 629.927 1236.21 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path></svg>
</div>
</div>
<p>実際に用いたコードは<a href="_Logistic2.jl">こちら</a>．</p>
</section>
<section id="比較対象mala" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="比較対象mala"><span class="header-section-number">1.6</span> 比較対象：MALA</h2>
<div id="cc5e40b9" class="cell" data-execution_count="17">
<details class="code-fold">
<summary>MALA によるサンプリングを実行</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">AdvancedHMC</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">AdvancedMH</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ForwardDiff</span></span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LogDensityProblems</span></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LogDensityProblemsAD</span></span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StructArrays</span></span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LinearAlgebra</span></span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> LogTargetDensity</span>
<span id="cb10-8">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span></span>
<span id="cb10-9">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span></span>
<span id="cb10-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb10-11"></span>
<span id="cb10-12">LogDensityProblems.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logdensity</span>(p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LogTargetDensity</span>, ξ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">-U</span>(ξ, p.x, p.y)</span>
<span id="cb10-13">LogDensityProblems.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimension</span>(p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LogTargetDensity</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-14">LogDensityProblems.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">capabilities</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Type{LogTargetDensity}</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogDensityProblems.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogDensityOrder</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{0}</span>()</span>
<span id="cb10-15"></span>
<span id="cb10-16">model_with_ad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogDensityProblemsAD.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ADgradient</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Val</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ForwardDiff), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogTargetDensity</span>(x, y))</span>
<span id="cb10-17"></span>
<span id="cb10-18">σ² <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0001</span></span>
<span id="cb10-19">spl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MALA</span>(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MvNormal</span>((σ² <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span> x, σ² <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I))</span>
<span id="cb10-20"></span>
<span id="cb10-21">chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(model_with_ad, spl, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>; initial_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, chain_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>StructArray, param_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ξ"</span>], stats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>)</span>
<span id="cb10-22"></span>
<span id="cb10-23">traj_MALA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chain.ξ</span></code></pre></div>
</details>
</div>
</section>
<section id="有効サンプル数について" class="level2" data-number="1.7">
<h2 data-number="1.7" class="anchored" data-anchor-id="有効サンプル数について"><span class="header-section-number">1.7</span> 有効サンプル数について</h2>
<p>時区間 <img src="https://latex.codecogs.com/png.latex?%5B0,T%5D"> における ZigZag 過程の，関数 <img src="https://latex.codecogs.com/png.latex?h%5Cin%5Cmathcal%7BL%7D%5E2(%5Cmathbb%7BR%7D%5Ed)"> に関する <strong>有効サンプル数</strong> (ESS) とは <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7B%5Coperatorname%7BESS%7D%7D:=T%5Cfrac%7B%5Cwidehat%7B%5Cmathrm%7BV%7D_%5Cpi%5Bh%5D%7D%7D%7B%5Cwidehat%7B%5Csigma%5E2_h%7D%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7B%5Cmathrm%7BV%7D_%5Cpi%5Bh%5D%7D:=%5Cfrac%7B1%7D%7BT%7D%5Cint%5ET_0h(X_s)%5E2%5C,ds-%5Cleft(%5Cfrac%7B1%7D%7BT%7D%5Cint%5ET_0h(X_s)%5C,ds%5Cright)%5E2,%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cwidehat%7B%5Csigma%5E2_h%7D:=%5Cfrac%7B1%7D%7BB-1%7D%5Csum_%7Bi=1%7D%5EB(Y_i-%5Coverline%7BY%7D)%5E2,%5Cquad%20Y_i:=%5Csqrt%7B%5Cfrac%7BB%7D%7BT%7D%7D%5Cint%5E%7B%5Cfrac%7BiT%7D%7BB%7D%7D_%7B%5Cfrac%7B(i-1)T%7D%7BB%7D%7Dh(X_s)%5C,ds%0A"> で定まる値である．</p>
<p>例えば次のようにして計算できる：</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ESS</span>(samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, T, dt)</span>
<span id="cb11-2">    V <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ((dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> T) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(samples))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb11-3">    Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> B)</span>
<span id="cb11-4">    ESS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> V <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(Y)</span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ESS</span>
<span id="cb11-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</section>
<section id="重点サブサンプリング-sen2020" class="level2" data-number="1.8">
<h2 data-number="1.8" class="anchored" data-anchor-id="重点サブサンプリング-sen2020"><span class="header-section-number">1.8</span> 重点サブサンプリング <span class="citation" data-cites="Sen+2020">(Sen et al., 2020)</span></h2>
<p>一様でないサブサンプリングを導入することで，Zig-Zag サンプラーを不均衡データにも強くすると同時に，サブサンプリングの効率を上げることもできる．</p>
<p>強度関数 <img src="https://latex.codecogs.com/png.latex?%0Am_i%5EK(t)=%5Cbiggr(%5Ctheta_iE%5EK_i(x+%5Ctheta%20t)%5Cbiggl)_+%0A"> は， <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BE%7D%5Cbiggl%5BE%5EK_i(%5Cxi)%5Cbiggr%5D=%5Cpartial_iU(%5Cxi)%0A"> を満たす限り，<img src="https://latex.codecogs.com/png.latex?K%5Csim%5Cmathrm%7BU%7D(%5Bn%5D)"> に限る必要はなかったのである．</p>
<p>すなわち，<img src="https://latex.codecogs.com/png.latex?(p_x)"> をある <img src="https://latex.codecogs.com/png.latex?%5Bn%5D"> 上の分布 <img src="https://latex.codecogs.com/png.latex?%5Cnu%5Cin%5Cmathcal%7BP%7D(%5Bn%5D)"> の質量関数として <img src="https://latex.codecogs.com/png.latex?%0A%5Cpartial_iV_1%5EJ(%5Cxi):=%5Cfrac%7B1%7D%7Bp_J%7D%5Cpartial_iU%5EJ(%5Cxi)%5Cqquad%20J%5Csim%5Cnu%0A"> と定めると， <img src="https://latex.codecogs.com/png.latex?%0A%5Clvert%5Cpartial_iV_i%5Ej(%5Cxi)%5Crvert%5Cle%5Cmax_%7Bj%5Cin%5Bn%5D%7D%5Cfrac%7B%5Clvert%20x_i%5Ej%5Crvert%7D%7Bp_j%7D%0A"> が成り立つ．式 (1) は <img src="https://latex.codecogs.com/png.latex?p_j%5Cequiv1/n"> の場合であったのである．</p>
<p>換言すれば， <img src="https://latex.codecogs.com/png.latex?%0Ap_j%5C,%5Cpropto%5C,%5Clvert%20x%5Ej_i%5Crvert%0A"> と定めることで，Poisson 強度関数 <img src="https://latex.codecogs.com/png.latex?m%5Ej_i"> の上界をタイトにすることができ，その結果剪定の効率が上がる．</p>
<div id="3419df22" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_IS</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>.(x))</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_IS</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab_IS</span>(ξ, θ, x, y, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZag1d</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_IS</span>(ξ, θ, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">b_IS</span>(ξ, θ, x, y))</span></code></pre></div>
</div>
<div id="167bc8f0" class="cell" data-execution_count="19">
<details class="code-fold">
<summary>重点サブサンプリングによる ZigZag サンプラー ZZ1d_IS() を定義</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StatsBase</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj_IS</span>(j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, ξ, θ, ∇U, x, y)</span>
<span id="cb13-4">    pj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(x[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,j]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>.(x))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x がスパースだと 0 になりやすいことに注意</span></span>
<span id="cb13-5">    Eʲ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, j, ξ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pj)</span>
<span id="cb13-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Eʲ)</span>
<span id="cb13-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb13-8"></span>
<span id="cb13-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ZZ1d_IS</span>(∇U, ξ, θ, T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Matrix{Float64}</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vector{Float64}</span>, Flow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZigZagBoomerang.ContinuousDynamics</span>; rng<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Random</span>.GLOBAL_RNG, ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ab_IS)</span>
<span id="cb13-10">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(T)</span>
<span id="cb13-11">    Ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(t, ξ, θ)]</span>
<span id="cb13-12">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-13">    epoch_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num]</span>
<span id="cb13-14">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb13-15">    t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># イベントは a,b が定める affine proxy に従って生成する</span></span>
<span id="cb13-16">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb13-17"></span>
<span id="cb13-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> T</span>
<span id="cb13-19">        τ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t</span>
<span id="cb13-20">        t, ξ, θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">move_forward</span>(τ, t, ξ, θ, Flow)</span>
<span id="cb13-21">        j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Weights</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vec</span>(x))))</span>
<span id="cb13-22">        l, lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λj_IS</span>(j, ξ, θ, ∇U, x, y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">λ_bar</span>(τ, a, b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># λ が真のレート, λ_bar が affine proxy</span></span>
<span id="cb13-23">        num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> l</span>
<span id="cb13-25">            acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-26">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb13-27">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lb)</span>
<span id="cb13-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb13-29">            θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>θ</span>
<span id="cb13-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(Ξ, (t, ξ, θ))</span>
<span id="cb13-31">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(epoch_list, num)</span>
<span id="cb13-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb13-33">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ab</span>(ξ, θ, x, y, Flow)</span>
<span id="cb13-34">        t′ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson_time</span>(a, b, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>())</span>
<span id="cb13-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb13-36"></span>
<span id="cb13-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Ξ, epoch_list, acc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>num</span>
<span id="cb13-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</details>
</div>
<div id="a0e1d86e" class="cell" data-execution_count="20">
<details class="code-fold">
<summary>実験を実行する関数 experiment_ZZ_IS() を定義</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_ZZ_IS</span>(N, T, dt; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, n_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 重点サブサンプリング ZZ1d_IS() に関して N 回実験</span></span>
<span id="cb14-2">    ESSs_sum_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(n_list)</span>
<span id="cb14-3"></span>
<span id="cb14-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>N</span>
<span id="cb14-5">        ESSs_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb14-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> n_list</span>
<span id="cb14-7">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_IS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab_IS, ZZ1d_IS, T, dt, x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n], y[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb14-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb14-9">        ESSs_sum_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_IS ESSs_IS]</span>
<span id="cb14-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb14-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_IS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_IS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb14-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb14-13"></span>
<span id="cb14-14">ESS_IS, var_ESS_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_ZZ_IS</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">500.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, n_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_list)</span></code></pre></div>
</details>
</div>
<div id="bab836c6" class="cell" data-execution_count="22">
<details class="code-fold">
<summary>結果をプロット</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb15-1">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPlot</span>(q, n_list, ESS_IS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_IS); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-IS"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>(r)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<!--?xml version="1.0" encoding="utf-8"?-->
<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="576" height="384" viewbox="0 0 2304 1536">
<defs>
  <clippath id="clip960">
    <rect x="0" y="0" width="2304" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip960)" d="M0 1536 L2304 1536 L2304 8.52651e-14 L0 8.52651e-14  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip961">
    <rect x="460" y="0" width="1614" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip960)" d="M250.111 1347.54 L2256.76 1347.54 L2256.76 47.2441 L250.111 47.2441  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip962">
    <rect x="250" y="47" width="2008" height="1301"></rect>
  </clippath>
</defs>
<polyline clip-path="url(#clip962)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="306.903,1347.54 306.903,47.2441 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1253.43,1347.54 1253.43,47.2441 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2199.96,1347.54 2199.96,47.2441 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1347.54 2256.76,1347.54 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,1347.54 306.903,1328.64 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,1347.54 1253.43,1328.64 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1347.54 2199.96,1328.64 "></polyline>
<path clip-path="url(#clip960)" d="M273.231 1420.89 L280.87 1420.89 L280.87 1394.53 L272.559 1396.19 L272.559 1391.94 L280.823 1390.27 L285.499 1390.27 L285.499 1420.89 L293.138 1420.89 L293.138 1424.83 L273.231 1424.83 L273.231 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M312.582 1393.35 Q308.971 1393.35 307.143 1396.91 Q305.337 1400.45 305.337 1407.58 Q305.337 1414.69 307.143 1418.25 Q308.971 1421.8 312.582 1421.8 Q316.217 1421.8 318.022 1418.25 Q319.851 1414.69 319.851 1407.58 Q319.851 1400.45 318.022 1396.91 Q316.217 1393.35 312.582 1393.35 M312.582 1389.64 Q318.392 1389.64 321.448 1394.25 Q324.527 1398.83 324.527 1407.58 Q324.527 1416.31 321.448 1420.92 Q318.392 1425.5 312.582 1425.5 Q306.772 1425.5 303.693 1420.92 Q300.638 1416.31 300.638 1407.58 Q300.638 1398.83 303.693 1394.25 Q306.772 1389.64 312.582 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M325.072 1394.22 L331.279 1394.22 L331.279 1372.8 L324.527 1374.15 L324.527 1370.69 L331.241 1369.34 L335.04 1369.34 L335.04 1394.22 L341.247 1394.22 L341.247 1397.42 L325.072 1397.42 L325.072 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1219.21 1420.89 L1226.85 1420.89 L1226.85 1394.53 L1218.54 1396.19 L1218.54 1391.94 L1226.8 1390.27 L1231.47 1390.27 L1231.47 1420.89 L1239.11 1420.89 L1239.11 1424.83 L1219.21 1424.83 L1219.21 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1258.56 1393.35 Q1254.95 1393.35 1253.12 1396.91 Q1251.31 1400.45 1251.31 1407.58 Q1251.31 1414.69 1253.12 1418.25 Q1254.95 1421.8 1258.56 1421.8 Q1262.19 1421.8 1264 1418.25 Q1265.83 1414.69 1265.83 1407.58 Q1265.83 1400.45 1264 1396.91 Q1262.19 1393.35 1258.56 1393.35 M1258.56 1389.64 Q1264.37 1389.64 1267.42 1394.25 Q1270.5 1398.83 1270.5 1407.58 Q1270.5 1416.31 1267.42 1420.92 Q1264.37 1425.5 1258.56 1425.5 Q1252.75 1425.5 1249.67 1420.92 Q1246.61 1416.31 1246.61 1407.58 Q1246.61 1398.83 1249.67 1394.25 Q1252.75 1389.64 1258.56 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1275.07 1394.22 L1288.33 1394.22 L1288.33 1397.42 L1270.5 1397.42 L1270.5 1394.22 Q1272.67 1391.98 1276.39 1388.22 Q1280.13 1384.44 1281.09 1383.35 Q1282.92 1381.3 1283.63 1379.89 Q1284.36 1378.46 1284.36 1377.09 Q1284.36 1374.85 1282.78 1373.44 Q1281.22 1372.03 1278.7 1372.03 Q1276.92 1372.03 1274.92 1372.65 Q1272.95 1373.27 1270.69 1374.53 L1270.69 1370.69 Q1272.98 1369.77 1274.98 1369.3 Q1276.97 1368.83 1278.63 1368.83 Q1282.99 1368.83 1285.59 1371.01 Q1288.18 1373.19 1288.18 1376.84 Q1288.18 1378.57 1287.52 1380.13 Q1286.88 1381.68 1285.17 1383.78 Q1284.7 1384.33 1282.18 1386.94 Q1279.66 1389.54 1275.07 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M2165.41 1420.89 L2173.05 1420.89 L2173.05 1394.53 L2164.74 1396.19 L2164.74 1391.94 L2173 1390.27 L2177.68 1390.27 L2177.68 1420.89 L2185.31 1420.89 L2185.31 1424.83 L2165.41 1424.83 L2165.41 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M2204.76 1393.35 Q2201.15 1393.35 2199.32 1396.91 Q2197.51 1400.45 2197.51 1407.58 Q2197.51 1414.69 2199.32 1418.25 Q2201.15 1421.8 2204.76 1421.8 Q2208.39 1421.8 2210.2 1418.25 Q2212.03 1414.69 2212.03 1407.58 Q2212.03 1400.45 2210.2 1396.91 Q2208.39 1393.35 2204.76 1393.35 M2204.76 1389.64 Q2210.57 1389.64 2213.63 1394.25 Q2216.7 1398.83 2216.7 1407.58 Q2216.7 1416.31 2213.63 1420.92 Q2210.57 1425.5 2204.76 1425.5 Q2198.95 1425.5 2195.87 1420.92 Q2192.81 1416.31 2192.81 1407.58 Q2192.81 1398.83 2195.87 1394.25 Q2198.95 1389.64 2204.76 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M2229.4 1382.28 Q2232.13 1382.86 2233.65 1384.7 Q2235.19 1386.55 2235.19 1389.26 Q2235.19 1393.41 2232.33 1395.69 Q2229.47 1397.96 2224.21 1397.96 Q2222.44 1397.96 2220.56 1397.61 Q2218.7 1397.27 2216.7 1396.57 L2216.7 1392.9 Q2218.28 1393.83 2220.16 1394.3 Q2222.05 1394.77 2224.1 1394.77 Q2227.67 1394.77 2229.53 1393.36 Q2231.41 1391.95 2231.41 1389.26 Q2231.41 1386.77 2229.66 1385.38 Q2227.93 1383.97 2224.83 1383.97 L2221.56 1383.97 L2221.56 1380.85 L2224.98 1380.85 Q2227.78 1380.85 2229.27 1379.74 Q2230.75 1378.61 2230.75 1376.5 Q2230.75 1374.34 2229.21 1373.19 Q2227.69 1372.03 2224.83 1372.03 Q2223.27 1372.03 2221.48 1372.37 Q2219.69 1372.7 2217.55 1373.42 L2217.55 1370.03 Q2219.71 1369.43 2221.59 1369.13 Q2223.49 1368.83 2225.17 1368.83 Q2229.49 1368.83 2232.01 1370.81 Q2234.53 1372.76 2234.53 1376.11 Q2234.53 1378.44 2233.2 1380.06 Q2231.86 1381.66 2229.4 1382.28 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1063.43 1466.23 Q1056.43 1466.23 1052.29 1471.45 Q1048.19 1476.67 1048.19 1485.67 Q1048.19 1494.65 1052.29 1499.87 Q1056.43 1505.09 1063.43 1505.09 Q1070.44 1505.09 1074.51 1499.87 Q1078.62 1494.65 1078.62 1485.67 Q1078.62 1476.67 1074.51 1471.45 Q1070.44 1466.23 1063.43 1466.23 M1063.43 1461.01 Q1073.43 1461.01 1079.41 1467.72 Q1085.39 1474.41 1085.39 1485.67 Q1085.39 1496.91 1079.41 1503.62 Q1073.43 1510.31 1063.43 1510.31 Q1053.41 1510.31 1047.39 1503.62 Q1041.41 1496.94 1041.41 1485.67 Q1041.41 1474.41 1047.39 1467.72 Q1053.41 1461.01 1063.43 1461.01 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1120.79 1491.59 Q1120.79 1485.13 1118.11 1481.47 Q1115.47 1477.78 1110.83 1477.78 Q1106.18 1477.78 1103.51 1481.47 Q1100.86 1485.13 1100.86 1491.59 Q1100.86 1498.05 1103.51 1501.75 Q1106.18 1505.41 1110.83 1505.41 Q1115.47 1505.41 1118.11 1501.75 Q1120.79 1498.05 1120.79 1491.59 M1100.86 1479.15 Q1102.71 1475.97 1105.51 1474.44 Q1108.34 1472.88 1112.26 1472.88 Q1118.75 1472.88 1122.79 1478.03 Q1126.87 1483.19 1126.87 1491.59 Q1126.87 1500 1122.79 1505.15 Q1118.75 1510.31 1112.26 1510.31 Q1108.34 1510.31 1105.51 1508.78 Q1102.71 1507.22 1100.86 1504.04 L1100.86 1509.39 L1094.98 1509.39 L1094.98 1459.86 L1100.86 1459.86 L1100.86 1479.15 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1159.3 1474.79 L1159.3 1480.33 Q1156.82 1479.05 1154.14 1478.42 Q1151.47 1477.78 1148.61 1477.78 Q1144.25 1477.78 1142.05 1479.12 Q1139.89 1480.45 1139.89 1483.13 Q1139.89 1485.16 1141.44 1486.34 Q1143 1487.49 1147.72 1488.54 L1149.72 1488.98 Q1155.96 1490.32 1158.57 1492.77 Q1161.21 1495.19 1161.21 1499.55 Q1161.21 1504.52 1157.26 1507.41 Q1153.35 1510.31 1146.47 1510.31 Q1143.61 1510.31 1140.49 1509.74 Q1137.4 1509.19 1133.97 1508.08 L1133.97 1502.03 Q1137.21 1503.72 1140.36 1504.58 Q1143.51 1505.41 1146.6 1505.41 Q1150.74 1505.41 1152.97 1504.01 Q1155.19 1502.57 1155.19 1500 Q1155.19 1497.61 1153.57 1496.34 Q1151.98 1495.06 1146.54 1493.88 L1144.5 1493.41 Q1139.06 1492.26 1136.64 1489.91 Q1134.22 1487.52 1134.22 1483.38 Q1134.22 1478.35 1137.78 1475.62 Q1141.35 1472.88 1147.91 1472.88 Q1151.15 1472.88 1154.02 1473.36 Q1156.88 1473.83 1159.3 1474.79 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1201.03 1490.1 L1201.03 1492.96 L1174.1 1492.96 Q1174.48 1499.01 1177.73 1502.19 Q1181.01 1505.34 1186.83 1505.34 Q1190.21 1505.34 1193.36 1504.52 Q1196.54 1503.69 1199.66 1502.03 L1199.66 1507.57 Q1196.51 1508.91 1193.2 1509.61 Q1189.89 1510.31 1186.48 1510.31 Q1177.95 1510.31 1172.96 1505.34 Q1167.99 1500.38 1167.99 1491.91 Q1167.99 1483.16 1172.7 1478.03 Q1177.44 1472.88 1185.46 1472.88 Q1192.66 1472.88 1196.83 1477.53 Q1201.03 1482.14 1201.03 1490.1 M1195.17 1488.38 Q1195.11 1483.57 1192.47 1480.71 Q1189.86 1477.84 1185.53 1477.84 Q1180.63 1477.84 1177.67 1480.61 Q1174.74 1483.38 1174.29 1488.41 L1195.17 1488.38 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1231.3 1479.21 Q1230.31 1478.64 1229.13 1478.38 Q1227.99 1478.1 1226.59 1478.1 Q1221.62 1478.1 1218.95 1481.34 Q1216.31 1484.56 1216.31 1490.61 L1216.31 1509.39 L1210.42 1509.39 L1210.42 1473.74 L1216.31 1473.74 L1216.31 1479.28 Q1218.15 1476.03 1221.11 1474.47 Q1224.07 1472.88 1228.3 1472.88 Q1228.91 1472.88 1229.64 1472.97 Q1230.37 1473.04 1231.27 1473.2 L1231.3 1479.21 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1233.24 1473.74 L1239.44 1473.74 L1250.58 1503.66 L1261.72 1473.74 L1267.93 1473.74 L1254.56 1509.39 L1246.61 1509.39 L1233.24 1473.74 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1292.22 1491.47 Q1285.12 1491.47 1282.38 1493.09 Q1279.64 1494.71 1279.64 1498.63 Q1279.64 1501.75 1281.68 1503.59 Q1283.75 1505.41 1287.28 1505.41 Q1292.15 1505.41 1295.08 1501.97 Q1298.04 1498.5 1298.04 1492.77 L1298.04 1491.47 L1292.22 1491.47 M1303.9 1489.05 L1303.9 1509.39 L1298.04 1509.39 L1298.04 1503.97 Q1296.04 1507.22 1293.04 1508.78 Q1290.05 1510.31 1285.72 1510.31 Q1280.25 1510.31 1277 1507.25 Q1273.79 1504.17 1273.79 1499.01 Q1273.79 1492.99 1277.8 1489.94 Q1281.84 1486.88 1289.83 1486.88 L1298.04 1486.88 L1298.04 1486.31 Q1298.04 1482.27 1295.37 1480.07 Q1292.73 1477.84 1287.92 1477.84 Q1284.86 1477.84 1281.97 1478.58 Q1279.07 1479.31 1276.4 1480.77 L1276.4 1475.36 Q1279.61 1474.12 1282.64 1473.51 Q1285.66 1472.88 1288.52 1472.88 Q1296.26 1472.88 1300.08 1476.89 Q1303.9 1480.9 1303.9 1489.05 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1321.75 1463.62 L1321.75 1473.74 L1333.82 1473.74 L1333.82 1478.29 L1321.75 1478.29 L1321.75 1497.64 Q1321.75 1502 1322.93 1503.24 Q1324.14 1504.48 1327.8 1504.48 L1333.82 1504.48 L1333.82 1509.39 L1327.8 1509.39 Q1321.02 1509.39 1318.44 1506.87 Q1315.87 1504.32 1315.87 1497.64 L1315.87 1478.29 L1311.57 1478.29 L1311.57 1473.74 L1315.87 1473.74 L1315.87 1463.62 L1321.75 1463.62 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1341.52 1473.74 L1347.38 1473.74 L1347.38 1509.39 L1341.52 1509.39 L1341.52 1473.74 M1341.52 1459.86 L1347.38 1459.86 L1347.38 1467.28 L1341.52 1467.28 L1341.52 1459.86 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1373.44 1477.84 Q1368.73 1477.84 1366 1481.54 Q1363.26 1485.2 1363.26 1491.59 Q1363.26 1497.99 1365.96 1501.68 Q1368.7 1505.34 1373.44 1505.34 Q1378.12 1505.34 1380.86 1501.65 Q1383.6 1497.96 1383.6 1491.59 Q1383.6 1485.26 1380.86 1481.57 Q1378.12 1477.84 1373.44 1477.84 M1373.44 1472.88 Q1381.08 1472.88 1385.44 1477.84 Q1389.8 1482.81 1389.8 1491.59 Q1389.8 1500.35 1385.44 1505.34 Q1381.08 1510.31 1373.44 1510.31 Q1365.77 1510.31 1361.41 1505.34 Q1357.08 1500.35 1357.08 1491.59 Q1357.08 1482.81 1361.41 1477.84 Q1365.77 1472.88 1373.44 1472.88 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1429.14 1487.87 L1429.14 1509.39 L1423.29 1509.39 L1423.29 1488.06 Q1423.29 1483 1421.31 1480.49 Q1419.34 1477.97 1415.39 1477.97 Q1410.65 1477.97 1407.91 1480.99 Q1405.18 1484.02 1405.18 1489.24 L1405.18 1509.39 L1399.29 1509.39 L1399.29 1473.74 L1405.18 1473.74 L1405.18 1479.28 Q1407.28 1476.06 1410.11 1474.47 Q1412.97 1472.88 1416.7 1472.88 Q1422.84 1472.88 1425.99 1476.7 Q1429.14 1480.49 1429.14 1487.87 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M1463.55 1474.79 L1463.55 1480.33 Q1461.07 1479.05 1458.39 1478.42 Q1455.72 1477.78 1452.86 1477.78 Q1448.49 1477.78 1446.3 1479.12 Q1444.13 1480.45 1444.13 1483.13 Q1444.13 1485.16 1445.69 1486.34 Q1447.25 1487.49 1451.96 1488.54 L1453.97 1488.98 Q1460.21 1490.32 1462.82 1492.77 Q1465.46 1495.19 1465.46 1499.55 Q1465.46 1504.52 1461.51 1507.41 Q1457.6 1510.31 1450.72 1510.31 Q1447.86 1510.31 1444.74 1509.74 Q1441.65 1509.19 1438.21 1508.08 L1438.21 1502.03 Q1441.46 1503.72 1444.61 1504.58 Q1447.76 1505.41 1450.85 1505.41 Q1454.99 1505.41 1457.22 1504.01 Q1459.44 1502.57 1459.44 1500 Q1459.44 1497.61 1457.82 1496.34 Q1456.23 1495.06 1450.79 1493.88 L1448.75 1493.41 Q1443.31 1492.26 1440.89 1489.91 Q1438.47 1487.52 1438.47 1483.38 Q1438.47 1478.35 1442.03 1475.62 Q1445.6 1472.88 1452.16 1472.88 Q1455.4 1472.88 1458.27 1473.36 Q1461.13 1473.83 1463.55 1474.79 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip962)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="250.111,1021.13 2256.76,1021.13 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="250.111,455.462 2256.76,455.462 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1347.54 250.111,47.2441 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,1021.13 269.009,1021.13 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="250.111,455.462 269.009,455.462 "></polyline>
<path clip-path="url(#clip960)" d="M115.411 1040.92 L123.05 1040.92 L123.05 1014.55 L114.74 1016.22 L114.74 1011.96 L123.004 1010.29 L127.68 1010.29 L127.68 1040.92 L135.319 1040.92 L135.319 1044.85 L115.411 1044.85 L115.411 1040.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M154.763 1013.37 Q151.152 1013.37 149.323 1016.94 Q147.518 1020.48 147.518 1027.61 Q147.518 1034.71 149.323 1038.28 Q151.152 1041.82 154.763 1041.82 Q158.397 1041.82 160.203 1038.28 Q162.032 1034.71 162.032 1027.61 Q162.032 1020.48 160.203 1016.94 Q158.397 1013.37 154.763 1013.37 M154.763 1009.67 Q160.573 1009.67 163.629 1014.27 Q166.707 1018.86 166.707 1027.61 Q166.707 1036.33 163.629 1040.94 Q160.573 1045.52 154.763 1045.52 Q148.953 1045.52 145.874 1040.94 Q142.819 1036.33 142.819 1027.61 Q142.819 1018.86 145.874 1014.27 Q148.953 1009.67 154.763 1009.67 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M166.707 1003.77 L190.819 1003.77 L190.819 1006.97 L166.707 1006.97 L166.707 1003.77 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M202.292 1014.25 L215.551 1014.25 L215.551 1017.44 L197.721 1017.44 L197.721 1014.25 Q199.884 1012.01 203.608 1008.25 Q207.351 1004.47 208.31 1003.37 Q210.135 1001.32 210.849 999.914 Q211.583 998.485 211.583 997.112 Q211.583 994.874 210.003 993.463 Q208.442 992.053 205.922 992.053 Q204.135 992.053 202.141 992.673 Q200.166 993.294 197.91 994.554 L197.91 990.717 Q200.204 989.796 202.198 989.325 Q204.191 988.855 205.846 988.855 Q210.21 988.855 212.805 991.037 Q215.401 993.219 215.401 996.867 Q215.401 998.598 214.743 1000.16 Q214.103 1001.7 212.392 1003.81 Q211.921 1004.35 209.401 1006.97 Q206.881 1009.56 202.292 1014.25 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M144.846 475.254 L152.484 475.254 L152.484 448.889 L144.174 450.555 L144.174 446.296 L152.438 444.629 L157.114 444.629 L157.114 475.254 L164.753 475.254 L164.753 479.189 L144.846 479.189 L144.846 475.254 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M184.197 447.708 Q180.586 447.708 178.757 451.273 Q176.952 454.814 176.952 461.944 Q176.952 469.051 178.757 472.615 Q180.586 476.157 184.197 476.157 Q187.831 476.157 189.637 472.615 Q191.466 469.051 191.466 461.944 Q191.466 454.814 189.637 451.273 Q187.831 447.708 184.197 447.708 M184.197 444.004 Q190.007 444.004 193.063 448.611 Q196.142 453.194 196.142 461.944 Q196.142 470.671 193.063 475.277 Q190.007 479.861 184.197 479.861 Q178.387 479.861 175.308 475.277 Q172.253 470.671 172.253 461.944 Q172.253 453.194 175.308 448.611 Q178.387 444.004 184.197 444.004 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M205.846 426.2 Q202.912 426.2 201.427 429.097 Q199.96 431.974 199.96 437.767 Q199.96 443.541 201.427 446.438 Q202.912 449.315 205.846 449.315 Q208.799 449.315 210.266 446.438 Q211.752 443.541 211.752 437.767 Q211.752 431.974 210.266 429.097 Q208.799 426.2 205.846 426.2 M205.846 423.191 Q210.567 423.191 213.05 426.934 Q215.551 430.658 215.551 437.767 Q215.551 444.858 213.05 448.6 Q210.567 452.324 205.846 452.324 Q201.126 452.324 198.624 448.6 Q196.142 444.858 196.142 437.767 Q196.142 430.658 198.624 426.934 Q201.126 423.191 205.846 423.191 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M18.4042 928.052 L18.4042 898.006 L23.815 898.006 L23.815 921.622 L37.8832 921.622 L37.8832 898.992 L43.2941 898.992 L43.2941 921.622 L60.5133 921.622 L60.5133 897.433 L65.9242 897.433 L65.9242 928.052 L18.4042 928.052 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M19.9638 858.379 L26.234 858.379 Q24.4834 862.039 23.624 865.286 Q22.7647 868.532 22.7647 871.556 Q22.7647 876.808 24.8017 879.672 Q26.8387 882.505 30.5945 882.505 Q33.7455 882.505 35.3688 880.627 Q36.9602 878.718 37.9469 873.434 L38.7426 869.551 Q40.1112 862.358 43.5805 858.952 Q47.018 855.515 52.8108 855.515 Q59.7176 855.515 63.2824 860.161 Q66.8472 864.777 66.8472 873.72 Q66.8472 877.094 66.0833 880.914 Q65.3194 884.701 63.8235 888.775 L57.2031 888.775 Q59.3993 884.86 60.5133 881.105 Q61.6273 877.349 61.6273 873.72 Q61.6273 868.214 59.463 865.222 Q57.2986 862.23 53.2882 862.23 Q49.7871 862.23 47.8137 864.395 Q45.8404 866.527 44.8537 871.429 L44.0898 875.344 Q42.6575 882.537 39.602 885.752 Q36.5464 888.966 31.1037 888.966 Q24.8017 888.966 21.1732 884.542 Q17.5448 880.086 17.5448 872.288 Q17.5448 868.946 18.1495 865.477 Q18.7543 862.008 19.9638 858.379 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M19.9638 817.002 L26.234 817.002 Q24.4834 820.662 23.624 823.909 Q22.7647 827.155 22.7647 830.179 Q22.7647 835.431 24.8017 838.295 Q26.8387 841.128 30.5945 841.128 Q33.7455 841.128 35.3688 839.25 Q36.9602 837.34 37.9469 832.057 L38.7426 828.174 Q40.1112 820.981 43.5805 817.575 Q47.018 814.137 52.8108 814.137 Q59.7176 814.137 63.2824 818.784 Q66.8472 823.4 66.8472 832.343 Q66.8472 835.717 66.0833 839.537 Q65.3194 843.324 63.8235 847.398 L57.2031 847.398 Q59.3993 843.483 60.5133 839.728 Q61.6273 835.972 61.6273 832.343 Q61.6273 826.837 59.463 823.845 Q57.2986 820.853 53.2882 820.853 Q49.7871 820.853 47.8137 823.018 Q45.8404 825.15 44.8537 830.052 L44.0898 833.967 Q42.6575 841.16 39.602 844.375 Q36.5464 847.589 31.1037 847.589 Q24.8017 847.589 21.1732 843.165 Q17.5448 838.709 17.5448 830.911 Q17.5448 827.569 18.1495 824.1 Q18.7543 820.63 19.9638 817.002 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M60.577 777.98 L79.4831 777.98 L79.4831 783.868 L30.2762 783.868 L30.2762 777.98 L35.6871 777.98 Q32.5042 776.134 30.9764 773.333 Q29.4168 770.501 29.4168 766.586 Q29.4168 760.093 34.5731 756.05 Q39.7293 751.976 48.132 751.976 Q56.5347 751.976 61.691 756.05 Q66.8472 760.093 66.8472 766.586 Q66.8472 770.501 65.3194 773.333 Q63.7598 776.134 60.577 777.98 M48.132 758.056 Q41.6708 758.056 38.0105 760.729 Q34.3184 763.371 34.3184 768.018 Q34.3184 772.665 38.0105 775.338 Q41.6708 777.98 48.132 777.98 Q54.5932 777.98 58.2853 775.338 Q61.9456 772.665 61.9456 768.018 Q61.9456 763.371 58.2853 760.729 Q54.5932 758.056 48.132 758.056 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M46.6361 711.777 L49.5006 711.777 L49.5006 738.704 Q55.5481 738.322 58.7309 735.075 Q61.8819 731.797 61.8819 725.972 Q61.8819 722.599 61.0544 719.448 Q60.2269 716.265 58.5718 713.145 L64.1099 713.145 Q65.4467 716.297 66.147 719.607 Q66.8472 722.917 66.8472 726.323 Q66.8472 734.853 61.8819 739.85 Q56.9167 744.815 48.4503 744.815 Q39.6974 744.815 34.5731 740.104 Q29.4168 735.362 29.4168 727.341 Q29.4168 720.148 34.0638 715.978 Q38.6789 711.777 46.6361 711.777 M44.9173 717.633 Q40.1112 717.697 37.2466 720.339 Q34.3821 722.949 34.3821 727.277 Q34.3821 732.179 37.1512 735.139 Q39.9202 738.067 44.9492 738.513 L44.9173 717.633 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M35.7507 681.508 Q35.1778 682.495 34.9232 683.672 Q34.6367 684.818 34.6367 686.219 Q34.6367 691.184 37.8832 693.857 Q41.0979 696.499 47.1453 696.499 L65.9242 696.499 L65.9242 702.387 L30.2762 702.387 L30.2762 696.499 L35.8144 696.499 Q32.5679 694.653 31.0083 691.693 Q29.4168 688.733 29.4168 684.5 Q29.4168 683.895 29.5123 683.163 Q29.576 682.431 29.7351 681.54 L35.7507 681.508 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M18.4042 654.39 L18.4042 624.344 L23.815 624.344 L23.815 647.961 L37.8832 647.961 L37.8832 625.331 L43.2941 625.331 L43.2941 647.961 L60.5133 647.961 L60.5133 623.771 L65.9242 623.771 L65.9242 654.39 L18.4042 654.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M60.577 607.793 L79.4831 607.793 L79.4831 613.681 L30.2762 613.681 L30.2762 607.793 L35.6871 607.793 Q32.5042 605.947 30.9764 603.146 Q29.4168 600.313 29.4168 596.398 Q29.4168 589.905 34.5731 585.863 Q39.7293 581.789 48.132 581.789 Q56.5347 581.789 61.691 585.863 Q66.8472 589.905 66.8472 596.398 Q66.8472 600.313 65.3194 603.146 Q63.7598 605.947 60.577 607.793 M48.132 587.868 Q41.6708 587.868 38.0105 590.542 Q34.3184 593.184 34.3184 597.831 Q34.3184 602.478 38.0105 605.151 Q41.6708 607.793 48.132 607.793 Q54.5932 607.793 58.2853 605.151 Q61.9456 602.478 61.9456 597.831 Q61.9456 593.184 58.2853 590.542 Q54.5932 587.868 48.132 587.868 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M34.3821 558.268 Q34.3821 562.978 38.0742 565.716 Q41.7345 568.453 48.132 568.453 Q54.5295 568.453 58.2217 565.748 Q61.8819 563.01 61.8819 558.268 Q61.8819 553.589 58.1898 550.852 Q54.4977 548.115 48.132 548.115 Q41.7981 548.115 38.106 550.852 Q34.3821 553.589 34.3821 558.268 M29.4168 558.268 Q29.4168 550.629 34.3821 546.268 Q39.3473 541.908 48.132 541.908 Q56.8849 541.908 61.8819 546.268 Q66.8472 550.629 66.8472 558.268 Q66.8472 565.939 61.8819 570.299 Q56.8849 574.628 48.132 574.628 Q39.3473 574.628 34.3821 570.299 Q29.4168 565.939 29.4168 558.268 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M31.6448 506.546 L37.1193 506.546 Q35.7507 509.029 35.0823 511.544 Q34.3821 514.026 34.3821 516.572 Q34.3821 522.27 38.0105 525.421 Q41.6072 528.572 48.132 528.572 Q54.6569 528.572 58.2853 525.421 Q61.8819 522.27 61.8819 516.572 Q61.8819 514.026 61.2135 511.544 Q60.5133 509.029 59.1447 506.546 L64.5555 506.546 Q65.7014 508.997 66.2743 511.639 Q66.8472 514.249 66.8472 517.209 Q66.8472 525.262 61.7864 530.004 Q56.7257 534.747 48.132 534.747 Q39.411 534.747 34.4139 529.972 Q29.4168 525.166 29.4168 516.827 Q29.4168 514.122 29.9897 511.544 Q30.5308 508.965 31.6448 506.546 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M44.4081 466.729 L65.9242 466.729 L65.9242 472.585 L44.599 472.585 Q39.5383 472.585 37.0238 474.559 Q34.5094 476.532 34.5094 480.479 Q34.5094 485.221 37.5331 487.959 Q40.5568 490.696 45.7767 490.696 L65.9242 490.696 L65.9242 496.584 L16.399 496.584 L16.399 490.696 L35.8144 490.696 Q32.5997 488.595 31.0083 485.762 Q29.4168 482.898 29.4168 479.174 Q29.4168 473.031 33.2363 469.88 Q37.0238 466.729 44.4081 466.729 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip962)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,701.205 306.903,616.506 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,1009.52 1253.43,924.797 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1310.74 2199.96,1225.4 "></polyline>
<line clip-path="url(#clip962)" x1="326.903" y1="701.205" x2="286.903" y2="701.205" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="326.903" y1="616.506" x2="286.903" y2="616.506" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="1009.52" x2="1233.43" y2="1009.52" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="924.797" x2="1233.43" y2="924.797" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="1310.74" x2="2179.96" y2="1310.74" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="1225.4" x2="2179.96" y2="1225.4" style="stroke:#78c2ad; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip962)" cx="306.903" cy="651.695" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="1253.43" cy="959.996" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="2199.96" cy="1260.8" r="18" fill="#78c2ad" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip962)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,652.944 326.025,659.096 345.147,665.249 364.269,671.402 383.39,677.554 402.512,683.707 421.634,689.86 440.756,696.012 459.878,702.165 479,708.317 498.121,714.47 517.243,720.623 536.365,726.775 555.487,732.928 574.609,739.08 593.731,745.233 612.852,751.386 631.974,757.538 651.096,763.691 670.218,769.844 689.34,775.996 708.461,782.149 727.583,788.301 746.705,794.454 765.827,800.607 784.949,806.759 804.071,812.912 823.192,819.065 842.314,825.217 861.436,831.37 880.558,837.522 899.68,843.675 918.802,849.828 937.923,855.98 957.045,862.133 976.167,868.285 995.289,874.438 1014.41,880.591 1033.53,886.743 1052.65,892.896 1071.78,899.049 1090.9,905.201 1110.02,911.354 1129.14,917.506 1148.26,923.659 1167.39,929.812 1186.51,935.964 1205.63,942.117 1224.75,948.27 1243.87,954.422 1262.99,960.575 1282.12,966.727 1301.24,972.88 1320.36,979.033 1339.48,985.185 1358.6,991.338 1377.73,997.49 1396.85,1003.64 1415.97,1009.8 1435.09,1015.95 1454.21,1022.1 1473.33,1028.25 1492.46,1034.41 1511.58,1040.56 1530.7,1046.71 1549.82,1052.86 1568.94,1059.02 1588.07,1065.17 1607.19,1071.32 1626.31,1077.47 1645.43,1083.63 1664.55,1089.78 1683.67,1095.93 1702.8,1102.09 1721.92,1108.24 1741.04,1114.39 1760.16,1120.54 1779.28,1126.7 1798.41,1132.85 1817.53,1139 1836.65,1145.15 1855.77,1151.31 1874.89,1157.46 1894.01,1163.61 1913.14,1169.76 1932.26,1175.92 1951.38,1182.07 1970.5,1188.22 1989.62,1194.37 2008.75,1200.53 2027.87,1206.68 2046.99,1212.83 2066.11,1218.98 2085.23,1225.14 2104.35,1231.29 2123.48,1237.44 2142.6,1243.6 2161.72,1249.75 2180.84,1255.9 2199.96,1262.05 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,632.994 306.903,548.097 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,864.588 1253.43,779.67 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,1015.46 2199.96,929.77 "></polyline>
<line clip-path="url(#clip962)" x1="326.903" y1="632.994" x2="286.903" y2="632.994" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="326.903" y1="548.097" x2="286.903" y2="548.097" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="864.588" x2="1233.43" y2="864.588" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="779.67" x2="1233.43" y2="779.67" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="1015.46" x2="2179.96" y2="1015.46" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="929.77" x2="2179.96" y2="929.77" style="stroke:#e95420; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip962)" cx="306.903" cy="583.353" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="1253.43" cy="814.932" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="2199.96" cy="965.29" r="18" fill="#e95420" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip962)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,596.89 326.025,600.748 345.147,604.606 364.269,608.463 383.39,612.321 402.512,616.179 421.634,620.037 440.756,623.895 459.878,627.753 479,631.611 498.121,635.469 517.243,639.327 536.365,643.185 555.487,647.043 574.609,650.901 593.731,654.759 612.852,658.617 631.974,662.475 651.096,666.333 670.218,670.191 689.34,674.049 708.461,677.907 727.583,681.765 746.705,685.623 765.827,689.481 784.949,693.339 804.071,697.196 823.192,701.054 842.314,704.912 861.436,708.77 880.558,712.628 899.68,716.486 918.802,720.344 937.923,724.202 957.045,728.06 976.167,731.918 995.289,735.776 1014.41,739.634 1033.53,743.492 1052.65,747.35 1071.78,751.208 1090.9,755.066 1110.02,758.924 1129.14,762.782 1148.26,766.64 1167.39,770.498 1186.51,774.356 1205.63,778.214 1224.75,782.072 1243.87,785.929 1262.99,789.787 1282.12,793.645 1301.24,797.503 1320.36,801.361 1339.48,805.219 1358.6,809.077 1377.73,812.935 1396.85,816.793 1415.97,820.651 1435.09,824.509 1454.21,828.367 1473.33,832.225 1492.46,836.083 1511.58,839.941 1530.7,843.799 1549.82,847.657 1568.94,851.515 1588.07,855.373 1607.19,859.231 1626.31,863.089 1645.43,866.947 1664.55,870.804 1683.67,874.662 1702.8,878.52 1721.92,882.378 1741.04,886.236 1760.16,890.094 1779.28,893.952 1798.41,897.81 1817.53,901.668 1836.65,905.526 1855.77,909.384 1874.89,913.242 1894.01,917.1 1913.14,920.958 1932.26,924.816 1951.38,928.674 1970.5,932.532 1989.62,936.39 2008.75,940.248 2027.87,944.106 2046.99,947.964 2066.11,951.822 2085.23,955.68 2104.35,959.537 2123.48,963.395 2142.6,967.253 2161.72,971.111 2180.84,974.969 2199.96,978.827 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,352.954 306.903,267.518 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,298.83 1253.43,213.726 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,169.07 2199.96,84.0448 "></polyline>
<line clip-path="url(#clip962)" x1="326.903" y1="352.954" x2="286.903" y2="352.954" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="326.903" y1="267.518" x2="286.903" y2="267.518" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="298.83" x2="1233.43" y2="298.83" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="213.726" x2="1233.43" y2="213.726" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="169.07" x2="2179.96" y2="169.07" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="84.0448" x2="2179.96" y2="84.0448" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip962)" cx="306.903" cy="302.953" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="1253.43" cy="249.051" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="2199.96" cy="119.343" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip962)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,315.587 326.025,313.732 345.147,311.878 364.269,310.023 383.39,308.169 402.512,306.314 421.634,304.459 440.756,302.605 459.878,300.75 479,298.895 498.121,297.041 517.243,295.186 536.365,293.331 555.487,291.477 574.609,289.622 593.731,287.767 612.852,285.913 631.974,284.058 651.096,282.203 670.218,280.349 689.34,278.494 708.461,276.64 727.583,274.785 746.705,272.93 765.827,271.076 784.949,269.221 804.071,267.366 823.192,265.512 842.314,263.657 861.436,261.802 880.558,259.948 899.68,258.093 918.802,256.238 937.923,254.384 957.045,252.529 976.167,250.674 995.289,248.82 1014.41,246.965 1033.53,245.111 1052.65,243.256 1071.78,241.401 1090.9,239.547 1110.02,237.692 1129.14,235.837 1148.26,233.983 1167.39,232.128 1186.51,230.273 1205.63,228.419 1224.75,226.564 1243.87,224.709 1262.99,222.855 1282.12,221 1301.24,219.145 1320.36,217.291 1339.48,215.436 1358.6,213.582 1377.73,211.727 1396.85,209.872 1415.97,208.018 1435.09,206.163 1454.21,204.308 1473.33,202.454 1492.46,200.599 1511.58,198.744 1530.7,196.89 1549.82,195.035 1568.94,193.18 1588.07,191.326 1607.19,189.471 1626.31,187.616 1645.43,185.762 1664.55,183.907 1683.67,182.053 1702.8,180.198 1721.92,178.343 1741.04,176.489 1760.16,174.634 1779.28,172.779 1798.41,170.925 1817.53,169.07 1836.65,167.215 1855.77,165.361 1874.89,163.506 1894.01,161.651 1913.14,159.797 1932.26,157.942 1951.38,156.087 1970.5,154.233 1989.62,152.378 2008.75,150.524 2027.87,148.669 2046.99,146.814 2066.11,144.96 2085.23,143.105 2104.35,141.25 2123.48,139.396 2142.6,137.541 2161.72,135.686 2180.84,133.832 2199.96,131.977 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,418.738 306.903,334.03 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,448.112 1253.43,363.417 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,474.059 2199.96,389.378 "></polyline>
<line clip-path="url(#clip962)" x1="326.903" y1="418.738" x2="286.903" y2="418.738" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="326.903" y1="334.03" x2="286.903" y2="334.03" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="448.112" x2="1233.43" y2="448.112" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="363.417" x2="1233.43" y2="363.417" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="474.059" x2="2179.96" y2="474.059" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="389.378" x2="2179.96" y2="389.378" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip962)" cx="306.903" cy="369.222" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="1253.43" cy="398.605" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="2199.96" cy="424.561" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip962)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,369.793 326.025,370.352 345.147,370.911 364.269,371.47 383.39,372.029 402.512,372.588 421.634,373.147 440.756,373.706 459.878,374.265 479,374.824 498.121,375.383 517.243,375.942 536.365,376.501 555.487,377.06 574.609,377.619 593.731,378.178 612.852,378.737 631.974,379.296 651.096,379.855 670.218,380.414 689.34,380.973 708.461,381.532 727.583,382.091 746.705,382.65 765.827,383.209 784.949,383.768 804.071,384.327 823.192,384.886 842.314,385.445 861.436,386.004 880.558,386.563 899.68,387.122 918.802,387.681 937.923,388.24 957.045,388.798 976.167,389.357 995.289,389.916 1014.41,390.475 1033.53,391.034 1052.65,391.593 1071.78,392.152 1090.9,392.711 1110.02,393.27 1129.14,393.829 1148.26,394.388 1167.39,394.947 1186.51,395.506 1205.63,396.065 1224.75,396.624 1243.87,397.183 1262.99,397.742 1282.12,398.301 1301.24,398.86 1320.36,399.419 1339.48,399.978 1358.6,400.537 1377.73,401.096 1396.85,401.655 1415.97,402.214 1435.09,402.773 1454.21,403.332 1473.33,403.891 1492.46,404.45 1511.58,405.009 1530.7,405.568 1549.82,406.127 1568.94,406.686 1588.07,407.245 1607.19,407.804 1626.31,408.363 1645.43,408.922 1664.55,409.481 1683.67,410.04 1702.8,410.599 1721.92,411.158 1741.04,411.717 1760.16,412.276 1779.28,412.835 1798.41,413.394 1817.53,413.953 1836.65,414.512 1855.77,415.071 1874.89,415.63 1894.01,416.189 1913.14,416.748 1932.26,417.307 1951.38,417.866 1970.5,418.425 1989.62,418.984 2008.75,419.542 2027.87,420.101 2046.99,420.66 2066.11,421.219 2085.23,421.778 2104.35,422.337 2123.48,422.896 2142.6,423.455 2161.72,424.014 2180.84,424.573 2199.96,425.132 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="306.903,304.314 306.903,219.439 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1253.43,311.16 1253.43,226.462 "></polyline>
<polyline clip-path="url(#clip962)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.96,310.766 2199.96,226.083 "></polyline>
<line clip-path="url(#clip962)" x1="326.903" y1="304.314" x2="286.903" y2="304.314" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="326.903" y1="219.439" x2="286.903" y2="219.439" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="311.16" x2="1233.43" y2="311.16" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="1273.43" y1="226.462" x2="1233.43" y2="226.462" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="310.766" x2="2179.96" y2="310.766" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip962)" x1="2219.96" y1="226.083" x2="2179.96" y2="226.083" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip962)" cx="306.903" cy="254.687" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="1253.43" cy="261.651" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip962)" cx="2199.96" cy="261.267" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip962)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="306.903,255.911 326.025,255.978 345.147,256.044 364.269,256.111 383.39,256.177 402.512,256.244 421.634,256.31 440.756,256.377 459.878,256.443 479,256.51 498.121,256.576 517.243,256.643 536.365,256.709 555.487,256.775 574.609,256.842 593.731,256.908 612.852,256.975 631.974,257.041 651.096,257.108 670.218,257.174 689.34,257.241 708.461,257.307 727.583,257.374 746.705,257.44 765.827,257.507 784.949,257.573 804.071,257.64 823.192,257.706 842.314,257.773 861.436,257.839 880.558,257.905 899.68,257.972 918.802,258.038 937.923,258.105 957.045,258.171 976.167,258.238 995.289,258.304 1014.41,258.371 1033.53,258.437 1052.65,258.504 1071.78,258.57 1090.9,258.637 1110.02,258.703 1129.14,258.77 1148.26,258.836 1167.39,258.902 1186.51,258.969 1205.63,259.035 1224.75,259.102 1243.87,259.168 1262.99,259.235 1282.12,259.301 1301.24,259.368 1320.36,259.434 1339.48,259.501 1358.6,259.567 1377.73,259.634 1396.85,259.7 1415.97,259.767 1435.09,259.833 1454.21,259.899 1473.33,259.966 1492.46,260.032 1511.58,260.099 1530.7,260.165 1549.82,260.232 1568.94,260.298 1588.07,260.365 1607.19,260.431 1626.31,260.498 1645.43,260.564 1664.55,260.631 1683.67,260.697 1702.8,260.764 1721.92,260.83 1741.04,260.896 1760.16,260.963 1779.28,261.029 1798.41,261.096 1817.53,261.162 1836.65,261.229 1855.77,261.295 1874.89,261.362 1894.01,261.428 1913.14,261.495 1932.26,261.561 1951.38,261.628 1970.5,261.694 1989.62,261.761 2008.75,261.827 2027.87,261.894 2046.99,261.96 2066.11,262.026 2085.23,262.093 2104.35,262.159 2123.48,262.226 2142.6,262.292 2161.72,262.359 2180.84,262.425 2199.96,262.492 "></polyline>
<path clip-path="url(#clip960)" d="M316.999 1304.19 L944.05 1304.19 L944.05 993.154 L316.999 993.154  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<polyline clip-path="url(#clip960)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="316.999,1304.19 944.05,1304.19 944.05,993.154 316.999,993.154 316.999,1304.19 "></polyline>
<polyline clip-path="url(#clip960)" style="stroke:#78c2ad; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1044.99 473.072,1044.99 "></polyline>
<path clip-path="url(#clip960)" d="M495.9 1027.71 L523.053 1027.71 L523.053 1031.28 L501.201 1058.34 L523.585 1058.34 L523.585 1062.27 L495.368 1062.27 L495.368 1058.71 L517.22 1031.65 L495.9 1031.65 L495.9 1027.71 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M528.377 1027.71 L555.53 1027.71 L555.53 1031.28 L533.678 1058.34 L556.062 1058.34 L556.062 1062.27 L527.844 1062.27 L527.844 1058.71 L549.696 1031.65 L528.377 1031.65 L528.377 1027.71 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M587.96 1026.3 Q584.858 1031.63 583.353 1036.83 Q581.849 1042.04 581.849 1047.39 Q581.849 1052.74 583.353 1057.99 Q584.881 1063.22 587.96 1068.52 L584.256 1068.52 Q580.784 1063.08 579.048 1057.83 Q577.335 1052.57 577.335 1047.39 Q577.335 1042.23 579.048 1037 Q580.761 1031.76 584.256 1026.3 L587.96 1026.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M619.974 1057.34 L619.974 1048.06 L612.335 1048.06 L612.335 1044.22 L624.603 1044.22 L624.603 1059.06 Q621.895 1060.98 618.631 1061.97 Q615.367 1062.94 611.663 1062.94 Q603.562 1062.94 598.978 1058.22 Q594.418 1053.48 594.418 1045.03 Q594.418 1036.56 598.978 1031.83 Q603.562 1027.09 611.663 1027.09 Q615.043 1027.09 618.075 1027.92 Q621.131 1028.76 623.7 1030.38 L623.7 1035.35 Q621.108 1033.15 618.191 1032.04 Q615.275 1030.93 612.057 1030.93 Q605.714 1030.93 602.52 1034.47 Q599.349 1038.01 599.349 1045.03 Q599.349 1052.02 602.52 1055.56 Q605.714 1059.1 612.057 1059.1 Q614.534 1059.1 616.478 1058.69 Q618.423 1058.25 619.974 1057.34 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M632.96 1026.26 L637.219 1026.26 L637.219 1062.27 L632.96 1062.27 L632.96 1026.26 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M656.177 1039.33 Q652.751 1039.33 650.761 1042.02 Q648.77 1044.68 648.77 1049.33 Q648.77 1053.99 650.737 1056.67 Q652.728 1059.33 656.177 1059.33 Q659.58 1059.33 661.571 1056.65 Q663.561 1053.96 663.561 1049.33 Q663.561 1044.73 661.571 1042.04 Q659.58 1039.33 656.177 1039.33 M656.177 1035.72 Q661.733 1035.72 664.904 1039.33 Q668.075 1042.94 668.075 1049.33 Q668.075 1055.7 664.904 1059.33 Q661.733 1062.94 656.177 1062.94 Q650.598 1062.94 647.427 1059.33 Q644.279 1055.7 644.279 1049.33 Q644.279 1042.94 647.427 1039.33 Q650.598 1035.72 656.177 1035.72 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M693.746 1049.33 Q693.746 1044.63 691.802 1041.97 Q689.881 1039.29 686.501 1039.29 Q683.121 1039.29 681.177 1041.97 Q679.256 1044.63 679.256 1049.33 Q679.256 1054.03 681.177 1056.72 Q683.121 1059.38 686.501 1059.38 Q689.881 1059.38 691.802 1056.72 Q693.746 1054.03 693.746 1049.33 M679.256 1040.28 Q680.598 1037.97 682.635 1036.86 Q684.696 1035.72 687.543 1035.72 Q692.265 1035.72 695.205 1039.47 Q698.168 1043.22 698.168 1049.33 Q698.168 1055.44 695.205 1059.19 Q692.265 1062.94 687.543 1062.94 Q684.696 1062.94 682.635 1061.83 Q680.598 1060.7 679.256 1058.38 L679.256 1062.27 L674.973 1062.27 L674.973 1026.26 L679.256 1026.26 L679.256 1040.28 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M717.01 1049.24 Q711.848 1049.24 709.857 1050.42 Q707.867 1051.6 707.867 1054.45 Q707.867 1056.72 709.348 1058.06 Q710.853 1059.38 713.422 1059.38 Q716.964 1059.38 719.093 1056.88 Q721.246 1054.36 721.246 1050.19 L721.246 1049.24 L717.01 1049.24 M725.505 1047.48 L725.505 1062.27 L721.246 1062.27 L721.246 1058.34 Q719.788 1060.7 717.612 1061.83 Q715.436 1062.94 712.288 1062.94 Q708.306 1062.94 705.945 1060.72 Q703.607 1058.48 703.607 1054.73 Q703.607 1050.35 706.524 1048.13 Q709.464 1045.91 715.274 1045.91 L721.246 1045.91 L721.246 1045.49 Q721.246 1042.55 719.302 1040.95 Q717.381 1039.33 713.885 1039.33 Q711.663 1039.33 709.556 1039.87 Q707.45 1040.4 705.506 1041.46 L705.506 1037.53 Q707.844 1036.63 710.043 1036.19 Q712.242 1035.72 714.325 1035.72 Q719.95 1035.72 722.728 1038.64 Q725.505 1041.56 725.505 1047.48 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M734.279 1026.26 L738.538 1026.26 L738.538 1062.27 L734.279 1062.27 L734.279 1026.26 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M781.13 1049.33 Q781.13 1044.63 779.186 1041.97 Q777.264 1039.29 773.885 1039.29 Q770.505 1039.29 768.561 1041.97 Q766.64 1044.63 766.64 1049.33 Q766.64 1054.03 768.561 1056.72 Q770.505 1059.38 773.885 1059.38 Q777.264 1059.38 779.186 1056.72 Q781.13 1054.03 781.13 1049.33 M766.64 1040.28 Q767.982 1037.97 770.019 1036.86 Q772.079 1035.72 774.927 1035.72 Q779.649 1035.72 782.589 1039.47 Q785.551 1043.22 785.551 1049.33 Q785.551 1055.44 782.589 1059.19 Q779.649 1062.94 774.927 1062.94 Q772.079 1062.94 770.019 1061.83 Q767.982 1060.7 766.64 1058.38 L766.64 1062.27 L762.357 1062.27 L762.357 1026.26 L766.64 1026.26 L766.64 1040.28 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M802.658 1039.33 Q799.232 1039.33 797.241 1042.02 Q795.25 1044.68 795.25 1049.33 Q795.25 1053.99 797.218 1056.67 Q799.209 1059.33 802.658 1059.33 Q806.061 1059.33 808.051 1056.65 Q810.042 1053.96 810.042 1049.33 Q810.042 1044.73 808.051 1042.04 Q806.061 1039.33 802.658 1039.33 M802.658 1035.72 Q808.213 1035.72 811.385 1039.33 Q814.556 1042.94 814.556 1049.33 Q814.556 1055.7 811.385 1059.33 Q808.213 1062.94 802.658 1062.94 Q797.079 1062.94 793.908 1059.33 Q790.76 1055.7 790.76 1049.33 Q790.76 1042.94 793.908 1039.33 Q797.079 1035.72 802.658 1035.72 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M821.176 1052.04 L821.176 1036.35 L825.435 1036.35 L825.435 1051.88 Q825.435 1055.56 826.871 1057.41 Q828.306 1059.24 831.176 1059.24 Q834.625 1059.24 836.616 1057.04 Q838.63 1054.84 838.63 1051.05 L838.63 1036.35 L842.889 1036.35 L842.889 1062.27 L838.63 1062.27 L838.63 1058.29 Q837.079 1060.65 835.019 1061.81 Q832.982 1062.94 830.273 1062.94 Q825.806 1062.94 823.491 1060.17 Q821.176 1057.39 821.176 1052.04 M831.894 1035.72 L831.894 1035.72 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M873.213 1046.63 L873.213 1062.27 L868.954 1062.27 L868.954 1046.76 Q868.954 1043.08 867.519 1041.26 Q866.083 1039.43 863.213 1039.43 Q859.764 1039.43 857.773 1041.63 Q855.783 1043.82 855.783 1047.62 L855.783 1062.27 L851.5 1062.27 L851.5 1036.35 L855.783 1036.35 L855.783 1040.38 Q857.31 1038.04 859.37 1036.88 Q861.454 1035.72 864.162 1035.72 Q868.63 1035.72 870.921 1038.5 Q873.213 1041.26 873.213 1046.63 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M898.768 1040.28 L898.768 1026.26 L903.028 1026.26 L903.028 1062.27 L898.768 1062.27 L898.768 1058.38 Q897.426 1060.7 895.366 1061.83 Q893.329 1062.94 890.458 1062.94 Q885.759 1062.94 882.796 1059.19 Q879.856 1055.44 879.856 1049.33 Q879.856 1043.22 882.796 1039.47 Q885.759 1035.72 890.458 1035.72 Q893.329 1035.72 895.366 1036.86 Q897.426 1037.97 898.768 1040.28 M884.255 1049.33 Q884.255 1054.03 886.176 1056.72 Q888.12 1059.38 891.5 1059.38 Q894.88 1059.38 896.824 1056.72 Q898.768 1054.03 898.768 1049.33 Q898.768 1044.63 896.824 1041.97 Q894.88 1039.29 891.5 1039.29 Q888.12 1039.29 886.176 1041.97 Q884.255 1044.63 884.255 1049.33 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M911.129 1026.3 L914.833 1026.3 Q918.305 1031.76 920.018 1037 Q921.754 1042.23 921.754 1047.39 Q921.754 1052.57 920.018 1057.83 Q918.305 1063.08 914.833 1068.52 L911.129 1068.52 Q914.208 1063.22 915.713 1057.99 Q917.241 1052.74 917.241 1047.39 Q917.241 1042.04 915.713 1036.83 Q914.208 1031.63 911.129 1026.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip960)" style="stroke:#e95420; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1096.83 473.072,1096.83 "></polyline>
<path clip-path="url(#clip960)" d="M495.9 1079.55 L523.053 1079.55 L523.053 1083.12 L501.201 1110.18 L523.585 1110.18 L523.585 1114.11 L495.368 1114.11 L495.368 1110.55 L517.22 1083.49 L495.9 1083.49 L495.9 1079.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M528.377 1079.55 L555.53 1079.55 L555.53 1083.12 L533.678 1110.18 L556.062 1110.18 L556.062 1114.11 L527.844 1114.11 L527.844 1110.55 L549.696 1083.49 L528.377 1083.49 L528.377 1079.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M587.96 1078.14 Q584.858 1083.47 583.353 1088.67 Q581.849 1093.88 581.849 1099.23 Q581.849 1104.58 583.353 1109.83 Q584.881 1115.06 587.96 1120.36 L584.256 1120.36 Q580.784 1114.92 579.048 1109.67 Q577.335 1104.41 577.335 1099.23 Q577.335 1094.07 579.048 1088.84 Q580.761 1083.6 584.256 1078.14 L587.96 1078.14 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M607.96 1084.16 L601.617 1101.36 L614.326 1101.36 L607.96 1084.16 M605.321 1079.55 L610.622 1079.55 L623.793 1114.11 L618.932 1114.11 L615.784 1105.25 L600.205 1105.25 L597.057 1114.11 L592.127 1114.11 L605.321 1079.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M640.089 1078.1 L640.089 1081.64 L636.015 1081.64 Q633.724 1081.64 632.821 1082.56 Q631.941 1083.49 631.941 1085.9 L631.941 1088.19 L638.955 1088.19 L638.955 1091.5 L631.941 1091.5 L631.941 1114.11 L627.659 1114.11 L627.659 1091.5 L623.585 1091.5 L623.585 1088.19 L627.659 1088.19 L627.659 1086.38 Q627.659 1082.05 629.673 1080.09 Q631.687 1078.1 636.062 1078.1 L640.089 1078.1 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M656.779 1078.1 L656.779 1081.64 L652.705 1081.64 Q650.413 1081.64 649.511 1082.56 Q648.631 1083.49 648.631 1085.9 L648.631 1088.19 L655.645 1088.19 L655.645 1091.5 L648.631 1091.5 L648.631 1114.11 L644.349 1114.11 L644.349 1091.5 L640.274 1091.5 L640.274 1088.19 L644.349 1088.19 L644.349 1086.38 Q644.349 1082.05 646.362 1080.09 Q648.376 1078.1 652.751 1078.1 L656.779 1078.1 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M660.344 1088.19 L664.603 1088.19 L664.603 1114.11 L660.344 1114.11 L660.344 1088.19 M660.344 1078.1 L664.603 1078.1 L664.603 1083.49 L660.344 1083.49 L660.344 1078.1 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M695.066 1098.47 L695.066 1114.11 L690.807 1114.11 L690.807 1098.6 Q690.807 1094.92 689.371 1093.1 Q687.936 1091.27 685.066 1091.27 Q681.617 1091.27 679.626 1093.47 Q677.635 1095.66 677.635 1099.46 L677.635 1114.11 L673.353 1114.11 L673.353 1088.19 L677.635 1088.19 L677.635 1092.22 Q679.163 1089.88 681.223 1088.72 Q683.307 1087.56 686.015 1087.56 Q690.483 1087.56 692.774 1090.34 Q695.066 1093.1 695.066 1098.47 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M725.737 1100.09 L725.737 1102.17 L706.154 1102.17 Q706.432 1106.57 708.793 1108.88 Q711.177 1111.17 715.413 1111.17 Q717.867 1111.17 720.158 1110.57 Q722.473 1109.97 724.742 1108.77 L724.742 1112.79 Q722.45 1113.77 720.043 1114.28 Q717.635 1114.78 715.158 1114.78 Q708.955 1114.78 705.32 1111.17 Q701.709 1107.56 701.709 1101.41 Q701.709 1095.04 705.135 1091.31 Q708.584 1087.56 714.418 1087.56 Q719.649 1087.56 722.681 1090.94 Q725.737 1094.3 725.737 1100.09 M721.478 1098.84 Q721.431 1095.34 719.51 1093.26 Q717.612 1091.17 714.464 1091.17 Q710.899 1091.17 708.746 1093.19 Q706.617 1095.2 706.293 1098.86 L721.478 1098.84 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M766.408 1101.17 Q766.408 1096.47 764.464 1093.81 Q762.542 1091.13 759.163 1091.13 Q755.783 1091.13 753.839 1093.81 Q751.917 1096.47 751.917 1101.17 Q751.917 1105.87 753.839 1108.56 Q755.783 1111.22 759.163 1111.22 Q762.542 1111.22 764.464 1108.56 Q766.408 1105.87 766.408 1101.17 M751.917 1092.12 Q753.26 1089.81 755.297 1088.7 Q757.357 1087.56 760.204 1087.56 Q764.927 1087.56 767.866 1091.31 Q770.829 1095.06 770.829 1101.17 Q770.829 1107.28 767.866 1111.03 Q764.927 1114.78 760.204 1114.78 Q757.357 1114.78 755.297 1113.67 Q753.26 1112.54 751.917 1110.22 L751.917 1114.11 L747.635 1114.11 L747.635 1078.1 L751.917 1078.1 L751.917 1092.12 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M787.936 1091.17 Q784.51 1091.17 782.519 1093.86 Q780.528 1096.52 780.528 1101.17 Q780.528 1105.83 782.496 1108.51 Q784.487 1111.17 787.936 1111.17 Q791.338 1111.17 793.329 1108.49 Q795.32 1105.8 795.32 1101.17 Q795.32 1096.57 793.329 1093.88 Q791.338 1091.17 787.936 1091.17 M787.936 1087.56 Q793.491 1087.56 796.663 1091.17 Q799.834 1094.78 799.834 1101.17 Q799.834 1107.54 796.663 1111.17 Q793.491 1114.78 787.936 1114.78 Q782.357 1114.78 779.186 1111.17 Q776.038 1107.54 776.038 1101.17 Q776.038 1094.78 779.186 1091.17 Q782.357 1087.56 787.936 1087.56 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M806.454 1103.88 L806.454 1088.19 L810.713 1088.19 L810.713 1103.72 Q810.713 1107.4 812.149 1109.25 Q813.584 1111.08 816.454 1111.08 Q819.903 1111.08 821.894 1108.88 Q823.908 1106.68 823.908 1102.89 L823.908 1088.19 L828.167 1088.19 L828.167 1114.11 L823.908 1114.11 L823.908 1110.13 Q822.357 1112.49 820.297 1113.65 Q818.26 1114.78 815.551 1114.78 Q811.084 1114.78 808.769 1112.01 Q806.454 1109.23 806.454 1103.88 M817.172 1087.56 L817.172 1087.56 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M858.491 1098.47 L858.491 1114.11 L854.232 1114.11 L854.232 1098.6 Q854.232 1094.92 852.796 1093.1 Q851.361 1091.27 848.491 1091.27 Q845.042 1091.27 843.051 1093.47 Q841.06 1095.66 841.06 1099.46 L841.06 1114.11 L836.778 1114.11 L836.778 1088.19 L841.06 1088.19 L841.06 1092.22 Q842.588 1089.88 844.648 1088.72 Q846.732 1087.56 849.44 1087.56 Q853.908 1087.56 856.199 1090.34 Q858.491 1093.1 858.491 1098.47 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M884.046 1092.12 L884.046 1078.1 L888.306 1078.1 L888.306 1114.11 L884.046 1114.11 L884.046 1110.22 Q882.704 1112.54 880.644 1113.67 Q878.607 1114.78 875.736 1114.78 Q871.037 1114.78 868.074 1111.03 Q865.134 1107.28 865.134 1101.17 Q865.134 1095.06 868.074 1091.31 Q871.037 1087.56 875.736 1087.56 Q878.607 1087.56 880.644 1088.7 Q882.704 1089.81 884.046 1092.12 M869.532 1101.17 Q869.532 1105.87 871.454 1108.56 Q873.398 1111.22 876.778 1111.22 Q880.157 1111.22 882.102 1108.56 Q884.046 1105.87 884.046 1101.17 Q884.046 1096.47 882.102 1093.81 Q880.157 1091.13 876.778 1091.13 Q873.398 1091.13 871.454 1093.81 Q869.532 1096.47 869.532 1101.17 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M896.407 1078.14 L900.111 1078.14 Q903.583 1083.6 905.296 1088.84 Q907.032 1094.07 907.032 1099.23 Q907.032 1104.41 905.296 1109.67 Q903.583 1114.92 900.111 1120.36 L896.407 1120.36 Q899.486 1115.06 900.991 1109.83 Q902.518 1104.58 902.518 1099.23 Q902.518 1093.88 900.991 1088.67 Q899.486 1083.47 896.407 1078.14 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip960)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1148.67 473.072,1148.67 "></polyline>
<path clip-path="url(#clip960)" d="M495.9 1131.39 L523.053 1131.39 L523.053 1134.96 L501.201 1162.02 L523.585 1162.02 L523.585 1165.95 L495.368 1165.95 L495.368 1162.39 L517.22 1135.33 L495.9 1135.33 L495.9 1131.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M528.377 1131.39 L555.53 1131.39 L555.53 1134.96 L533.678 1162.02 L556.062 1162.02 L556.062 1165.95 L527.844 1165.95 L527.844 1162.39 L549.696 1135.33 L528.377 1135.33 L528.377 1131.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M559.673 1151.07 L572.15 1151.07 L572.15 1154.87 L559.673 1154.87 L559.673 1151.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M604.997 1134.06 L604.997 1138.99 Q602.636 1136.79 599.951 1135.7 Q597.289 1134.61 594.279 1134.61 Q588.353 1134.61 585.205 1138.25 Q582.057 1141.86 582.057 1148.71 Q582.057 1155.54 585.205 1159.17 Q588.353 1162.78 594.279 1162.78 Q597.289 1162.78 599.951 1161.69 Q602.636 1160.61 604.997 1158.41 L604.997 1163.29 Q602.543 1164.96 599.789 1165.79 Q597.057 1166.62 594.002 1166.62 Q586.154 1166.62 581.641 1161.83 Q577.127 1157.02 577.127 1148.71 Q577.127 1140.37 581.641 1135.58 Q586.154 1130.77 594.002 1130.77 Q597.103 1130.77 599.835 1131.6 Q602.589 1132.41 604.997 1134.06 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M621.131 1165.95 L607.937 1131.39 L612.821 1131.39 L623.77 1160.49 L634.742 1131.39 L639.603 1131.39 L626.432 1165.95 L621.131 1165.95 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip960)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1200.51 473.072,1200.51 "></polyline>
<path clip-path="url(#clip960)" d="M495.9 1183.23 L523.053 1183.23 L523.053 1186.8 L501.201 1213.86 L523.585 1213.86 L523.585 1217.79 L495.368 1217.79 L495.368 1214.23 L517.22 1187.17 L495.9 1187.17 L495.9 1183.23 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M528.377 1183.23 L555.53 1183.23 L555.53 1186.8 L533.678 1213.86 L556.062 1213.86 L556.062 1217.79 L527.844 1217.79 L527.844 1214.23 L549.696 1187.17 L528.377 1187.17 L528.377 1183.23 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M559.673 1202.91 L572.15 1202.91 L572.15 1206.71 L559.673 1206.71 L559.673 1202.91 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M599.835 1184.37 L599.835 1188.93 Q597.173 1187.65 594.812 1187.03 Q592.451 1186.4 590.252 1186.4 Q586.432 1186.4 584.349 1187.89 Q582.289 1189.37 582.289 1192.1 Q582.289 1194.39 583.654 1195.57 Q585.043 1196.73 588.886 1197.45 L591.71 1198.03 Q596.941 1199.02 599.418 1201.54 Q601.918 1204.04 601.918 1208.26 Q601.918 1213.28 598.539 1215.87 Q595.182 1218.46 588.678 1218.46 Q586.224 1218.46 583.446 1217.91 Q580.691 1217.35 577.728 1216.27 L577.728 1211.45 Q580.576 1213.05 583.307 1213.86 Q586.039 1214.67 588.678 1214.67 Q592.682 1214.67 594.858 1213.09 Q597.034 1211.52 597.034 1208.6 Q597.034 1206.06 595.46 1204.62 Q593.909 1203.19 590.344 1202.47 L587.497 1201.91 Q582.266 1200.87 579.928 1198.65 Q577.59 1196.43 577.59 1192.47 Q577.59 1187.89 580.807 1185.25 Q584.048 1182.61 589.719 1182.61 Q592.15 1182.61 594.673 1183.05 Q597.196 1183.49 599.835 1184.37 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M629.927 1184.37 L629.927 1188.93 Q627.265 1187.65 624.904 1187.03 Q622.543 1186.4 620.344 1186.4 Q616.525 1186.4 614.441 1187.89 Q612.381 1189.37 612.381 1192.1 Q612.381 1194.39 613.747 1195.57 Q615.136 1196.73 618.978 1197.45 L621.802 1198.03 Q627.034 1199.02 629.511 1201.54 Q632.011 1204.04 632.011 1208.26 Q632.011 1213.28 628.631 1215.87 Q625.275 1218.46 618.77 1218.46 Q616.316 1218.46 613.538 1217.91 Q610.784 1217.35 607.821 1216.27 L607.821 1211.45 Q610.668 1213.05 613.4 1213.86 Q616.131 1214.67 618.77 1214.67 Q622.775 1214.67 624.95 1213.09 Q627.126 1211.52 627.126 1208.6 Q627.126 1206.06 625.552 1204.62 Q624.001 1203.19 620.437 1202.47 L617.589 1201.91 Q612.358 1200.87 610.02 1198.65 Q607.682 1196.43 607.682 1192.47 Q607.682 1187.89 610.9 1185.25 Q614.14 1182.61 619.812 1182.61 Q622.242 1182.61 624.765 1183.05 Q627.288 1183.49 629.927 1184.37 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip960)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="339.295,1252.35 473.072,1252.35 "></polyline>
<path clip-path="url(#clip960)" d="M495.9 1235.07 L523.053 1235.07 L523.053 1238.64 L501.201 1265.7 L523.585 1265.7 L523.585 1269.63 L495.368 1269.63 L495.368 1266.07 L517.22 1239.01 L495.9 1239.01 L495.9 1235.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M528.377 1235.07 L555.53 1235.07 L555.53 1238.64 L533.678 1265.7 L556.062 1265.7 L556.062 1269.63 L527.844 1269.63 L527.844 1266.07 L549.696 1239.01 L528.377 1239.01 L528.377 1235.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M559.673 1254.75 L572.15 1254.75 L572.15 1258.55 L559.673 1258.55 L559.673 1254.75 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M579.117 1235.07 L583.793 1235.07 L583.793 1269.63 L579.117 1269.63 L579.117 1235.07 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip960)" d="M613.816 1236.21 L613.816 1240.77 Q611.154 1239.49 608.793 1238.87 Q606.432 1238.24 604.233 1238.24 Q600.414 1238.24 598.33 1239.73 Q596.27 1241.21 596.27 1243.94 Q596.27 1246.23 597.636 1247.41 Q599.025 1248.57 602.867 1249.29 L605.691 1249.87 Q610.923 1250.86 613.4 1253.38 Q615.9 1255.88 615.9 1260.1 Q615.9 1265.12 612.52 1267.71 Q609.164 1270.3 602.659 1270.3 Q600.205 1270.3 597.427 1269.75 Q594.673 1269.19 591.71 1268.11 L591.71 1263.29 Q594.557 1264.89 597.289 1265.7 Q600.02 1266.51 602.659 1266.51 Q606.664 1266.51 608.839 1264.93 Q611.015 1263.36 611.015 1260.44 Q611.015 1257.9 609.441 1256.46 Q607.89 1255.03 604.326 1254.31 L601.478 1253.75 Q596.247 1252.71 593.909 1250.49 Q591.571 1248.27 591.571 1244.31 Q591.571 1239.73 594.789 1237.09 Q598.029 1234.45 603.701 1234.45 Q606.131 1234.45 608.654 1234.89 Q611.177 1235.33 613.816 1236.21 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path></svg>
</div>
</div>
<p>制御変数による方法は <img src="https://latex.codecogs.com/png.latex?n%5Cto%5Cinfty"> の漸近論に基づいているので，観測数が増えるほど効率は上がっていく．</p>
</section>
<section id="大規模不均衡データ" class="level2" data-number="1.9">
<h2 data-number="1.9" class="anchored" data-anchor-id="大規模不均衡データ"><span class="header-section-number">1.9</span> 大規模不均衡データ</h2>
<p>大規模不均衡データでは，事後分布が十分な集中性を持たないために制御変数による方法 ZZ-CV が十分な効率改善を示さないが，重点サブサンプリングによれば Poisson 強度関数のタイトな上界を引き続き構成できる．</p>
<p>ここでは，<img src="https://latex.codecogs.com/png.latex?%5Cxi_0=1"> を真値とし，次のような１次元データを考える： <img src="https://latex.codecogs.com/png.latex?%0AX%5Ej%5Coverset%7B%5Ctext%7Biid%7D%7D%7B%5Csim%7D(1-%5Calpha)%5Cdelta_0+%5Calpha%5Cmathrm%7BN%7D(1,2)%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BP%7D%5BY%5Ej=1%5D=%5Cfrac%7B1%7D%7B1+e%5E%7B-X%5Ej%7D%7D%0A"></p>
<div id="50e975ca" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb16-1">ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True value</span></span>
<span id="cb16-2">Σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb16-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_SparseData</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>, α<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>; ρ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MvNormal</span>(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, Σ))</span>
<span id="cb16-6">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n</span>
<span id="cb16-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> α ? <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>(ρ)[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(x, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span>
<span id="cb16-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb16-10">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Float64</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reshape</span>(x,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>))</span>
<span id="cb16-11">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Bernoulli</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic</span>.(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x)))</span>
<span id="cb16-12">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Float64</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vec</span>(y))</span>
<span id="cb16-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x, y</span>
<span id="cb16-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">α_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>]</span>
<span id="cb16-17"></span>
<span id="cb16-18">x_Sparse, y_Sparse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [], []</span>
<span id="cb16-19"></span>
<span id="cb16-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> α <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> α_list</span>
<span id="cb16-21">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_SparseData</span>(n, α)</span>
<span id="cb16-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(x_Sparse, x)</span>
<span id="cb16-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(y_Sparse, y)</span>
<span id="cb16-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</div>
<div id="16d8c306" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Optim</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_Sparse</span>(ξ_star, ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pos</span>(θ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">∇U</span>(ξ_star,x,y)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span>(ξ, θ, x, y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ξ_star[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb17-4">ξ_star_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-5">α_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>]</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> α <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(α_list)</span>
<span id="cb17-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimize</span>(ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(ξ, x_Sparse[α], y_Sparse[α]), [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LBFGS</span>())</span>
<span id="cb17-9">    ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Optim.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">minimizer</span>(result)</span>
<span id="cb17-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ξ_star_list, ξ)</span>
<span id="cb17-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb17-12"></span>
<span id="cb17-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_Sparse</span>(N, T, dt; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, α_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>])</span>
<span id="cb17-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ESSs_sum_CV = zero(α_list)</span></span>
<span id="cb17-15">    ESSs_sum_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(α_list)</span>
<span id="cb17-16">    ESSs_sum_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(α_list)</span>
<span id="cb17-17"></span>
<span id="cb17-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>N</span>
<span id="cb17-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ESSs_CV = []</span></span>
<span id="cb17-20">        ESSs_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-21">        ESSs_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(α_list)</span>
<span id="cb17-23">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ab_Sparse(ξ, θ, x, y, ::ZigZag1d) = (a_Sparse(ξ_star_list[i], ξ, θ, x, y), b_Affine(ξ, θ, x, y))</span></span>
<span id="cb17-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># push!(ESSs_CV, getESSperEpoch_SS(ab_Sparse, ZZ1d_CV, T, dt, x_Sparse[i], y_Sparse[i]; ξ0=ξ0, θ0=θ0))</span></span>
<span id="cb17-25">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_SS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab_Global, ZZ1d_SS, T, dt, x_Sparse[i], y_Sparse[i]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb17-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(ESSs_IS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getESSperEpoch_SS</span>(ab_IS, ZZ1d_IS, T, dt, x_Sparse[i], y_Sparse[i]; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb17-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb17-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ESSs_sum_CV = [ESSs_sum_CV ESSs_CV]</span></span>
<span id="cb17-29">        ESSs_sum_SS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_SS ESSs_SS]</span>
<span id="cb17-30">        ESSs_sum_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ESSs_sum_IS ESSs_IS]</span>
<span id="cb17-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb17-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># return mean(ESSs_sum_CV, dims=2), var(ESSs_sum_CV, dims=2), mean(ESSs_sum_SS, dims=2), var(ESSs_sum_SS, dims=2), mean(ESSs_sum_IS, dims=2), var(ESSs_sum_IS, dims=2)</span></span>
<span id="cb17-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_SS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_SS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ESSs_sum_IS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(ESSs_sum_IS, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb17-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb17-35"></span>
<span id="cb17-36">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-37">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">500.0</span></span>
<span id="cb17-38">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb17-39"></span>
<span id="cb17-40">ESS_SS, var_ESS_SS, ESS_IS, var_ESS_IS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">experiment_Sparse</span>(N, T, dt; ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, θ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, α_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>α_list)</span></code></pre></div>
</div>
<div id="efb94dac" class="cell" data-execution_count="28">
<details class="code-fold">
<summary>プロット</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LaTeXStrings</span></span>
<span id="cb18-2">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">startPlot</span>(α_list, ESS_SS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_SS); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-SS"</span>, xlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>L<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sparsity </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span>alpha<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", </span>color<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">="</span>blue<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#, background_color=true</span></span>
<span id="cb18-3">)</span>
<span id="cb18-4">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPlot</span>(p, α_list, ESS_IS, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_IS); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-IS"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb18-5">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addPlot</span>(p, α_list, ESS_CV, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>.(var_ESS_CV); label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZZ-CV"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>)</span>
<span id="cb18-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>(p)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<!--?xml version="1.0" encoding="utf-8"?-->
<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="576" height="384" viewbox="0 0 2304 1536">
<defs>
  <clippath id="clip050">
    <rect x="0" y="0" width="2304" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip050)" d="M0 1536 L2304 1536 L2304 8.52651e-14 L0 8.52651e-14  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip051">
    <rect x="460" y="0" width="1614" height="1536"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip050)" d="M220.677 1347.54 L2256.76 1347.54 L2256.76 47.2441 L220.677 47.2441  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip052">
    <rect x="220" y="47" width="2037" height="1301"></rect>
  </clippath>
</defs>
<polyline clip-path="url(#clip052)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="278.302,1347.54 278.302,47.2441 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1238.72,1347.54 1238.72,47.2441 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2199.13,1347.54 2199.13,47.2441 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="220.677,1347.54 2256.76,1347.54 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="278.302,1347.54 278.302,1328.64 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1238.72,1347.54 1238.72,1328.64 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.13,1347.54 2199.13,1328.64 "></polyline>
<path clip-path="url(#clip050)" d="M228.568 1420.89 L236.207 1420.89 L236.207 1394.53 L227.896 1396.19 L227.896 1391.94 L236.16 1390.27 L240.836 1390.27 L240.836 1420.89 L248.475 1420.89 L248.475 1424.83 L228.568 1424.83 L228.568 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M267.919 1393.35 Q264.308 1393.35 262.48 1396.91 Q260.674 1400.45 260.674 1407.58 Q260.674 1414.69 262.48 1418.25 Q264.308 1421.8 267.919 1421.8 Q271.554 1421.8 273.359 1418.25 Q275.188 1414.69 275.188 1407.58 Q275.188 1400.45 273.359 1396.91 Q271.554 1393.35 267.919 1393.35 M267.919 1389.64 Q273.73 1389.64 276.785 1394.25 Q279.864 1398.83 279.864 1407.58 Q279.864 1416.31 276.785 1420.92 Q273.73 1425.5 267.919 1425.5 Q262.109 1425.5 259.031 1420.92 Q255.975 1416.31 255.975 1407.58 Q255.975 1398.83 259.031 1394.25 Q262.109 1389.64 267.919 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M279.864 1383.74 L303.975 1383.74 L303.975 1386.94 L279.864 1386.94 L279.864 1383.74 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M315.448 1394.22 L328.708 1394.22 L328.708 1397.42 L310.878 1397.42 L310.878 1394.22 Q313.041 1391.98 316.765 1388.22 Q320.507 1384.44 321.467 1383.35 Q323.291 1381.3 324.006 1379.89 Q324.739 1378.46 324.739 1377.09 Q324.739 1374.85 323.159 1373.44 Q321.598 1372.03 319.078 1372.03 Q317.291 1372.03 315.298 1372.65 Q313.323 1373.27 311.066 1374.53 L311.066 1370.69 Q313.36 1369.77 315.354 1369.3 Q317.348 1368.83 319.003 1368.83 Q323.366 1368.83 325.962 1371.01 Q328.557 1373.19 328.557 1376.84 Q328.557 1378.57 327.899 1380.13 Q327.259 1381.68 325.548 1383.78 Q325.078 1384.33 322.557 1386.94 Q320.037 1389.54 315.448 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1188.83 1420.89 L1196.47 1420.89 L1196.47 1394.53 L1188.16 1396.19 L1188.16 1391.94 L1196.42 1390.27 L1201.1 1390.27 L1201.1 1420.89 L1208.74 1420.89 L1208.74 1424.83 L1188.83 1424.83 L1188.83 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1228.18 1393.35 Q1224.57 1393.35 1222.74 1396.91 Q1220.94 1400.45 1220.94 1407.58 Q1220.94 1414.69 1222.74 1418.25 Q1224.57 1421.8 1228.18 1421.8 Q1231.82 1421.8 1233.62 1418.25 Q1235.45 1414.69 1235.45 1407.58 Q1235.45 1400.45 1233.62 1396.91 Q1231.82 1393.35 1228.18 1393.35 M1228.18 1389.64 Q1233.99 1389.64 1237.05 1394.25 Q1240.13 1398.83 1240.13 1407.58 Q1240.13 1416.31 1237.05 1420.92 Q1233.99 1425.5 1228.18 1425.5 Q1222.37 1425.5 1219.29 1420.92 Q1216.24 1416.31 1216.24 1407.58 Q1216.24 1398.83 1219.29 1394.25 Q1222.37 1389.64 1228.18 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1240.13 1383.74 L1264.24 1383.74 L1264.24 1386.94 L1240.13 1386.94 L1240.13 1383.74 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1273.1 1394.22 L1279.3 1394.22 L1279.3 1372.8 L1272.55 1374.15 L1272.55 1370.69 L1279.27 1369.34 L1283.07 1369.34 L1283.07 1394.22 L1289.27 1394.22 L1289.27 1397.42 L1273.1 1397.42 L1273.1 1394.22 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2164.11 1420.89 L2171.75 1420.89 L2171.75 1394.53 L2163.44 1396.19 L2163.44 1391.94 L2171.71 1390.27 L2176.38 1390.27 L2176.38 1420.89 L2184.02 1420.89 L2184.02 1424.83 L2164.11 1424.83 L2164.11 1420.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2203.47 1393.35 Q2199.85 1393.35 2198.03 1396.91 Q2196.22 1400.45 2196.22 1407.58 Q2196.22 1414.69 2198.03 1418.25 Q2199.85 1421.8 2203.47 1421.8 Q2207.1 1421.8 2208.91 1418.25 Q2210.73 1414.69 2210.73 1407.58 Q2210.73 1400.45 2208.91 1396.91 Q2207.1 1393.35 2203.47 1393.35 M2203.47 1389.64 Q2209.28 1389.64 2212.33 1394.25 Q2215.41 1398.83 2215.41 1407.58 Q2215.41 1416.31 2212.33 1420.92 Q2209.28 1425.5 2203.47 1425.5 Q2197.66 1425.5 2194.58 1420.92 Q2191.52 1416.31 2191.52 1407.58 Q2191.52 1398.83 2194.58 1394.25 Q2197.66 1389.64 2203.47 1389.64 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2225.11 1371.84 Q2222.18 1371.84 2220.69 1374.74 Q2219.23 1377.61 2219.23 1383.41 Q2219.23 1389.18 2220.69 1392.08 Q2222.18 1394.95 2225.11 1394.95 Q2228.07 1394.95 2229.53 1392.08 Q2231.02 1389.18 2231.02 1383.41 Q2231.02 1377.61 2229.53 1374.74 Q2228.07 1371.84 2225.11 1371.84 M2225.11 1368.83 Q2229.84 1368.83 2232.32 1372.57 Q2234.82 1376.3 2234.82 1383.41 Q2234.82 1390.5 2232.32 1394.24 Q2229.84 1397.96 2225.11 1397.96 Q2220.39 1397.96 2217.89 1394.24 Q2215.41 1390.5 2215.41 1383.41 Q2215.41 1376.3 2217.89 1372.57 Q2220.39 1368.83 2225.11 1368.83 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1107.35 1448.98 L1107.35 1455.25 Q1103.69 1453.5 1100.44 1452.64 Q1097.19 1451.78 1094.17 1451.78 Q1088.92 1451.78 1086.05 1453.81 Q1083.22 1455.85 1083.22 1459.61 Q1083.22 1462.76 1085.1 1464.38 Q1087.01 1465.97 1092.29 1466.96 L1096.18 1467.75 Q1103.37 1469.12 1106.77 1472.59 Q1110.21 1476.03 1110.21 1481.82 Q1110.21 1488.73 1105.56 1492.29 Q1100.95 1495.86 1092.01 1495.86 Q1088.63 1495.86 1084.81 1495.1 Q1081.02 1494.33 1076.95 1492.84 L1076.95 1486.21 Q1080.87 1488.41 1084.62 1489.53 Q1088.38 1490.64 1092.01 1490.64 Q1097.51 1490.64 1100.5 1488.47 Q1103.5 1486.31 1103.5 1482.3 Q1103.5 1478.8 1101.33 1476.83 Q1099.2 1474.85 1094.3 1473.87 L1090.38 1473.1 Q1083.19 1471.67 1079.97 1468.61 Q1076.76 1465.56 1076.76 1460.12 Q1076.76 1453.81 1081.18 1450.19 Q1085.64 1446.56 1093.44 1446.56 Q1096.78 1446.56 1100.25 1447.16 Q1103.72 1447.77 1107.35 1448.98 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1125.65 1489.59 L1125.65 1508.49 L1119.76 1508.49 L1119.76 1459.29 L1125.65 1459.29 L1125.65 1464.7 Q1127.49 1461.52 1130.3 1459.99 Q1133.13 1458.43 1137.04 1458.43 Q1143.54 1458.43 1147.58 1463.58 Q1151.65 1468.74 1151.65 1477.14 Q1151.65 1485.55 1147.58 1490.7 Q1143.54 1495.86 1137.04 1495.86 Q1133.13 1495.86 1130.3 1494.33 Q1127.49 1492.77 1125.65 1489.59 M1145.57 1477.14 Q1145.57 1470.68 1142.9 1467.02 Q1140.26 1463.33 1135.61 1463.33 Q1130.96 1463.33 1128.29 1467.02 Q1125.65 1470.68 1125.65 1477.14 Q1125.65 1483.6 1128.29 1487.3 Q1130.96 1490.96 1135.61 1490.96 Q1140.26 1490.96 1142.9 1487.3 Q1145.57 1483.6 1145.57 1477.14 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1177.56 1477.02 Q1170.46 1477.02 1167.73 1478.64 Q1164.99 1480.26 1164.99 1484.18 Q1164.99 1487.3 1167.03 1489.14 Q1169.09 1490.96 1172.63 1490.96 Q1177.5 1490.96 1180.43 1487.52 Q1183.39 1484.05 1183.39 1478.32 L1183.39 1477.02 L1177.56 1477.02 M1189.24 1474.6 L1189.24 1494.94 L1183.39 1494.94 L1183.39 1489.53 Q1181.38 1492.77 1178.39 1494.33 Q1175.4 1495.86 1171.07 1495.86 Q1165.59 1495.86 1162.35 1492.8 Q1159.13 1489.72 1159.13 1484.56 Q1159.13 1478.54 1163.14 1475.49 Q1167.18 1472.43 1175.17 1472.43 L1183.39 1472.43 L1183.39 1471.86 Q1183.39 1467.82 1180.71 1465.62 Q1178.07 1463.39 1173.26 1463.39 Q1170.21 1463.39 1167.31 1464.13 Q1164.42 1464.86 1161.74 1466.32 L1161.74 1460.91 Q1164.96 1459.67 1167.98 1459.07 Q1171 1458.43 1173.87 1458.43 Q1181.6 1458.43 1185.42 1462.44 Q1189.24 1466.45 1189.24 1474.6 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1221.96 1464.76 Q1220.98 1464.19 1219.8 1463.93 Q1218.65 1463.65 1217.25 1463.65 Q1212.29 1463.65 1209.61 1466.9 Q1206.97 1470.11 1206.97 1476.16 L1206.97 1494.94 L1201.08 1494.94 L1201.08 1459.29 L1206.97 1459.29 L1206.97 1464.83 Q1208.82 1461.58 1211.78 1460.02 Q1214.74 1458.43 1218.97 1458.43 Q1219.57 1458.43 1220.31 1458.52 Q1221.04 1458.59 1221.93 1458.75 L1221.96 1464.76 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1250.83 1460.34 L1250.83 1465.88 Q1248.35 1464.6 1245.67 1463.97 Q1243 1463.33 1240.14 1463.33 Q1235.78 1463.33 1233.58 1464.67 Q1231.41 1466 1231.41 1468.68 Q1231.41 1470.71 1232.97 1471.89 Q1234.53 1473.04 1239.24 1474.09 L1241.25 1474.53 Q1247.49 1475.87 1250.1 1478.32 Q1252.74 1480.74 1252.74 1485.1 Q1252.74 1490.07 1248.79 1492.96 Q1244.88 1495.86 1238 1495.86 Q1235.14 1495.86 1232.02 1495.29 Q1228.93 1494.74 1225.49 1493.63 L1225.49 1487.58 Q1228.74 1489.27 1231.89 1490.13 Q1235.04 1490.96 1238.13 1490.96 Q1242.27 1490.96 1244.5 1489.56 Q1246.72 1488.12 1246.72 1485.55 Q1246.72 1483.16 1245.1 1481.89 Q1243.51 1480.61 1238.07 1479.44 L1236.03 1478.96 Q1230.59 1477.81 1228.17 1475.46 Q1225.75 1473.07 1225.75 1468.93 Q1225.75 1463.9 1229.31 1461.17 Q1232.88 1458.43 1239.44 1458.43 Q1242.68 1458.43 1245.55 1458.91 Q1248.41 1459.38 1250.83 1460.34 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1262.07 1459.29 L1267.92 1459.29 L1267.92 1494.94 L1262.07 1494.94 L1262.07 1459.29 M1262.07 1445.41 L1267.92 1445.41 L1267.92 1452.83 L1262.07 1452.83 L1262.07 1445.41 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1285.97 1449.17 L1285.97 1459.29 L1298.03 1459.29 L1298.03 1463.84 L1285.97 1463.84 L1285.97 1483.19 Q1285.97 1487.55 1287.15 1488.79 Q1288.36 1490.03 1292.02 1490.03 L1298.03 1490.03 L1298.03 1494.94 L1292.02 1494.94 Q1285.24 1494.94 1282.66 1492.42 Q1280.08 1489.88 1280.08 1483.19 L1280.08 1463.84 L1275.78 1463.84 L1275.78 1459.29 L1280.08 1459.29 L1280.08 1449.17 L1285.97 1449.17 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1320.57 1498.25 Q1318.08 1504.61 1315.73 1506.55 Q1313.37 1508.49 1309.43 1508.49 L1304.75 1508.49 L1304.75 1503.59 L1308.19 1503.59 Q1310.6 1503.59 1311.94 1502.45 Q1313.28 1501.3 1314.9 1497.04 L1315.95 1494.36 L1301.53 1459.29 L1307.74 1459.29 L1318.88 1487.17 L1330.02 1459.29 L1336.23 1459.29 L1320.57 1498.25 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M1395.89 1469.69 Q1395.83 1470.01 1395.7 1470.59 Q1395.57 1471.14 1394.99 1472.87 Q1394.41 1474.61 1393.64 1476.39 Q1392.9 1478.12 1391.45 1480.57 Q1390.03 1482.99 1388.29 1485.18 Q1387.81 1485.76 1387.71 1486.11 Q1387.65 1486.43 1387.65 1487.5 Q1387.65 1494.2 1389.68 1494.2 Q1389.77 1494.2 1389.93 1494.2 Q1390.13 1494.16 1390.61 1494 Q1391.13 1493.81 1391.58 1493.52 Q1392.03 1493.2 1392.54 1492.55 Q1393.06 1491.88 1393.38 1490.97 Q1393.67 1490.33 1394.25 1490.33 Q1395.02 1490.33 1395.02 1490.97 Q1395.02 1492.13 1393.41 1493.91 Q1391.8 1495.68 1389.48 1495.68 Q1387.26 1495.68 1385.68 1494.23 Q1384.14 1492.75 1383.49 1490.11 Q1376.54 1495.68 1369.58 1495.68 Q1364.69 1495.68 1361.79 1492.49 Q1358.89 1489.27 1358.89 1484.5 Q1358.89 1479.93 1361.4 1475.58 Q1363.94 1471.23 1368.07 1468.53 Q1372.22 1465.79 1376.63 1465.79 Q1378.18 1465.79 1379.66 1466.21 Q1381.14 1466.59 1382.62 1467.59 Q1384.11 1468.59 1385.2 1470.11 Q1386.3 1471.62 1386.97 1474 Q1387.65 1476.39 1387.65 1479.38 L1387.65 1483.47 Q1391.9 1478.09 1394.12 1470.4 Q1394.44 1469.24 1394.64 1469.11 Q1394.77 1469.01 1395.09 1469.01 Q1395.41 1469.01 1395.6 1469.2 Q1395.83 1469.36 1395.86 1469.53 L1395.89 1469.69 M1383.24 1488.4 Q1383.11 1487.27 1383.11 1481.02 Q1383.11 1479.83 1383.11 1479.19 Q1383.11 1478.51 1383.04 1477.22 Q1382.98 1475.93 1382.85 1475.13 Q1382.75 1474.32 1382.53 1473.16 Q1382.3 1472.01 1381.98 1471.26 Q1381.66 1470.52 1381.14 1469.69 Q1380.66 1468.85 1380.02 1468.37 Q1379.4 1467.88 1378.5 1467.56 Q1377.63 1467.24 1376.57 1467.24 Q1375.25 1467.24 1373.86 1467.72 Q1372.51 1468.17 1370.77 1469.62 Q1369.03 1471.04 1367.58 1473.29 Q1366.07 1475.68 1364.91 1480.06 Q1363.78 1484.4 1363.78 1487.01 Q1363.78 1490.3 1365.3 1492.26 Q1366.81 1494.2 1369.71 1494.2 Q1376.63 1494.2 1383.24 1488.4 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip052)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="220.677,1296.23 2256.76,1296.23 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="220.677,493.971 2256.76,493.971 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="220.677,1347.54 220.677,47.2441 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="220.677,1296.23 239.575,1296.23 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="220.677,493.971 239.575,493.971 "></polyline>
<path clip-path="url(#clip050)" d="M115.411 1316.03 L123.05 1316.03 L123.05 1289.66 L114.74 1291.33 L114.74 1287.07 L123.004 1285.4 L127.68 1285.4 L127.68 1316.03 L135.319 1316.03 L135.319 1319.96 L115.411 1319.96 L115.411 1316.03 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M154.763 1288.48 Q151.152 1288.48 149.323 1292.05 Q147.518 1295.59 147.518 1302.72 Q147.518 1309.82 149.323 1313.39 Q151.152 1316.93 154.763 1316.93 Q158.397 1316.93 160.203 1313.39 Q162.032 1309.82 162.032 1302.72 Q162.032 1295.59 160.203 1292.05 Q158.397 1288.48 154.763 1288.48 M154.763 1284.78 Q160.573 1284.78 163.629 1289.38 Q166.707 1293.97 166.707 1302.72 Q166.707 1311.44 163.629 1316.05 Q160.573 1320.63 154.763 1320.63 Q148.953 1320.63 145.874 1316.05 Q142.819 1311.44 142.819 1302.72 Q142.819 1293.97 145.874 1289.38 Q148.953 1284.78 154.763 1284.78 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M176.412 1266.97 Q173.478 1266.97 171.992 1269.87 Q170.525 1272.75 170.525 1278.54 Q170.525 1284.31 171.992 1287.21 Q173.478 1290.09 176.412 1290.09 Q179.365 1290.09 180.832 1287.21 Q182.318 1284.31 182.318 1278.54 Q182.318 1272.75 180.832 1269.87 Q179.365 1266.97 176.412 1266.97 M176.412 1263.96 Q181.133 1263.96 183.616 1267.71 Q186.117 1271.43 186.117 1278.54 Q186.117 1285.63 183.616 1289.37 Q181.133 1293.1 176.412 1293.1 Q171.692 1293.1 169.19 1289.37 Q166.707 1285.63 166.707 1278.54 Q166.707 1271.43 169.19 1267.71 Q171.692 1263.96 176.412 1263.96 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M116.991 513.764 L124.63 513.764 L124.63 487.398 L116.32 489.065 L116.32 484.806 L124.584 483.139 L129.26 483.139 L129.26 513.764 L136.899 513.764 L136.899 517.699 L116.991 517.699 L116.991 513.764 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M156.343 486.218 Q152.732 486.218 150.903 489.782 Q149.098 493.324 149.098 500.454 Q149.098 507.56 150.903 511.125 Q152.732 514.666 156.343 514.666 Q159.977 514.666 161.783 511.125 Q163.611 507.56 163.611 500.454 Q163.611 493.324 161.783 489.782 Q159.977 486.218 156.343 486.218 M156.343 482.514 Q162.153 482.514 165.209 487.12 Q168.287 491.704 168.287 500.454 Q168.287 509.18 165.209 513.787 Q162.153 518.37 156.343 518.37 Q150.533 518.37 147.454 513.787 Q144.399 509.18 144.399 500.454 Q144.399 491.704 147.454 487.12 Q150.533 482.514 156.343 482.514 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M172.858 487.091 L186.117 487.091 L186.117 490.288 L168.287 490.288 L168.287 487.091 Q170.45 484.853 174.174 481.091 Q177.917 477.311 178.876 476.22 Q180.7 474.17 181.415 472.76 Q182.149 471.33 182.149 469.957 Q182.149 467.719 180.569 466.309 Q179.008 464.898 176.488 464.898 Q174.701 464.898 172.707 465.519 Q170.732 466.139 168.475 467.399 L168.475 463.563 Q170.77 462.641 172.764 462.171 Q174.757 461.701 176.412 461.701 Q180.776 461.701 183.371 463.882 Q185.967 466.064 185.967 469.713 Q185.967 471.443 185.308 473.004 Q184.669 474.546 182.957 476.653 Q182.487 477.198 179.967 479.813 Q177.447 482.408 172.858 487.091 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M18.4042 928.052 L18.4042 898.006 L23.815 898.006 L23.815 921.622 L37.8832 921.622 L37.8832 898.992 L43.2941 898.992 L43.2941 921.622 L60.5133 921.622 L60.5133 897.433 L65.9242 897.433 L65.9242 928.052 L18.4042 928.052 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M19.9638 858.379 L26.234 858.379 Q24.4834 862.039 23.624 865.286 Q22.7647 868.532 22.7647 871.556 Q22.7647 876.808 24.8017 879.672 Q26.8387 882.505 30.5945 882.505 Q33.7455 882.505 35.3688 880.627 Q36.9602 878.718 37.9469 873.434 L38.7426 869.551 Q40.1112 862.358 43.5805 858.952 Q47.018 855.515 52.8108 855.515 Q59.7176 855.515 63.2824 860.161 Q66.8472 864.777 66.8472 873.72 Q66.8472 877.094 66.0833 880.914 Q65.3194 884.701 63.8235 888.775 L57.2031 888.775 Q59.3993 884.86 60.5133 881.105 Q61.6273 877.349 61.6273 873.72 Q61.6273 868.214 59.463 865.222 Q57.2986 862.23 53.2882 862.23 Q49.7871 862.23 47.8137 864.395 Q45.8404 866.527 44.8537 871.429 L44.0898 875.344 Q42.6575 882.537 39.602 885.752 Q36.5464 888.966 31.1037 888.966 Q24.8017 888.966 21.1732 884.542 Q17.5448 880.086 17.5448 872.288 Q17.5448 868.946 18.1495 865.477 Q18.7543 862.008 19.9638 858.379 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M19.9638 817.002 L26.234 817.002 Q24.4834 820.662 23.624 823.909 Q22.7647 827.155 22.7647 830.179 Q22.7647 835.431 24.8017 838.295 Q26.8387 841.128 30.5945 841.128 Q33.7455 841.128 35.3688 839.25 Q36.9602 837.34 37.9469 832.057 L38.7426 828.174 Q40.1112 820.981 43.5805 817.575 Q47.018 814.137 52.8108 814.137 Q59.7176 814.137 63.2824 818.784 Q66.8472 823.4 66.8472 832.343 Q66.8472 835.717 66.0833 839.537 Q65.3194 843.324 63.8235 847.398 L57.2031 847.398 Q59.3993 843.483 60.5133 839.728 Q61.6273 835.972 61.6273 832.343 Q61.6273 826.837 59.463 823.845 Q57.2986 820.853 53.2882 820.853 Q49.7871 820.853 47.8137 823.018 Q45.8404 825.15 44.8537 830.052 L44.0898 833.967 Q42.6575 841.16 39.602 844.375 Q36.5464 847.589 31.1037 847.589 Q24.8017 847.589 21.1732 843.165 Q17.5448 838.709 17.5448 830.911 Q17.5448 827.569 18.1495 824.1 Q18.7543 820.63 19.9638 817.002 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M60.577 777.98 L79.4831 777.98 L79.4831 783.868 L30.2762 783.868 L30.2762 777.98 L35.6871 777.98 Q32.5042 776.134 30.9764 773.333 Q29.4168 770.501 29.4168 766.586 Q29.4168 760.093 34.5731 756.05 Q39.7293 751.976 48.132 751.976 Q56.5347 751.976 61.691 756.05 Q66.8472 760.093 66.8472 766.586 Q66.8472 770.501 65.3194 773.333 Q63.7598 776.134 60.577 777.98 M48.132 758.056 Q41.6708 758.056 38.0105 760.729 Q34.3184 763.371 34.3184 768.018 Q34.3184 772.665 38.0105 775.338 Q41.6708 777.98 48.132 777.98 Q54.5932 777.98 58.2853 775.338 Q61.9456 772.665 61.9456 768.018 Q61.9456 763.371 58.2853 760.729 Q54.5932 758.056 48.132 758.056 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M46.6361 711.777 L49.5006 711.777 L49.5006 738.704 Q55.5481 738.322 58.7309 735.075 Q61.8819 731.797 61.8819 725.972 Q61.8819 722.599 61.0544 719.448 Q60.2269 716.265 58.5718 713.145 L64.1099 713.145 Q65.4467 716.297 66.147 719.607 Q66.8472 722.917 66.8472 726.323 Q66.8472 734.853 61.8819 739.85 Q56.9167 744.815 48.4503 744.815 Q39.6974 744.815 34.5731 740.104 Q29.4168 735.362 29.4168 727.341 Q29.4168 720.148 34.0638 715.978 Q38.6789 711.777 46.6361 711.777 M44.9173 717.633 Q40.1112 717.697 37.2466 720.339 Q34.3821 722.949 34.3821 727.277 Q34.3821 732.179 37.1512 735.139 Q39.9202 738.067 44.9492 738.513 L44.9173 717.633 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M35.7507 681.508 Q35.1778 682.495 34.9232 683.672 Q34.6367 684.818 34.6367 686.219 Q34.6367 691.184 37.8832 693.857 Q41.0979 696.499 47.1453 696.499 L65.9242 696.499 L65.9242 702.387 L30.2762 702.387 L30.2762 696.499 L35.8144 696.499 Q32.5679 694.653 31.0083 691.693 Q29.4168 688.733 29.4168 684.5 Q29.4168 683.895 29.5123 683.163 Q29.576 682.431 29.7351 681.54 L35.7507 681.508 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M18.4042 654.39 L18.4042 624.344 L23.815 624.344 L23.815 647.961 L37.8832 647.961 L37.8832 625.331 L43.2941 625.331 L43.2941 647.961 L60.5133 647.961 L60.5133 623.771 L65.9242 623.771 L65.9242 654.39 L18.4042 654.39 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M60.577 607.793 L79.4831 607.793 L79.4831 613.681 L30.2762 613.681 L30.2762 607.793 L35.6871 607.793 Q32.5042 605.947 30.9764 603.146 Q29.4168 600.313 29.4168 596.398 Q29.4168 589.905 34.5731 585.863 Q39.7293 581.789 48.132 581.789 Q56.5347 581.789 61.691 585.863 Q66.8472 589.905 66.8472 596.398 Q66.8472 600.313 65.3194 603.146 Q63.7598 605.947 60.577 607.793 M48.132 587.868 Q41.6708 587.868 38.0105 590.542 Q34.3184 593.184 34.3184 597.831 Q34.3184 602.478 38.0105 605.151 Q41.6708 607.793 48.132 607.793 Q54.5932 607.793 58.2853 605.151 Q61.9456 602.478 61.9456 597.831 Q61.9456 593.184 58.2853 590.542 Q54.5932 587.868 48.132 587.868 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M34.3821 558.268 Q34.3821 562.978 38.0742 565.716 Q41.7345 568.453 48.132 568.453 Q54.5295 568.453 58.2217 565.748 Q61.8819 563.01 61.8819 558.268 Q61.8819 553.589 58.1898 550.852 Q54.4977 548.115 48.132 548.115 Q41.7981 548.115 38.106 550.852 Q34.3821 553.589 34.3821 558.268 M29.4168 558.268 Q29.4168 550.629 34.3821 546.268 Q39.3473 541.908 48.132 541.908 Q56.8849 541.908 61.8819 546.268 Q66.8472 550.629 66.8472 558.268 Q66.8472 565.939 61.8819 570.299 Q56.8849 574.628 48.132 574.628 Q39.3473 574.628 34.3821 570.299 Q29.4168 565.939 29.4168 558.268 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M31.6448 506.546 L37.1193 506.546 Q35.7507 509.029 35.0823 511.544 Q34.3821 514.026 34.3821 516.572 Q34.3821 522.27 38.0105 525.421 Q41.6072 528.572 48.132 528.572 Q54.6569 528.572 58.2853 525.421 Q61.8819 522.27 61.8819 516.572 Q61.8819 514.026 61.2135 511.544 Q60.5133 509.029 59.1447 506.546 L64.5555 506.546 Q65.7014 508.997 66.2743 511.639 Q66.8472 514.249 66.8472 517.209 Q66.8472 525.262 61.7864 530.004 Q56.7257 534.747 48.132 534.747 Q39.411 534.747 34.4139 529.972 Q29.4168 525.166 29.4168 516.827 Q29.4168 514.122 29.9897 511.544 Q30.5308 508.965 31.6448 506.546 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M44.4081 466.729 L65.9242 466.729 L65.9242 472.585 L44.599 472.585 Q39.5383 472.585 37.0238 474.559 Q34.5094 476.532 34.5094 480.479 Q34.5094 485.221 37.5331 487.959 Q40.5568 490.696 45.7767 490.696 L65.9242 490.696 L65.9242 496.584 L16.399 496.584 L16.399 490.696 L35.8144 490.696 Q32.5997 488.595 31.0083 485.762 Q29.4168 482.898 29.4168 479.174 Q29.4168 473.031 33.2363 469.88 Q37.0238 466.729 44.4081 466.729 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip052)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.13,1310.74 2199.13,1190.63 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1238.72,1281.32 1238.72,1161.21 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="278.302,1123.47 278.302,1003.34 "></polyline>
<line clip-path="url(#clip052)" x1="2219.13" y1="1310.74" x2="2179.13" y2="1310.74" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="2219.13" y1="1190.63" x2="2179.13" y2="1190.63" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="1281.32" x2="1218.72" y2="1281.32" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="1161.21" x2="1218.72" y2="1161.21" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="1123.47" x2="258.302" y2="1123.47" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="1003.34" x2="258.302" y2="1003.34" style="stroke:#0000ff; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip052)" cx="2199.13" cy="1240.53" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="1238.72" cy="1211.11" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="278.302" cy="1053.25" r="18" fill="#0000ff" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip052)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="278.302,1074.65 297.704,1076.55 317.107,1078.44 336.509,1080.33 355.911,1082.22 375.314,1084.11 394.716,1086 414.118,1087.9 433.52,1089.79 452.923,1091.68 472.325,1093.57 491.727,1095.46 511.13,1097.36 530.532,1099.25 549.934,1101.14 569.337,1103.03 588.739,1104.92 608.141,1106.81 627.544,1108.71 646.946,1110.6 666.348,1112.49 685.751,1114.38 705.153,1116.27 724.555,1118.17 743.957,1120.06 763.36,1121.95 782.762,1123.84 802.164,1125.73 821.567,1127.62 840.969,1129.52 860.371,1131.41 879.774,1133.3 899.176,1135.19 918.578,1137.08 937.981,1138.97 957.383,1140.87 976.785,1142.76 996.188,1144.65 1015.59,1146.54 1034.99,1148.43 1054.39,1150.33 1073.8,1152.22 1093.2,1154.11 1112.6,1156 1132,1157.89 1151.41,1159.78 1170.81,1161.68 1190.21,1163.57 1209.61,1165.46 1229.02,1167.35 1248.42,1169.24 1267.82,1171.14 1287.22,1173.03 1306.62,1174.92 1326.03,1176.81 1345.43,1178.7 1364.83,1180.59 1384.23,1182.49 1403.64,1184.38 1423.04,1186.27 1442.44,1188.16 1461.84,1190.05 1481.25,1191.94 1500.65,1193.84 1520.05,1195.73 1539.45,1197.62 1558.85,1199.51 1578.26,1201.4 1597.66,1203.3 1617.06,1205.19 1636.46,1207.08 1655.87,1208.97 1675.27,1210.86 1694.67,1212.75 1714.07,1214.65 1733.48,1216.54 1752.88,1218.43 1772.28,1220.32 1791.68,1222.21 1811.08,1224.1 1830.49,1226 1849.89,1227.89 1869.29,1229.78 1888.69,1231.67 1908.1,1233.56 1927.5,1235.46 1946.9,1237.35 1966.3,1239.24 1985.71,1241.13 2005.11,1243.02 2024.51,1244.91 2043.91,1246.81 2063.31,1248.7 2082.72,1250.59 2102.12,1252.48 2121.52,1254.37 2140.92,1256.27 2160.33,1258.16 2179.73,1260.05 2199.13,1261.94 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.13,1085.33 2199.13,965.226 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1238.72,660.053 1238.72,539.945 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="278.302,204.368 278.302,84.0448 "></polyline>
<line clip-path="url(#clip052)" x1="2219.13" y1="1085.33" x2="2179.13" y2="1085.33" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="2219.13" y1="965.226" x2="2179.13" y2="965.226" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="660.053" x2="1218.72" y2="660.053" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="539.945" x2="1218.72" y2="539.945" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="204.368" x2="258.302" y2="204.368" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="84.0448" x2="258.302" y2="84.0448" style="stroke:#008000; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip052)" cx="2199.13" cy="1015.13" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="1238.72" cy="589.847" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="278.302" cy="134.019" r="18" fill="#008000" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip052)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="278.302,139.11 297.704,148.01 317.107,156.91 336.509,165.81 355.911,174.71 375.314,183.611 394.716,192.511 414.118,201.411 433.52,210.311 452.923,219.211 472.325,228.111 491.727,237.011 511.13,245.911 530.532,254.811 549.934,263.711 569.337,272.611 588.739,281.511 608.141,290.411 627.544,299.311 646.946,308.211 666.348,317.111 685.751,326.012 705.153,334.912 724.555,343.812 743.957,352.712 763.36,361.612 782.762,370.512 802.164,379.412 821.567,388.312 840.969,397.212 860.371,406.112 879.774,415.012 899.176,423.912 918.578,432.812 937.981,441.712 957.383,450.612 976.785,459.513 996.188,468.413 1015.59,477.313 1034.99,486.213 1054.39,495.113 1073.8,504.013 1093.2,512.913 1112.6,521.813 1132,530.713 1151.41,539.613 1170.81,548.513 1190.21,557.413 1209.61,566.313 1229.02,575.213 1248.42,584.113 1267.82,593.014 1287.22,601.914 1306.62,610.814 1326.03,619.714 1345.43,628.614 1364.83,637.514 1384.23,646.414 1403.64,655.314 1423.04,664.214 1442.44,673.114 1461.84,682.014 1481.25,690.914 1500.65,699.814 1520.05,708.714 1539.45,717.614 1558.85,726.515 1578.26,735.415 1597.66,744.315 1617.06,753.215 1636.46,762.115 1655.87,771.015 1675.27,779.915 1694.67,788.815 1714.07,797.715 1733.48,806.615 1752.88,815.515 1772.28,824.415 1791.68,833.315 1811.08,842.215 1830.49,851.115 1849.89,860.016 1869.29,868.916 1888.69,877.816 1908.1,886.716 1927.5,895.616 1946.9,904.516 1966.3,913.416 1985.71,922.316 2005.11,931.216 2024.51,940.116 2043.91,949.016 2063.31,957.916 2082.72,966.816 2102.12,975.716 2121.52,984.616 2140.92,993.517 2160.33,1002.42 2179.73,1011.32 2199.13,1020.22 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2199.13,869.486 2199.13,748.232 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1238.72,1007.07 1238.72,886.697 "></polyline>
<polyline clip-path="url(#clip052)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="278.302,967.572 278.302,846.212 "></polyline>
<line clip-path="url(#clip052)" x1="2219.13" y1="869.486" x2="2179.13" y2="869.486" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="2219.13" y1="748.232" x2="2179.13" y2="748.232" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="1007.07" x2="1218.72" y2="1007.07" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="1258.72" y1="886.697" x2="1218.72" y2="886.697" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="967.572" x2="258.302" y2="967.572" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<line clip-path="url(#clip052)" x1="298.302" y1="846.212" x2="258.302" y2="846.212" style="stroke:#ff8c00; stroke-width:4; stroke-opacity:0.6"></line>
<circle clip-path="url(#clip052)" cx="2199.13" cy="798.516" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="1238.72" cy="936.686" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<circle clip-path="url(#clip052)" cx="278.302" cy="896.531" r="18" fill="#ff8c00" fill-rule="evenodd" fill-opacity="0.6" stroke="none"></circle>
<polyline clip-path="url(#clip052)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="278.302,926.252 297.704,925.262 317.107,924.272 336.509,923.282 355.911,922.292 375.314,921.301 394.716,920.311 414.118,919.321 433.52,918.331 452.923,917.341 472.325,916.351 491.727,915.361 511.13,914.371 530.532,913.381 549.934,912.391 569.337,911.401 588.739,910.411 608.141,909.421 627.544,908.431 646.946,907.441 666.348,906.451 685.751,905.461 705.153,904.471 724.555,903.481 743.957,902.491 763.36,901.5 782.762,900.51 802.164,899.52 821.567,898.53 840.969,897.54 860.371,896.55 879.774,895.56 899.176,894.57 918.578,893.58 937.981,892.59 957.383,891.6 976.785,890.61 996.188,889.62 1015.59,888.63 1034.99,887.64 1054.39,886.65 1073.8,885.66 1093.2,884.67 1112.6,883.68 1132,882.69 1151.41,881.699 1170.81,880.709 1190.21,879.719 1209.61,878.729 1229.02,877.739 1248.42,876.749 1267.82,875.759 1287.22,874.769 1306.62,873.779 1326.03,872.789 1345.43,871.799 1364.83,870.809 1384.23,869.819 1403.64,868.829 1423.04,867.839 1442.44,866.849 1461.84,865.859 1481.25,864.869 1500.65,863.879 1520.05,862.889 1539.45,861.898 1558.85,860.908 1578.26,859.918 1597.66,858.928 1617.06,857.938 1636.46,856.948 1655.87,855.958 1675.27,854.968 1694.67,853.978 1714.07,852.988 1733.48,851.998 1752.88,851.008 1772.28,850.018 1791.68,849.028 1811.08,848.038 1830.49,847.048 1849.89,846.058 1869.29,845.068 1888.69,844.078 1908.1,843.088 1927.5,842.097 1946.9,841.107 1966.3,840.117 1985.71,839.127 2005.11,838.137 2024.51,837.147 2043.91,836.157 2063.31,835.167 2082.72,834.177 2102.12,833.187 2121.52,832.197 2140.92,831.207 2160.33,830.217 2179.73,829.227 2199.13,828.237 "></polyline>
<path clip-path="url(#clip050)" d="M1841.04 297.947 L2188.89 297.947 L2188.89 90.5872 L1841.04 90.5872  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<polyline clip-path="url(#clip050)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1841.04,297.947 2188.89,297.947 2188.89,90.5872 1841.04,90.5872 1841.04,297.947 "></polyline>
<polyline clip-path="url(#clip050)" style="stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="1863.67,142.427 1999.41,142.427 "></polyline>
<path clip-path="url(#clip050)" d="M2022.56 125.147 L2049.71 125.147 L2049.71 128.712 L2027.86 155.772 L2050.25 155.772 L2050.25 159.707 L2022.03 159.707 L2022.03 156.142 L2043.88 129.082 L2022.56 129.082 L2022.56 125.147 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2055.04 125.147 L2082.19 125.147 L2082.19 128.712 L2060.34 155.772 L2082.72 155.772 L2082.72 159.707 L2054.5 159.707 L2054.5 156.142 L2076.36 129.082 L2055.04 129.082 L2055.04 125.147 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2086.33 144.823 L2098.81 144.823 L2098.81 148.619 L2086.33 148.619 L2086.33 144.823 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2126.5 126.281 L2126.5 130.842 Q2123.83 129.568 2121.47 128.943 Q2119.11 128.318 2116.91 128.318 Q2113.09 128.318 2111.01 129.8 Q2108.95 131.281 2108.95 134.013 Q2108.95 136.305 2110.31 137.485 Q2111.7 138.642 2115.55 139.36 L2118.37 139.939 Q2123.6 140.934 2126.08 143.457 Q2128.58 145.957 2128.58 150.17 Q2128.58 155.193 2125.2 157.786 Q2121.84 160.378 2115.34 160.378 Q2112.88 160.378 2110.11 159.823 Q2107.35 159.267 2104.39 158.179 L2104.39 153.365 Q2107.24 154.962 2109.97 155.772 Q2112.7 156.582 2115.34 156.582 Q2119.34 156.582 2121.52 155.008 Q2123.69 153.434 2123.69 150.517 Q2123.69 147.971 2122.12 146.536 Q2120.57 145.101 2117 144.383 L2114.16 143.828 Q2108.93 142.786 2106.59 140.564 Q2104.25 138.342 2104.25 134.383 Q2104.25 129.8 2107.47 127.161 Q2110.71 124.522 2116.38 124.522 Q2118.81 124.522 2121.33 124.962 Q2123.86 125.402 2126.5 126.281 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2156.59 126.281 L2156.59 130.842 Q2153.93 129.568 2151.56 128.943 Q2149.2 128.318 2147 128.318 Q2143.18 128.318 2141.1 129.8 Q2139.04 131.281 2139.04 134.013 Q2139.04 136.305 2140.41 137.485 Q2141.8 138.642 2145.64 139.36 L2148.46 139.939 Q2153.69 140.934 2156.17 143.457 Q2158.67 145.957 2158.67 150.17 Q2158.67 155.193 2155.29 157.786 Q2151.93 160.378 2145.43 160.378 Q2142.98 160.378 2140.2 159.823 Q2137.44 159.267 2134.48 158.179 L2134.48 153.365 Q2137.33 154.962 2140.06 155.772 Q2142.79 156.582 2145.43 156.582 Q2149.43 156.582 2151.61 155.008 Q2153.79 153.434 2153.79 150.517 Q2153.79 147.971 2152.21 146.536 Q2150.66 145.101 2147.1 144.383 L2144.25 143.828 Q2139.02 142.786 2136.68 140.564 Q2134.34 138.342 2134.34 134.383 Q2134.34 129.8 2137.56 127.161 Q2140.8 124.522 2146.47 124.522 Q2148.9 124.522 2151.43 124.962 Q2153.95 125.402 2156.59 126.281 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip050)" style="stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="1863.67,194.267 1999.41,194.267 "></polyline>
<path clip-path="url(#clip050)" d="M2022.56 176.987 L2049.71 176.987 L2049.71 180.552 L2027.86 207.612 L2050.25 207.612 L2050.25 211.547 L2022.03 211.547 L2022.03 207.982 L2043.88 180.922 L2022.56 180.922 L2022.56 176.987 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2055.04 176.987 L2082.19 176.987 L2082.19 180.552 L2060.34 207.612 L2082.72 207.612 L2082.72 211.547 L2054.5 211.547 L2054.5 207.982 L2076.36 180.922 L2055.04 180.922 L2055.04 176.987 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2086.33 196.663 L2098.81 196.663 L2098.81 200.459 L2086.33 200.459 L2086.33 196.663 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2105.78 176.987 L2110.45 176.987 L2110.45 211.547 L2105.78 211.547 L2105.78 176.987 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2140.48 178.121 L2140.48 182.682 Q2137.81 181.408 2135.45 180.783 Q2133.09 180.158 2130.89 180.158 Q2127.07 180.158 2124.99 181.64 Q2122.93 183.121 2122.93 185.853 Q2122.93 188.145 2124.3 189.325 Q2125.69 190.482 2129.53 191.2 L2132.35 191.779 Q2137.58 192.774 2140.06 195.297 Q2142.56 197.797 2142.56 202.01 Q2142.56 207.033 2139.18 209.626 Q2135.82 212.218 2129.32 212.218 Q2126.87 212.218 2124.09 211.663 Q2121.33 211.107 2118.37 210.019 L2118.37 205.205 Q2121.22 206.802 2123.95 207.612 Q2126.68 208.422 2129.32 208.422 Q2133.32 208.422 2135.5 206.848 Q2137.68 205.274 2137.68 202.357 Q2137.68 199.811 2136.1 198.376 Q2134.55 196.941 2130.99 196.223 L2128.14 195.668 Q2122.91 194.626 2120.57 192.404 Q2118.23 190.182 2118.23 186.223 Q2118.23 181.64 2121.45 179.001 Q2124.69 176.362 2130.36 176.362 Q2132.79 176.362 2135.31 176.802 Q2137.84 177.242 2140.48 178.121 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip050)" style="stroke:#ff8c00; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none" points="1863.67,246.107 1999.41,246.107 "></polyline>
<path clip-path="url(#clip050)" d="M2022.56 228.827 L2049.71 228.827 L2049.71 232.392 L2027.86 259.452 L2050.25 259.452 L2050.25 263.387 L2022.03 263.387 L2022.03 259.822 L2043.88 232.762 L2022.56 232.762 L2022.56 228.827 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2055.04 228.827 L2082.19 228.827 L2082.19 232.392 L2060.34 259.452 L2082.72 259.452 L2082.72 263.387 L2054.5 263.387 L2054.5 259.822 L2076.36 232.762 L2055.04 232.762 L2055.04 228.827 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2086.33 248.503 L2098.81 248.503 L2098.81 252.299 L2086.33 252.299 L2086.33 248.503 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2131.66 231.489 L2131.66 236.42 Q2129.3 234.221 2126.61 233.133 Q2123.95 232.045 2120.94 232.045 Q2115.01 232.045 2111.87 235.679 Q2108.72 239.29 2108.72 246.142 Q2108.72 252.971 2111.87 256.605 Q2115.01 260.216 2120.94 260.216 Q2123.95 260.216 2126.61 259.128 Q2129.3 258.04 2131.66 255.841 L2131.66 260.725 Q2129.2 262.392 2126.45 263.225 Q2123.72 264.058 2120.66 264.058 Q2112.81 264.058 2108.3 259.267 Q2103.79 254.452 2103.79 246.142 Q2103.79 237.809 2108.3 233.017 Q2112.81 228.202 2120.66 228.202 Q2123.76 228.202 2126.5 229.036 Q2129.25 229.846 2131.66 231.489 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip050)" d="M2147.79 263.387 L2134.6 228.827 L2139.48 228.827 L2150.43 257.924 L2161.4 228.827 L2166.26 228.827 L2153.09 263.387 L2147.79 263.387 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path></svg>
</div>
</div>
<p>ここでは問題にしないが，圧倒的に実行時間が重点サブサンプリングの方が短い．</p>
<div class="callout callout-style-default callout-important no-icon callout-titled" title="注">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
注
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%5Calpha%3C10%5E%7B-3%7D"> の領域では動作が不安定になる．論文 <span class="citation" data-cites="Sen+2020">(Sen et al., 2020)</span> でもこの領域は触れられていない．しかし， <img src="https://latex.codecogs.com/png.latex?%0A%5C#%5Cleft%5C%7Bi%5Cin%5Bn%5D%5Cmid%20y%5Ei=1%5Cright%5C%7D%5Capprox500%0A"> であるため，特に理由は見つからない．</p>
</div>
</div>
</div>
</section>
</section>
<section id="高次元へのスケーリング" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 高次元へのスケーリング</h1>
<p>さらに，<span class="citation" data-cites="Bierkens+2023">(Bierkens et al., 2022)</span> による方法で，スパースデータに対する効率化が可能である．</p>
<div id="3cf55511" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">StatsFuns</span></span>
<span id="cb19-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Distributions</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    U(ξ, x, y)：ポテンシャル関数</span></span>
<span id="cb19-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ξ: パラメータ空間上の点</span></span>
<span id="cb19-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        (x,y): 観測</span></span>
<span id="cb19-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(ξ, x, y)</span>
<span id="cb19-10">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb19-11">    U_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb19-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n</span>
<span id="cb19-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push!</span>(U_list, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(j, ξ, x, y))</span>
<span id="cb19-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb19-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(U_list)</span>
<span id="cb19-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb19-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(j, ξ, x, y)</span>
<span id="cb19-18">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y)</span>
<span id="cb19-19">    product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dot</span>(x[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>,j],ξ)</span>
<span id="cb19-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(y[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> product) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(product))</span>
<span id="cb19-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb19-22"></span>
<span id="cb19-23">ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True value</span></span>
<span id="cb19-24">n_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 実験で用いるサンプルサイズの列</span></span>
<span id="cb19-25"></span>
<span id="cb19-26">Σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>; <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb19-27">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MvNormal</span>(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, Σ), n_list[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span>])</span>
<span id="cb19-28">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Bernoulli</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic</span>.(ξ<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'*</span>x)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BitVector になってしまう</span></span>
<span id="cb19-29">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Float64</span>.(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vec</span>(y))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Vector{Float64} に変換</span></span></code></pre></div>
</div>
<div id="4cea0c63" class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Optim</span></span>
<span id="cb20-2"></span>
<span id="cb20-3">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimize</span>(ξ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">U</span>(ξ,x,y), [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LBFGS</span>())</span>
<span id="cb20-4">ξ_star <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Optim.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">minimizer</span>(result)</span></code></pre></div>
</div>




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Bierkens+2023" class="csl-entry">
Bierkens, J., Grazzi, S., Meulen, F. van der, and Schauer, M. (2022). <a href="https://doi.org/10.1007/s11222-022-10180-5"><span class="nocase">Sticky PDMP Samplers for Sparse and Local Inference Problems</span></a>. <em>Statistics and Computing</em>, <em>33</em>(1), 8.
</div>
<div id="ref-Sen+2020" class="csl-entry">
Sen, D., Sachs, M., Lu, J., and Dunson, D. B. (2020). <a href="https://doi.org/10.1093/biomet/asaa035"><span class="nocase">Efficient posterior sampling for high-dimensional imbalanced logistic regression</span></a>. <em>Biometrika</em>, <em>107</em>(4), 1005–1012.
</div>
</div></section></div> ]]></description>
  <category>Bayesian</category>
  <category>Computation</category>
  <category>Python</category>
  <category>MCMC</category>
  <guid>https://162348.github.io/posts/2024/Stat/Logistic2.html</guid>
  <pubDate>Wed, 17 Jul 2024 15:00:00 GMT</pubDate>
  <media:content url="https://162348.github.io/posts/2024/Stat/Logistic2.svg" medium="image" type="image/svg+xml"/>
</item>
</channel>
</rss>
