---
title: "Quartoの基本 | Quarto Basics in Japanese"
author: "Hirofumi Shiba"
date: "11/4/2023"
categories: [Quarto]
abstract: QuartoのHPを日本語訳した
abstract-title: 概要
---

For a demonstration of a line plot on a polar axis, see @fig-polar.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 4 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

Quartoではすぐにこのようなドキュメントが作成できる（[参照](https://quarto.org/docs/get-started/hello/vscode.html)）．
特にVSCodeの拡張機能と組み合わせれば，`RStudio`のような統合開発環境が得られる．またVSCodeでは[ビジュアルモードでの編集](https://quarto.org/docs/visual-editor/vscode/)がサポートされている．

基本的な仕組みとして， `.qmd`ファイルを作成すると，コードブロックはJupyterによって処理され，全体がmarkdownに変換され，Pandocによって`pdf`, `html`, `word` など好きな形式に最終出力できる．

`Run Cell`ボタンがあるので，ローカル環境ではセルごとに実行して結果を見ることもできる．`Ctrl+Enter`で１行ごとに実行できる操作感は`RStudio`と同じである．

各ファイルの冒頭にはYAML blockを用意して詳細を調整できる（[HTML Options](https://quarto.org/docs/reference/formats/html.html)）．本文はmarkdown記法である．

```{YAML}
---
title: "Quarto Basics"
format:
  html:
    code-fold: true
jupyter: python3
---
```

また，コードブロックにもコメントアウトと接頭辞の組み合わせ`#|`を前につけることでYAMLで指示が出せる（[リスト](https://quarto.org/docs/reference/cells/cells-jupyter.html)）．上のコードブロックには

```{YAML}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"
```

と追加されているために，出力された図にラベリングとキャプションが付いているのである．