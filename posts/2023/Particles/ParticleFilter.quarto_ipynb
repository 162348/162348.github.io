{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"粒子フィルターの実装 | Particles Package\"\n",
        "subtitle: \"`NumPy` と `SciPy` で粒子フィルターを実装する\"\n",
        "author: \"司馬博文\"\n",
        "date: 12/11/2023\n",
        "categories: [Particles, Python]\n",
        "image: sample_plot.png\n",
        "bibliography: ../../../assets/2023.bib\n",
        "csl: ../../../assets/apalike.csl\n",
        "abstract-title: 概要\n",
        "abstract: Pythonを用いて粒子フィルターを実装する方法を，Nicolas Chopinによるparticlesパッケージを参考に解説する．\n",
        "# jupyter: genai\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "[Nicolas Chopin](https://nchopin.github.io/) による逐次モンテカルロ法のための Python パッケージ [`particles`](https://particles-sequential-monte-carlo-in-python.readthedocs.io/en/latest/index.html) の実装を参考に，`NumPy`, `SciPy` のみを用いて1から粒子フィルターを実装することで，その仕組みを理解することを目指す．\n",
        "\n",
        "## リサンプリングの実装\n",
        "\n",
        "まずリサンプリング法を実装する．今回は系統的リサンプリング法 [@Carpenter+1999] を用いることとする．^[実はこのリサンプリング法は [@Kitagawa1996] の付録で原型が（全く決定論的なアルゴリズムとして）提案されている]\n",
        "\n",
        "### システマティックリサンプリング {#sec-systematic}\n",
        "\n",
        "系統的リサンプリングとは，粒子数 $N$ から $M$ 個のサンプルを復元抽出する方法であって，次の2段階からなる．\n",
        "\n",
        "\n",
        "::: {.hidden}\n",
        "\n",
        "::: {.content-visible when-format=\"html\"}\n",
        "\n",
        "A Blog Entry on Bayesian Computation by an Applied Mathematician\n",
        "\n",
        "$$\n",
        "\n",
        "\\renewcommand{\\P}{\\operatorname{P}}\\newcommand{\\E}{\\operatorname{E}}\n",
        "\\newcommand{\\R}{\\mathbb{R}}\\newcommand{\\F}{\\mathcal{F}}\n",
        "\\newcommand{\\abs}[1]{\\lvert#1\\rvert}\\newcommand{\\Abs}[1]{\\left|#1\\right|}\\newcommand{\\ABs}[1]{\\biggl|#1\\biggr|}\\newcommand{\\norm}[1]{\\|#1\\|}\\newcommand{\\Norm}[1]{\\left\\|#1\\right\\|}\\newcommand{\\NOrm}[1]{\\biggl\\|#1\\biggr\\|}\\newcommand{\\Brace}[1]{\\left\\{#1\\right\\}}\\newcommand{\\BRace}[1]{\\biggl\\{#1\\biggr\\}}\\newcommand{\\paren}[1]{\\left(#1\\right)}\\newcommand{\\Paren}[1]{\\biggr(#1\\biggl)}\\newcommand{\\brac}[1]{\\langle#1\\rangle}\\newcommand{\\Brac}[1]{\\left\\langle#1\\right\\rangle}\\newcommand{\\BRac}[1]{\\biggl\\langle#1\\biggr\\rangle}\\newcommand{\\bra}[1]{\\left\\langle#1\\right|}\\newcommand{\\ket}[1]{\\left|#1\\right\\rangle}\\newcommand{\\Square}[1]{\\left[#1\\right]}\\newcommand{\\SQuare}[1]{\\biggl[#1\\biggr]}\\newcommand{\\rN}{\\mathrm{N}}\\newcommand{\\ov}[1]{\\overline{#1}}\\newcommand{\\un}[1]{\\underline{#1}}\\newcommand{\\wt}[1]{\\widetilde{#1}}\\newcommand{\\wh}[1]{\\widehat{#1}}\\newcommand{\\pp}[2]{\\frac{\\partial #1}{\\partial #2}}\\newcommand{\\ppp}[3]{\\frac{\\partial #1}{\\partial #2\\partial #3}}\\newcommand{\\dd}[2]{\\frac{d #1}{d #2}}\\newcommand{\\floor}[1]{\\lfloor#1\\rfloor}\\newcommand{\\Floor}[1]{\\left\\lfloor#1\\right\\rfloor}\\newcommand{\\ceil}[1]{\\lceil#1\\rceil}\\newcommand{\\ocinterval}[1]{(#1]}\\newcommand{\\cointerval}[1]{[#1)}\\newcommand{\\COinterval}[1]{\\left[#1\\right)}\\newcommand{\\iso}{\\overset{\\sim}{\\to}}\n",
        "\n",
        "\n",
        "\n",
        "\\newcommand{\\y}{\\b{y}}\\newcommand{\\mi}{\\,|\\,}\\newcommand{\\Mark}{\\mathrm{Mark}}\n",
        "\\newcommand{\\argmax}{\\operatorname*{argmax}}\\newcommand{\\argmin}{\\operatorname*{argmin}}\n",
        "\n",
        "\\newcommand{\\pr}{\\mathrm{pr}}\\newcommand{\\Conv}{\\operatorname{Conv}}\\newcommand{\\cU}{\\mathcal{U}}\n",
        "\\newcommand{\\Map}{\\mathrm{Map}}\\newcommand{\\dom}{\\mathrm{Dom}\\;}\\newcommand{\\cod}{\\mathrm{Cod}\\;}\\newcommand{\\supp}{\\mathrm{supp}\\;}\n",
        "\\newcommand{\\grad}{\\operatorname{grad}}\\newcommand{\\rot}{\\operatorname{rot}}\\renewcommand{\\div}{\\operatorname{div}}\\newcommand{\\tr}{\\operatorname{tr}}\\newcommand{\\Tr}{\\operatorname{Tr}}\\newcommand{\\KL}{\\operatorname{KL}}\\newcommand{\\JS}{\\operatorname{JS}}\\newcommand{\\ESS}{\\operatorname{ESS}}\\newcommand{\\MSE}{\\operatorname{MSE}}\\newcommand{\\erf}{\\operatorname{erf}}\\newcommand{\\arctanh}{\\operatorname{arctanh}}\\newcommand{\\pl}{\\operatorname{pl}}\\newcommand{\\minimize}{\\operatorname{minimize}}\\newcommand{\\subjectto}{\\operatorname{subject to}}\\newcommand{\\sinc}{\\operatorname{sinc}}\\newcommand{\\Ent}{\\operatorname{Ent}}\\newcommand{\\Polya}{\\operatorname{Polya}}\\newcommand{\\Exp}{\\operatorname{Exp}}\\newcommand{\\codim}{\\operatorname{codim}}\\newcommand{\\sgn}{\\operatorname{sgn}}\\newcommand{\\rank}{\\operatorname{rank}}\n",
        "\n",
        "\\newcommand{\\vctr}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\vctrr}[3]{\\begin{pmatrix}#1\\\\#2\\\\#3\\end{pmatrix}}\\newcommand{\\mtrx}[4]{\\begin{pmatrix}#1&#2\\\\#3&#4\\end{pmatrix}}\\newcommand{\\smtrx}[4]{\\paren{\\begin{smallmatrix}#1&#2\\\\#3&#4\\end{smallmatrix}}}\\newcommand{\\Ker}{\\mathrm{Ker}\\;}\\newcommand{\\Coker}{\\mathrm{Coker}\\;}\\newcommand{\\Coim}{\\mathrm{Coim}\\;}\\newcommand{\\lcm}{\\mathrm{lcm}}\\newcommand{\\GL}{\\mathrm{GL}}\\newcommand{\\SL}{\\mathrm{SL}}\\newcommand{\\alt}{\\mathrm{alt}}\n",
        "\n",
        "\\renewcommand{\\Re}{\\mathrm{Re}\\;}\\renewcommand{\\Im}{\\mathrm{Im}\\,}\\newcommand{\\Gal}{\\mathrm{Gal}}\\newcommand{\\PGL}{\\mathrm{PGL}}\\newcommand{\\PSL}{\\mathrm{PSL}}\\newcommand{\\Log}{\\mathrm{Log}\\,}\\newcommand{\\Res}{\\mathrm{Res}\\,}\\newcommand{\\on}{\\mathrm{on}\\;}\\newcommand{\\hatC}{\\widehat{\\C}}\\newcommand{\\hatR}{\\hat{\\R}}\\newcommand{\\PV}{\\mathrm{P.V.}}\\newcommand{\\diam}{\\mathrm{diam}}\\newcommand{\\Area}{\\mathrm{Area}}\\newcommand{\\Lap}{\\Laplace}\\newcommand{\\f}{\\mathbf{f}}\\newcommand{\\cR}{\\mathcal{R}}\\newcommand{\\const}{\\mathrm{const.}}\\newcommand{\\Om}{\\Omega}\\newcommand{\\Cinf}{C^\\infty}\\newcommand{\\ep}{\\epsilon}\\newcommand{\\dist}{\\mathrm{dist}}\\newcommand{\\opart}{\\o{\\partial}}\\newcommand{\\Length}{\\mathrm{Length}}\n",
        "\n",
        "\\newcommand{\\cA}{\\mathcal{A}}\\newcommand{\\cO}{\\mathcal{O}}\\newcommand{\\cW}{\\mathcal{W}}\\renewcommand{\\O}{\\mathcal{O}}\\renewcommand{\\S}{\\mathcal{S}}\\newcommand{\\U}{\\mathcal{U}}\\newcommand{\\V}{\\mathrm{V}}\\newcommand{\\N}{\\mathbb{N}}\\newcommand{\\bN}{\\mathbb{N}}\\newcommand{\\C}{\\mathrm{C}}\\newcommand{\\bC}{\\mathbb{C}}\\newcommand{\\Z}{\\mathcal{Z}}\\newcommand{\\Q}{\\mathbb{Q}}\\newcommand{\\bQ}{\\mathbb{Q}}\\newcommand{\\TV}{\\mathrm{TV}}\\newcommand{\\ORD}{\\mathrm{ORD}}\\newcommand{\\Card}{\\mathrm{Card}\\,}\\newcommand{\\Top}{\\mathrm{Top}}\\newcommand{\\Disc}{\\mathrm{Disc}}\\newcommand{\\Codisc}{\\mathrm{Codisc}}\\newcommand{\\CoDisc}{\\mathrm{CoDisc}}\\newcommand{\\Ult}{\\mathrm{Ult}}\\newcommand{\\ord}{\\mathrm{ord}}\\newcommand{\\bS}{\\mathbb{S}}\\newcommand{\\PConn}{\\mathrm{PConn}}\\newcommand{\\mult}{\\mathrm{mult}}\\newcommand{\\inv}{\\mathrm{inv}}\n",
        "\n",
        "\\newcommand{\\Der}{\\mathrm{Der}}\\newcommand{\\osub}{\\overset{\\mathrm{open}}{\\subset}}\\newcommand{\\osup}{\\overset{\\mathrm{open}}{\\supset}}\\newcommand{\\al}{\\alpha}\\newcommand{\\K}{\\mathbb{K}}\\newcommand{\\Sp}{\\mathrm{Sp}}\\newcommand{\\g}{\\mathfrak{g}}\\newcommand{\\h}{\\mathfrak{h}}\\newcommand{\\Imm}{\\mathrm{Imm}}\\newcommand{\\Imb}{\\mathrm{Imb}}\\newcommand{\\Gr}{\\mathrm{Gr}}\n",
        "\n",
        "\\newcommand{\\Ad}{\\mathrm{Ad}}\\newcommand{\\finsupp}{\\mathrm{fin\\;supp}}\\newcommand{\\SO}{\\mathrm{SO}}\\newcommand{\\SU}{\\mathrm{SU}}\\newcommand{\\acts}{\\curvearrowright}\\newcommand{\\mono}{\\hookrightarrow}\\newcommand{\\epi}{\\twoheadrightarrow}\\newcommand{\\Stab}{\\mathrm{Stab}}\\newcommand{\\nor}{\\mathrm{nor}}\\newcommand{\\T}{\\mathbb{T}}\\newcommand{\\Aff}{\\mathrm{Aff}}\\newcommand{\\rsup}{\\triangleright}\\newcommand{\\subgrp}{\\overset{\\mathrm{subgrp}}{\\subset}}\\newcommand{\\Ext}{\\mathrm{Ext}}\\newcommand{\\sbs}{\\subset}\\newcommand{\\sps}{\\supset}\\newcommand{\\In}{\\mathrm{in}\\;}\\newcommand{\\Tor}{\\mathrm{Tor}}\\newcommand{\\p}{\\b{p}}\\newcommand{\\q}{\\mathfrak{q}}\\newcommand{\\m}{\\mathfrak{m}}\\newcommand{\\cS}{\\mathcal{S}}\\newcommand{\\Frac}{\\mathrm{Frac}\\,}\\newcommand{\\Spec}{\\mathrm{Spec}\\,}\\newcommand{\\bA}{\\mathbb{A}}\\newcommand{\\Sym}{\\mathrm{Sym}}\\newcommand{\\Ann}{\\mathrm{Ann}}\\newcommand{\\Her}{\\mathrm{Her}}\\newcommand{\\Bil}{\\mathrm{Bil}}\\newcommand{\\Ses}{\\mathrm{Ses}}\\newcommand{\\FVS}{\\mathrm{FVS}}\n",
        "\n",
        "\\newcommand{\\Ho}{\\mathrm{Ho}}\\newcommand{\\CW}{\\mathrm{CW}}\\newcommand{\\lc}{\\mathrm{lc}}\\newcommand{\\cg}{\\mathrm{cg}}\\newcommand{\\Fib}{\\mathrm{Fib}}\\newcommand{\\Cyl}{\\mathrm{Cyl}}\\newcommand{\\Ch}{\\mathrm{Ch}}\n",
        "\\newcommand{\\rP}{\\mathrm{P}}\\newcommand{\\rE}{\\mathrm{E}}\\newcommand{\\e}{\\b{e}}\\renewcommand{\\k}{\\b{k}}\\newcommand{\\Christ}[2]{\\begin{Bmatrix}#1\\\\#2\\end{Bmatrix}}\\renewcommand{\\Vec}[1]{\\overrightarrow{\\mathrm{#1}}}\\newcommand{\\hen}[1]{\\mathrm{#1}}\\renewcommand{\\b}[1]{\\boldsymbol{#1}}\n",
        "\n",
        "\\newcommand{\\Inc}{\\mathrm{Inc}}\\newcommand{\\aInc}{\\mathrm{aInc}}\\newcommand{\\HS}{\\mathrm{HS}}\\newcommand{\\loc}{\\mathrm{loc}}\\newcommand{\\Lh}{\\mathrm{L.h.}}\\newcommand{\\Epi}{\\mathrm{Epi}}\\newcommand{\\slim}{\\mathrm{slim}}\\newcommand{\\Ban}{\\mathrm{Ban}}\\newcommand{\\Hilb}{\\mathrm{Hilb}}\\newcommand{\\Ex}{\\mathrm{Ex}}\\newcommand{\\Co}{\\mathrm{Co}}\\newcommand{\\sa}{\\mathrm{sa}}\\newcommand{\\nnorm}[1]{{\\left\\vert\\kern-0.25ex\\left\\vert\\kern-0.25ex\\left\\vert #1 \\right\\vert\\kern-0.25ex\\right\\vert\\kern-0.25ex\\right\\vert}}\\newcommand{\\dvol}{\\mathrm{dvol}}\\newcommand{\\Sconv}{\\mathrm{Sconv}}\\newcommand{\\I}{\\mathcal{I}}\\newcommand{\\nonunital}{\\mathrm{nu}}\\newcommand{\\cpt}{\\mathrm{cpt}}\\newcommand{\\lcpt}{\\mathrm{lcpt}}\\newcommand{\\com}{\\mathrm{com}}\\newcommand{\\Haus}{\\mathrm{Haus}}\\newcommand{\\proper}{\\mathrm{proper}}\\newcommand{\\infinity}{\\mathrm{inf}}\\newcommand{\\TVS}{\\mathrm{TVS}}\\newcommand{\\ess}{\\mathrm{ess}}\\newcommand{\\ext}{\\mathrm{ext}}\\newcommand{\\Index}{\\mathrm{Index}\\;}\\newcommand{\\SSR}{\\mathrm{SSR}}\\newcommand{\\vs}{\\mathrm{vs.}}\\newcommand{\\fM}{\\mathfrak{M}}\\newcommand{\\EDM}{\\mathrm{EDM}}\\newcommand{\\Tw}{\\mathrm{Tw}}\\newcommand{\\fC}{\\mathfrak{C}}\\newcommand{\\bn}{\\boldsymbol{n}}\\newcommand{\\br}{\\boldsymbol{r}}\\newcommand{\\Lam}{\\Lambda}\\newcommand{\\lam}{\\lambda}\\newcommand{\\one}{\\mathbf{1}}\\newcommand{\\dae}{\\text{-a.e.}}\\newcommand{\\das}{\\text{-a.s.}}\\newcommand{\\td}{\\text{-}}\\newcommand{\\RM}{\\mathrm{RM}}\\newcommand{\\BV}{\\mathrm{BV}}\\newcommand{\\normal}{\\mathrm{normal}}\\newcommand{\\lub}{\\mathrm{lub}\\;}\\newcommand{\\Graph}{\\mathrm{Graph}}\\newcommand{\\Ascent}{\\mathrm{Ascent}}\\newcommand{\\Descent}{\\mathrm{Descent}}\\newcommand{\\BIL}{\\mathrm{BIL}}\\newcommand{\\fL}{\\mathfrak{L}}\\newcommand{\\De}{\\Delta}\n",
        "\n",
        "\\newcommand{\\calA}{\\mathcal{A}}\\newcommand{\\calB}{\\mathcal{B}}\\newcommand{\\D}{\\mathcal{D}}\\newcommand{\\Y}{\\mathcal{Y}}\\newcommand{\\calC}{\\mathcal{C}}\\renewcommand{\\ae}{\\mathrm{a.e.}\\;}\\newcommand{\\cZ}{\\mathcal{Z}}\\newcommand{\\fF}{\\mathfrak{F}}\\newcommand{\\fI}{\\mathfrak{I}}\\newcommand{\\rV}{\\mathrm{V}}\\newcommand{\\cE}{\\mathcal{E}}\\newcommand{\\sMap}{\\sigma\\textrm{-}\\mathrm{Map}}\\newcommand{\\cC}{\\mathcal{C}}\\newcommand{\\comp}{\\complement}\\newcommand{\\J}{\\mathcal{J}}\\newcommand{\\sumN}[1]{\\sum_{#1\\in\\N}}\\newcommand{\\cupN}[1]{\\cup_{#1\\in\\N}}\\newcommand{\\capN}[1]{\\cap_{#1\\in\\N}}\\newcommand{\\Sum}[1]{\\sum_{#1=1}^\\infty}\\newcommand{\\sumn}{\\sum_{n=1}^\\infty}\\newcommand{\\summ}{\\sum_{m=1}^\\infty}\\newcommand{\\sumk}{\\sum_{k=1}^\\infty}\\newcommand{\\sumi}{\\sum_{i=1}^\\infty}\\newcommand{\\sumj}{\\sum_{j=1}^\\infty}\\newcommand{\\cupn}{\\cup_{n=1}^\\infty}\\newcommand{\\capn}{\\cap_{n=1}^\\infty}\\newcommand{\\cupk}{\\cup_{k=1}^\\infty}\\newcommand{\\cupi}{\\cup_{i=1}^\\infty}\\newcommand{\\cupj}{\\cup_{j=1}^\\infty}\\newcommand{\\limn}{\\lim_{n\\to\\infty}}\\renewcommand{\\L}{\\mathcal{L}}\\newcommand{\\cL}{\\mathcal{L}}\\newcommand{\\Cl}{\\mathrm{Cl}}\\newcommand{\\cN}{\\mathcal{N}}\\newcommand{\\Ae}{\\textrm{-a.e.}\\;}\\renewcommand{\\csub}{\\overset{\\textrm{closed}}{\\subset}}\\renewcommand{\\csup}{\\overset{\\textrm{closed}}{\\supset}}\\newcommand{\\wB}{\\wt{B}}\\newcommand{\\cG}{\\mathcal{G}}\\newcommand{\\Lip}{\\mathrm{Lip}}\\newcommand{\\AC}{\\mathrm{AC}}\\newcommand{\\Mol}{\\mathrm{Mol}}\n",
        "\n",
        "\\newcommand{\\Pe}{\\mathrm{Pe}}\\newcommand{\\wR}{\\wh{\\mathbb{\\R}}}\\newcommand*{\\Laplace}{\\mathop{}\\!\\mathbin\\bigtriangleup}\\newcommand*{\\DAlambert}{\\mathop{}\\!\\mathbin\\Box}\\newcommand{\\bT}{\\mathbb{T}}\\newcommand{\\dx}{\\dslash x}\\newcommand{\\dt}{\\dslash t}\\newcommand{\\ds}{\\dslash s}\n",
        "\n",
        "\\newcommand{\\round}{\\mathrm{round}}\\newcommand{\\cond}{\\mathrm{cond}}\\newcommand{\\diag}{\\mathrm{diag}}\n",
        "\\newcommand{\\Adj}{\\mathrm{Adj}}\\newcommand{\\Pf}{\\mathrm{Pf}}\\newcommand{\\Sg}{\\mathrm{Sg}}\n",
        "\n",
        "\n",
        "\\newcommand{\\aseq}{\\overset{\\text{a.s.}}{=}}\\newcommand{\\deq}{\\overset{\\text{d}}{=}}\\newcommand{\\cV}{\\mathcal{V}}\\newcommand{\\FM}{\\mathrm{FM}}\\newcommand{\\KR}{\\mathrm{KR}}\\newcommand{\\rba}{\\mathrm{rba}}\\newcommand{\\rca}{\\mathrm{rca}}\\newcommand{\\Prob}{\\mathrm{Prob}}\\newcommand{\\X}{\\mathcal{X}}\\newcommand{\\Meas}{\\mathrm{Meas}}\\newcommand{\\as}{\\;\\text{a.s.}}\\newcommand{\\io}{\\;\\mathrm{i.o.}}\\newcommand{\\fe}{\\;\\text{f.e.}}\\newcommand{\\bF}{\\mathbb{F}}\\newcommand{\\W}{\\mathcal{W}}\\newcommand{\\Pois}{\\mathrm{Pois}}\\newcommand{\\iid}{\\text{i.i.d.}}\\newcommand{\\wconv}{\\rightsquigarrow}\\newcommand{\\Var}{\\mathrm{Var}}\\newcommand{\\xrightarrown}{\\xrightarrow{n\\to\\infty}}\\newcommand{\\au}{\\mathrm{au}}\\newcommand{\\cT}{\\mathcal{T}}\\newcommand{\\wto}{\\overset{\\text{w}}{\\to}}\\newcommand{\\dto}{\\overset{\\text{d}}{\\to}}\\newcommand{\\sto}{\\overset{\\text{s}}{\\to}}\\newcommand{\\pto}{\\overset{\\text{p}}{\\to}}\\newcommand{\\mto}{\\overset{\\text{m}}{\\to}}\\newcommand{\\vto}{\\overset{v}{\\to}}\\newcommand{\\Cont}{\\mathrm{Cont}}\\newcommand{\\stably}{\\mathrm{stably}}\\newcommand{\\Np}{\\mathbb{N}^+}\\newcommand{\\oM}{\\overline{\\mathcal{M}}}\\newcommand{\\fP}{\\mathfrak{P}}\\newcommand{\\sign}{\\mathrm{sign}}\n",
        "\\newcommand{\\Borel}{\\mathrm{Borel}}\\newcommand{\\Mid}{\\,|\\,}\\newcommand{\\middleMid}{\\;\\middle|\\;}\\newcommand{\\CP}{\\mathrm{CP}}\\newcommand{\\bD}{\\mathbb{D}}\\newcommand{\\bL}{\\mathbb{L}}\\newcommand{\\fW}{\\mathfrak{W}}\\newcommand{\\DL}{\\mathcal{D}\\mathcal{L}}\\renewcommand{\\r}[1]{\\mathrm{#1}}\\newcommand{\\rC}{\\mathrm{C}}\\newcommand{\\qqquad}{\\qquad\\quad}\n",
        "\n",
        "\\newcommand{\\bit}{\\mathrm{bit}}\n",
        "\n",
        "\\newcommand{\\err}{\\mathrm{err}}\n",
        "\n",
        "\\newcommand{\\varparallel}{\\mathbin{\\!/\\mkern-5mu/\\!}}\\newcommand{\\Ri}{\\mathrm{Ri}}\\newcommand{\\Cone}{\\mathrm{Cone}}\\newcommand{\\Int}{\\mathrm{Int}}\n",
        "\n",
        "\\newcommand{\\pre}{\\mathrm{pre}}\\newcommand{\\om}{\\omega}\n",
        "\n",
        "\n",
        "\\newcommand{\\del}{\\partial}\n",
        "\\newcommand{\\LHS}{\\mathrm{LHS}}\\newcommand{\\RHS}{\\mathrm{RHS}}\\newcommand{\\bnu}{\\boldsymbol{\\nu}}\\newcommand{\\interior}{\\mathrm{in}\\;}\\newcommand{\\SH}{\\mathrm{SH}}\\renewcommand{\\v}{\\boldsymbol{\\nu}}\\newcommand{\\n}{\\mathbf{n}}\\newcommand{\\ssub}{\\Subset}\\newcommand{\\curl}{\\mathrm{curl}}\n",
        "\n",
        "\\newcommand{\\Ei}{\\mathrm{Ei}}\\newcommand{\\sn}{\\mathrm{sn}}\\newcommand{\\wgamma}{\\widetilde{\\gamma}}\n",
        "\n",
        "\\newcommand{\\Ens}{\\mathrm{Ens}}\n",
        "\n",
        "\\newcommand{\\cl}{\\mathrm{cl}}\\newcommand{\\x}{\\boldsymbol{x}}\n",
        "\n",
        "\\newcommand{\\Do}{\\mathrm{Do}}\\newcommand{\\IV}{\\mathrm{IV}}\n",
        "\n",
        "\\newcommand{\\AIC}{\\mathrm{AIC}}\\newcommand{\\mrl}{\\mathrm{mrl}}\\newcommand{\\dotx}{\\dot{x}}\\newcommand{\\UMV}{\\mathrm{UMV}}\\newcommand{\\BLU}{\\mathrm{BLU}}\n",
        "\n",
        "\\newcommand{\\comb}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\bP}{\\mathbb{P}}\\newcommand{\\compsub}{\\overset{\\textrm{cpt}}{\\subset}}\\newcommand{\\lip}{\\textrm{lip}}\\newcommand{\\BL}{\\mathrm{BL}}\\newcommand{\\G}{\\mathbb{G}}\\newcommand{\\NB}{\\mathrm{NB}}\\newcommand{\\oR}{\\ov{\\R}}\\newcommand{\\liminfn}{\\liminf_{n\\to\\infty}}\\newcommand{\\limsupn}{\\limsup_{n\\to\\infty}}\\newcommand{\\esssup}{\\mathrm{ess.sup}}\\newcommand{\\asto}{\\xrightarrow{\\as}}\\newcommand{\\Cov}{\\mathrm{Cov}}\\newcommand{\\cQ}{\\mathcal{Q}}\\newcommand{\\VC}{\\mathrm{VC}}\\newcommand{\\mb}{\\mathrm{mb}}\\newcommand{\\Avar}{\\mathrm{Avar}}\\newcommand{\\bB}{\\mathbb{B}}\\newcommand{\\bW}{\\mathbb{W}}\\newcommand{\\sd}{\\mathrm{sd}}\\newcommand{\\w}[1]{\\widehat{#1}}\\newcommand{\\bZ}{\\mathbb{Z}}\\newcommand{\\Bernoulli}{\\mathrm{Ber}}\\newcommand{\\Ber}{\\mathrm{Ber}}\\newcommand{\\Mult}{\\mathrm{Mult}}\\newcommand{\\BPois}{\\mathrm{BPois}}\\newcommand{\\fraks}{\\mathfrak{s}}\\newcommand{\\frakk}{\\mathfrak{k}}\\newcommand{\\IF}{\\mathrm{IF}}\\newcommand{\\bX}{\\boldsymbol{X}}\\newcommand{\\bx}{\\boldsymbol{x}}\\newcommand{\\indep}{\\perp\\!\\!\\!\\perp}\\newcommand{\\IG}{\\mathrm{IG}}\\newcommand{\\Levy}{\\mathrm{Levy}}\\newcommand{\\MP}{\\mathrm{MP}}\\newcommand{\\Hermite}{\\mathrm{Hermite}}\\newcommand{\\Skellam}{\\mathrm{Skellam}}\\newcommand{\\Dirichlet}{\\mathrm{Dirichlet}}\\renewcommand{\\Beta}{\\operatorname{Beta}}\\newcommand{\\bE}{\\mathbb{E}}\\newcommand{\\bG}{\\mathbb{G}}\\newcommand{\\MISE}{\\mathrm{MISE}}\\newcommand{\\logit}{\\mathtt{logit}}\\newcommand{\\expit}{\\mathtt{expit}}\\newcommand{\\cK}{\\mathcal{K}}\\newcommand{\\dl}{\\dot{l}}\\newcommand{\\dotp}{\\dot{p}}\\newcommand{\\wl}{\\wt{l}}\\newcommand{\\Gauss}{\\mathrm{Gauss}}\\newcommand{\\fA}{\\mathfrak{A}}\\newcommand{\\under}{\\mathrm{under}\\;}\\newcommand{\\whtheta}{\\wh{\\theta}}\\newcommand{\\Em}{\\mathrm{Em}}\\newcommand{\\ztheta}{{\\theta_0}}\n",
        "\\newcommand{\\rO}{\\mathrm{O}}\\newcommand{\\Bin}{\\mathrm{Bin}}\\newcommand{\\rW}{\\mathrm{W}}\\newcommand{\\rG}{\\mathrm{G}}\\newcommand{\\rB}{\\mathrm{B}}\\newcommand{\\rU}{\\mathrm{U}}\\newcommand{\\HG}{\\mathrm{HG}}\\newcommand{\\GAMMA}{\\mathrm{Gamma}}\\newcommand{\\Cauchy}{\\mathrm{Cauchy}}\\newcommand{\\rt}{\\mathrm{t}}\\newcommand{\\rF}{\\mathrm{F}}\n",
        "\\newcommand{\\FE}{\\mathrm{FE}}\\newcommand{\\bV}{\\boldsymbol{V}}\\newcommand{\\GLS}{\\mathrm{GLS}}\\newcommand{\\be}{\\boldsymbol{e}}\\newcommand{\\POOL}{\\mathrm{POOL}}\\newcommand{\\GMM}{\\mathrm{GMM}}\\newcommand{\\MM}{\\mathrm{MM}}\\newcommand{\\SSIV}{\\mathrm{SSIV}}\\newcommand{\\JIV}{\\mathrm{JIV}}\\newcommand{\\AR}{\\mathrm{AR}}\\newcommand{\\ILS}{\\mathrm{ILS}}\\newcommand{\\SLS}{\\mathrm{SLS}}\\newcommand{\\LIML}{\\mathrm{LIML}}\n",
        "\n",
        "\\newcommand{\\Rad}{\\mathrm{Rad}}\\newcommand{\\bY}{\\boldsymbol{Y}}\\newcommand{\\pone}{{(1)}}\\newcommand{\\ptwo}{{(2)}}\\newcommand{\\ps}[1]{{(#1)}}\\newcommand{\\fsub}{\\overset{\\text{finite}}{\\subset}}\n",
        "\n",
        "\n",
        "\\newcommand{\\varlim}{\\varprojlim}\\newcommand{\\Hom}{\\mathrm{Hom}}\\newcommand{\\Iso}{\\mathrm{Iso}}\\newcommand{\\Mor}{\\mathrm{Mor}}\\newcommand{\\Isom}{\\mathrm{Isom}}\\newcommand{\\Aut}{\\mathrm{Aut}}\\newcommand{\\End}{\\mathrm{End}}\\newcommand{\\op}{\\mathrm{op}}\\newcommand{\\ev}{\\mathrm{ev}}\\newcommand{\\Ob}{\\mathrm{Ob}}\\newcommand{\\Ar}{\\mathrm{Ar}}\\newcommand{\\Arr}{\\mathrm{Arr}}\\newcommand{\\Set}{\\mathrm{Set}}\\newcommand{\\Grp}{\\mathrm{Grp}}\\newcommand{\\Cat}{\\mathrm{Cat}}\\newcommand{\\Mon}{\\mathrm{Mon}}\\newcommand{\\Ring}{\\mathrm{Ring}}\\newcommand{\\CRing}{\\mathrm{CRing}}\\newcommand{\\Ab}{\\mathrm{Ab}}\\newcommand{\\Pos}{\\mathrm{Pos}}\\newcommand{\\Vect}{\\mathrm{Vect}}\\newcommand{\\FinVect}{\\mathrm{FinVect}}\\newcommand{\\FinSet}{\\mathrm{FinSet}}\\newcommand{\\FinMeas}{\\mathrm{FinMeas}}\\newcommand{\\OmegaAlg}{\\Omega\\text{-}\\mathrm{Alg}}\\newcommand{\\OmegaEAlg}{(\\Omega,E)\\text{-}\\mathrm{Alg}}\\newcommand{\\Fun}{\\mathrm{Fun}}\\newcommand{\\Func}{\\mathrm{Func}}\n",
        "\n",
        "\\newcommand{\\Stoch}{\\mathrm{Stoch}}\\newcommand{\\FinStoch}{\\mathrm{FinStoch}}\\newcommand{\\Copy}{\\mathrm{copy}}\\newcommand{\\Delete}{\\mathrm{delete}}\n",
        "\\newcommand{\\Bool}{\\mathrm{Bool}}\\newcommand{\\CABool}{\\mathrm{CABool}}\\newcommand{\\CompBoolAlg}{\\mathrm{CompBoolAlg}}\\newcommand{\\BoolAlg}{\\mathrm{BoolAlg}}\\newcommand{\\BoolRng}{\\mathrm{BoolRng}}\\newcommand{\\HeytAlg}{\\mathrm{HeytAlg}}\\newcommand{\\CompHeytAlg}{\\mathrm{CompHeytAlg}}\\newcommand{\\Lat}{\\mathrm{Lat}}\\newcommand{\\CompLat}{\\mathrm{CompLat}}\\newcommand{\\SemiLat}{\\mathrm{SemiLat}}\\newcommand{\\Stone}{\\mathrm{Stone}}\\newcommand{\\Mfd}{\\mathrm{Mfd}}\\newcommand{\\LieAlg}{\\mathrm{LieAlg}}\n",
        "\\newcommand{\\Op}{\\mathrm{Op}}\n",
        "\\newcommand{\\Sh}{\\mathrm{Sh}}\n",
        "\\newcommand{\\Diff}{\\mathrm{Diff}}\n",
        "\\newcommand{\\B}{\\mathcal{B}}\\newcommand{\\cB}{\\mathcal{B}}\\newcommand{\\Span}{\\mathrm{Span}}\\newcommand{\\Corr}{\\mathrm{Corr}}\\newcommand{\\Decat}{\\mathrm{Decat}}\\newcommand{\\Rep}{\\mathrm{Rep}}\\newcommand{\\Grpd}{\\mathrm{Grpd}}\\newcommand{\\sSet}{\\mathrm{sSet}}\\newcommand{\\Mod}{\\mathrm{Mod}}\\newcommand{\\SmoothMnf}{\\mathrm{SmoothMnf}}\\newcommand{\\coker}{\\mathrm{coker}}\\newcommand{\\Ord}{\\mathrm{Ord}}\\newcommand{\\eq}{\\mathrm{eq}}\\newcommand{\\coeq}{\\mathrm{coeq}}\\newcommand{\\act}{\\mathrm{act}}\n",
        "\n",
        "\\newcommand{\\apf}{\\mathrm{apf}}\\newcommand{\\opt}{\\mathrm{opt}}\\newcommand{\\IS}{\\mathrm{IS}}\\newcommand{\\IR}{\\mathrm{IR}}\\newcommand{\\iidsim}{\\overset{\\text{i.i.d.}}{\\sim}}\\newcommand{\\propt}{\\,\\propto\\,}\\newcommand{\\bM}{\\mathbb{M}}\\newcommand{\\cX}{\\mathcal{X}}\\newcommand{\\cY}{\\mathcal{Y}}\\newcommand{\\cP}{\\mathcal{P}}\\newcommand{\\ola}[1]{\\overleftarrow{#1}}\n",
        "\n",
        "\\renewcommand{\\iff}{\\;\\mathrm{iff}\\;}\n",
        "\\newcommand{\\False}{\\mathrm{False}}\\newcommand{\\True}{\\mathrm{True}}\n",
        "\\newcommand{\\otherwise}{\\mathrm{otherwise}}\n",
        "\\newcommand{\\suchthat}{\\;\\mathrm{s.t.}\\;}\n",
        "\n",
        "\\newcommand{\\cM}{\\mathcal{M}}\\newcommand{\\M}{\\mathbb{M}}\\newcommand{\\cF}{\\mathcal{F}}\\newcommand{\\cD}{\\mathcal{D}}\\newcommand{\\fX}{\\mathfrak{X}}\\newcommand{\\fY}{\\mathfrak{Y}}\\newcommand{\\fZ}{\\mathfrak{Z}}\\renewcommand{\\H}{\\mathcal{H}}\\newcommand{\\cH}{\\mathcal{H}}\\newcommand{\\fH}{\\mathfrak{H}}\\newcommand{\\bH}{\\mathbb{H}}\\newcommand{\\id}{\\mathrm{id}}\\newcommand{\\A}{\\mathcal{A}}\n",
        "\\newcommand{\\lmd}{\\lambda}\n",
        "\\newcommand{\\Lmd}{\\Lambda}\n",
        "\\newcommand{\\cI}{\\mathcal{I}}\n",
        "\n",
        "\\newcommand{\\Lrarrow}{\\;\\;\\Leftrightarrow\\;\\;}\n",
        "\\DeclareMathOperator{\\des}{des}\n",
        "\\DeclareMathOperator{\\nd}{nd}\n",
        "\\DeclareMathOperator{\\dsep}{d-sep}\n",
        "\\DeclareMathOperator{\\sep}{sep}\n",
        "\\newcommand{\\rLL}{\\mathrm{LL}}\\newcommand{\\HT}{\\mathrm{HT}}\\newcommand{\\PS}{\\mathrm{PS}}\\newcommand{\\rI}{\\mathrm{I}}\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "1. 各区間 $\\Square{\\frac{n-1}{M},\\frac{n}{M}}\\subset[0,1]\\;(n\\in[M])$ での変動の由来をただ一つのサンプル $U\\sim\\rU([0,1])$ から取ってしまい，\n",
        "$$\n",
        "U^{(n)}:=\\frac{n-1+U}{N}\\quad(n\\in[M])\n",
        "$$\n",
        "と乱数列を定める．\n",
        "2. 正規化荷重 $\\{w^{(n)}\\}_{n=1}^N$ が定める累積和\n",
        "$$\n",
        "F(n):=\\sum_{i=1}^nw^{(i)}\n",
        "$$\n",
        "に対して，この一般化逆関数 $F^-:[0,1]\\to[N]$ を通じて，$A^{n}:=F^{-1}(U^{(n)})\\;(n\\in[M])$ をサンプルとする．\n",
        "\n",
        "これにより，粒子の添字の対応 $(1,\\cdots,N)\\mapsto A^{1:M}$ が得られる．\n"
      ],
      "id": "1bc7cb6a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "from numba import jit\n",
        "\n",
        "@jit(nopython=True)\n",
        "def inverse_cdf(su, W):\n",
        "    \"\"\"Inverse CDF algorithm for a finite distribution.\n",
        "    su: (M,) ndarray of sorted uniform variables\n",
        "    W: (N,) ndarray of normalized weights\"\"\"\n",
        "    j = 0\n",
        "    s = W[0]\n",
        "    M = su.shape[0]\n",
        "    A = np.empty(M, dtype=np.int64)\n",
        "    for n in range(M):\n",
        "        while su[n] > s:\n",
        "            j += 1\n",
        "            s += W[j]\n",
        "        A[n] = j\n",
        "    return A\n",
        "\n",
        "def systematic(W, M):\n",
        "    \"\"\"Systematic resampling\n",
        "    W: (N,) ndarray of normalized weights\n",
        "    M : number of resampled points\"\"\"\n",
        "    su = (random.rand(1) + np.arange(M)) / M\n",
        "    return inverse_cdf(su, W)"
      ],
      "id": "a5e304cf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 荷重を保持する`Weights`クラス\n",
        "\n",
        "次に，`SMC` に繋げるために，粒子の荷重を保持するためのクラスを定義する．粒子の荷重は極めて小さくなり得るため，対数によって保持する．このクラス内の属性として，正規化荷重もESSも得られるようにする：\n",
        "\n",
        "* `lw`：正規化されていない荷重を対数で保持\n",
        "* `w`：正規化された荷重\n",
        "* `ESS`：有効サンプル数^[有効サンプル数の定義については [@Chopin-Papaspiliopoulos20-SMC] 参照．]\n",
        "\n",
        "これらの属性を `__init__(lw)` 内で計算する．加えて `add(delta)` メソッドで，incremental weightsを乗じるルーチンを用意する．\n"
      ],
      "id": "2254704c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "class Weights:\n",
        "    \"\"\"A class to hold the N weights of the particles\"\"\"\n",
        "    def __init__(self, lw=None):\n",
        "        self.lw = lw  # t=0で呼ばれた際はNoneである\n",
        "        if lw is not None:\n",
        "            self.lw[np.isnan(self.lw)] = -np.inf  # 欠損値処理\n",
        "            m = self.lw.max()\n",
        "            w = np.exp(self.lw - m)  # 大きすぎる値にならないように\n",
        "            s = w.sum()\n",
        "            self.W = w / s  # 正規化荷重\n",
        "            self.ESS = 1.0 / np.sum(self.W ** 2)\n",
        "            self.log_mean = m + np.log(s / self.N)\n",
        "    \n",
        "    @property\n",
        "    def N(self):\n",
        "        \"\"\"Number of particles\"\"\"\n",
        "        return 0 if self.lw is None else self.lw.shape[0]\n",
        "\n",
        "    def add(self, delta):\n",
        "        \"\"\"Add increment weights delta to the log weights\"\"\"\n",
        "        if self.lw is None:\n",
        "            return self.__class__(lw=delta)\n",
        "        else:\n",
        "            return self.__class__(lw=self.lw + delta)"
      ],
      "id": "688fc9af",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "初期化は\n",
        "$$\n",
        "W^i=\\frac{e^{\\log w^i-m}}{\\sum_{j=1}^Ne^{\\log w^j-m}}\n",
        "$$\n",
        "$$\n",
        "m:=\\log\\paren{\\max_{i\\in[N]}w^i}\n",
        "$$\n",
        "に基づいて計算されている．`log_mean` は\n",
        "$$\n",
        "\\begin{align*}\n",
        "    &\\log\\paren{\\max_{i\\in[N]}w^i}+\\log\\paren{\\frac{\\sum_{j=1}^Ne^{\\log w^j-m}}{N}}\\\\\n",
        "    &=\\log\\paren{\\frac{1}{N}\\sum_{j=1}^Nw^j}\n",
        "\\end{align*}\n",
        "$$\n",
        "という値である．\n",
        "\n",
        "## 粒子の情報保持：`ParticleHistory`クラス\n",
        "\n",
        "### 情報を収集する`Collector`クラス\n",
        "\n",
        "SMCの結果をプロットするために，各時間で粒子の標本統計量を `SMC` クラス（ @sec-SMC ）から適宜抜き出して保存しておくためのクラス `Summaries` を作成する．抜き出すためのメソッドを `Collector` クラスの継承クラスとして定義する．\n"
      ],
      "id": "877cc812"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "class Collector:\n",
        "    \"\"\"Base class for collectors\"\"\"\n",
        "    def __init__(self, **kwargs):\n",
        "        self.summary = []\n",
        "\n",
        "    def collect(self, smc):\n",
        "        self.summary.append(self.fetch(smc))\n",
        "\n",
        "class ESSs(Collector):\n",
        "    summary_name = \"ESSs\"\n",
        "    def fetch(self, smc):\n",
        "        return smc.wgts.ESS\n",
        "\n",
        "class LogLts(Collector):\n",
        "    summary_name = \"LogLts\"\n",
        "    def fetch(self, smc):\n",
        "        return smc.logLt\n",
        "\n",
        "class Rs_flags(Collector):\n",
        "    summary_name = \"Rs_flags\"\n",
        "    def fetch(self, smc):\n",
        "        return smc.rs_flag\n",
        "\n",
        "class Moments(Collector):\n",
        "    \"\"\"Collects empirical moments of the particles\"\"\"\n",
        "    summary_name = \"Moments\"\n",
        "    def fetch(self, smc):\n",
        "        m = np.average(smc.X, weights=smc.wgts.W, axis=0)\n",
        "        m2 = np.average(smc.X ** 2, weights=smc.wgts.W, axis=0)\n",
        "        v = m2 - m ** 2\n",
        "        return {\"mean\": m, \"var\": v}\n",
        "\n",
        "default_collector_cls = [ESSs, LogLts, Rs_flags]"
      ],
      "id": "2667db87",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 標本統計量を保持する`Summaries`クラス\n",
        "\n",
        "このクラスはデフォルトで用意されている `default_collector_cls` に加えて，`cols`引数で指定されたメソッドを追加し，`collect()` メソッドが呼ばれるとこれらを集めて属性として保持する．\n"
      ],
      "id": "c82e39be"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "class Summaries:\n",
        "    \"\"\"A class to hold the summaries of the SMC algorithm\"\"\"\n",
        "    def __init__(self, cols):\n",
        "        self._collectors = [cls() for cls in default_collector_cls]\n",
        "        if cols is not None:\n",
        "            self._collectors.extend(col() for col in cols)\n",
        "        for col in self._collectors:\n",
        "            setattr(self, col.summary_name, col.summary)\n",
        "\n",
        "    def collect(self, smc):\n",
        "        for col in self._collectors:\n",
        "            col.collect(smc)"
      ],
      "id": "8bd53b3c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### ヒストリを保持する`ParticleHistory`クラス\n",
        "\n",
        "[`deque`オブジェクト](https://docs.python.org/ja/3/library/collections.html#collections.deque) としてヒストリを格納するためのクラス`ParticleHistory`実装する．これにより直前 $k$ ステップの情報だけを保持出来るように作れるが，今回はプロットのために全履歴を保持する．\n"
      ],
      "id": "02375f5c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "class ParticleHistory:\n",
        "    \"\"\"History of the particles\n",
        "    Full history that keeps all the particle systems based on lists.\n",
        "    \"\"\"\n",
        "    def __init__(self, fk):\n",
        "        self.X, self.A, self.wgts = [], [], []\n",
        "        self.fk = fk\n",
        "\n",
        "    def save(self, smc):\n",
        "        self.X.append(smc.X)\n",
        "        self.A.append(smc.A)\n",
        "        self.wgts.append(smc.wgts)"
      ],
      "id": "6fe44cd2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "def generate_hist_obj(option, smc):\n",
        "    if option is True:\n",
        "        return ParticleHistory(smc.fk)\n",
        "    else:\n",
        "        return None"
      ],
      "id": "7554d4c5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 実行部分：`SMC`クラス {#sec-SMC}\n",
        "\n",
        "このクラスがやるべきことは多い．Feynman-Kacモデル `fk`（ @sec-FeynmanKac で後述），粒子数 `N`，リサンプリング法 `resampling` を引数に取り，粒子フィルターを実行する．\n",
        "\n",
        "最も大事なこととして，本クラスはイテレータとして定義し，`__next__` メソッドを実装する．そして `run()` メソッドで `__next__` を終了するまで繰り返し呼び出すことでイテレータプロトコルを実行する．\n",
        "\n",
        "`__next__`メソッドでは，次のような処理を行う：\n",
        "\n",
        "1. 終了フラッグ `fk.done(self)` が立っているかどうかを確認する．\n",
        "2. $t=0$ の場合，最初の粒子を初期分布 $M_0$ から $N$ 個サンプリングする．\n",
        "3. $t>0$ の場合は，リサンプリングと粒子移動を行う．これは `resample_move()` メソッドで行う．\n",
        "   1. リサンプリングフラッグ `fk.time_to_resample(self)` が立っている場合にリサンプリングを `systematic` メソッド（ @sec-systematic ）により行う．これにより，移動（変異）する粒子 $A^{1:N}_t$ を確定させる．\n",
        "   2. 確率核 $M_t(X_{t-1}^{A_t^{1:N}},-)$ に従って，粒子 $X_t^{1:N}$ をサンプリングする．\n",
        "4. 粒子の荷重を更新する．これは `reweight_particles()` メソッドで行う．\n",
        "5. `compute_summaries`メソッドを呼び出して，粒子の標本統計量を `Summaries` クラスに，ヒストリを `Particle History` クラスに追記する．\n",
        "6. 時刻 $t$ を進めて 3.に戻る．\n"
      ],
      "id": "9bdb97a7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "class SMC:\n",
        "    \"\"\"Metaclass for SMC algorithms\"\"\"\n",
        "\n",
        "    def __init__(\n",
        "        self,\n",
        "        fk=None,\n",
        "        N=100,\n",
        "        resampling=\"systematic\",\n",
        "        ESSrmin=0.5,\n",
        "        store_history=False,\n",
        "        collect=None,\n",
        "    ):\n",
        "\n",
        "        self.fk = fk\n",
        "        self.N = N\n",
        "        self.resampling = resampling\n",
        "        self.ESSrmin = ESSrmin\n",
        "\n",
        "        # initialisation\n",
        "        self.t = 0\n",
        "        self.rs_flag = False  # no resampling at time 0, by construction\n",
        "        self.logLt = 0.0\n",
        "        self.wgts = Weights()\n",
        "        self.X, self.Xp, self.A = None, None, None\n",
        "\n",
        "        self.summaries = Summaries(collect)\n",
        "        self.hist = generate_hist_obj(store_history, self)\n",
        "\n",
        "    def generate_particles(self):\n",
        "        \"\"\"Generate particles at time t=0\"\"\"\n",
        "        self.X = self.fk.M0(self.N)\n",
        "    \n",
        "    def reset_weights(self):\n",
        "        \"\"\"Reset weights to uniform after a resamping step\"\"\"\n",
        "        self.wgts = Weights()\n",
        "    \n",
        "    def resample_move(self):\n",
        "        \"\"\"Adaptively resample and move particles at time t\"\"\"\n",
        "        self.rs_flag = self.fk.time_to_resample(self)\n",
        "        if self.rs_flag:\n",
        "            self.A  = systematic(self.wgts.W, M=self.N)\n",
        "            self.Xp = self.X[self.A]\n",
        "            self.reset_weights()\n",
        "        else:\n",
        "            self.A = np.arange(self.N)\n",
        "            self.Xp = self.X\n",
        "        self.X = self.fk.M(self.t, self.Xp)\n",
        "\n",
        "    def reweight_particles(self):\n",
        "        \"\"\"Reweight particles at time t\"\"\"\n",
        "        self.wgts = self.wgts.add(self.fk.logG(self.t, self.Xp, self.X))\n",
        "\n",
        "    def compute_summaries(self):\n",
        "        \"\"\"Compute summaries at time t\"\"\"\n",
        "        if self.t > 0:  # なぜかこれを前におかないとUnboundLocalErrorが出る\n",
        "            prec_log_mean_w = self.log_mean_w\n",
        "        self.log_mean_w = self.wgts.log_mean\n",
        "        if self.t == 0 or self.rs_flag:\n",
        "            self.loglt = self.log_mean_w\n",
        "        else:\n",
        "            self.loglt = self.log_mean_w - prec_log_mean_w\n",
        "        self.logLt += self.loglt\n",
        "\n",
        "        self.hist.save(self)\n",
        "        self.summaries.collect(self)\n",
        "\n",
        "    def __next__(self):\n",
        "        \"\"\"One step of the SMC algorithm\"\"\"\n",
        "        if self.fk.done(self):\n",
        "            raise StopIteration\n",
        "        if self.t == 0:\n",
        "            self.generate_particles()\n",
        "        else:\n",
        "            self.resample_move()\n",
        "        self.reweight_particles()\n",
        "        self.compute_summaries()\n",
        "        self.t += 1\n",
        "\n",
        "    def __iter__(self):\n",
        "        return self\n",
        "\n",
        "    def run(self):\n",
        "        \"\"\"Run the SMC algorithm until completion\"\"\"\n",
        "        for _ in self:\n",
        "            pass"
      ],
      "id": "a0517f28",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 粒子フィルタの実行：東京の年別気温データ\n",
        "\n",
        "### Feynman-Kacモデルの枠組み {#sec-FeynmanKac}\n",
        "\n",
        "`particle` パッケージの抽象クラス `FeynmanKac` は次のメソッドを持つ．^[Feynman-Kacモデルなどの用語については [@Chopin-Papaspiliopoulos20-SMC] 参照．]\n",
        "\n",
        "* `M0(N)`: 初期分布 $M_0$ から $N$ 個のサンプルを生成する．\n",
        "* `M(t, xp)`: カーネル $M_t(x_{t-1}|-)$ から $X_t$ をサイズ `xp.shape[0]` で生成する．\n",
        "* `logG(t, xp, x)`: ポテンシャル $G_t(x_{t-1},x_t)$ の対数を返す．\n",
        "\n",
        "加えて，粒子フィルターの実行時に必要なフラグも用意する．\n",
        "\n",
        "* `time_to_resample(smc)`: `smc` オブジェクトを引数に取り，その属性 `smc.aux.ESS`, `smc.ESSrmin` からリサンプリングが必要かどうかを判定する．\n",
        "* `done(smc)`: `smc` オブジェクトを引数に取り，その属性 `smc.t`, `smc.T` からアルゴリズムを終了すべきかどうかを判定する．\n",
        "\n",
        "`particle` パッケージを使うときは `FeynmanKac` クラスを継承して用いることになるが，ここでは自分で定義していく．\n",
        "\n",
        "### 使用するデータ\n",
        "\n",
        "気象庁が [HP](https://www.data.jma.go.jp/obd/stats/etrn/view/annually_s.php?prec_no=44&block_no=47662&year=&month=&day=&view=) にて公開している1876年から2022年までの計147年分の東京の年別気温データを用いる．\n"
      ],
      "id": "18ec4705"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"TemperatureDataAtTokyo.csv\")\n",
        "print(data.describe())"
      ],
      "id": "1f14dcd7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "\n",
        "plt.title(\"temperature in Tokyo\")\n",
        "plt.xlabel(\"Year\")\n",
        "plt.ylabel(\"Temperature (Celsius)\")\n",
        "\n",
        "plt.scatter(data['年度'], data['日平均'], s=2)\n",
        "plt.show()"
      ],
      "id": "389daeb6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 気温の1次のトレンドモデル\n",
        "\n",
        "気温の観測値 $\\{y_k\\}$ に対して，1次元の線型Gauss状態空間モデル\n",
        "$$\n",
        "\\begin{cases}\n",
        "x_k=x_{k-1}+v_k,\\\\\n",
        "y_k=x_k+w_k.\n",
        "\\end{cases}\n",
        "$$ {#eq-SSM}\n",
        "$$\n",
        "v_k\\iidsim\\rN(0,Q^2),\\quad w_k\\iidsim\\rN(0,R^2),\n",
        "$$\n",
        "を想定する．このモデルを1次のトレンドモデルという [@北川2005-時系列解析入門 第11章]．\n",
        "\n",
        "これを`SMC`メソッド（ @sec-SMC ）に渡せるように実装するには次のようにする：\n"
      ],
      "id": "d513c632"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from numpy import random\n",
        "from scipy import stats\n",
        "\n",
        "class Bootstrap:\n",
        "    \"\"\"Abstract base class for Feynman-Kac models derived from State Space Model (1).\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, data, T, R, Q):\n",
        "        self.data = data\n",
        "        self.T = T\n",
        "        self.R = R\n",
        "        self.Q = Q\n",
        "    \n",
        "    def M0(self, N):\n",
        "        \"\"\"Sample N times from initial distribution M0 of the FK model\"\"\"\n",
        "        return random.normal(loc=13.6, scale=self.Q, size=N)\n",
        "    \n",
        "    def M(self, t, xp):  # xp: resampled previous state\n",
        "        \"\"\"Sample Xt from kernel Mt conditioned on Xt-1=xp\"\"\"\n",
        "        return random.normal(loc=xp, scale=self.Q, size=xp.shape[0])\n",
        "    \n",
        "    def logG(self, t, xp, x):  # x: current state\n",
        "        \"\"\"Evaluate the log potential Gt(xt-1,xt)\"\"\"\n",
        "        return stats.norm.logpdf(self.data[t], loc=x, scale=self.R)\n",
        "    \n",
        "    def time_to_resample(self, smc):\n",
        "        \"\"\"Return True if resampling is needed\"\"\"\n",
        "        return smc.wgts.ESS < smc.N * smc.ESSrmin\n",
        "    \n",
        "    def done(self, smc):\n",
        "        \"\"\"Return True if the algorithm is done\"\"\"\n",
        "        return smc.t >= self.T"
      ],
      "id": "b93887d0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### $(R,Q)=(0.2,0.1)$ の場合\n",
        "\n",
        "仮に $(R,Q)=(0.2,0.1)$ としてみる．すなわち，システムノイズ $Q^2=0.1$ が小さく，観測ノイズ $R^2=0.4$ はそれよりは大きいとしている．\n"
      ],
      "id": "732250f7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "model1 = Bootstrap(data=data['日平均'], T=data.shape[0], R=0.2, Q=0.1)\n",
        "PF1 = SMC(fk=model1, N=1000, resampling=\"systematic\", ESSrmin=0.5, collect=[Moments], store_history=True)\n",
        "PF1.run()"
      ],
      "id": "a1a8c05b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-2-1\n",
        "#| fig-cap: (R,Q)=(0.2,0.1) の場合の粒子フィルターの実行結果\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot([m['mean'] for m in PF1.summaries.Moments], label='filtered temperature trend')\n",
        "plt.show()"
      ],
      "id": "fig-2-1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "少し揺らぎながらも，トレンドとして気温が上昇していく様子が見られる．\n",
        "\n",
        "### $(R,Q)=(0.7,0.1)$ の場合\n",
        "\n",
        "濾波して得たトレンドの揺らぎが少し大きいと思われたため，観測誤差はもう少し大きいものとして $(R,Q)=(0.7,0.1)$ としてみる．\n"
      ],
      "id": "1906ced4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "model4 = Bootstrap(data=data['日平均'], T=data.shape[0], R=0.7, Q=0.1)\n",
        "PF4 = SMC(fk=model4, N=1000, resampling=\"systematic\", ESSrmin=0.5, collect=[Moments], store_history=True)\n",
        "PF4.run()"
      ],
      "id": "6a3a6187",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: \"(R,Q)=(0.7,0.1) の場合の粒子フィルターの実行結果\"\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot([m['mean'] for m in PF4.summaries.Moments], label='filtered temperature trend')\n",
        "plt.show()"
      ],
      "id": "851aaf48",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "こうしてトレンドとして少しばかり直線的なものが得られた．やはり上昇トレンドが見られる．\n",
        "\n",
        "### $(R,Q)=(0.2,0.01)$ の場合\n",
        "\n",
        "$Q^2=10^{-4}$ としてシステムノイズは極めて小さいと想定してみる．「トレンドは殆ど変化しない」という仮定を置いたことになる．\n"
      ],
      "id": "b5f84a1e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "model2 = Bootstrap(data=data['日平均'], T=data.shape[0], R=0.2, Q=0.01)\n",
        "PF2 = SMC(fk=model2, N=1000, resampling=\"systematic\", ESSrmin=0.5, collect=[Moments], store_history=True)\n",
        "PF2.run()"
      ],
      "id": "bf16b4ec",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: \"(R,Q)=(0.2,0.01) の場合の粒子フィルターの実行結果\"\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot([m['mean'] for m in PF2.summaries.Moments], label='filtered temperature trend')\n",
        "plt.show()"
      ],
      "id": "192e5ce6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "あまり良い当てはまりを見せないため，この気温の時系列を全てが観測誤差によるものだと理解するのは妥当ではないと考えられる．\n",
        "\n",
        "### $(R,Q)=(0.2,1)$ の場合\n",
        "\n",
        "逆にシステムノイズを極めて大きい値 $Q^2=1$ と設定する．トレンドは年別の揺らぎが大きいと想定したことになる．\n"
      ],
      "id": "c2fb8c77"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "model3 = Bootstrap(data=data['日平均'], T=data.shape[0], R=0.2, Q=1.0)\n",
        "PF3 = SMC(fk=model3, N=1000, resampling=\"systematic\", ESSrmin=0.5, collect=[Moments], store_history=True)\n",
        "PF3.run()"
      ],
      "id": "d6ccc365",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: \"(R,Q)=(0.2,1) の場合の粒子フィルターの実行結果\"\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot([m['mean'] for m in PF3.summaries.Moments], label='filtered temperature trend')\n",
        "plt.show()"
      ],
      "id": "c35039c0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "とんでもない過適応を見せて，全てをトレンドとして説明してしまっており，これもまた妥当ではないと考えられる．\n",
        "\n",
        "### カルマンフィルタとの比較\n",
        "\n",
        "線型Gaussモデルを想定しているため，粒子フィルターは $N\\to\\infty$ の極限で最適フィルターであるカルマンフィルターに一致するはずである．そこで，`pykalman` パッケージを用いてこれを実装する．$(R,Q)=(0.2,0.1)$ とする．\n"
      ],
      "id": "509e9a5a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from pykalman import KalmanFilter\n",
        "KF1 = KalmanFilter(initial_state_mean=13.6, initial_state_covariance=0.1,\n",
        "                   transition_matrices=1, observation_matrices=1,\n",
        "                   transition_covariance=0.1, observation_covariance=0.2, n_dim_state=1, n_dim_obs=1)\n",
        "KF1 = KF1.em(data['日平均'], n_iter=5)  # EMアルゴリズムの過適応回避のため\n",
        "(filtered_state_means, filtered_state_covariances) = KF1.filter(data['日平均'])"
      ],
      "id": "a62ba3b6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: \"(R,Q)=(0.2,0.1) の場合のKalmanフィルターの実行結果\"\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot(filtered_state_means, label='filtered temperature trend')\n",
        "plt.show()"
      ],
      "id": "9969654b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "たしかに @fig-2-1 と極めて似通った結果になっている．\n",
        "\n",
        "### カルマン平滑化の結果\n"
      ],
      "id": "5241d548"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "(smoothed_state_means, smoothed_state_covariances) = KF1.smooth(data['日平均'])"
      ],
      "id": "303a4a95",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: \"(R,Q)=(0.2,0.1) の場合のKalman平滑化の実行結果\"\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.plot(data['日平均'], label='data', linestyle='', marker='.')\n",
        "plt.plot(smoothed_state_means, label='smoothed temperature trend')\n",
        "plt.show()"
      ],
      "id": "a6fd29a9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "より滑らかなトレンドが得られている．"
      ],
      "id": "fff80c28"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/hirofumi48/Library/Jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}