---
title: "`PDMPFlux.jl` Package for the New Era of MCMC"
subtitle: "新時代の MCMC 環境に向けて：`PDMPFlux.jl`"
author:
  - name: "Hirofumi Shiba"
date: "10/29/2024"
categories: [Slide, MCMC, Julia]
image: Files/ZigZag_Banana3D.gif
format:
  html: default
  revealjs: 
    output-file: PDMPFlux_Slides.html
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: ../../../assets/profile.jpg
    css: ../../../assets/slides.css
    footer: |
      [Hirofumi Shiba](PDMPFluxSlides.qmd)
    scrollable: true
    smaller: false
    controls: true
    controls-layout: bottom-right
    self-contained-math: true
    shift-heading-level-by: -1
    toc: false
    number-sections: true
    theme: serif
    show-slide-number: all
    include-in-header: ../../../assets/include-in-header.html
    tbl-cap-location: bottom
    margin: 0.05
bibliography: 
    - ../../../assets/2023.bib
    - ../../../assets/2024.bib
csl: ../../../assets/apalike.csl
# image: Images/Bayes.svg
comment: false
code-fold: false
execute:
    cache: true
html-math-method: katex
abstract-title: 概要
abstract: |
  Presented at D314, ISM, Tokyo.
  Get your own copy of the slides [[here]{.underline}](PDMPFlux_Slides.html).
---

## Introduction

![Output from `anim_traj()` in `PDMPFlux.jl` package](Files/ZigZag_Banana3D_background.gif)

{{< include ../../../assets/_preamble.qmd >}}

### Overview

`PDMPFlux.jl`: package for MCMC sampling.

[![](Files/PDMPFlux.png)](https://github.com/162348/PDMPFlux.jl)

### What's Different? (Detailed in @sec-PDMP)

Instead of Markov Chains, `PDMPFlux.jl` uses:

![](Files/slide1.jpeg)

Currently, most PDMPs move piecewise *linearly*.

### What's PDMP? (Detailed in @sec-PDMP)

| | PDMP | Diffusion |
|:---:|:------:|:------:|
| Diffuse? | [No]{.color-blue} | [Yes]{.color-red} |
| Jump? | [Yes]{.color-red} | [No]{.color-blue} |
| Driving noise | Poisson | Gauss |
| Plot | ![](Files/Cauchy1D.png) | ![](../Process/MALA_1D.svg) |

: {.hover .responsive-sm}

### How to Use? (1/3)

```julia
using PDMPFlux

function U_Cauchy(x::Vector)
    return log(1 + x.^2)
end

dim = 10
sampler = ZigZagAD(dim, U_Cauchy)  # Instantiate a sampler
```

**Inputs**: Dimension $d$, and *any* $U$ that satisfies

$$
p(x) \propt \exp\left\{ -U(x) \right\},\qquad x\in\R^d.
$$

::: aside
$U$ may be called *potential*, or *negative log-density*.
:::

### How to Use? (2/3)

```julia
N_sk, N, xinit, vinit = 1_000_000, 1_000_000, zeros(dim), ones(dim)  # Hyperparameters
samples = sample(sampler, N_sk, N, xinit, vinit, seed=2024)
```

**Output**: $N$ samples from $p\propt e^{-U}$.

![](Files/Cauchy1D.gif)

::: aside
`N_sk`: number of [orange points]{.color-unite}, `N`: number of samples, `xinit, vinit`: initial position and velocity.
:::

### How to Use? (3/3)

Function `sample` is a wrapper of:

```julia
traj = sample_skeleton(sampler, N_sk, xinit, vinit)  # simulate skeleton points
samples = sample_from_skeleton(sampler, N, traj)  # get samples from the skeleton points
```

`traj` contains a list $\{x_i\}_{i=1}^{N_{sk}}$ of [orange points]{.color-unite}

![](Files/Cauchy1D.gif)

### Diagnostic

```julia
diagnostic(traj)
```

![](Files/diagnostic.png){.nostretch fig-align="center"}

We see acceptance rate is a bit low due to the long tails of $p$.

## What is PDMP? {#sec-PDMP}

![Animated by [@Grazzi2020]](../Slides/pdmps.gif)


### Two Key Changes in MCMC History

1. **Lifting**: MH (Metropolis-Hastings) → Lifted MH
2. **Continuous-time Limit**: Lifted MH → Zig-Zag Sampler

::: {layout-ncol=3}
![[MH @Metropolis+1953]](../Slides/Files/MH_traj.svg)

![[Lifted MH @Turitsyn+2011]](../Slides/Files/LMH_traj.svg)

![[Zig-Zag @Bierkens+2019]](../Slides/Files/zigzag_traj.svg)
:::

### What's Wrong with MH?: [Reversibility]{.color-unite}

[Reversibility]{.color-unite} (a.k.a detailed balance):
$$
p(x)q(x|y)=p(y)q(y|x).
$$
In words:
$$
\text{Probability}[\text{Going}\;x\to y]=\text{Probability}[\text{Going}\;y\to x].
$$
{{< fa arrow-right >}} Harder to explore the entire space

{{< fa arrow-right >}} Slow mixing of [MH]{.color-unite}

### Lifting into a Larger State Space

::: {layout="[50,50]" layout-valign="top" style="margin: 0px; !important"}

::: {#first-column}

![](../Slides/Files/lifting_illustration.svg)

![](../Slides/Files/potential.svg)

:::

::: {#second-column}

::: {style="margin-bottom: 50px; !important"}

$q^{(+1)}$: Only propose $\rightarrow$ moves

$q^{(-1)}$: Only propose $\leftarrow$ moves

:::

{{< fa arrow-right >}} Once going uphill, it continues to go uphill.

{{< fa arrow-right >}} This is [irreversible]{.color-unite}, since

\begin{align*}
  &\text{Probability}[x\to y]\\
  &\qquad\ne\text{Probability}[y\to x].
\end{align*}

:::

:::

### Continuous-time Limit: A Strategy for Efficient Computing

'[Limiting case of lifted MH]{.color-unite}' means that we only simulate [**where we should flip the momentum**]{.underline} $\sigma\in\{\pm1\}$ in Lifted MH.

::: {.callout-tip appearance="simple" icon="false" title="[1d Zig Zag sampler @Bierkens+2019]"}

**Input**: Gradient $\nabla\log p$ of log target density $p$

For $n\in\{1,2,\cdots,N\}$:

1. Simulate an first arrival time $T_n$ of a [Poisson point process]{.color-unite} (described in the next slide)
2. Linearly interpolate until time $T_n$:
    $$
    X_t = X_{T_{n-1}} + \sigma(t-T_{n-1}),\qquad t\in[T_{n-1},T_n].
    $$
3. Go back to Step 1 with the momentum $\sigma\in\{\pm1\}$ flipped

:::

### Summary

1. PDMPs have [irreversible dynamics]{.color-unite}
2. PDMPs are easy to simulate
3. {{< fa arrow-right >}} Promising for high-dimensional problems

Using `PDMPFlux.jl`, I want to fit a large Bayesian model, showcasing the usefulness of PDMP samplers.

## References {visibility="uncounted"}

::: {layout="[40,60]" layout-valign="top"}

::: {#first-column}

[![For further details, please see my old introductory slides via the above QR code](../Slides/Files/QR_ZigZagPoliSci.svg)](../Slides/ZigZagPoliSci.qmd)

:::

::: {#second-column}

::: {#refs}
:::

:::

:::

