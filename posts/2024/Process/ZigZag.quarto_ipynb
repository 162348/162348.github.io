{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Zig-Zag 過程によるサンプリング\"\n",
        "subtitle: \"ジャンプと確定的な動きによる新たな MCMC 手法\"\n",
        "author: \"司馬博文\"\n",
        "date: 7/3/2024\n",
        "date-modified: 7/18/2024\n",
        "categories: [Process, Sampling, Julia, MCMC]\n",
        "bibliography: \n",
        "    - ../../../assets/2023.bib\n",
        "    - ../../../assets/2024.bib\n",
        "    - ../../../assets/2025.bib\n",
        "csl: ../../../assets/apalike.csl\n",
        "abstract-title: 概要\n",
        "abstract: Zig-Zag サンプラー定義とエルゴード性を解説する．続いて，Zig-Zag サンプラーは非対称なダイナミクスを持つために，従来の MCMC よりも速い収束が期待されることを，MALA との比較でみる．最後に，Zig-Zag サンプラーの実装に用いたパッケージとその利用方法を示す．\n",
        "code-fold: false\n",
        "execute:\n",
        "    cache: true\n",
        "listing: \n",
        "    -   id: lst-pdmp\n",
        "        type: grid\n",
        "        grid-columns: 1\n",
        "        image-height: 100%\n",
        "        contents:\n",
        "            - \"../Process/PureJump.qmd\"\n",
        "        date-format: iso\n",
        "        fields: [title,image,date,subtitle]\n",
        "    -   id: lst-zigzag\n",
        "        type: grid\n",
        "        grid-columns: 1\n",
        "        image-height: 100%\n",
        "        contents:\n",
        "            - \"../Stat/ZigZagSubsampling.qmd\"\n",
        "        date-format: iso\n",
        "        fields: [title,image,date,subtitle]\n",
        "    -   id: lst-julia\n",
        "        type: grid\n",
        "        grid-columns: 1\n",
        "        image-height: 100%\n",
        "        contents:\n",
        "            - \"../Julia/MCMCwithJulia.qmd\"\n",
        "        date-format: iso\n",
        "        fields: [title,image,date,subtitle]\n",
        "---\n",
        "\n",
        "::: {.hidden}\n",
        "\n",
        "::: {.content-visible when-format=\"html\"}\n",
        "\n",
        "A Blog Entry on Bayesian Computation by an Applied Mathematician\n",
        "\n",
        "$$\n",
        "\n",
        "\\renewcommand{\\P}{\\operatorname{P}}\\newcommand{\\E}{\\operatorname{E}}\n",
        "\\newcommand{\\R}{\\mathbb{R}}\\newcommand{\\F}{\\mathcal{F}}\n",
        "\\newcommand{\\abs}[1]{\\lvert#1\\rvert}\\newcommand{\\Abs}[1]{\\left|#1\\right|}\\newcommand{\\ABs}[1]{\\biggl|#1\\biggr|}\\newcommand{\\norm}[1]{\\|#1\\|}\\newcommand{\\Norm}[1]{\\left\\|#1\\right\\|}\\newcommand{\\NOrm}[1]{\\biggl\\|#1\\biggr\\|}\\newcommand{\\Brace}[1]{\\left\\{#1\\right\\}}\\newcommand{\\BRace}[1]{\\biggl\\{#1\\biggr\\}}\\newcommand{\\paren}[1]{\\left(#1\\right)}\\newcommand{\\Paren}[1]{\\biggr(#1\\biggl)}\\newcommand{\\brac}[1]{\\langle#1\\rangle}\\newcommand{\\Brac}[1]{\\left\\langle#1\\right\\rangle}\\newcommand{\\BRac}[1]{\\biggl\\langle#1\\biggr\\rangle}\\newcommand{\\bra}[1]{\\left\\langle#1\\right|}\\newcommand{\\ket}[1]{\\left|#1\\right\\rangle}\\newcommand{\\Square}[1]{\\left[#1\\right]}\\newcommand{\\SQuare}[1]{\\biggl[#1\\biggr]}\\newcommand{\\rN}{\\operatorname{N}}\\newcommand{\\ov}[1]{\\overline{#1}}\\newcommand{\\un}[1]{\\underline{#1}}\\newcommand{\\wt}[1]{\\widetilde{#1}}\\newcommand{\\wh}[1]{\\widehat{#1}}\\newcommand{\\pp}[2]{\\frac{\\partial #1}{\\partial #2}}\\newcommand{\\ppp}[3]{\\frac{\\partial #1}{\\partial #2\\partial #3}}\\newcommand{\\dd}[2]{\\frac{d #1}{d #2}}\\newcommand{\\floor}[1]{\\lfloor#1\\rfloor}\\newcommand{\\Floor}[1]{\\left\\lfloor#1\\right\\rfloor}\\newcommand{\\ceil}[1]{\\lceil#1\\rceil}\\newcommand{\\ocinterval}[1]{(#1]}\\newcommand{\\cointerval}[1]{[#1)}\\newcommand{\\COinterval}[1]{\\left[#1\\right)}\\newcommand{\\iso}{\\overset{\\sim}{\\to}}\n",
        "\n",
        "\n",
        "\n",
        "\\newcommand{\\y}{\\b{y}}\\newcommand{\\mi}{\\,|\\,}\\newcommand{\\Mark}{\\mathrm{Mark}}\n",
        "\\newcommand{\\argmax}{\\operatorname*{argmax}}\\newcommand{\\argmin}{\\operatorname*{argmin}}\n",
        "\n",
        "\\newcommand{\\pr}{\\mathrm{pr}}\\newcommand{\\Conv}{\\operatorname{Conv}}\\newcommand{\\cU}{\\mathcal{U}}\n",
        "\\newcommand{\\Map}{\\mathrm{Map}}\\newcommand{\\dom}{\\mathrm{Dom}\\;}\\newcommand{\\cod}{\\mathrm{Cod}\\;}\\newcommand{\\supp}{\\mathrm{supp}\\;}\n",
        "\\newcommand{\\grad}{\\operatorname{grad}}\\newcommand{\\rot}{\\operatorname{rot}}\\renewcommand{\\div}{\\operatorname{div}}\\newcommand{\\tr}{\\operatorname{tr}}\\newcommand{\\Tr}{\\operatorname{Tr}}\\newcommand{\\KL}{\\operatorname{KL}}\\newcommand{\\JS}{\\operatorname{JS}}\\newcommand{\\ESS}{\\operatorname{ESS}}\\newcommand{\\MSE}{\\operatorname{MSE}}\\newcommand{\\erf}{\\operatorname{erf}}\\newcommand{\\arctanh}{\\operatorname{arctanh}}\\newcommand{\\pl}{\\operatorname{pl}}\\newcommand{\\minimize}{\\operatorname{minimize}}\\newcommand{\\subjectto}{\\operatorname{subject to}}\\newcommand{\\sinc}{\\operatorname{sinc}}\\newcommand{\\Ent}{\\operatorname{Ent}}\\newcommand{\\Polya}{\\operatorname{Polya}}\\newcommand{\\Exp}{\\operatorname{Exp}}\\newcommand{\\codim}{\\operatorname{codim}}\\newcommand{\\sgn}{\\operatorname{sgn}}\\newcommand{\\rank}{\\operatorname{rank}}\n",
        "\n",
        "\\newcommand{\\vctr}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\vctrr}[3]{\\begin{pmatrix}#1\\\\#2\\\\#3\\end{pmatrix}}\\newcommand{\\mtrx}[4]{\\begin{pmatrix}#1&#2\\\\#3&#4\\end{pmatrix}}\\newcommand{\\smtrx}[4]{\\paren{\\begin{smallmatrix}#1&#2\\\\#3&#4\\end{smallmatrix}}}\\newcommand{\\Ker}{\\mathrm{Ker}\\;}\\newcommand{\\Coker}{\\mathrm{Coker}\\;}\\newcommand{\\Coim}{\\mathrm{Coim}\\;}\\newcommand{\\lcm}{\\mathrm{lcm}}\\newcommand{\\GL}{\\mathrm{GL}}\\newcommand{\\SL}{\\mathrm{SL}}\\newcommand{\\alt}{\\mathrm{alt}}\n",
        "\n",
        "\\renewcommand{\\Re}{\\mathrm{Re}\\;}\\renewcommand{\\Im}{\\mathrm{Im}\\,}\\newcommand{\\Gal}{\\mathrm{Gal}}\\newcommand{\\PGL}{\\mathrm{PGL}}\\newcommand{\\PSL}{\\mathrm{PSL}}\\newcommand{\\Log}{\\mathrm{Log}\\,}\\newcommand{\\Res}{\\mathrm{Res}\\,}\\newcommand{\\on}{\\mathrm{on}\\;}\\newcommand{\\hatC}{\\widehat{\\C}}\\newcommand{\\hatR}{\\hat{\\R}}\\newcommand{\\PV}{\\mathrm{P.V.}}\\newcommand{\\diam}{\\mathrm{diam}}\\newcommand{\\Area}{\\mathrm{Area}}\\newcommand{\\Lap}{\\Laplace}\\newcommand{\\f}{\\mathbf{f}}\\newcommand{\\cR}{\\mathcal{R}}\\newcommand{\\const}{\\mathrm{const.}}\\newcommand{\\Om}{\\Omega}\\newcommand{\\Cinf}{C^\\infty}\\newcommand{\\ep}{\\epsilon}\\newcommand{\\dist}{\\mathrm{dist}}\\newcommand{\\opart}{\\o{\\partial}}\\newcommand{\\Length}{\\mathrm{Length}}\n",
        "\n",
        "\\newcommand{\\cA}{\\mathcal{A}}\\newcommand{\\cO}{\\mathcal{O}}\\newcommand{\\cW}{\\mathcal{W}}\\renewcommand{\\O}{\\mathcal{O}}\\renewcommand{\\S}{\\mathcal{S}}\\newcommand{\\U}{\\mathcal{U}}\\newcommand{\\V}{\\mathrm{V}}\\newcommand{\\N}{\\mathbb{N}}\\newcommand{\\bN}{\\mathbb{N}}\\newcommand{\\C}{\\mathrm{C}}\\newcommand{\\bC}{\\mathbb{C}}\\newcommand{\\Z}{\\mathcal{Z}}\\newcommand{\\Q}{\\mathbb{Q}}\\newcommand{\\bQ}{\\mathbb{Q}}\\newcommand{\\TV}{\\mathrm{TV}}\\newcommand{\\ORD}{\\mathrm{ORD}}\\newcommand{\\Card}{\\mathrm{Card}\\,}\\newcommand{\\Top}{\\mathrm{Top}}\\newcommand{\\Disc}{\\mathrm{Disc}}\\newcommand{\\Codisc}{\\mathrm{Codisc}}\\newcommand{\\CoDisc}{\\mathrm{CoDisc}}\\newcommand{\\Ult}{\\mathrm{Ult}}\\newcommand{\\ord}{\\mathrm{ord}}\\newcommand{\\bS}{\\mathbb{S}}\\newcommand{\\PConn}{\\mathrm{PConn}}\\newcommand{\\mult}{\\mathrm{mult}}\\newcommand{\\inv}{\\mathrm{inv}}\n",
        "\n",
        "\\newcommand{\\Der}{\\mathrm{Der}}\\newcommand{\\osub}{\\overset{\\mathrm{open}}{\\subset}}\\newcommand{\\osup}{\\overset{\\mathrm{open}}{\\supset}}\\newcommand{\\al}{\\alpha}\\newcommand{\\K}{\\mathbb{K}}\\newcommand{\\Sp}{\\mathrm{Sp}}\\newcommand{\\g}{\\mathfrak{g}}\\newcommand{\\h}{\\mathfrak{h}}\\newcommand{\\Imm}{\\mathrm{Imm}}\\newcommand{\\Imb}{\\mathrm{Imb}}\\newcommand{\\Gr}{\\mathrm{Gr}}\n",
        "\n",
        "\\newcommand{\\Ad}{\\mathrm{Ad}}\\newcommand{\\finsupp}{\\mathrm{fin\\;supp}}\\newcommand{\\SO}{\\mathrm{SO}}\\newcommand{\\SU}{\\mathrm{SU}}\\newcommand{\\acts}{\\curvearrowright}\\newcommand{\\mono}{\\hookrightarrow}\\newcommand{\\epi}{\\twoheadrightarrow}\\newcommand{\\Stab}{\\mathrm{Stab}}\\newcommand{\\nor}{\\mathrm{nor}}\\newcommand{\\T}{\\mathbb{T}}\\newcommand{\\Aff}{\\mathrm{Aff}}\\newcommand{\\rsup}{\\triangleright}\\newcommand{\\subgrp}{\\overset{\\mathrm{subgrp}}{\\subset}}\\newcommand{\\Ext}{\\mathrm{Ext}}\\newcommand{\\sbs}{\\subset}\\newcommand{\\sps}{\\supset}\\newcommand{\\In}{\\mathrm{in}\\;}\\newcommand{\\Tor}{\\mathrm{Tor}}\\newcommand{\\p}{\\b{p}}\\newcommand{\\q}{\\mathfrak{q}}\\newcommand{\\m}{\\mathfrak{m}}\\newcommand{\\cS}{\\mathcal{S}}\\newcommand{\\Frac}{\\mathrm{Frac}\\,}\\newcommand{\\Spec}{\\mathrm{Spec}\\,}\\newcommand{\\bA}{\\mathbb{A}}\\newcommand{\\Sym}{\\mathrm{Sym}}\\newcommand{\\Ann}{\\mathrm{Ann}}\\newcommand{\\Her}{\\mathrm{Her}}\\newcommand{\\Bil}{\\mathrm{Bil}}\\newcommand{\\Ses}{\\mathrm{Ses}}\\newcommand{\\FVS}{\\mathrm{FVS}}\n",
        "\n",
        "\\newcommand{\\Ho}{\\mathrm{Ho}}\\newcommand{\\CW}{\\mathrm{CW}}\\newcommand{\\lc}{\\mathrm{lc}}\\newcommand{\\cg}{\\mathrm{cg}}\\newcommand{\\Fib}{\\mathrm{Fib}}\\newcommand{\\Cyl}{\\mathrm{Cyl}}\\newcommand{\\Ch}{\\mathrm{Ch}}\n",
        "\\newcommand{\\rP}{\\mathrm{P}}\\newcommand{\\rE}{\\mathrm{E}}\\newcommand{\\e}{\\b{e}}\\renewcommand{\\k}{\\b{k}}\\newcommand{\\Christ}[2]{\\begin{Bmatrix}#1\\\\#2\\end{Bmatrix}}\\renewcommand{\\Vec}[1]{\\overrightarrow{\\mathrm{#1}}}\\newcommand{\\hen}[1]{\\mathrm{#1}}\\renewcommand{\\b}[1]{\\boldsymbol{#1}}\n",
        "\n",
        "\\newcommand{\\Inc}{\\mathrm{Inc}}\\newcommand{\\aInc}{\\mathrm{aInc}}\\newcommand{\\HS}{\\mathrm{HS}}\\newcommand{\\loc}{\\mathrm{loc}}\\newcommand{\\Lh}{\\mathrm{L.h.}}\\newcommand{\\Epi}{\\mathrm{Epi}}\\newcommand{\\slim}{\\mathrm{slim}}\\newcommand{\\Ban}{\\mathrm{Ban}}\\newcommand{\\Hilb}{\\mathrm{Hilb}}\\newcommand{\\Ex}{\\mathrm{Ex}}\\newcommand{\\Co}{\\mathrm{Co}}\\newcommand{\\sa}{\\mathrm{sa}}\\newcommand{\\nnorm}[1]{{\\left\\vert\\kern-0.25ex\\left\\vert\\kern-0.25ex\\left\\vert #1 \\right\\vert\\kern-0.25ex\\right\\vert\\kern-0.25ex\\right\\vert}}\\newcommand{\\dvol}{\\mathrm{dvol}}\\newcommand{\\Sconv}{\\mathrm{Sconv}}\\newcommand{\\I}{\\mathcal{I}}\\newcommand{\\nonunital}{\\mathrm{nu}}\\newcommand{\\cpt}{\\mathrm{cpt}}\\newcommand{\\lcpt}{\\mathrm{lcpt}}\\newcommand{\\com}{\\mathrm{com}}\\newcommand{\\Haus}{\\mathrm{Haus}}\\newcommand{\\proper}{\\mathrm{proper}}\\newcommand{\\infinity}{\\mathrm{inf}}\\newcommand{\\TVS}{\\mathrm{TVS}}\\newcommand{\\ess}{\\mathrm{ess}}\\newcommand{\\ext}{\\mathrm{ext}}\\newcommand{\\Index}{\\mathrm{Index}\\;}\\newcommand{\\SSR}{\\mathrm{SSR}}\\newcommand{\\vs}{\\mathrm{vs.}}\\newcommand{\\fM}{\\mathfrak{M}}\\newcommand{\\EDM}{\\mathrm{EDM}}\\newcommand{\\Tw}{\\mathrm{Tw}}\\newcommand{\\fC}{\\mathfrak{C}}\\newcommand{\\bn}{\\boldsymbol{n}}\\newcommand{\\br}{\\boldsymbol{r}}\\newcommand{\\Lam}{\\Lambda}\\newcommand{\\lam}{\\lambda}\\newcommand{\\one}{\\mathbf{1}}\\newcommand{\\dae}{\\text{-a.e.}}\\newcommand{\\das}{\\text{-a.s.}}\\newcommand{\\td}{\\text{-}}\\newcommand{\\RM}{\\mathrm{RM}}\\newcommand{\\BV}{\\mathrm{BV}}\\newcommand{\\normal}{\\mathrm{normal}}\\newcommand{\\lub}{\\mathrm{lub}\\;}\\newcommand{\\Graph}{\\mathrm{Graph}}\\newcommand{\\Ascent}{\\mathrm{Ascent}}\\newcommand{\\Descent}{\\mathrm{Descent}}\\newcommand{\\BIL}{\\mathrm{BIL}}\\newcommand{\\fL}{\\mathfrak{L}}\\newcommand{\\De}{\\Delta}\n",
        "\n",
        "\\newcommand{\\calA}{\\mathcal{A}}\\newcommand{\\calB}{\\mathcal{B}}\\newcommand{\\D}{\\mathcal{D}}\\newcommand{\\Y}{\\mathcal{Y}}\\newcommand{\\calC}{\\mathcal{C}}\\renewcommand{\\ae}{\\mathrm{a.e.}\\;}\\newcommand{\\cZ}{\\mathcal{Z}}\\newcommand{\\fF}{\\mathfrak{F}}\\newcommand{\\fI}{\\mathfrak{I}}\\newcommand{\\rV}{\\mathrm{V}}\\newcommand{\\cE}{\\mathcal{E}}\\newcommand{\\sMap}{\\sigma\\textrm{-}\\mathrm{Map}}\\newcommand{\\cC}{\\mathcal{C}}\\newcommand{\\comp}{\\complement}\\newcommand{\\J}{\\mathcal{J}}\\newcommand{\\sumN}[1]{\\sum_{#1\\in\\N}}\\newcommand{\\cupN}[1]{\\cup_{#1\\in\\N}}\\newcommand{\\capN}[1]{\\cap_{#1\\in\\N}}\\newcommand{\\Sum}[1]{\\sum_{#1=1}^\\infty}\\newcommand{\\sumn}{\\sum_{n=1}^\\infty}\\newcommand{\\summ}{\\sum_{m=1}^\\infty}\\newcommand{\\sumk}{\\sum_{k=1}^\\infty}\\newcommand{\\sumi}{\\sum_{i=1}^\\infty}\\newcommand{\\sumj}{\\sum_{j=1}^\\infty}\\newcommand{\\cupn}{\\cup_{n=1}^\\infty}\\newcommand{\\capn}{\\cap_{n=1}^\\infty}\\newcommand{\\cupk}{\\cup_{k=1}^\\infty}\\newcommand{\\cupi}{\\cup_{i=1}^\\infty}\\newcommand{\\cupj}{\\cup_{j=1}^\\infty}\\newcommand{\\limn}{\\lim_{n\\to\\infty}}\\renewcommand{\\L}{\\mathcal{L}}\\newcommand{\\cL}{\\mathcal{L}}\\newcommand{\\Cl}{\\mathrm{Cl}}\\newcommand{\\cN}{\\mathcal{N}}\\newcommand{\\Ae}{\\textrm{-a.e.}\\;}\\renewcommand{\\csub}{\\overset{\\textrm{closed}}{\\subset}}\\renewcommand{\\csup}{\\overset{\\textrm{closed}}{\\supset}}\\newcommand{\\wB}{\\wt{B}}\\newcommand{\\cG}{\\mathcal{G}}\\newcommand{\\Lip}{\\mathrm{Lip}}\\newcommand{\\AC}{\\mathrm{AC}}\\newcommand{\\Mol}{\\mathrm{Mol}}\n",
        "\n",
        "\\newcommand{\\Pe}{\\mathrm{Pe}}\\newcommand{\\wR}{\\wh{\\mathbb{\\R}}}\\newcommand*{\\Laplace}{\\mathop{}\\!\\mathbin\\bigtriangleup}\\newcommand*{\\DAlambert}{\\mathop{}\\!\\mathbin\\Box}\\newcommand{\\bT}{\\mathbb{T}}\\newcommand{\\dx}{\\dslash x}\\newcommand{\\dt}{\\dslash t}\\newcommand{\\ds}{\\dslash s}\n",
        "\n",
        "\\newcommand{\\round}{\\mathrm{round}}\\newcommand{\\cond}{\\mathrm{cond}}\\newcommand{\\diag}{\\mathrm{diag}}\n",
        "\\newcommand{\\Adj}{\\mathrm{Adj}}\\newcommand{\\Pf}{\\mathrm{Pf}}\\newcommand{\\Sg}{\\mathrm{Sg}}\n",
        "\n",
        "\n",
        "\\newcommand{\\aseq}{\\overset{\\text{a.s.}}{=}}\\newcommand{\\deq}{\\overset{\\text{d}}{=}}\\newcommand{\\cV}{\\mathcal{V}}\\newcommand{\\FM}{\\mathrm{FM}}\\newcommand{\\KR}{\\mathrm{KR}}\\newcommand{\\rba}{\\mathrm{rba}}\\newcommand{\\rca}{\\mathrm{rca}}\\newcommand{\\Prob}{\\mathrm{Prob}}\\newcommand{\\X}{\\mathcal{X}}\\newcommand{\\Meas}{\\mathrm{Meas}}\\newcommand{\\as}{\\;\\text{a.s.}}\\newcommand{\\io}{\\;\\mathrm{i.o.}}\\newcommand{\\fe}{\\;\\text{f.e.}}\\newcommand{\\bF}{\\mathbb{F}}\\newcommand{\\W}{\\mathcal{W}}\\newcommand{\\Pois}{\\mathrm{Pois}}\\newcommand{\\iid}{\\text{i.i.d.}}\\newcommand{\\wconv}{\\rightsquigarrow}\\newcommand{\\Var}{\\mathrm{Var}}\\newcommand{\\xrightarrown}{\\xrightarrow{n\\to\\infty}}\\newcommand{\\au}{\\mathrm{au}}\\newcommand{\\cT}{\\mathcal{T}}\\newcommand{\\wto}{\\overset{\\text{w}}{\\to}}\\newcommand{\\dto}{\\overset{\\text{d}}{\\to}}\\newcommand{\\sto}{\\overset{\\text{s}}{\\to}}\\newcommand{\\pto}{\\overset{\\text{p}}{\\to}}\\newcommand{\\mto}{\\overset{\\text{m}}{\\to}}\\newcommand{\\vto}{\\overset{v}{\\to}}\\newcommand{\\Cont}{\\mathrm{Cont}}\\newcommand{\\stably}{\\mathrm{stably}}\\newcommand{\\Np}{\\mathbb{N}^+}\\newcommand{\\oM}{\\overline{\\mathcal{M}}}\\newcommand{\\fP}{\\mathfrak{P}}\\newcommand{\\sign}{\\mathrm{sign}}\n",
        "\\newcommand{\\Borel}{\\mathrm{Borel}}\\newcommand{\\Mid}{\\,|\\,}\\newcommand{\\middleMid}{\\;\\middle|\\;}\\newcommand{\\CP}{\\mathrm{CP}}\\newcommand{\\bD}{\\mathbb{D}}\\newcommand{\\bL}{\\mathbb{L}}\\newcommand{\\fW}{\\mathfrak{W}}\\newcommand{\\DL}{\\mathcal{D}\\mathcal{L}}\\renewcommand{\\r}[1]{\\mathrm{#1}}\\newcommand{\\rC}{\\mathrm{C}}\\newcommand{\\qqquad}{\\qquad\\quad}\n",
        "\n",
        "\\newcommand{\\bit}{\\mathrm{bit}}\n",
        "\n",
        "\\newcommand{\\err}{\\mathrm{err}}\n",
        "\n",
        "\\newcommand{\\varparallel}{\\mathbin{\\!/\\mkern-5mu/\\!}}\\newcommand{\\Ri}{\\mathrm{Ri}}\\newcommand{\\Cone}{\\mathrm{Cone}}\\newcommand{\\Int}{\\mathrm{Int}}\n",
        "\n",
        "\\newcommand{\\pre}{\\mathrm{pre}}\\newcommand{\\om}{\\omega}\n",
        "\n",
        "\n",
        "\\newcommand{\\del}{\\partial}\n",
        "\\newcommand{\\LHS}{\\mathrm{LHS}}\\newcommand{\\RHS}{\\mathrm{RHS}}\\newcommand{\\bnu}{\\boldsymbol{\\nu}}\\newcommand{\\interior}{\\mathrm{in}\\;}\\newcommand{\\SH}{\\mathrm{SH}}\\renewcommand{\\v}{\\boldsymbol{\\nu}}\\newcommand{\\n}{\\mathbf{n}}\\newcommand{\\ssub}{\\Subset}\\newcommand{\\curl}{\\mathrm{curl}}\n",
        "\n",
        "\\newcommand{\\Ei}{\\mathrm{Ei}}\\newcommand{\\sn}{\\mathrm{sn}}\\newcommand{\\wgamma}{\\widetilde{\\gamma}}\n",
        "\n",
        "\\newcommand{\\Ens}{\\mathrm{Ens}}\n",
        "\n",
        "\\newcommand{\\cl}{\\mathrm{cl}}\\newcommand{\\x}{\\boldsymbol{x}}\n",
        "\n",
        "\\newcommand{\\Do}{\\mathrm{Do}}\\newcommand{\\IV}{\\mathrm{IV}}\n",
        "\n",
        "\\newcommand{\\AIC}{\\mathrm{AIC}}\\newcommand{\\mrl}{\\mathrm{mrl}}\\newcommand{\\dotx}{\\dot{x}}\\newcommand{\\UMV}{\\mathrm{UMV}}\\newcommand{\\BLU}{\\mathrm{BLU}}\n",
        "\n",
        "\\newcommand{\\comb}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\bP}{\\mathbb{P}}\\newcommand{\\compsub}{\\overset{\\textrm{cpt}}{\\subset}}\\newcommand{\\lip}{\\textrm{lip}}\\newcommand{\\BL}{\\mathrm{BL}}\\newcommand{\\G}{\\mathbb{G}}\\newcommand{\\NB}{\\mathrm{NB}}\\newcommand{\\oR}{\\ov{\\R}}\\newcommand{\\liminfn}{\\liminf_{n\\to\\infty}}\\newcommand{\\limsupn}{\\limsup_{n\\to\\infty}}\\newcommand{\\esssup}{\\mathrm{ess.sup}}\\newcommand{\\asto}{\\xrightarrow{\\as}}\\newcommand{\\Cov}{\\mathrm{Cov}}\\newcommand{\\cQ}{\\mathcal{Q}}\\newcommand{\\VC}{\\mathrm{VC}}\\newcommand{\\mb}{\\mathrm{mb}}\\newcommand{\\Avar}{\\mathrm{Avar}}\\newcommand{\\bB}{\\mathbb{B}}\\newcommand{\\bW}{\\mathbb{W}}\\newcommand{\\sd}{\\mathrm{sd}}\\newcommand{\\w}[1]{\\widehat{#1}}\\newcommand{\\bZ}{\\mathbb{Z}}\\newcommand{\\Bernoulli}{\\mathrm{Ber}}\\newcommand{\\Ber}{\\mathrm{Ber}}\\newcommand{\\Mult}{\\mathrm{Mult}}\\newcommand{\\BPois}{\\mathrm{BPois}}\\newcommand{\\fraks}{\\mathfrak{s}}\\newcommand{\\frakk}{\\mathfrak{k}}\\newcommand{\\IF}{\\mathrm{IF}}\\newcommand{\\bX}{\\boldsymbol{X}}\\newcommand{\\bx}{\\boldsymbol{x}}\\newcommand{\\indep}{\\perp\\!\\!\\!\\perp}\\newcommand{\\IG}{\\mathrm{IG}}\\newcommand{\\Levy}{\\mathrm{Levy}}\\newcommand{\\MP}{\\mathrm{MP}}\\newcommand{\\Hermite}{\\mathrm{Hermite}}\\newcommand{\\Skellam}{\\mathrm{Skellam}}\\newcommand{\\Dirichlet}{\\mathrm{Dirichlet}}\\renewcommand{\\Beta}{\\operatorname{Beta}}\\newcommand{\\bE}{\\mathbb{E}}\\newcommand{\\bG}{\\mathbb{G}}\\newcommand{\\MISE}{\\mathrm{MISE}}\\newcommand{\\logit}{\\mathtt{logit}}\\newcommand{\\expit}{\\mathtt{expit}}\\newcommand{\\cK}{\\mathcal{K}}\\newcommand{\\dl}{\\dot{l}}\\newcommand{\\dotp}{\\dot{p}}\\newcommand{\\wl}{\\wt{l}}\\newcommand{\\Gauss}{\\mathrm{Gauss}}\\newcommand{\\fA}{\\mathfrak{A}}\\newcommand{\\under}{\\mathrm{under}\\;}\\newcommand{\\whtheta}{\\wh{\\theta}}\\newcommand{\\Em}{\\mathrm{Em}}\\newcommand{\\ztheta}{{\\theta_0}}\n",
        "\\newcommand{\\rO}{\\mathrm{O}}\\newcommand{\\Bin}{\\mathrm{Bin}}\\newcommand{\\rW}{\\mathrm{W}}\\newcommand{\\rG}{\\mathrm{G}}\\newcommand{\\rB}{\\mathrm{B}}\\newcommand{\\rU}{\\mathrm{U}}\\newcommand{\\HG}{\\mathrm{HG}}\\newcommand{\\GAMMA}{\\mathrm{Gamma}}\\newcommand{\\Cauchy}{\\mathrm{Cauchy}}\\newcommand{\\rt}{\\mathrm{t}}\\newcommand{\\rF}{\\mathrm{F}}\n",
        "\\newcommand{\\FE}{\\mathrm{FE}}\\newcommand{\\bV}{\\boldsymbol{V}}\\newcommand{\\GLS}{\\mathrm{GLS}}\\newcommand{\\be}{\\boldsymbol{e}}\\newcommand{\\POOL}{\\mathrm{POOL}}\\newcommand{\\GMM}{\\mathrm{GMM}}\\newcommand{\\MM}{\\mathrm{MM}}\\newcommand{\\SSIV}{\\mathrm{SSIV}}\\newcommand{\\JIV}{\\mathrm{JIV}}\\newcommand{\\AR}{\\mathrm{AR}}\\newcommand{\\ILS}{\\mathrm{ILS}}\\newcommand{\\SLS}{\\mathrm{SLS}}\\newcommand{\\LIML}{\\mathrm{LIML}}\n",
        "\n",
        "\\newcommand{\\Rad}{\\mathrm{Rad}}\\newcommand{\\bY}{\\boldsymbol{Y}}\\newcommand{\\pone}{{(1)}}\\newcommand{\\ptwo}{{(2)}}\\newcommand{\\ps}[1]{{(#1)}}\\newcommand{\\fsub}{\\overset{\\text{finite}}{\\subset}}\n",
        "\n",
        "\n",
        "\\newcommand{\\varlim}{\\varprojlim}\\newcommand{\\Hom}{\\mathrm{Hom}}\\newcommand{\\Iso}{\\mathrm{Iso}}\\newcommand{\\Mor}{\\mathrm{Mor}}\\newcommand{\\Isom}{\\mathrm{Isom}}\\newcommand{\\Aut}{\\mathrm{Aut}}\\newcommand{\\End}{\\mathrm{End}}\\newcommand{\\op}{\\mathrm{op}}\\newcommand{\\ev}{\\mathrm{ev}}\\newcommand{\\Ob}{\\mathrm{Ob}}\\newcommand{\\Ar}{\\mathrm{Ar}}\\newcommand{\\Arr}{\\mathrm{Arr}}\\newcommand{\\Set}{\\mathrm{Set}}\\newcommand{\\Grp}{\\mathrm{Grp}}\\newcommand{\\Cat}{\\mathrm{Cat}}\\newcommand{\\Mon}{\\mathrm{Mon}}\\newcommand{\\Ring}{\\mathrm{Ring}}\\newcommand{\\CRing}{\\mathrm{CRing}}\\newcommand{\\Ab}{\\mathrm{Ab}}\\newcommand{\\Pos}{\\mathrm{Pos}}\\newcommand{\\Vect}{\\mathrm{Vect}}\\newcommand{\\FinVect}{\\mathrm{FinVect}}\\newcommand{\\FinSet}{\\mathrm{FinSet}}\\newcommand{\\FinMeas}{\\mathrm{FinMeas}}\\newcommand{\\OmegaAlg}{\\Omega\\text{-}\\mathrm{Alg}}\\newcommand{\\OmegaEAlg}{(\\Omega,E)\\text{-}\\mathrm{Alg}}\\newcommand{\\Fun}{\\mathrm{Fun}}\\newcommand{\\Func}{\\mathrm{Func}}\n",
        "\n",
        "\\newcommand{\\Stoch}{\\mathrm{Stoch}}\\newcommand{\\FinStoch}{\\mathrm{FinStoch}}\\newcommand{\\Copy}{\\mathrm{copy}}\\newcommand{\\Delete}{\\mathrm{delete}}\n",
        "\\newcommand{\\Bool}{\\mathrm{Bool}}\\newcommand{\\CABool}{\\mathrm{CABool}}\\newcommand{\\CompBoolAlg}{\\mathrm{CompBoolAlg}}\\newcommand{\\BoolAlg}{\\mathrm{BoolAlg}}\\newcommand{\\BoolRng}{\\mathrm{BoolRng}}\\newcommand{\\HeytAlg}{\\mathrm{HeytAlg}}\\newcommand{\\CompHeytAlg}{\\mathrm{CompHeytAlg}}\\newcommand{\\Lat}{\\mathrm{Lat}}\\newcommand{\\CompLat}{\\mathrm{CompLat}}\\newcommand{\\SemiLat}{\\mathrm{SemiLat}}\\newcommand{\\Stone}{\\mathrm{Stone}}\\newcommand{\\Mfd}{\\mathrm{Mfd}}\\newcommand{\\LieAlg}{\\mathrm{LieAlg}}\n",
        "\\newcommand{\\Op}{\\mathrm{Op}}\n",
        "\\newcommand{\\Sh}{\\mathrm{Sh}}\n",
        "\\newcommand{\\Diff}{\\mathrm{Diff}}\n",
        "\\newcommand{\\B}{\\mathcal{B}}\\newcommand{\\cB}{\\mathcal{B}}\\newcommand{\\Span}{\\mathrm{Span}}\\newcommand{\\Corr}{\\mathrm{Corr}}\\newcommand{\\Decat}{\\mathrm{Decat}}\\newcommand{\\Rep}{\\mathrm{Rep}}\\newcommand{\\Grpd}{\\mathrm{Grpd}}\\newcommand{\\sSet}{\\mathrm{sSet}}\\newcommand{\\Mod}{\\mathrm{Mod}}\\newcommand{\\SmoothMnf}{\\mathrm{SmoothMnf}}\\newcommand{\\coker}{\\mathrm{coker}}\\newcommand{\\Ord}{\\mathrm{Ord}}\\newcommand{\\eq}{\\mathrm{eq}}\\newcommand{\\coeq}{\\mathrm{coeq}}\\newcommand{\\act}{\\mathrm{act}}\n",
        "\n",
        "\\newcommand{\\apf}{\\mathrm{apf}}\\newcommand{\\opt}{\\mathrm{opt}}\\newcommand{\\IS}{\\mathrm{IS}}\\newcommand{\\IR}{\\mathrm{IR}}\\newcommand{\\iidsim}{\\overset{\\text{i.i.d.}}{\\sim}}\\newcommand{\\propt}{\\,\\propto\\,}\\newcommand{\\bM}{\\mathbb{M}}\\newcommand{\\cX}{\\mathcal{X}}\\newcommand{\\cY}{\\mathcal{Y}}\\newcommand{\\cP}{\\mathcal{P}}\\newcommand{\\ola}[1]{\\overleftarrow{#1}}\n",
        "\n",
        "\\renewcommand{\\iff}{\\;\\mathrm{iff}\\;}\n",
        "\\newcommand{\\False}{\\mathrm{False}}\\newcommand{\\True}{\\mathrm{True}}\n",
        "\\newcommand{\\otherwise}{\\mathrm{otherwise}}\n",
        "\\newcommand{\\suchthat}{\\;\\mathrm{s.t.}\\;}\n",
        "\n",
        "\\newcommand{\\cM}{\\mathcal{M}}\\newcommand{\\M}{\\mathbb{M}}\\newcommand{\\cF}{\\mathcal{F}}\\newcommand{\\cD}{\\mathcal{D}}\\newcommand{\\fX}{\\mathfrak{X}}\\newcommand{\\fY}{\\mathfrak{Y}}\\newcommand{\\fZ}{\\mathfrak{Z}}\\renewcommand{\\H}{\\mathcal{H}}\\newcommand{\\cH}{\\mathcal{H}}\\newcommand{\\fH}{\\mathfrak{H}}\\newcommand{\\bH}{\\mathbb{H}}\\newcommand{\\id}{\\mathrm{id}}\\newcommand{\\A}{\\mathcal{A}}\n",
        "\\newcommand{\\lmd}{\\lambda}\n",
        "\\newcommand{\\Lmd}{\\Lambda}\n",
        "\\newcommand{\\cI}{\\mathcal{I}}\n",
        "\n",
        "\\newcommand{\\Lrarrow}{\\;\\;\\Leftrightarrow\\;\\;}\n",
        "\\DeclareMathOperator{\\des}{des}\n",
        "\\DeclareMathOperator{\\nd}{nd}\n",
        "\\DeclareMathOperator{\\dsep}{d-sep}\n",
        "\\DeclareMathOperator{\\sep}{sep}\n",
        "\\newcommand{\\rLL}{\\mathrm{LL}}\\newcommand{\\HT}{\\mathrm{HT}}\\newcommand{\\PS}{\\mathrm{PS}}\\newcommand{\\rI}{\\mathrm{I}}\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Zig-Zag 過程\n",
        "\n",
        "### はじめに\n",
        "\n",
        "１次元の Zig-Zag 過程は元々，[Curie-Weiss 模型](../Nature/StatisticalMechanics1.qmd#sec-Curie-Weiss) における Glauber 動力学を lifting により非可逆化して得る Markov 連鎖の，スケーリング極限として特定された Feller-Dynkin 過程である [@Bierkens-Roberts2017]．\n",
        "\n",
        "区分確定的 Markov 過程（PDMP）といい，ランダムな時刻にランダムな動きをする以外は，決定論的な動きをする過程である．\n",
        "\n",
        "![$\\R^2$ 上の Gauss 分布に収束する Zig-Zag 過程の軌跡](ZigZag2D_Gaussian.svg)\n",
        "\n",
        "PDMP の一般論については次の記事も参照：\n",
        "\n",
        "::: {#lst-pdmp}\n",
        ":::\n",
        "\n",
        "ただし Zig-Zag 過程は，[@Goldstein1951] で電信方程式と関連して，同様の過程が扱われた歴史もある．\n",
        "\n",
        "### 設定\n",
        "\n",
        "Zig-Zag 過程 $Z=(X,\\Theta)$ の状態空間は，力学的な立場に立って $E=\\R^d\\times\\{\\pm1\\}^d$ と見ることが多い．\n",
        "\n",
        "力学における[相空間](https://ja.wikipedia.org/wiki/相空間)と同様，$X\\in\\R^d$ が位置を，$\\theta\\in\\{\\pm1\\}^d$ が速度を表すと解する．すなわち，Zig-Zag 過程は全座標系と $45$ 度をなす方向に，常に一定の単位速さで $\\R^d$ 上を運動する粒子とみなせる．\n",
        "\n",
        "すなわち，$(x,\\theta)\\in E$ から出発する Zig-Zag 過程は，次の微分方程式系で定まる決定論的なフロー $\\phi_{(x,\\theta)}:\\R\\to\\R^d$ に従って運動する粒子とみなせる：\n",
        "$$\n",
        "\\dd{\\phi_{(x,\\theta)}(t)}{t}=\\theta,\\qquad \\dd{\\Theta_t}{t}=0.\n",
        "$$\n",
        "\n",
        "### アルゴリズム {#sec-algorithm}\n",
        "\n",
        "#### 全体像\n",
        "\n",
        "Zig-Zag 過程 $Z$ は次のようにしてシミュレーションできる：\n",
        "\n",
        "::: {.callout-tip appearance=\"simple\" icon=\"false\" title=\"Zig-Zag 過程のシミュレーション\"}\n",
        "\n",
        "1. レート関数 $\\lambda_1,\\cdots,\\lambda_d$ から定まる強度関数\n",
        "    $$\n",
        "    m_i(t):=\\lambda_i(x+\\theta t,\\theta),\\qquad i\\in[d],\n",
        "    $$\n",
        "    を持つ，$d$ 個の独立な $\\R_+$ 上の非一様 Poisson 点過程の，最初の到着時刻 $T_1,\\cdots,T_d$ をシミュレーションする．\n",
        "2. 最初に到着した座標番号 $j:=\\argmin_{i\\in[d]}T_i$ について，時刻 $T_j$ に速度成分 $\\theta_j$ の符号を反転させる．すなわち，関数\n",
        "    $$\n",
        "    F_j(\\theta)_i:=\\begin{cases}-\\theta_i&i=j\\\\\\theta_i&i\\ne j\\end{cases}\n",
        "    $$\n",
        "    に従ってジャンプする．\n",
        "3. １に $t=T_j$ として戻って，くり返す．\n",
        "\n",
        ":::\n",
        "<!-- 多次元の Poisson 過程の各成分の跳躍は独立だから，^[[@Revuz-Yor1999 p.473] 命題XII.1.7．] それぞれの成分ごとに Poisson 到着時刻 $T_i\\;(i\\in[d])$ をシミュレーションし，最初に到着したものを $T_j$ とすると，関数\n",
        "$$\n",
        "F_j(\\theta)_i=\\begin{cases}-\\theta_i&i=j\\\\\\theta_i&i\\ne j\\end{cases}\n",
        "$$\n",
        "に従ってジャンプすると考えて良い． -->\n",
        "\n",
        "::: {.callout-important title=\"Zig-Zag 過程の跳躍測度\" icon=\"false\" collapse=\"true\"}\n",
        "\n",
        "もう一つ，MCMC の文脈で自然な見方は，状態空間を\n",
        "$$\n",
        "E=\\bigcup_{\\theta\\in\\{\\pm1\\}^d}\\R^d\\times\\{\\theta\\}\n",
        "$$\n",
        "と取る見方である．これは [@Davis1993] による [一般の PDMP の設定](PureJump.qmd#sec-settings) と対応する．\n",
        "\n",
        "この $E$ 上で，レート関数\n",
        "$$\n",
        "\\lambda(x,\\theta):=\\sum_{i=1}^d\\lambda_i(x,\\theta)\n",
        "$$\n",
        "が定める強度\n",
        "$$\n",
        "M(t):=\\lambda(x+t\\theta,\\theta)\n",
        "$$\n",
        "を持った $\\R_+$ 上の非一様 Poisson 点過程に従ってジャンプが訪れる．\n",
        "\n",
        "この点過程に対して，確率核\n",
        "$$\n",
        "Q((x,\\theta),-):=\\sum_{i=1}^d\\frac{\\lambda_i(x,\\theta)}{\\lambda(x,\\theta)}\\delta_{(x,F_i(\\theta))}(-)\n",
        "$$\n",
        "に [印付けられた点過程](Poisson.qmd#sec-marked-process) が，$Z$ の跳躍測度である．\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-note title=\"証明（２つの定義の等価性）\" icon=\"false\" collapse=\"true\"}\n",
        "\n",
        "Zig-Zag 過程に対する２つの定義を与えた．これら２つが同分布の過程を定めることは [@Corbella+2022], [@Hardcastle+2024] などさまざまなところで触れられているが，証明が必要である．\n",
        "\n",
        "まず，$\\min_{i\\in[d]}T_i$ が，強度関数 $M$ が定める到着時刻に同分布であることを示す．\n",
        "\n",
        "各 $T_i$ の密度は\n",
        "$$\n",
        "p_i(t)=m_i(t)e^{-M_i(t)}1_{(0,\\infty)}(t)\n",
        "$$\n",
        "で与えられ，$T_i$ は互いに独立だから，$(T_1,\\cdots,T_d)$ の結合密度もわかる．\n",
        "\n",
        "$T_1,\\cdots,T_d$ を昇順に並べた順序統計量を\n",
        "$$\n",
        "T_{(1)}\\le\\cdots\\le T_{(d)}\n",
        "$$\n",
        "で表すとする．この $d$ 次元確率ベクトルの密度 $p$ は，\n",
        "$$\n",
        "p(t_1,\\cdots,t_d)=1_{\\Brace{t_1\\le\\cdots\\le t_d}}(t_1,\\cdots,t_d)\\paren{\\sum_{\\sigma\\in\\mathfrak{S}_d}\\prod_{i=1}^dm_i(t_{\\sigma(i)})e^{-M_i(t_{\\sigma(i)})}}\n",
        "$$\n",
        "と計算できる．\n",
        "\n",
        "この $p$ を $t_2,\\cdots,t_d$ に関して積分することで，$T_1$ の密度が得られる：^[計算過程は省略したが，$d=2$ の場合と，$d=3$ の場合を少しやってみると良い．]\n",
        "\\begin{align*}\n",
        "    p_{(1)}(t)&=\\int_{(0,\\infty)^{d-1}}p(t_1,\\cdots,t_d)\\,dt_2\\cdots dt_d\\\\\n",
        "    &=\\Paren{\\sum_{i=1}^dm_i(t_1)}\\exp\\paren{-\\sum_{i=1}^dM_i(t_1)}=m(t_1)e^{-M(t_1)}.\n",
        "\\end{align*}\n",
        "\n",
        "これは確かに，強度関数 $m$ が定める到着時刻の密度である．\n",
        "\n",
        "続いて，$j=\\argmin_{i\\in[d]}T_i$ の，$\\min_{i\\in[d]}T_i$ に関する条件付き確率質量関数が\n",
        "$$\n",
        "q(i|t)=\\frac{m_i(t)}{\\sum_{i=1}^dm_i(t)}\n",
        "$$\n",
        "であることを示す．\n",
        "\n",
        "そのためには，任意の $i\\in[d]$ と $A\\in\\B(\\R^+)$ とに関して $\\Brace{T_{(1)}\\in A,T_{(1)}=T_i}$ という形の事象を計算し，密度が積の形で与えられることを見れば良い．\n",
        "\n",
        "\\begin{align*}\n",
        "    &\\qquad\\P[T_{(1)}\\in A,T_{(1)}=T_i]\\\\\n",
        "    &=\\P[T_i\\in A,\\forall_{j\\ne i}\\;T_i\\le T_j]\\\\\n",
        "    &=\\int_Ap_i(t_i)\\,dt_i\\paren{\\sum_{\\sigma\\in\\Aut([d]\\setminus\\{i\\})}\\int^\\infty_{t_i}p_{\\sigma(1)}(t_{\\sigma(1)})\\,dt_{\\sigma(1)}\\int^\\infty_{t_{\\sigma(1)}}p_{\\sigma(2)}(t_{\\sigma(2)})\\,dt_{\\sigma(2)}\\cdots\\int^\\infty_{t_{\\sigma(d-1)}}p_{\\sigma(d)}(t_{\\sigma(d)})\\,dt_{\\sigma(d)}}\\\\\n",
        "    &=\\int_Am_i(t_i)\\exp\\paren{-\\sum_{i=1}^dm_i(t_i)}\\,dt_i\\\\\n",
        "    &=\\int_A\\frac{m_i(t_i)}{m(t_i)}m(t_i)e^{-M(t_i)}\\,dt_i.\n",
        "\\end{align*}\n",
        "\n",
        "よって，$\\min_{i\\in[d]}T_i$ と $\\argmin_{i\\in[d]}T_i$ とに関する結合密度は，^[参照測度は，$[d]$ 上のものは計数測度 $\\#$ をとっている．]\n",
        "$$\n",
        "q(i|t)p_{(1)}(t)\n",
        "$$\n",
        "という積の形で与えられることがわかった．\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-important appearance=\"simple\" icon=\"false\" title=\"まとめ\"}\n",
        "\n",
        "1. 前述の定義は，$\\min_{i\\in[d]}T_i$ の形で密度 $p_{(1)}$ からシミュレーションし，$\\argmin_{i\\in[d]}T_i$ の形で $q$ からシミュレーションしている．\n",
        "2. 後述の定義は，$p_{(1)}(t)$ から直接シミュレーションし，再び $q(i|t)$ から直接シミュレーションをする．\n",
        "\n",
        "１が２に等価であることがわかった．\n",
        "\n",
        ":::\n",
        "\n",
        "#### 到着時刻 $T_i$ のシミュレーション方法\n",
        "\n",
        "Zig-Zag 過程のシミュレーションは，ほとんど強度\n",
        "\n",
        "$$\n",
        "M_i(t):=\\int^t_0m_i(s)\\,ds\n",
        "$$\n",
        "を持つ非一様 Poisson 点過程のシミュレーションに帰着される．\n",
        "\n",
        "実はこれは，指数分布確率変数 $E_i\\iidsim\\Exp(1)$ について\n",
        "$$\n",
        "T_i\\deq M_i^{-1}(E_i)\n",
        "$$\n",
        "と求まる．\n",
        "\n",
        "#### Poisson 剪定\n",
        "\n",
        "仮にこの逆関数 $M_i^{-1}$ が得られない場合でも，[剪定](PureJump.qmd#sec-simulation) [@Lewis-Shedler1979] によって $T_i$ は正確なシミュレーションが可能である．\n",
        "\n",
        "この方法は，$M_i^{-1}$ を数値的に計算するよりも遥かに速い．これは $M_i$ の定義に積分が存在し，これが多くの場合高次元になるためである．\n",
        "\n",
        "### レート関数の条件 {#sec-refresh-rate}\n",
        "\n",
        "Zig-Zag 過程 $Z$ がどのような分布に従うかは，全てレート関数 $\\lambda_1,\\cdots,\\lambda_d$ に委ねられている．\n",
        "\n",
        "::: {.callout-tip appearance=\"simple\" icon=\"false\"}\n",
        "\n",
        "Zig-Zag 過程のレート関数 $\\lambda_1,\\cdots,\\lambda_d:E\\to\\R_+$ は，負の対数密度 $U\\in C^1(\\R^d)$ に対して，\n",
        "$$\n",
        "\\lambda_i(x,\\theta):=(\\theta_i\\partial_iU(x))_++\\gamma_i(x,\\theta_{-i})\\quad(i\\in[d])\n",
        "$$\n",
        "と定める．\n",
        "\n",
        "ただし，次を仮定する：\n",
        "\n",
        "* $\\gamma_i:E\\to\\R_+$ は，$\\theta_i$ のみには依らない任意の非負連続関数^[従って，レート関数 $\\lambda$ は連続とする．この関数 $\\gamma_i$ は，$U$ の情報には依らない追加のリフレッシュ動作を仮定に加える．実際，$\\lambda_i(x,\\theta)-\\lambda_i(x,F_i(\\theta))=\\theta_i\\partial_iU(x)$ である限り，$\\theta$ と $F_i(\\theta)$ の往来には影響を与えず釣り合っているため，どのような $\\gamma_i$ をとっても，平衡分布には影響を与えない．しかし，高くするごとにアルゴリズムの対称性が上がるため，$\\gamma\\equiv0$ とすることが Monte Carlo 推定量の漸近分散を最小にするという [@Andrieu-Livingstone2021]．[@Bierkens+2021] でも同様の洞察がなされている．]\n",
        "    $$\n",
        "    \\gamma_i(x,\\theta)=\\gamma_i(x,F_i(\\theta)).\n",
        "    $$\n",
        "* $e^{-U}\\in\\L^1(\\R^d)$ が成り立ち，$\\pi(dx)\\propt e^{-U(x)}dx$ が確率測度を定める．\n",
        "* $M_i$ は $t\\to\\infty$ の極限で発散する：\n",
        "$$\n",
        "M_i(t):=\\int^t_0\\lambda_i(x+t\\theta,\\theta)\\,dt\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-important title=\"注（細かい条件たちについて）\" collapse=\"true\" icon=\"false\"}\n",
        "\n",
        "また，\n",
        "$$\n",
        "M_i(t):=\\int^t_0\\lambda_i(x+t\\theta,\\theta)\\,dt\n",
        "$$\n",
        "は $t\\to\\infty$ の極限で発散する必要がある．\n",
        "\n",
        "さもなくば，$M_i:(0,L)\\to(0,\\infty)\\;(L\\in\\ocinterval{0,\\infty})$ の形で定まらず，$M_i$ がこのような可微分同相を与えない場合は\n",
        "$$\n",
        "T_i:=M_i^{-1}(E_i),\\qquad E_i\\iidsim\\Exp(1),\n",
        "$$\n",
        "によるシミュレーションも不正確になる．\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-tip title=\"[@Bierkens+2019 p.1294 定理2.2]\" icon=\"false\"}\n",
        "\n",
        "上述のリフレッシュレート $\\lambda_1,\\cdots,\\lambda_d$ に対して，定義 [-@sec-algorithm] で定まる Zig-Zag 過程 $Z$ は次の分布 $\\wt{\\pi}=\\pi\\otimes\\rU(\\{\\pm1\\}^{d})\\in\\cP(E)$ を不変にする：\n",
        "$$\n",
        "\\wt{\\pi}(dxd\\theta)=\\frac{1}{2^d}\\frac{e^{-U(x)}}{\\cZ}\\,dxd\\theta\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-important title=\"注（拡張の可能性について）\" collapse=\"true\" icon=\"false\"}\n",
        "\n",
        "$\\{\\pm1\\}^d$ 上の周辺分布が一様分布になっていること，勾配ベクトル $DU$ の情報のみを使っており，座標に沿った方向しか見ていないため $U$ の異方性に大きく左右されること，これらが「必ずしもそうある必要はない」拡張可能な点である．\n",
        "\n",
        ":::\n",
        "\n",
        "### エルゴード性の条件\n",
        "\n",
        "$\\pi$ が不変分布になるための十分条件 [-@sec-refresh-rate] は極めて緩かったが，MCMC として使えるためにはエルゴード性が成り立つ必要がある．\n",
        "\n",
        "::: {.callout-tip title=\"[@Bierkens-Roberts2017 定理５]\" icon=\"false\"}\n",
        "\n",
        "$d=1$ で，レート関数 $\\lambda:E\\to\\R_+$ はある $x_0>0$ が存在して次を満たすとする：\n",
        "$$\n",
        "\\inf_{x\\ge x_0}\\lambda(x,1)>\\sup_{x\\ge x_0}\\lambda(x,-1),\n",
        "$$\n",
        "$$\n",
        "\\inf_{x\\le-x_0}\\lambda(x,-1)>\\sup_{x\\le-x_0}\\lambda(x,1).\n",
        "$$\n",
        "\n",
        "このとき，ある関数 $f:E\\to\\cointerval{1,\\infty}$ が存在して $f(x,\\theta)\\to\\infty\\;(\\abs{x}\\to\\infty)$ が成り立ち，かつ\n",
        "$$\n",
        "\\Norm{P^t\\paren{(x,\\theta),-}-\\pi}_\\TV\\le\\kappa f(x,\\theta)\\rho^t,\\qquad(x,\\theta)\\in E,t\\ge0,\\rho\\in(0,1).\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "### Subsampling Technology\n",
        "\n",
        "Zig-Zag 過程はレート関数 $\\lambda$ の設計に大きな自由度があった（第 [-@sec-refresh-rate] 節）．\n",
        "\n",
        "これにより，Zig-Zag 過程ではバイアスを導入しない subsampling が可能であり，これを通じて **データサイズに依らない一定効率での事後分布サンプリングが可能になる** という super-efficiency [@Bierkens+2019] と呼ばれる性質を持つ．\n",
        "\n",
        "この性質が実用上は最も重要である．詳しくは，次の記事を参照：\n",
        "\n",
        "::: {#lst-zigzag}\n",
        ":::\n",
        "\n",
        "## シミュレーション\n",
        "\n",
        "### １次元での例\n",
        "\n",
        "ZigZag サンプラーは非対称なダイナミクスを持っており，その点が MALA (Metropolis-adjusted Langevin Algorithm) や HMC (Hamiltonian Monte Carlo) などの従来手法と異なる．\n",
        "\n",
        "１次元でその違いを確認するために，Cauchy 分布という裾の重い分布を用いる．Cauchy 分布 $\\rC(\\mu,\\sigma)$ は次のような密度を持つ：\n",
        "$$\n",
        "f(x)=\\frac{1}{\\pi\\sigma}\\frac{1}{1+\\paren{\\frac{x-\\mu}{\\sigma}}^2}.\n",
        "$$\n",
        "\n",
        "その裾の重さ故，平均も分散も存在しない（発散する）．\n",
        "\n",
        "このとき，次のような観察が得られる：\n",
        "\n",
        "::: {.callout-important appearance=\"simple\" icon=\"false\"}\n",
        "\n",
        "* ZigZag サンプラーは Cauchy 分布に対して，最頻値から十分遠くから開始しても，高速に最頻値に戻ってくる．\n",
        "* MALA は diffusive behaviour が見られ，最頻値に戻るまでに時間がかかる．\n",
        "\n",
        ":::\n"
      ],
      "id": "ccb74e85"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "#| echo: false\n",
        "using Plots\n",
        "\n",
        "function plot_2dtraj(traj; title=\"ZigZag Sampler\", save=false, label=\"ZigZag_2D\")\n",
        "    # trajからx座標とy座標を抽出\n",
        "    x_coords = [state[1] for (t, state) in traj]\n",
        "    y_coords = [state[2] for (t, state) in traj]\n",
        "\n",
        "    # 軌跡のプロット\n",
        "    p = plot(x_coords, y_coords, \n",
        "             label=label,\n",
        "             title=title,\n",
        "             xlabel=\"X\",\n",
        "             ylabel=\"Y\",\n",
        "             linewidth=2,\n",
        "             marker=:circle,\n",
        "             markersize=2,\n",
        "             markeralpha=0.6,\n",
        "             color=\"#78C2AD\"\n",
        "             #,background_color = \"#F0F1EB\"\n",
        "             )\n",
        "\n",
        "    # 開始点と終了点をマーク\n",
        "    Plots.scatter!([x_coords[1]], [y_coords[1]], label=\"Start\", color=:green, markersize=6)\n",
        "    Plots.scatter!([x_coords[end]], [y_coords[end]], label=\"End\", color=:red, markersize=6)\n",
        "\n",
        "    # プロットを表示\n",
        "    display(p)\n",
        "\n",
        "    if save\n",
        "        savefig(p, label * \".svg\")\n",
        "    end\n",
        "    \n",
        "end\n",
        "\n",
        "function plot_1dtraj(traj; title=\"ZigZag Sampler\", markersize=2, save=false, label=\"ZigZag_1D\", ylim=nothing)\n",
        "    times = [t for (t, state) in traj]\n",
        "    positions = [state[1] for (t, state) in traj]\n",
        "\n",
        "    # 軌跡のプロット\n",
        "    plot_args = (\n",
        "    label=label,\n",
        "    title=title,\n",
        "    xlabel=\"t\",\n",
        "    ylabel=\"X\",\n",
        "    linewidth=2,\n",
        "    marker=:circle,\n",
        "    markersize=markersize,\n",
        "    markeralpha=0.6,\n",
        "    color=\"#78C2AD\"\n",
        "    #,background_color = \"#F0F1EB\"\n",
        "    )\n",
        "\n",
        "    if ylim !== nothing\n",
        "        plot_args = merge(plot_args, (ylim=ylim,))\n",
        "    end\n",
        "\n",
        "    p = plot(times, positions; plot_args...)\n",
        "\n",
        "    if save\n",
        "        savefig(p, label * \".svg\")\n",
        "    end\n",
        "\n",
        "    return p\n",
        "end"
      ],
      "id": "1dde9734",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| code-fold: true\n",
        "#| echo: false\n",
        "#| output: false\n",
        "using ZigZagBoomerang\n",
        "const ZZB = ZigZagBoomerang\n",
        "\n",
        "\"\"\"\n",
        "    τ = freezing_time(x, θ)\n",
        "\n",
        "computes the hitting time of a 1d particle with\n",
        "constant velocity `θ` to hit 0 given the position `x`\n",
        "\"\"\"\n",
        "function freezing_time(x, θ)\n",
        "    if θ*x > 0\n",
        "        return Inf\n",
        "    else\n",
        "        return -x/θ\n",
        "    end\n",
        "end\n",
        "\n",
        "\"\"\"\n",
        "    T: Time Horizon\n",
        "    (x,θ): initial state\n",
        "    ∇U: gradient of the negative log-density\n",
        "    c: tuning parameter\n",
        "    k: weight on the Dirac measure\n",
        "\"\"\"\n",
        "# k determines the weight on the Dirac measure. The smaller k, the higher the wegiht\n",
        "function ss_pdmp(∇U, x, θ, T, c, k, Flow::ZZB.ContinuousDynamics; adapt=false, factor=2.0, rng=Random.GLOBAL_RNG)\n",
        "    t = zero(T)\n",
        "    Ξ = [(t, x, θ)]\n",
        "    num = acc = 0\n",
        "    a, b = ZZB.ab(x, θ, c, Flow)\n",
        "    t_ref = t + ZZB.waiting_time_ref(Flow)\n",
        "    t′ =  t + poisson_time(a, b, rand(rng))\n",
        "    tˣ = t + freezing_time(x, θ)\n",
        "    while t < T\n",
        "        if  tˣ < min(t_ref, t′)\n",
        "            t, x, θ = ZZB.move_forward(tˣ - t, t, x, θ, Flow) # go to 0\n",
        "            @assert -0.0001 < x < 0.0001 #check\n",
        "            #t, x , θ = tˣ, 0.0, θ #go to 0\n",
        "            push!(Ξ, (t, x, 0.0))\n",
        "            t = t - log(rand(rng))/k #wait exponential time\n",
        "            push!(Ξ, (t, x, θ))\n",
        "            tˣ  = Inf\n",
        "        elseif t_ref < t′\n",
        "            t, x, θ = ZZB.move_forward(t_ref - t, t, x, θ, Flow)\n",
        "            θ = sqrt(Flow.Σ)*randn(rng)\n",
        "            t_ref = t +  ZZB.waiting_time_ref(Flow)\n",
        "            tˣ = t + freezing_time(x, θ)\n",
        "            push!(Ξ, (t, x, θ))\n",
        "        else\n",
        "            τ = t′ - t\n",
        "            t, x, θ = ZZB.move_forward(τ, t, x, θ, Flow)\n",
        "            l, lb = ZZB.λ(∇U, x, θ, Flow), ZZB.λ_bar(τ, a, b)\n",
        "            num += 1\n",
        "            if rand(rng)*lb < l\n",
        "                acc += 1\n",
        "                if l >= lb\n",
        "                    !adapt && error(\"Tuning parameter `c` too small.\")\n",
        "                    c *= factor\n",
        "                end\n",
        "                θ = -θ  # In multi dimensions the change of velocity is different:\n",
        "                        # reflection symmetric on the normal vector of the contour\n",
        "                tˣ = t + freezing_time(x, θ)\n",
        "                push!(Ξ, (t, x, θ))\n",
        "            end\n",
        "        end\n",
        "        a, b = ZZB.ab(x, θ, c, Flow)\n",
        "        t′ = t + poisson_time(a, b, rand(rng))\n",
        "    end\n",
        "    return Ξ, acc/num\n",
        "end"
      ],
      "id": "3b939432",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| code-fold: true\n",
        "#| echo: false\n",
        "#| fig-cap: \"\\rC(0,1) に対する ZigZag サンプラーの軌道\"\n",
        "#| #| fig-label: fig-ZigZag\n",
        "using ZigZagBoomerang\n",
        "using LinearAlgebra\n",
        "using SparseArrays\n",
        "using Plots\n",
        "using RandomNumbers.Xorshifts\n",
        "\n",
        "rng = Xoroshiro128Plus(2022)\n",
        "\n",
        "# C(0,1) 分布のポテンシャル関数（使わない）\n",
        "U(x) = log(1 + x^2)\n",
        "\n",
        "# ポテンシャル関数の勾配\n",
        "∇U(x) = 2x / (1 + x^2)\n",
        "\n",
        "# 初期値\n",
        "x0 = 500.0\n",
        "θ0 = 1.0\n",
        "\n",
        "T = 2000.0  # 総シミュレーション時間\n",
        "\n",
        "# ZigZag過程の設定\n",
        "Z = ZigZag1d()\n",
        "\n",
        "# リジェクションバウンド（必要に応じて調整）\n",
        "c = 1.0\n",
        "\n",
        "k = 1.0\n",
        "\n",
        "# ZigZag過程の実行\n",
        "trace, acc = ss_pdmp(∇U, x0, θ0, T, c, k, Z; rng=rng)\n",
        "\n",
        "# 軌跡の離散化とサンプリング\n",
        "# dt = 0.1\n",
        "# traj = collect(ZigZagBoomerang.discretize(trace, dt))\n",
        "\n",
        "traj = [(x[1], x[2]) for x in trace]\n",
        "\n",
        "# サンプルの表示\n",
        "\n",
        "p1 = plot_1dtraj(traj, title=\"1D ZigZag Sampler (Cauchy Distribution)\", markersize=0, ylim=(-30, 750), label=\"ZigZag_1D\")"
      ],
      "id": "7174477a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "MALA と比較すると，その再帰の速さが歴然としている：^[[@Bierkens+2019] にある提示の仕方である．Zig-Zag の 2000 単位時間を単純に MALA と比較はできないと筆者も考えるが，ダイナミクスに注目していただきたい．実際，自分で実装してみると，シード値をいじらないと，Zig-Zag は必ずしも 500 単位時間前後でモード $0$ に戻るわけではない．]\n"
      ],
      "id": "49dcfae9"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-label": "fig-MALA"
      },
      "source": [
        "#| code-fold: true\n",
        "#| fig-cap: \"\\rC(0,1) に対する MALA サンプラーの軌道\"\n",
        "using AdvancedHMC, AdvancedMH, ForwardDiff\n",
        "using LinearAlgebra\n",
        "using LogDensityProblems\n",
        "using LogDensityProblemsAD\n",
        "using StructArrays\n",
        "using Distributions\n",
        "using Random\n",
        "\n",
        "Random.seed!(2)\n",
        "\n",
        "# Define the target distribution (1D Cauchy) using the `LogDensityProblem` interface\n",
        "struct LogTargetDensityCauchy\n",
        "    loc::Float64\n",
        "    scale::Float64\n",
        "end\n",
        "\n",
        "LogDensityProblems.logdensity(p::LogTargetDensityCauchy, θ) = -log(π) - log(p.scale) - log(1 + ((θ[1] - p.loc)/p.scale)^2)\n",
        "LogDensityProblems.dimension(p::LogTargetDensityCauchy) = 1\n",
        "LogDensityProblems.capabilities(::Type{LogTargetDensityCauchy}) = LogDensityProblems.LogDensityOrder{0}()\n",
        "\n",
        "# Choose initial parameter value for 1D\n",
        "initial_θ = [500.0]\n",
        "\n",
        "# Use automatic differentiation to compute gradients\n",
        "model_with_ad = LogDensityProblemsAD.ADgradient(Val(:ForwardDiff), LogTargetDensityCauchy(0.0, 1.0))\n",
        "\n",
        "# Set up the sampler with a multivariate Gaussian proposal.\n",
        "σ² = 100\n",
        "spl = MALA(x -> MvNormal((σ² / 2) .* x, σ² * I))\n",
        "\n",
        "# Sample from the posterior.\n",
        "chain = sample(model_with_ad, spl, 2000; initial_params=initial_θ, chain_type=StructArray, param_names=[\"θ\"])\n",
        "\n",
        "# plot\n",
        "θ_vector = chain.θ\n",
        "sample_values = zip(1:length(θ_vector), θ_vector)\n",
        "p2 = plot_1dtraj(sample_values, title=\"1D MALA Sampler (Cauchy Distribution)\", markersize=0, ylim=(-30, 750), label=\"MALA_1D\")"
      ],
      "id": "9f9ba470",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "２つを並べて比較すると，Langevin ダイナミクスの方は，少し diffusive な動き（random walk property と呼ばれる）が見られることがわかる．\n",
        "\n",
        "::: {.callout-caution title=\"例（NUTS サンプラーの動き）\" collapse=\"true\" icon=\"false\"}\n",
        "\n",
        "NUTS サンプラーはステップサイズを極めて大きくするため，プロットによるダイナミクスの比較があまり意味を持たなくなってくる．\n",
        "\n",
        "実際見てみると恐ろしいものである：\n"
      ],
      "id": "b102aaee"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| output: false\n",
        "\n",
        "# Define the Cauchy distribution with location and scale\n",
        "loc, scale = 0.0, 1.0\n",
        "ℓπ = LogTargetDensityCauchy(loc, scale)\n",
        "\n",
        "# Set the number of samples to draw and warmup iterations\n",
        "n_samples, n_adapts = 2000, 0\n",
        "\n",
        "# Define a Hamiltonian system\n",
        "metric = DiagEuclideanMetric(1)\n",
        "hamiltonian = Hamiltonian(metric, ℓπ, ForwardDiff)\n",
        "\n",
        "# Define a leapfrog solver, with the initial step size chosen heuristically\n",
        "initial_ϵ = find_good_stepsize(hamiltonian, initial_θ)\n",
        "integrator = Leapfrog(initial_ϵ)\n",
        "\n",
        "# Define an HMC sampler with the following components\n",
        "#   - multinomial sampling scheme,\n",
        "#   - generalised No-U-Turn criteria, and\n",
        "#   - windowed adaption for step-size and diagonal mass matrix\n",
        "kernel = HMCKernel(Trajectory{MultinomialTS}(integrator, GeneralisedNoUTurn()))\n",
        "adaptor = StanHMCAdaptor(MassMatrixAdaptor(metric), StepSizeAdaptor(0.8, integrator))\n",
        "\n",
        "# Run the sampler to draw samples from the specified Cauchy distribution, where\n",
        "#   - `samples` will store the samples\n",
        "#   - `stats` will store diagnostic statistics for each sample\n",
        "samples, stats = sample(hamiltonian, kernel, initial_θ, n_samples, adaptor, n_adapts; progress=true)"
      ],
      "id": "72c08b15",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: \"\\rC(0,1) に対する NUTS サンプラーの軌道\"\n",
        "using Plots\n",
        "\n",
        "sample_values = [s[1] for s in samples]\n",
        "p = plot(1:length(samples), sample_values,\n",
        "             label=\"NUTS trajectory\",\n",
        "             title=\"1D NUTS Sampler (Cauchy distribution)\",\n",
        "             xlabel=\"t\",\n",
        "             ylabel=\"X\",\n",
        "             linewidth=2,\n",
        "             marker=:circle,\n",
        "             markersize=2,\n",
        "             markeralpha=0.6,\n",
        "             color=\"#78C2AD\")"
      ],
      "id": "2cf8d077",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "\n",
        "### ２次元での例\n",
        "\n",
        "::: {.callout-important appearance=\"simple\" icon=\"false\"}\n",
        "\n",
        "1. 勾配 $-\\nabla\\log\\pi$ を計算し，`∇ϕ(x, i, Γ)` の形で定義する．\n",
        "\n",
        ":::\n",
        "\n",
        "$$\n",
        "\\Sigma^{-1}=\\mtrx{2}{-1}{-1}{2}\n",
        "$$\n",
        "\n",
        "で定まる分散共分散行列 $\\Sigma$ を持った中心化された正規分布 $\\pi(x)dx=\\rN_2(0,\\Sigma)(dx)$ に対しては，対数尤度は\n",
        "\n",
        "\\begin{align*}\n",
        "    \\log\\pi(x)&=-\\log\\paren{(2\\pi)^{d/2}(\\det\\Sigma)^{1/2}}\\\\\n",
        "    &\\qqquad-\\frac{1}{2}x^\\top\\Sigma^{-1}x\n",
        "\\end{align*}\n",
        "\n",
        "であるから，$\\phi:=-\\log\\pi$ の第 $i$ 成分に関する微分は\n",
        "\n",
        "\\begin{align*}\n",
        "    \\partial_i\\phi(x)&=\\pp{}{x_i}\\Paren{\\frac{1}{2}x^\\top\\Sigma^{-1}x}\\\\\n",
        "    &=\\Sigma^{-1}x.\n",
        "\\end{align*}\n"
      ],
      "id": "9ac19d09"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "using ZigZagBoomerang\n",
        "using SparseArrays\n",
        "\n",
        "d = 2\n",
        "\n",
        "# 対数尤度関数 ϕ の第 i 成分に関する微分を計算\n",
        "Γ = sparse([1,1,2,2], [1,2,1,2], [2.0,-1.0,-1.0,2.0])  # <1>\n",
        "∇ϕ(x, i, Γ) = ZigZagBoomerang.idot(Γ, i, x)  # <2>\n",
        "\n",
        "# 初期値\n",
        "t0 = 0.0\n",
        "x0 = randn(d)\n",
        "θ0 = rand([-1.0,1.0], d)\n",
        "\n",
        "# Rejection bounds\n",
        "c = 1.0 * ones(length(x0))\n",
        "\n",
        "# ZigZag 過程をインスタンス化\n",
        "Z = ZigZag(Γ, x0*0)\n",
        "\n",
        "# シミュレーション実行\n",
        "T = 20.0\n",
        "zigzag_trace, (tT, xT, θT), (acc, num) = spdmp(∇ϕ, t0, x0, θ0, T, c, Z, Γ; adapt=true)\n",
        "\n",
        "# 軌跡を離散化\n",
        "traj = collect(zigzag_trace)"
      ],
      "id": "4191f8a7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "1. 勾配関数`∇ϕ`の計算のためには，共分散行列の逆（精度行列ともいう）を`SparseMatrixCSC`型で指定する必要があることに注意．[`idot`の実装](https://github.com/mschauer/ZigZagBoomerang.jl/blob/691afe2200fa99d762b58f5c5fd7894cc9342294/src/sparsestickyzz.jl#L42) も参照．\n",
        "2. `idot`は，疎行列`Γ`の第`i`列と，疎ベクトル`x`との内積を高速に計算する関数．\n",
        "\n",
        "::: {.callout-important title=\"`idot`の定義\" collapse=\"true\" icon=\"false\"}\n",
        "\n",
        "`idot(A,j,u)`は，疎行列`A`の第`j`列と，疎ベクトル`u`との内積を高速に計算する関数である．\n",
        "\n",
        "```julia\n",
        "function idot(A::SparseMatrixCSC, j, x)  # <1>\n",
        "    rows = rowvals(A)  # <2>\n",
        "    vals = nonzeros(A)  # <3>\n",
        "    s = zero(eltype(x))\n",
        "    @inbounds for i in nzrange(A, j)  # <4>\n",
        "        s += vals[i]'*x[rows[i]][2]  # <5>\n",
        "    end\n",
        "    s\n",
        "end\n",
        "```\n",
        "\n",
        "1. パッケージ内部で，位置 $x\\in\\R^d$ は全て `SparseSate` 型に統一されている？\n",
        "2. 疎行列 `A` の行インデックスを取得．`rowvals(A)`はベクトルであり，第１列から順番に，非零要素のある行番号が格納されている．\n",
        "3. 非零要素の値が格納されている．\n",
        "4. `@inbounds` は，範囲外アクセスを許容するマクロ．高速化のためだろう．`nzrange` は，`A` の第 `j` 列に非零要素がある範囲を，第 $1$ 列から累積して何番目かで返す．すなわち，`rows[i]`で正確に第`j`列の非零要素の行番号を狙い撃ちしてイテレーションできる．\n",
        "5. `x`の非零要素がある行番号 `rows[i]` における成分の値 `u[rows[i]][2]` はこのような表記になる．これと，`A` の非零要素 `vals[i]` との内積を計算．\n",
        "\n",
        "なお，通常の行列に対しては，次のように実装されている：\n",
        "\n",
        "```julia\n",
        "idot(A, j, x) = dot((@view A[:, j]), x)\n",
        "```\n",
        "\n",
        ":::\n"
      ],
      "id": "8ac78f01"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "plot_2dtraj(traj, title=\"2D ZigZag Sampler (Gaussian Distribution)\"; label=\"ZigZag_2D\")"
      ],
      "id": "6321fb01",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Zig-Zag サンプラーの実装 {.appendix}\n",
        "\n",
        "`ZigZagBoomerang` の実装を紹介する．\n",
        "\n",
        "Julia の MCMC パッケージ一般については次の稿を参照：\n",
        "\n",
        "::: {#lst-julia}\n",
        ":::\n",
        "\n",
        "### ZigZag サンプラーを提供しているパッケージ一覧 {.appendix}\n",
        "\n",
        "#### `R`パッケージ {.appendix}\n",
        "\n",
        "[Joris Bierkens](https://diamhomes.ewi.tudelft.nl/~jorisbierkens/pdmps.html) ら開発の R パッケージ `RZigZag` ([GitHub](https://github.com/jbierkens/RZigZag) / [CRAN](https://cran.r-project.org/web/packages/RZigZag/index.html)) が最も手軽に実行できる．\n",
        "\n",
        "#### `Julia`パッケージ {.appendix}\n",
        "\n",
        "一方で，[@Bierkens+2023] では Julia によるパッケージ `ZigZagBoomerang`（[GitHub](https://github.com/mschauer/ZigZagBoomerang.jl) / [ANN](https://discourse.julialang.org/t/ann-zigzagboomerang-jl/57287) / [docs](https://mschauer.github.io/ZigZagBoomerang.jl/v0.1/)） も提供している．名前によらず，2022.1 月リリースの `v.0.11` 以降は BPS もサポートしている．\n",
        "\n",
        "```julia\n",
        "using Pkg\n",
        "Pkg.add(\"ZigZagBoomerang\")\n",
        "```\n",
        "\n",
        "### `ZigZag`オブジェクト {.appendix}\n",
        "\n",
        "::: {.callout-important appearance=\"simple\" icon=\"false\"}\n",
        "\n",
        "`ZigZag <: ContinuousDynamics  <: Any` は次のフィールドを持つ：^[実は６つ持つ．他の初期値は `σ=(Vector(diag(Γ))).^(-0.5); λref=0.0, ρ=0.0`]\n",
        "\n",
        "* `Γ::SparseMatrixCSC`：ポテンシャル関数\n",
        "* `μ::Vector`：平均\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.callout-important title=\"注（ZigZag のメソッド）\" collapse=\"true\" icon=\"false\"}\n",
        "\n",
        "```julia\n",
        "struct ZigZag{T,S,S2,R} <: ContinuousDynamics\n",
        "    Γ::T\n",
        "    μ::S\n",
        "    σ::S2\n",
        "    λref::R\n",
        "    ρ::R\n",
        "    ρ̄::R\n",
        "end\n",
        "ZigZag(Γ, μ, σ=(Vector(diag(Γ))).^(-0.5); λref=0.0, ρ=0.0) = ZigZag(Γ, μ, σ, λref, ρ, sqrt(1-ρ^2))\n",
        "```\n",
        "\n",
        "`dynamics.jl`にて，現在時刻にランダム時刻`τ`を加算し，位置`x`を更新するが，`θ`にはまだ触れない．\n",
        "\n",
        "```julia\n",
        "function move_forward!(τ, t, x, θ, Z::Union{BouncyParticle, ZigZag})\n",
        "    t += τ\n",
        "    x .+= θ .* τ\n",
        "    t, x, θ\n",
        "end\n",
        "```\n",
        "\n",
        "内積`∇ϕx`を用いて，位置`x`に対する第`i`成分の反射を計算する．\n",
        "\n",
        "```julia\n",
        "function reflect!(i, ∇ϕx::Number, x, θ, F::Union{ZigZag, FactBoomerang})\n",
        "    θ[i] = -θ[i]\n",
        "    θ\n",
        "end\n",
        "function reflect!(i, ∇ϕx, x, θ, F::Union{ZigZag, FactBoomerang})\n",
        "    θ[i] = θ[i] - (2*dot(∇ϕx, θ[i])/normsq(∇ϕx))*∇ϕx\n",
        "    θ\n",
        "end\n",
        "```\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "## 文献紹介 {.appendix}\n",
        "\n",
        "Zig-Zag Sampler を導入したのは [@Bierkens+2019] であるが，ざっと仕組みを把握をしたいならば [@Corbella+2022] の第二章がよっぽどわかりやすいだろう．\n"
      ],
      "id": "025a8aed"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "julia-1.11",
      "language": "julia",
      "display_name": "Julia 1.11.2",
      "path": "/Users/hirofumi48/Library/Jupyter/kernels/julia-1.11"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}