---
title: "純粋跳躍過程の生成作用素と区分的確定的 Markov 過程"
subtitle: "ジャンプと確定的な動きによる新たな MCMC 手法"
author: "司馬博文"
date: 1/31/2024
date-modified: 7/2/2024
categories: [Process, Simulation, R]
image: /PureJump_files/unnamed-chunk-1-1.png
bibliography: 
    - ../../../mathematics.bib
    - ../../../bib.bib
csl: ../../../apa.csl
abstract-title: 概要
abstract: PDMP は，A 型の Lévy 過程を含む，複合 Poisson 点過程が定めるジャンプと決定論的なドリフトのみからなる確率過程のクラスをいう．この性質をよく理解するために，まずは，有界なレートを持つ純粋に跳躍のみで動く過程の生成作用素を調べる．確率核 $\mu$ とレート $\lambda$ という２つのパラメータは，それぞれ各地点からのジャンプ先を定める確率核と，ジャンプの起こりやすさを表す．最後に，現状もっとも活発に研究されている２つの PDMP である Zig-Zag Sampler と Bouncy Particle Sampler とを紹介する．
---

{{< include ../../../_preamble.qmd >}}

## 純粋跳躍過程 {#sec-pure-jump}

### 導入 {#sec-problem}

::: {.callout-tip icon="false" title="次の生成作用素はどのような Markov 過程に対応するか？"}

$E$ を距離空間，$\mu:E\times\B(E)\to[0,1]$ を確率核，$\lambda\in\L_b(E)_+$ を有界可測関数とする．
$$
Af(x):=\lambda(x)\int_E\Paren{f(y)-f(x)}\mu(x,dy),\quad f\in\L_b(E),
$$ {#eq-1}
は有界作用素 $A\in B(\L_b(E))$ を定め，一様連続半群
$$
\{T_t:=e^{tA}\}_{t\in\R_+}\subset B(\L_b(E))
$$
を生成する．^[[@Pazy1983 p.2] 参照．] これに対応する Markov 過程はどのようなものだろうか？

:::

::: {.callout-important title="端的な回答" collapse="true" icon="false"}

第 [-@sec-answer] 節をご覧ください．

:::

初期分布を $\nu\in\cP(E)$ とする．

### 構成１

累積するジャンプを足し合わせた値として，畳み込み半群 $\{\mu^{\otimes k}\}_{k\in\N}$ に対応する初期分布 $\nu$ の Markov 連鎖 $\{Y_k\}_{k=0}^\infty$ を用意する．

これと独立な指数確率変数列 $\Delta_k\iidsim\Exp(1)$ を用いて，
$$
X_t:=\begin{cases}
Y_0&0\le t<\frac{\Delta_0}{\lambda(Y_0)}\\
Y_k&\sum_{j=0}^{k-1}\frac{\Delta_j}{\lambda(Y_j)}\le t<\sum_{j=0}^{k}\frac{\Delta_j}{\lambda(Y_j)}
\end{cases}
$$
と構成した過程 $\{X_t\}_{t\in\R_+}$ が，$\{e^{tA}\}$ に対応する Markov 過程になる．^[この事実は第 [-@sec-2] 節で２つ目の構成と同時に証明される．]

なお，$\lambda(x)=0$ の場合は，ジャンプは起きないもの $\frac{\Delta}{\lambda(x)}=\infty$ と解する．この場合は零過程である．一般に関数 $\lambda\in\L_b(E)$ は位置 $x\in E$ からのジャンプの起こりやすさを表していると思える．

### 構成２ {#sec-2}

$\lambda=0$ の場合は零過程であるから，
$$
\lambda:=\sup_{x\in E}\lambda(x)>0
$$
とし，新たな確率核 $\mu':E\to E$を
$$
\mu'(x,\Gamma):=\paren{1-\frac{\lambda(x)}{\lambda}}\delta_x(\Gamma)+\frac{\lambda(x)}{\lambda}\mu(x,\Gamma)
$$
と定めると，生成作用素 $A$ は
$$
Af(x)=\lambda\int_E\Paren{f(y)-f(x)}\mu'(x,dy)
$$
とも表せる．

このとき，畳み込み半群 $\{\mu'^{\otimes k}\}_{k\in\N}$ に対応する初期分布 $\nu$ の Markov 連鎖 $\{Y_k'\}_{k=0}^\infty$ は $\{Y_k\}$ とは分布同等でない．

だが，この $\{Y_k'\}$ に対しては，独立な Poisson 過程 $\{V_t\}_{t\in\R_+}$ に対して
$$
X'_t:=Y'_{V_t}\quad t\in\R_+
$$
と構成される過程 $\{X_t'\}_{t\in\R_+}$ はやはり $\{e^{tA}\}$ に対応する Markov 過程である．

::: {.callout-tip icon="false" title="命題^[[@Ethier-Kurtz1986 pp.163-164] 参照．]"}

1. $\{X'_t\}$ は $\{X_t\}$ に分布同等である．
2. $\{Y'_k\}$ は Markov 性
$$
\E[f(Y'_{k+V_t})|\F_t]=P^kf(X'_t)
$$
を満たす．ただし，$P$ は $\mu'$ が定める作用，$\F_t:=\F_t^V\lor\F^{X'}_t$ とした．
3. $X'$ は $\{T_t\}$ に対応する Markov 過程である：
$$
\E[f(X'_{t+s})|\F_t]=T_sf(X'_t).
$$

:::

::: {.callout-note title="証明" icon="false" collapse="true"}

:::

### まとめ {#sec-answer}

<!-- 式 ([-@eq-1]) で考えた生成作用素 $A$ に対応する Markov 過程 $\{X_t\}$ は，$\mu$ が定める Markov 過程 $\{Y_k\}$ を，到着率 $\lambda:=\sup_{x\in E}\lambda(x)$ の Poisson 過程で -->

すなわち $X$ は[非一様な複合 Poisson 過程になる]{.underline}．

各点 $x\in E$ に於て，レート $\lambda(x)$ で，分布 $\mu(x,dy)$ に従う点へとジャンプをする．^[$f(y+x)-f(x)$ ではなくて $f(y)-f(x)$ であるので，$\mu(x,dy)$ は必ずしも現在地点 $x$ からみた変位の分布ではないことに注意．]

具体的には，次のように整理できる：

強度測度 $\lambda(x)\mu(x,dy)dx$ を持つ $E^2$ 上の Poisson 点過程 $\eta$ に対して，
$$
\xi(A)=\int_{A\times E}y\,\eta(dxdy)
$$
で定まる非一様な複合 Poisson 点過程 $\xi$ に対応する．

例えば $E=\R$ のとき，
$$
M_t:=\xi([0,t])=\int_0^t\xi(ds)
$$
が，所定の生成作用素 $\{T_t\}$ を持つ加法過程になる．

$\lambda$ を有界としているから，有界区間上でのジャンプ数は有限である．[Gamma 過程](Levy.qmd#sec-introduction-to-Gamma-process) のように，$\R$ の稠密部分集合上でジャンプを繰り返す，というようなことは起こり得ない．

Poisson 過程については次の稿も参照：

```{=html}
<div class="article-card-container">
   <div class="article-card">
      <a href="https://162348.github.io/posts/2024/Process/Poisson.html" target="_blank">
         <img src="https://162348.github.io/posts/2024/Process/Poisson_files/figure-html/unnamed-chunk-2-1.png" alt="Article Image" class="article-image">
         <div class="article-content">
            <h3 class="article-title">Poisson 過程を見てみよう</h3>
            <p class="article-description">YUIMA パッケージを用いたシミュレーションを通じて</p>
         </div>
      </a>
   </div>
</div>
```


## 区分的確定的 Markov 過程

### 導入

前節で調べた純粋跳躍過程に，決定論的な動きを加えた Markov 過程のクラスを，[@Davis1984] 以来 **区分的確定的 Markov 過程** (PDMP: Piecewise Deterministic Markov Process) と呼ぶ．

PDMP は拡散項を持たない Lévy 過程とも理解できる．^[ただし，ジャンプが頻繁すぎないことも必要である．[@Davis1993 p.60] 仮定24.4 では，有界区間上のジャンプは有限回であると過程している：$\E[N_t]<\infty\;(t\in\R_+)$．すなわち，A 型までの加法過程を PDMP というのであって，B 型と C 型は，シミュレーションが容易な連続時間過程であるという美点を逃してしまう．加法過程の分類については，この [稿](Levy.qmd) も参照．]

実際，[@Davis1984] は拡散過程に相補的なクラスとして導入し，[@Davis1993] は PDMP が[待ち行列](https://ja.wikipedia.org/wiki/待ち行列理論)，ポートフォリオ最適化，[確率的スケジューリング](https://en.wikipedia.org/wiki/Stochastic_scheduling)，標的追跡，保険数理，[資源最適化](https://www.ism.ac.jp/ism_info_j/labo/visit/112-2.html)など，広く確率的モデリングと最適化において重要な役割を演じることを見事に描き出した．^[当時は連続時間確率過程といえば拡散過程であり，SDE によるモデリングが興隆した時代であった．[@Davis1993] では，必ずしも SDE を使うことが自然なモデリング方法でないにも拘らず，無理やり SDE の枠組みに落とし込もうとする当時の慣行を批判し，PDMP はこのギャップを埋めるために開発した，としている．なお，[@Davis1993] では PDMP ではなく PDP と呼んでいる．]

> the class of "piecewise-deterministic" Markov processes, newly introduced here, provides a general family of models covering virtually all non-diffusion applications. [@Davis1984]

実際，PDMP を用いた MCMC である [Piecewise Deterministic Monte Carlo](https://diamhomes.ewi.tudelft.nl/~jorisbierkens/pdmps.html) または連続時間 MCMC は，高次元データと大規模データセットに対する効率的なサンプリング法開発の鍵と目されている．

次の記事も参照：

```{=html}
<div class="article-card-container">
   <div class="article-card">
      <a href="https://162348.github.io/posts/2024/Computation/MCMC.html" target="_blank">
         <img src="https://github.com/162348/162348.github.io/blob/main/posts/2024/Computation/Files/eyecatch.png?raw=true" alt="Article Image" class="article-image">
         <div class="article-content">
            <h3 class="article-title">新時代の MCMC を迎えるために</h3>
            <p class="article-description">連続時間アルゴリズムへの進化</p>
         </div>
      </a>
   </div>
</div>
```

### 設定 {#sec-settings}

#### 空間

PDMP は動きのモードが移り変わっても良い．これを表すパラメータ $v\in K$ を導入する．^[[@Davis1993 p.57] では $K$ は可算という仮定をおいている．]

このパラメータ空間上に，PDMP が動く範囲の次元を表す関数 $d:K\to\N^+$ を導入し，パラメータが $v\in K$ である際は，$M_v\subset\R^{d(v)}$ として，積空間 $M_v\times\{v\}$ 上を運動するものとする．

総合して，PDMP の状態空間を $M_v$ の直和
$$
E:=\bigcup_{v\in K}M_v\times\{v\}
$$
と定める．^[積空間としての $\sigma$-代数を導入する．]

#### フロー

$\fX_v$ を $M_v$ 上のベクトル場とし，積分曲線
$$
\dd{\phi_v(x,t)}{t}=\fX_v(\phi_v(x,t)),
$$
$$
\phi_v(x,0)=x
$$
が存在するとする．^[[@Davis1993] では，$\fX_v$ は局所 Lipcthiz 連続である上に，（暗黙のうちに）完備で，$\phi_v$ は任意の $t\in\R$ について定義されるとしていることに注意．[@Vasdekis-Roberts2023] では違う．]

$\lambda:E\to\R_+$ は $s\mapsto\lambda(\phi_v(x,s),v)$ が局所可積分であるような関数とし，
$$
\Lambda(t):=\int^t_0\lambda(\phi(s,x))ds
$$
で表す．

#### 境界

$M_v\subset\R^{d(v)}$ の境界のうち，積分曲線が到達し得る部分を
$$
\partial^*M_v:=\Brace{y\in\partial M_v\,\middle|\,\exists_{t>0}\;\exists_{x\in M_v}\;\phi_v(x,t)=y}
$$
で表し，その直和を $\Gamma^*:=\bigcup_{v\in K}\partial^*M_v\times\{v\}$ とする．

さらにそのうち，正な確率を持って到達可能な部分を
$$
\Gamma:=\Brace{(y,v)\in\Gamma^*\mid\lim_{x\to y}\P_{(x,v)}[T_1=t^*(x,v)]=1}
$$

点 $(x,v)\in E$ からフローに従って運動した場合の境界 $\Gamma^*$ への到達時刻を
$$
t^*(x,v):=\inf\Brace{t\ge0\mid\phi_v(x,t)\in\partial^*M_v}
$$
とする．



### 定義

::: {.callout-tip title="定義 (PDMP: Piecewise Deterministic Markov Process)^[[@Davis1993 p.58] と [@Vasdekis2021 pp.15-16] に倣った．]" icon="false"}

$(\phi(t,-))$ をフロー，$\lambda:E\to\R_+$ をレート関数，$Q:(E\cup\Gamma^*)\times\cE\to[0,1]$ を確率核とする．

３組 $(\phi,\lambda,Q)$ が定める **PDMP** $Z$ とは，次のように帰納的に定まる確率過程をいう：

1. あるスタート地点 $z\in E$ から，一様乱数 $U_1\sim\rU([0,1])$ とフロー $\phi$ が定めるジャンプ時刻
   $$
   T_1:=\inf\Brace{t\ge0\,\middle|\,e^{-\Lambda(t)}\le U_1}\lor t^*(x,v)
   $$
   まで，フローの通りに移動するとする：
   $$
   Z_t=\phi(t,x),\quad t< T_1,
   $$
2. 時刻 $T_1$ での位置は確率核 $Q$ に従って決まるとする：
   $$
   Z_{T_1}\sim Q\Paren{(\phi(T_1,x),v),-}.
   $$
3. この手続きを，$Z_{T_1}$ を次のスタート地点として繰り返すのが特性量 $(\phi,\lambda,Q)$ が定める PDMP $Z$ である．

:::

$\lambda$ は局所有限であるから，有限時区間上でのジャンプ数は有限になる．境界への到達によるジャンプ数も同様の性質を満たすと仮定する．^[このことを [@Davis1993 p.60] 仮定24.4としている．]

こうして得た PDMP は，Feller-Dynkin 過程であるとは限らないにも拘らず，時間的に一様な強 Markov 過程である．^[[@Davis1984]，[@Davis1993 p.64] 定理25.5も参照．]

### PDMP の拡張生成作用素

PDMP の拡張生成作用素は，ちょうど（有限な Lévy 測度を持つ）純粋跳躍過程の生成作用素 [-@sec-pure-jump] にドリフト項を加えたものになる．

::: {.callout-tip title="命題（PDMP の拡張生成作用素の定義域の特徴付け）^[[@Davis1993 p.69] 定理26.14．]" icon="false" collapse="true"}

$X$ を PDMP とする．このとき，$X$ の拡張生成作用素 $\wh{A}$ について，可測関数 $f\in\L(E\cup\Gamma)$ が $f\in\D(\wh{A})$ であるとは，次と同値：

1. 絶対連続性：任意の $x\in E$ について，
   $$
   t\mapsto f(\phi(t,x))
   $$
   は
   $$
   s_*(x):=\inf\Brace{t\ge0\mid\P_x[T_1>t]=0}
   $$
   に関して，$t\in\cointerval{0,s_*(x)}$ 上で絶対連続である．
2. 境界条件：
   $$
   \Gamma:=\Brace{x\in E\mid\exists_{t>0}\;\exists_{z\in E}\;x=\phi(t,z)}
   $$
   上では
   $$
   f(x)=\int_Ef(y)Q(x,dy),\quad x\in\Gamma
   $$
   を満たす．
3. 跳躍の局所可積分性：$E\times\R_+$ 上のランダム関数
   $$
   (x,s)\mapsto Bf(x,s):=f(x_s)-f(X_{s-})
   $$
   は，$X$ の跳躍が定める $E\times\R_+$ 上の Poisson 点過程 $\eta$ について，ある発散する停止時の増加列 $\tau_n$ が存在して，
   $$
   \E\Square{\int_0^{\tau_n}\int_E\abs{Bf(x,s)}\eta(dxds)}<\infty
   $$
   $$
   n=1,2,\cdots
   $$
   が成り立つ．



:::

::: {.callout-tip title="命題（PDMP の拡張生成作用素の特徴付け）^[[@Davis1993 p.69] 定理26.14 の後半．]" icon="false"}

$X$ を PDMP とする．このとき，$X$ の拡張生成作用素 $\wh{A}$ について，$\D(\wh{A})$ の全域で次が成り立つ：
$$
\wh{A}f(x)=\fX f(x)+\lambda(x)\int_E\Paren{f(y)-f(x)}Q(x,dy).
$$

:::

::: {.callout-important title="注（第一項の well-definedness）^[[@Vasdekis2021 p.18] 系2.3.4 も参照．]" collapse="true" icon="false"}

$\fX$ の標準座標 $\pp{}{x_1},\cdots,\pp{}{x_d}$ に関する成分表示を $g^i$ とすると，$\fX f(x)$ は $(g(x)|\nabla f(x))$ とも表せる．

この $\nabla f$ は，$f\in C^1(M_v)$ である場合は問題がないが，一般に単に絶対連続である場合は問題になる可能性がある．

しかしそれでも，次を満たす関数 $\nabla f$ として用意することができる：
$$
f(\phi_v(x,t),v)-f(x,v)=\int^t_0\nabla f(\phi_v(x,s),v)ds.
$$

:::

### PDMP が Feller-Dynkin 過程であるとき

::: {.callout-tip title="命題（PDMP の Feller 性の特徴付け）^[[@Davis1993 p.77] 定理27.6．]" icon="false"}

$X$ を PDMP とする．次の全てが成り立つならば，$X$ は Feller-Dynkin 過程である：

1. 任意の $x\in E$ について，
   $$
   t_*(x):=\inf\Brace{t>0\mid\phi(t,x)\in\partial E}=\infty.
   $$
2. $\lambda\in C_b(E)$．
3. $Q$ も Feller 性を持つ：$Q(C_b(E))\subset C(E)$．

:::

::: {.callout-important title="注（right process としての PDMP）" collapse="true" icon="false"}

しかし，PDMP は常に [@Meyer1966] にいう right process ではある．すなわち，次の４条件を満たす：

1. $E$ は Lusin 空間である．
2. $P_t(\L_b(E))\subset\L_b(E)$．
3. $X$ は殆ど確実に右連続な見本道を持つ．
4. $f$ が $\al$-excessive function ならば，$t\mapsto f\circ X_t$ も殆ど確実に右連続な見本道を持つ．

:::


### PDMP のシミュレーション

#### 到着時刻のシミュレーション

レート関数が $\lambda>0$ であるとき，Poisson イベントのシミュレーションは次のように，指数分布に従う確率変数のシミュレーションによって行える．

累積関数を
$$
\Lambda(t):=\int^t_0\lambda(s)ds
$$
とすると，$N_t\sim\Pois(\Lambda(t))$ であるから，最初のイベントの到着時刻 $T_1$ は，次の[生存関数](https://ja.wikipedia.org/wiki/生存関数)によって特徴付けられる：
$$
\P[T_1\ge t]=\P[N_t=0]=\exp\paren{-\Lambda(t)}.
$$

ここで，$E\sim\Exp(1)$ とすると，
$$
\P[\Lambda^{-1}(E)\ge t]=\P\Square{E\ge\Lambda(t)}=e^{-\Lambda(t)}.
$$
従って，$T_1\deq f^{-1}(E)$ である．

すなわち，$E$ を通じて
$$
T_1':=\inf\Brace{t\ge0\,\middle|\,\int^t_0\lambda(s)ds=E}
$$
を計算すれば，最初の到着時刻が計算できる．^[簡単な対象分布では，$\Lambda(t)=E$ の解が解析的に求まる事が多い．これが intractable である場合は，[剪定](Poisson.qmd#sec-thinning) を用い，$\lambda^*$ としては affine 関数を用いる事が多いが，一般に３次の多項式までならば解の公式があるために，$\Lambda(t)=E$ を解析的に解く方法から効率的にシミュレーションできる．どれくらい $\lambda^*$ として $\lambda$ に近いものを選べば良いかは不明．[@Vasdekis2021 p.13] 命題2.2.2も参照．]

#### PDMP のためのパッケージ

[Joris Bierkens](https://diamhomes.ewi.tudelft.nl/~jorisbierkens/pdmps.html) ら開発の R パッケージ `RZigZag` ([GitHub](https://github.com/jbierkens/RZigZag) / [CRAN](https://cran.r-project.org/web/packages/RZigZag/index.html)) を通じて実行してみる．

```r
install.packages("Rcpp")
install.packages("RcppEigen")
install.packages("RZigZag")
```

### Zig-Zag Sampler [@Bierkens+2019]

#### 導入

１次元の Zig-Zag 過程は元々，[Curie-Weiss 模型](../Nature/StatisticalMechanics1.qmd#sec-Curie-Weiss) における Glauber 動力学を lifting により非可逆化して得る Markov 連鎖の，スケーリング極限として特定された Feller-Dynkin 過程である [@Bierkens-Roberts2017]．

ただし，[@Goldstein1951] で電信方程式と関連して，同様の過程が扱われた歴史もある．

#### 設定

Zig-Zag 過程 $Z=(X,\Theta)$ の状態空間は $E=\R^d\times\{\pm1\}^d$ と見ることが多い．

$\theta\in\{\pm1\}^d$ は速度を表す．すなわち，全座標系と $45$ 度をなす方向に，常に一定の単位速度で $\R^d$ 上を運動するとする．

換言すれば，決定論的なフローは次のように定める：
$$
\dd{\phi_{(x,\theta)}(t)}{t}=\theta,
$$
$$
\dd{\Theta}{t}=0,\qquad\Theta_0=0.
$$

#### アルゴリズム

後述の関数 $\lambda$ に対して，各座標 $i\in[d]$ におけるレートを
$$
m_i(t):=\lambda(x+\theta t,\theta)
$$
で定めた $\R^d$ 上の Poisson 過程を考える．

多次元の Poisson 過程の各成分の跳躍は独立だから，^[[@Revuz-Yor1999 p.473] 命題XII.1.7．] それぞれの成分ごとに Poisson 到着時刻 $T_i\;(i\in[d])$ をシミュレーションし，最初に到着したものを $T_j$ とすると，関数
$$
F_j(\theta)_i=\begin{cases}-\theta_i&i=j\\\theta_i&i\ne j\end{cases}
$$
に従ってジャンプすると考えて良い．

::: {.callout-important title="注（第 [-@sec-settings] 節の設定との対応）" collapse="true" icon="false"}

状態空間は
$$
E=\bigcup_{\theta\in\{\pm1\}^d}\R^d\times\{\theta\}
$$
とみなすところから始める必要がある．

加えて，レート関数は
$$
\lambda(x,\theta):=\sum_{i=1}^d\lambda_i(x,\theta)
$$
であり，跳躍測度は点過程
$$
Q((x,\theta),-):=\sum_{i=1}^d\frac{\lambda_i(x,\theta)}{\lambda(x,\theta)}\delta_{(x,F_i(\theta))}(-)
$$
とみなした場合に当たる．

:::

#### レート関数

PDMP の妙は全てレート関数に宿っている．

レート $\lambda:E\to\R_+$ は，目標分布 $\pi(dx)\propt e^{-U(x)}dx$ に対して，
$$
\lambda_i(x,\theta):=(\theta_i\partial_iU(x))_++\gamma_i(x,\theta_{-i})\quad(i\in[d])
$$
と定める．ただし，$\gamma_i$ は，$\theta_i$ のみには依らない任意の関数 $\gamma_i:E\to\R_+$ とした．^[この関数は，$U$ の情報には依らない追加のリフレッシュ動作を仮定に加える．どのような $\gamma_i$ をとっても，平衡分布には影響を与えない．しかし，高くするごとにアルゴリズムの対称性が上がるため，$\gamma\equiv0$ とすることが Monte Carlo 推定量の漸近分散を最小にするという [@Andrieu-Livingstone2021]．]

::: {.callout-tip title="命題 [@Bierkens+2019]" icon="false"}

$U\in C^1(\R^d)$ は $e^{-U}\in\L^1(\R^d)$ を満たすとする．このとき，$Z$ は次の分布 $\mu=\pi\otimes\Rad\in\cP(E)$ を不変にする：^[ただし，$\Rad:=\delta_{\pm1}/2$ とした．]
$$
\mu(dxd\theta)=\frac{1}{2^d\cZ}e^{-U(x)}\,dxd\theta
$$

:::

#### 部分サンプリング

MCMC の計算複雑性のボトルネックは，尤度の評価にある．各ステップで全てのデータを用いて尤度を計算する必要がある点が，MCMC を深層学習などの大規模データの設定への応用を難しくしている [@Murphy2023 p.647]．

$p(x)$ を事前分布，$p(y|x)$ を観測のモデル（または尤度）とし，データ $y_1,\cdots,y_n$ は互いに独立であるとする．このとき，事後分布 $\pi(x):=p(x|y)$ は
$$
\pi(x)\propt\paren{\prod_{k=1}^n p(y_k|x)}p(x)
$$
より，Hamiltonian $U$ は
\begin{align*}
   U(x)&=-\sum_{k=1}^n\log p(y_k|x)-\log p(x)\\
   &=\frac{1}{n}\sum_{k=1}^n\Paren{-n\log p(y_k|x)-\log p(x)}.
\end{align*}
と表せる．

すなわち，各微分係数 $\partial_i U(x)$ は，独立な観測 $y_1,\cdots,y_n$ が定める統計量
$$
E^i_k(x):=\pp{}{x_i}\Paren{-n\log p(y_k|x)-\log p(x)}
$$
の平均により推定される値となっている．

よって，精度は劣るかもしれないが，一様に選んだ $K\sim\rU([n])$ から定まる $E^i_K$ の値は $\partial_i U(x)$ の不偏推定量となっている．^[このとき，必ずしも $K\sim\rU([n])$ とする必要はなく，特定の観測に重みをおいても良い [@Sen+2020]．]

::: {.callout-note title="部分サンプリングにより不変分布が変わらないことの証明" icon="false" collapse="true"}

これは，元々のレート関数
$$
\lambda_i(x,\theta)=\frac{1}{n}\sum_{k=1}^n(\theta E^i_k(x))_+
$$
に対して，
$$
\gamma_i(x,\theta):=\frac{1}{n}\sum_{k=1}^n(\theta_iE^i_k(x))_+-\paren{\theta_i\frac{1}{n}\sum_{k=1}^nE^i_k(x)}_+
$$
という項を加えて得る Zig-Zag サンプラーとみなせるためである．

こうして定義された $\gamma_i$ が非負関数である限り，平衡分布は $\mu$ のままであるが，これは関数 $(-)_+$ の凸性から従う．

こうして，サブサンプリングの実行による精度の劣化が，[@Andrieu-Livingstone2021] の枠組みで捉えられる，ということでもある．

加えて，レート関数が大きくなっており，したがってそもそも尤度関数の評価の回数が増えていることにも注意．

:::

#### 制御変数による分散低減

上述の $\partial_iU(x)$ の不偏推定量の分散は，制御変数の方法を用いて低減できる．これにより，事前処理の部分を除けば，データのサイズに依存しない計算複雑性で事後分布からの正確なサンプリングが可能になる．



#### シミュレーション

```{r}
#| fig-cap: "$\\rN_2\\paren{\\vctr{2}{2},\\mtrx{3}{1}{1}{3}}$ に対する Zig-Zag 過程"
library(RZigZag)
library(ggplot2)
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
result <- ZigZagGaussian(V, mu, 100)
ggplot() +
   geom_path(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   geom_point(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   labs(x="", y="", title="Zig-Zag Sampler") +
   theme_void() +
   theme(text=element_text(size=12), axis.title=element_text(color="#80c4ac"), plot.title=element_text(color="#80c4ac"))
```

```{r}
#| fig-cap: "Cauchy 分布 $\\rC(0,1)=\\rt(1)$ に対する Zig-Zag 過程"
set.seed(123)
dim <- 2
dof <- 1
result <- ZigZagStudentT(dof, dim, n_iter=1000, sphericallySymmetric = TRUE)
ggplot() +
   geom_path(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   geom_point(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   labs(x="", y="", title="Zig-Zag Sampler") +
   theme_void() +
   theme(text=element_text(size=12), axis.title=element_text(color="#80c4ac"), plot.title=element_text(color="#80c4ac"))
```

続きは次の稿も参照：

```{=html}
<div class="article-card-container">
   <div class="article-card">
      <a href="https://162348.github.io/posts/2024/Process/ZigZag.html" target="_blank">
         <img src="https://162348.github.io/posts/2024/Process/PureJump_files/unnamed-chunk-1-1.png" alt="Article Image" class="article-image">
         <div class="article-content">
            <h3 class="article-title">Zig-Zag サンプラー</h3>
            <p class="article-description">ジャンプと確定的な動きによる新たな MCMC 手法</p>
         </div>
      </a>
   </div>
</div>
```

### Bouncy Particle Sampler [@Bouchard-Cote+2018-BPS]

#### 部分サンプリング

Zig-Zag サンプラーに対応するサブサンプリングの技術を [@Pakman+2017] が提案している．

#### シミュレーション

```{r}
#| fig-cap: "$\\rN_2\\paren{\\vctr{2}{2},\\mtrx{3}{1}{1}{3}}$ に対する Zig-Zag 過程"
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
x0 <- c(0,0)
result <- BPSGaussian(V, mu, n_iter = 100, x0 = x0)
ggplot() +
   geom_path(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   geom_point(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#80c4ac") +
   labs(x="", y="", title="Bouncy Particle Sampler") +
   theme_void() +
   theme(text=element_text(size=12), axis.title=element_text(color="#80c4ac"), plot.title=element_text(color="#80c4ac"))
```

