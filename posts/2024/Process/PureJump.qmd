---
title: "純粋跳躍過程の生成作用素と区分的確定的 Markov 過程"
author: "司馬博文"
date: 1/31/2024
date-modified: 2/8/2024
categories: [Process, Math Notes, Computation]
toc: true
image: PureJump.png
number-sections: true
code-block-bg: true
code-block-border-left: "#5AB5BA"
code-overflow: wrap
code-fold: true
bibliography: 
    - ../../../mathematics.bib
    - ../../../bib.bib
csl: ../../../apa.csl
crossref:
    sec-prefix: 節
    eq-prefix: 式
    def-prefix: 定義
    def-title: 定義
    thm-prefix: 定理
    thm-title: 定理
    fig-prefix: 図
    fig-title: 図
abstract-title: 概要
abstract: 純粋跳躍過程の生成作用素を調べる．確率核 $\mu$ と到着強度 $\lambda$ という２つのパラメータは，それぞれジャンプ先を定める Markov 過程の遷移核と，ジャンプの起こりやすさを表す指数待ち時間のパラメータに対応する．
---

{{< include ../../../_preamble.qmd >}}

## 問題 {#sec-problem}

::: {.callout-tip icon="false"}
## 次の生成作用素はどのような Markov 過程に対応するか？

$E$ を距離空間，$\mu:E\times\B(E)\to[0,1]$ を確率核，$\lambda\in\L_b(E)_+$ を有界可測関数とする．
$$
Af(x):=\lambda(x)\int_E\Paren{f(y)-f(x)}\mu(x,dy),\quad f\in\L_b(E),
$$ {#eq-1}
は有界作用素 $A\in B(\L_b(E))$ を定め，一様連続半群
$$
\{T_t:=e^{tA}\}_{t\in\R_+}\subset B(\L_b(E))
$$
を生成する．^[[@Pazy1983 p.2] 参照．] これに対応する Markov 過程はどのようなものだろうか？

:::

## 構成

初期分布を $\nu\in\cP(E)$ とする．

### 構成１

結論としては，畳み込み半群 $\{\mu^{\otimes k}\}_{k\in\N}$ に対応する初期分布 $\nu$ の Markov 過程 $\{Y_k\}_{k=0}^\infty$ と，これと独立な指数確率変数列 $\Delta_k\iidsim\Exp(1)$ を用いて，
$$
X_t:=\begin{cases}
Y_0&0\le t<\frac{\Delta_0}{\lambda(Y_0)}\\
Y_k&\sum_{j=0}^{k-1}\frac{\Delta_j}{\lambda(Y_j)}\le t<\sum_{j=0}^{k}\frac{\Delta_j}{\lambda(Y_j)}
\end{cases}
$$
と構成した過程 $\{X_t\}_{t\in\R_+}$ が，$\{e^{tA}\}$ に対応する Markov 過程である．この事実は @sec-2 で２つ目の構成と同時に証明される．

なお，$\lambda(x)=0$ の場合は，ジャンプは起きないもの $\frac{\Delta}{\lambda(x)}=\infty$ と解する．

すなわち，関数 $\lambda\in\L_b(E)$ は位置 $x\in E$ からのジャンプの起こりやすさを表していると思える．具体的には，$\frac{\Delta_k}{\lambda(y_k)}\sim\Exp(\lambda(y_k))$ に注意すれば，ジャンプの起こりやすさは指数待ち時間のパラメータに対応する．

### 構成２ {#sec-2}

$\lambda=0$ の場合は零過程であるから，
$$
\lambda:=\sup_{x\in E}\lambda(x)>0
$$
とし，
$$
\mu'(x,\Gamma):=\paren{1-\frac{\lambda(x)}{\lambda}}\delta_x(\Gamma)+\frac{\lambda(x)}{\lambda}\mu(x,\Gamma)
$$
と定めると，
$$
Af(x)=\lambda\int_E\Paren{f(y)-f(x)}\mu'(x,dy)
$$
とも表せる．

畳み込み半群 $\{\mu'^{\otimes k}\}_{k\in\N}$ に対応する初期分布 $\nu$ の Markov 過程 $\{Y_k'\}_{k=0}^\infty$ は $\{Y_k\}$ とは分布同等でないが，これと独立な Poisson 過程 $\{V_t\}_{t\in\R_+}$ に対して
$$
X'_t:=Y'_{V_t}\quad t\in\R_+
$$
と構成される過程 $\{X_t'\}_{t\in\R_+}$ はやはり $\{e^{tA}\}$ に対応する Markov 過程である．

::: {.callout-tip icon="false"}
## 命題^[[@Ethier-Kurtz1986 pp.163-164]]

1. $\{X'_t\}$ は $\{X_t\}$ に分布同等である．
2. $\{Y'_k\}$ は Markov 性
$$
\E[f(Y'_{k+V_t})|\F_t]=P^kf(X'_t)
$$
を満たす．ただし，$P$ は $\mu'$ が定める作用，$\F_t:=\F_t^V\lor\F^{X'}_t$ とした．
3. $X'$ は $\{T_t\}$ に対応する Markov 過程である：
$$
\E[f(X'_{t+s})|\F_t]=T_sf(X'_t).
$$

:::

::: {.callout-note icon="false" collapse="true"}
## 証明
:::

### まとめ

@eq-1 で考えた生成作用素 $A$ に対応する Markov 過程 $\{X_t\}$ は，$\mu$ が定める Markov 過程 $\{Y_k\}$ を，到着率 $\lambda:=\sup_{x\in E}\lambda(x)$ の Poisson 過程で

## 区分的確定的 Markov 過程

このような純粋跳躍過程に，決定論的なフローを加えた Markov 過程のクラスを，[@Davis1984] 以来 **区分的確定的 Markov 過程** (PDMP: Piecewise Deterministic Markov Process) と呼ぶ．

[@Davis1984] は，PDMP は拡散過程に相補的なクラスであり，確率的モデリングと最適化において重要な役割を演じえることを見事に描き出した．

> the class of "piecewise-deterministic" Markov processes, newly introduced here, provides a general family of models covering virtually all non-diffusion applications. [@Davis1984]

実際，PDMP を用いた MCMC である [Piecewise Deterministic Monte Carlo](https://diamhomes.ewi.tudelft.nl/~jorisbierkens/pdmps.html) は，高次元データと大規模データセットに対する効率的なサンプリング法開発の鍵と目されている．

### PDMP の例

Joris Bierkens ら開発の R パッケージ `RZigZag` ([GitHub](https://github.com/jbierkens/RZigZag) / [CRAN](https://cran.r-project.org/web/packages/RZigZag/index.html)) を通じて実行してみる．

```{=html}
<a class="embedly-card" href="https://cran.r-project.org/web/packages/RZigZag/index.html">RZigZag: Zig-Zag Sampler</a><script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>
```

```r
install.packages("Rcpp")
install.packages("RcppEigen")
install.packages("RZigZag")
```

#### Bouncy Particle Sampler

```{r}
library(RZigZag)
library(ggplot2)
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
x0 <- c(0,0)
result <- BPSGaussian(V, mu, n_iter = 100, x0 = x0)
plot(result$Positions[1,], result$Positions[2,], type='l', asp=1, col="#8B4513",
     xlab="X", ylab="Y", main="Bouncy Particle Sampler",
     col.main="#8B4513", col.lab="#8B4513", cex.lab=1.2, cex.main=1.4, font.main=4, font.lab=2)

```

```{r}
result <- BPSGaussian(V, mu, n_iter = 100, x0 = x0)
ggplot() +
  geom_line(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#8B4513") +
  labs(x="X", y="Y", title="Bouncy Particle Sampler") +
  theme_minimal() +
  theme(text=element_text(size=12), axis.title=element_text(color="#8B4513"))
```

#### Zig-Zag Sampler

```{r}
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
result <- ZigZagGaussian(V, mu, 100)
plot(result$Positions[1,], result$Positions[2,],type='l',asp=1)
```