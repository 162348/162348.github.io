---
title: "Stan 入門"
subtitle: "rstan による Stan の利用"
author: "司馬 博文"
date: 5/17/2024
date-modified: 9/17/2024
categories: [Bayesian, Computation, Stan]
image: Files/Stan.png
bibliography: 
    - ../../../assets/mathematics.bib
    - ../../../assets/bib.bib
    - ../../../assets/bib1.bib
csl: ../../../assets/apalike.csl
abstract-title: 概要
abstract: Stan は MCMC や変分推論などのベイズ推論エンジンを備えた，統計モデリングのための確率的プログラミング言語です．CLI，Python，Julia，R など，主要な言語からパッケージを通じて利用可能です．本稿では Stan 言語の基本をまとめます．
execute:
  cache: true
listing: 
  -   id: lst-stan
      type: grid
      sort: false
      contents:
          - adastan.qmd
          - Stan2.qmd
          - YUIMA.qmd
      date-format: iso
      fields: [title,image,date,subtitle]
  -   id: lst-stan2
      sort: false
      type: grid
      contents:
          - Stan2.qmd
      date-format: iso
      fields: [title,image,date,subtitle]
      page-size: 1
---

::: {.callout-tip title="リンク集" appearance="simple"}

[GitHub](https://github.com/stan-dev), [Documentation](https://mc-stan.org/docs/), [Reference Manual](https://mc-stan.org/docs/reference-manual/)．

:::

{{< include ../../../assets/_preamble.qmd >}}

::: {#lst-stan}
:::

## Stan 言語

### はじめに

Stan 言語は確率モデルを３つのブロックに分けて記述する．

その３つとはデータ，パラメータとモデルである．

::: {.callout-tip appearance="simple" icon="false"}

データは言わずもがなであるが，

:::

以上の３要素により，事後分布が定まる．

その後 Stan は内部で c++ を用いて事後分布の対数密度とその勾配を自動微分により計算し，Hamiltonian Monte Carlo による事後分布サンプリングを実行する．

### `data` ブロック

## Stan エコシステム

### Stan インターフェイス

#### `CmdStan` の仕組み

`CmdStan` は makefiles の集合からなる最も軽量な，コマンドラインベースのインターフェイスである．

これを直接 R で wrap した [`CmdStanR` パッケージ](https://mc-stan.org/cmdstanr/) や `CmdStanPy` パッケージが存在し，同時に Julia, Mathematica, Matlab からも利用可能である．

Stan の Math ライブラリ，Algorithm ライブラリなどの出力をテキストファイルで出力してやり取りする．

`CmdStan` は最も軽量なインターフェイスであり，`Stan` の性能を純粋に引き出す場合に使われる．

#### `CmdStan` のインストール {#sec-installing-cmdstan}

[CmdStan Installation](https://mc-stan.org/docs/cmdstan-guide/installation.html) によると，`conda` による方法とソースからのインストールの2つの方法がある．

一方で次稿で扱う `CmdStanR` を通じてインストールすることもできる：

::: {#lst-stan2}
:::

#### `RStan` と `PyStan`

`R` と `Python` という２大言語を Stan と直接繋げるインターフェイスを提供している．

`CmdStan` のように一度テキストファイルに書き出すということがなく，メモリ上でやり取りされるが，それ故に `CmdStan` よりも追加の処理が多くなりがちである．

## 文献紹介 {.appendix}

手軽に概要を掴むには Michael Betancourt によるブログ記事 [An introduction to Stan](https://betanalpha.github.io/assets/case_studies/stan_intro.html) が良い．

より本格的な解説論文には [@Gelman+2015], [@Carpenter+2017-Stan] がある．

[公式の文献紹介](https://mc-stan.org/users/documentation/tutorials) が stan.org から出ているが，情報が古い．

また，Stan には [日本語のマニュアル](https://stan-ja.github.io/gh-pages-html/) もある：[stan-ja (GitHub)](https://github.com/stan-ja/stan-ja)．