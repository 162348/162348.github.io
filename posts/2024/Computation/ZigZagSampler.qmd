---
title: "Zig-Zag サンプラー"
subtitle: "物理のくびきを超える MCMC"
author: "司馬博文"
date: "7/25/2024"
categories: [Slide, MCMC, Julia]
image: ../Process/ZigZag_1D.svg
format:
  html: default
  revealjs: 
    output-file: ZigZagSampler_Slides.html
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: ../../../profile.jpg
    css: ../../../slides.css
    footer: |
      [司馬博文](https://162348.github.io/posts/2024/Computation/ZigZagSampler.html)
    scrollable: true
    smaller: false
    controls: true
    controls-layout: bottom-right
    self-contained-math: true
    shift-heading-level-by: -1
    toc: true
    toc-depth: 1
    toc-title: 目次
    number-sections: true
    theme: serif
    show-slide-number: all
    include-in-header: ../../../include-in-header.html
    tbl-cap-location: bottom
bibliography: 
    - ../../../mathematics.bib
    - ../../../bib.bib
csl: ../../../apalike.csl
description: |
  スライドは<a href="https://162348.github.io/posts/2024/Computation/ZigZagSampler_Slides.html" style="text-decoration: underline;">こちら</a>．
# image: Images/Bayes.svg
comment: false
code-fold: false
execute:
    cache: true
html-math-method: katex
abstract-title: 概要
abstract: |
  本郷キャンパスにて発表．
  スライドは[こちら](https://162348.github.io/posts/2024/Computation/ZigZagSampler_Slides.html)．
  より発展的な内容については，[こちらの稿](../Process/ZigZag.qmd)も参照．

  Zig-Zag sampler, known as an instance of 'Continuous-time MCMC', is a cutting-edge sampling method that exhibits scalability and state-of-the-art performance on high-dimensional models including logistic model etc. This talk includes a brief introduction to the Zig-Zag sampler and the two important properties, irreversibility of its dynamics and thinning of Poisson point processes, followed by a few numerical experiments on logistic models with large and unbalanced data.
---

## [Zig-Zag サンプラー](../Process/ZigZag.qmd)

{{< include ../../../_preamble.qmd >}}

### 他手法との違い：連続かつ非対称なダイナミクス

対象分布：標準 Cauchy 分布 $f(x)=\frac{1}{\pi\sigma}\frac{1}{1+\paren{\frac{x-\mu}{\sigma}}^2}$

::: {layout-ncol=2}
![Zig-Zag サンプラー](../Process/ZigZag_1D.svg)

![Metropolis-adjusted Langevin Algorithm](../Process/MALA_1D.svg)
:::

### $t$-分布に対する収束レート

自由度 $\nu$ の $t$-分布 $\rt(\nu)$ に対して，

* Zig-Zag Sampler [@Vasdekis-Roberts2022]
$$
\Norm{P^t\paren{(x,\theta),-}-\rt(\nu)}_\TV\le\frac{C_1V_1(x)}{t^k},\qquad k<\nu.
$$

* Metropolis-adjusted Langevin Algorithm [@Jarner-Tweedie2003]
$$
\Norm{P^t\paren{x,-}-\rt(\nu)}_\TV\le\frac{C_2V_2(x)}{t^k},\qquad k<\frac{\nu}{2}.
$$
[参考：$\rt(\nu)\Rightarrow\rN(0,1)\;(\nu\to\infty)$．]{.small-letter}

### PDMP による MCMC

PDMP （Piecewise Deterministic Markov Process，区分確定的マルコフ過程）：ランダムな時刻にランダムな動きをする以外は，確定的な動き

![区分確定的モンテカルロ法 Animated by [@Grazzi2020]](pdmps.gif)

### PDMP による MCMC

::: {layout="[40,60]" layout-valign="center"}

::: {#first-column}

![Zig-Zag 過程の軌道](../Process/ZigZag_2D.svg)

:::

::: {#second-column}

* 正確なシミュレーションが可能な連続過程
  * 次の２つだけシミュレーションすれば良い
    * [ランダムな時刻]{.small-letter}
    [（非一様 Poisson 点過程）]{.small-letter}
    * [ランダムな変化]{.small-letter}
    [（Zig-Zag の場合はこれも無し）]{.small-letter}

:::

:::

### PDMP による MCMC

::: {layout="[40,60]" layout-valign="center"}

::: {#first-column}

![Zig-Zag 過程の軌道](../Process/ZigZag_2D.svg)

:::

::: {#second-column}

* 軌跡自体が目標分布 $\pi$ に従う
  * [あとは好きな間隔で切り出してサンプルとすれば良い]{.small-letter}
* Metropolis-Hastings 法の scaling limit として導かれる
  * [Zig-Zag は Curie-Weiss 模型の Lifted MH 法から]{.small-letter} [[@Bierkens-Roberts2017]]{.footnote-letter}
  * [BPS は分子動力学法の模型から]{.small-letter} [[@Peters-deWith2012]]{.footnote-letter}

:::

:::

### PDMP の美点

1. [ダイナミクスが良い]{.underline}

    [前スライドで見た通り，**非対称な**ダイナミクスが作れる]{.small-letter}

2. [シミュレーションが簡単]{.underline}

    [PDMP：離散化誤差なしで簡単にシミュレーションできる稀有な連続過程]{.small-letter}

3. [スケーラブルなサンプリング手法]{.underline}

    [全データにアクセスする必要はなく，一部で良い（サブサンプリング）]{.small-letter}

    [**バイアスが入らない**サブサンプリングが可能]{.small-letter}

### Zig-Zag 過程のシミュレーション

::: {.callout-tip appearance="simple" icon="false"}

1. レート関数 $\lambda_1,\cdots,\lambda_d$ から定まる強度関数
    $$
    m_i(t):=\lambda_i(x+\theta t,\theta),\qquad i\in[d],
    $$
    を持つ，$d$ 個の独立な $\R_+$ 上の非一様 Poisson 点過程の，最初の到着時刻 $T_1,\cdots,T_d$ をシミュレーションする．
2. 最初に到着した成分の番号 $j:=\argmin_{i\in[d]}T_i$ について，時刻 $T_j$ に速度成分 $\theta_j$ の符号を反転させる．すなわち，関数
    $$
    F_j(\theta)_i:=\begin{cases}-\theta_i&i=j\\\theta_i&i\ne j\end{cases}
    $$
    に従ってジャンプする．
3. $t=T_j$ までを線型に補間し，1. に戻ってくり返す．

:::

### Zig-Zag 過程の等価な定義

::: {.callout-important appearance="simple" icon="false"}

状態空間を $E=\bigcup_{\theta\in\{\pm1\}^d}\R^d\times\{\theta\}$ と取ると，$E$ 上のレート関数
$$
\lambda(x,\theta):=\sum_{i=1}^d\lambda_i(x,\theta)
$$
が定める強度
$$
M(t):=\lambda(x+t\theta,\theta)
$$
を持った $\R_+$ 上の非一様 Poisson 点過程に従ってジャンプが訪れる．この点過程に対して，確率核
$$
Q((x,\theta),-):=\sum_{i=1}^d\frac{\lambda_i(x,\theta)}{\lambda(x,\theta)}\delta_{(x,F_i(\theta))}(-)
$$
に [印付けられた点過程](../Process/Poisson.qmd#sec-marked-process) が，$Z$ の跳躍測度である．

:::

::: {.callout-note title="証明（２つの定義の等価性）" icon="false" collapse="true"}

Zig-Zag 過程に対する２つの定義を与えたが，これら２つが同分布の過程を定めることは証明が必要である．

まず，$\min_{i\in[d]}T_i$ が，強度関数 $M$ が定める到着時刻に同分布であることを示す．

各 $T_i$ の密度は
$$
p_i(t)=m_i(t)e^{-M_i(t)}1_{(0,\infty)}(t)
$$
で与えられ，$T_i$ は互いに独立だから，$(T_1,\cdots,T_d)$ の結合密度もわかる．

$T_1,\cdots,T_d$ を昇順に並べた順序統計量を
$$
T_{(1)}\le\cdots\le T_{(d)}
$$
で表すとする．この $d$ 次元確率ベクトルの密度 $p$ は，
$$
p(t_1,\cdots,t_d)=1_{\Brace{t_1\le\cdots\le t_d}}(t_1,\cdots,t_d)\paren{\sum_{\sigma\in\mathfrak{S}_d}\prod_{i=1}^dm_i(t_{\sigma(i)})e^{-M_i(t_{\sigma(i)})}}
$$
と計算できる．

この $p$ を $t_2,\cdots,t_d$ に関して積分することで，$T_1$ の密度が得られる：^[計算過程は省略したが，$d=2$ の場合と，$d=3$ の場合を少しやってみると良い．]
\begin{align*}
    p_{(1)}(t)&=\int_{(0,\infty)^{d-1}}p(t_1,\cdots,t_d)\,dt_2\cdots dt_d\\
    &=\Paren{\sum_{i=1}^dm_i(t_1)}\exp\paren{-\sum_{i=1}^dM_i(t_1)}=m(t_1)e^{-M(t_1)}.
\end{align*}

これは確かに，強度関数 $m$ が定める到着時刻の密度である．

続いて，$j=\argmin_{i\in[d]}T_i$ の，$\min_{i\in[d]}T_i$ に関する条件付き確率質量関数が
$$
q(i|t)=\frac{m_i(t)}{\sum_{i=1}^dm_i(t)}
$$
であることを示す．

そのためには，任意の $i\in[d]$ と $A\in\B(\R^+)$ とに関して $\Brace{T_{(1)}\in A,T_{(1)}=T_i}$ という形の事象を計算し，密度が積の形で与えられることを見れば良い．

\begin{align*}
    &\qquad\P[T_{(1)}\in A,T_{(1)}=T_i]\\
    &=\P[T_i\in A,\forall_{j\ne i}\;T_i\le T_j]\\
    &=\int_Ap_i(t_i)\,dt_i\paren{\sum_{\sigma\in\Aut([d]\setminus\{i\})}\int^\infty_{t_i}p_{\sigma(1)}(t_{\sigma(1)})\,dt_{\sigma(1)}\int^\infty_{t_{\sigma(1)}}p_{\sigma(2)}(t_{\sigma(2)})\,dt_{\sigma(2)}\cdots\int^\infty_{t_{\sigma(d-1)}}p_{\sigma(d)}(t_{\sigma(d)})\,dt_{\sigma(d)}}\\
    &=\int_Am_i(t_i)\exp\paren{-\sum_{i=1}^dm_i(t_i)}\,dt_i\\
    &=\int_A\frac{m_i(t_i)}{m(t_i)}m(t_i)e^{-M(t_i)}\,dt_i.
\end{align*}

よって，$\min_{i\in[d]}T_i$ と $\argmin_{i\in[d]}T_i$ とに関する結合密度は，^[参照測度は，$[d]$ 上のものは計数測度 $\#$ をとっている．]
$$
q(i|t)p_{(1)}(t)
$$
という積の形で与えられることがわかった．


::: {.callout-important appearance="simple" icon="false" title="まとめ"}

1. 前述の定義は，$\min_{i\in[d]}T_i$ の形で密度 $p_{(1)}$ からシミュレーションし，$\argmin_{i\in[d]}T_i$ の形で $q$ からシミュレーションしている．
2. 後述の定義は，$p_{(1)}(t)$ から直接シミュレーションし，再び $q(i|t)$ から直接シミュレーションをする．

１が２に等価であることがわかった．

:::

:::

### 数学的な見通しの良さ

::: {.callout-important appearance="simple" icon="false"}

* 運動：速度 $\theta\in\{\pm1\}^d$ による等速直線運動．
* ジャンプ：$E=\bigcup_{\theta\in\{\pm1\}^d}\R^d\times\{\theta\}$ 上の $Q$-付印された非一様 Poisson 点過程．

:::

この定式化の下では，[@Davis1993] により [拡張生成作用素の形](../Process/PureJump.qmd#sec-settings) が一般的な設定で調べられている：$C^1(E)\subset\D(\wh{L})$ かつ
$$
\wh{L}f(x,\theta)=\theta\cdot D_xf(x,\theta)+\lambda(x,\theta)\Paren{f(x,-\theta)-f(x,\theta)}.
$$

[{{< fa arrow-right >}}]{.color-minty} 拡散項がジャンプ項になっただけで，従来の MCMC の解析に用いたエルゴード定理がそのまま使える．

### 到着時刻 $T_j$ のシミュレーション

## [大規模データに対するベイズ推論](../Stat/ZigZagSubsampling.qmd)

### 大規模データに対する２つのアプローチ

[1. Devide-and-conquer]{.underline}

データをチャンクにわけ，それぞれで MCMC を回し，あとから結果を総合する．

| 不偏性 | 手法名 | 提案文献 |
|:-:|:------:|:------:|
| [{{< fa xmark >}}]{.color-blue} | WASP | [[@Srivastava+2015]]{.footnote-letter} |
| [{{< fa xmark >}}]{.color-blue} | Consensus Monte Carlo | [[@Scott+2016]]{.footnote-letter} |
| [{{< fa check >}}]{.color-red} | Monte Carlo Fusion | [[@Dai+2019]]{.footnote-letter} |

: {.hover .responsive-sm tbl-colwidths="[20,50,35]"}

### 大規模データに対する２つのアプローチ

[2. Subsampling]{.underline}

尤度評価（全データが必要）を，リサンプリングに基づく不偏推定量で代用する．

| 不偏性 | 手法名 | 提案文献 |
|:-:|:------:|:------:|
| [{{< fa xmark >}}]{.color-blue} | Stochastic Gadient MCMC | [[@Welling-Teh2011]]{.footnote-letter} |
| [{{< fa check >}}]{.color-red} | Zig-Zag with Subsampling | [[@Bierkens+2019]]{.footnote-letter} |
| [{{< fa check >}}]{.color-red} | Stochastic Gradient PDMP | [[@Fearnhead+2024]]{.footnote-letter} |

: {.hover .responsive-sm tbl-colwidths="[20,50,35]"}

### PDMP ではバイアスを導入しないサブサンプリングが可能

中でも Zig-Zag サンプラーは，ある一定の条件下で極めて効率的になる点が注目されている．

### 数値実験：サブサンプリングによる効率化

![横軸：単位計算量，縦軸：平均自乗誤差（点線は不正確！）](../Process/MeanOfGaussian_Erronous.svg)

![横軸：単位計算量，縦軸：平均自乗誤差](../Process/MeanOfGaussian.svg)

## [不均衡データに対するロジスティック回帰](../Stat/Logistic.qmd)

### ロジスティック回帰

$$
\P[Y=1\mi X,\xi]=\frac{1}{1+\exp(-X^\top\xi)}
$$

の，事前分布 $p_0(\xi)d\xi$ とデータ $\{(x^i,y^i)\}_{i=1}^n$ に対する事後分布は

$$
\pi(\xi)\propt p_0(\xi)\prod_{i=1}^n\frac{\exp(y^i(x^i)^\top\xi)}{1+\exp((x^i)^\top\xi)}.
$$

正規分布の Pólya-Gamma 混合としての構造を利用した Gibbs サンプラー [@Polson+2013] によりベイズ推論可能．

### 「大規模不均衡データ」に対する Gibbs サンプラー

![自己相関関数の比較（ランダムウォーク・メトロポリス vs Gibbs サンプラー）](../Stat/Logistic.svg)

### 「大規模不均衡データ」に対する Gibbs サンプラー

![サンプラーの動きと事後分布（ランダムウォーク・メトロポリスの場合）](../Stat/posterior_MH.svg)

### 「大規模不均衡データ」に対する Gibbs サンプラー

![サンプラーの動きと事後分布（Pólya-Gamma 混合に基づくGibbs サンプラーの場合）](../Stat/posterior_PG.svg)

### 不均衡極限では測度の集中レートが違う [@Johndrow+2019]

| | 通常の極限 | 不均衡極限 |
|:---:|:-----:|:-----:|
| 事後分布 | $n^{-1/2}$ | $(\log n)^{-1}$ |
| 提案分布 | $n^{-1/2}$ | $n^{-1/2}$ |

: {.hover .responsive-sm tbl-colwidths="[20,40,40]"}

$$
\sum_{i=1}^ny^i=1,\qquad n\to\infty,
$$
の「不均衡極限」または Infinitely Imbalanced Limit [@Owen2007] において，集中のオーダーが変わってしまう．

### 事後分布の集中性の影響

* Pólya-Gamma 混合に基づく Gibbs サンプラー

  提案のステップサイズが，事後分布のスケールに比べて小さすぎる．

* Zig-Zag サンプラー

  代理レート関数 $M_i$ がズレることで効率が下がっていく．

後者は挽回可能！

### 重点サブサンプリング [@Sen+2020]

## ダイナミクスとエルゴード性

### Zig-Zag サンプラーがうまく行った理由

従来法，特に Stochastic Gradient Langevin Dynamics [@Welling-Teh2011] に比べ，

1. Diffusive な動きは必要なかった

    [{{< fa arrow-right >}}]{.color-minty} 状態空間のより効率的な探索が可能

2. $\partial U$ のみを使うならば，バイアスのない部分サンプリングが可能

    [{{< fa arrow-right >}}]{.color-minty} MH 法のように $p$ の比ではなく，$\partial_i\log p$ の値のみ使う．

## 終わりに

### Zig-Zag サンプラーがうまく行った理由

従来法，特に Stochastic Gradient Langevin Dynamics [@Welling-Teh2011] に比べ，

1. Diffusive な動きは必要なかった

    [{{< fa arrow-right >}}]{.color-minty} 状態空間のより効率的な探索が可能

2. $\partial U$ のみを使うならば，バイアスのない部分サンプリングが可能

    [{{< fa arrow-right >}}]{.color-minty} MH 法のように $p$ の比ではなく，$\partial_i\log p$ の値のみ使う．

２の反省が課題．

### 不偏なサブサンプリング技術

* [@Quiroz+2019] 一般論の構築を目指して
* [@Dang+2019] HMC に対する不偏なサブサンプリング
* [@Zhang+2020] MH に対する不偏なサブサンプリング

### Zig-Zag サンプラーの根本問題

Poisson thinning のための，簡単な関数（せいぜい２次関数）によるタイトな上界
$$
\Paren{\theta_i\partial_iU^k(x+\theta t)}_+\le M_i(t)
$$
を見つけること．

* 負の対数尤度 $U$ の勾配が有界ならば，$M_i$ は定数に取れる．

  多くの場合タイトな評価になっていない．
* ZZ-CV [@Bierkens+2019]
  
  $U$ の二回微分が有界ならば，$M_i$ を１次関数とする効率的な方法がある．

### Gibbs within Zig-Zag Sampler [@Sachs+2023]

階層モデルにおいて，Poisson thinning が効率的に行える成分だけ Zig-Zag サンプラーでアップデートし，それ以外の変数は Gibbs サンプラーのままにする．



### 参考文献