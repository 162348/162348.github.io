{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"新時代の MCMC を迎えるために\"\n",
        "subtitle: \"連続時間アルゴリズムへの進化\"\n",
        "image: ../../../static/Posters/ISM-OH2024.jpg\n",
        "author: \n",
        "    - name: \"司馬博文\"\n",
        "      orcid: 0009-0007-8251-1224\n",
        "      affiliation:\n",
        "        - name: 総合研究大学院大学先端学術院（統計科学コース）\n",
        "          url: https://www.ism.ac.jp/senkou/\n",
        "          group: ５年一貫博士課程\n",
        "date: 5/24/2024\n",
        "keywords:\n",
        "    - マルコフ連鎖モンテカルロ法（MCMC）\n",
        "    - \"区分的確定的マルコフ過程（PDMP: piecewise deterministic Markov process）\"\n",
        "    - 非対称メトロポリス法（Lifted Metropolis-Hastings）\n",
        "categories: [MCMC, Sampling, Poster]\n",
        "bibliography: \n",
        "    - ../../../assets/2023.bib\n",
        "    - ../../../assets/2024.bib\n",
        "csl: ../../../assets/apalike.csl\n",
        "abstract-title: 概要\n",
        "abstract: 物質科学を震源地とする MCMC のイノベーションが，統計力学と統計学の分野に波及して来ています．その結果，ここ 10 年で急激に MCMC 手法の革新が起こりました．従来 MCMC が離散時間ベースだったところが，イベントベースかつ連続時間ベースなものにとって替わられようとしているのです．これら連続時間 MCMC はどのような手法なのか？従来法を超えるのか？どのような場面で使えるのか？……等々疑問は尽きません．この新たな手法を正しく受け止めるために，現状の MCMC への理解から，新手法がどのように生まれたかの軌跡を辿り，現状の理解を確かめます．\n",
        "copyright: \"Copyright Hirofumi Shiba 2024. All Rights Reserved\"\n",
        "toc-title: 目次\n",
        "citation: true\n",
        "---\n",
        "\n",
        "::: {.hidden}\n",
        "\n",
        "::: {.content-visible when-format=\"html\"}\n",
        "\n",
        "A Blog Entry on Bayesian Computation by an Applied Mathematician\n",
        "\n",
        "$$\n",
        "\n",
        "\\renewcommand{\\P}{\\operatorname{P}}\\newcommand{\\E}{\\operatorname{E}}\n",
        "\\newcommand{\\R}{\\mathbb{R}}\\newcommand{\\F}{\\mathcal{F}}\n",
        "\\newcommand{\\abs}[1]{\\lvert#1\\rvert}\\newcommand{\\Abs}[1]{\\left|#1\\right|}\\newcommand{\\ABs}[1]{\\biggl|#1\\biggr|}\\newcommand{\\norm}[1]{\\|#1\\|}\\newcommand{\\Norm}[1]{\\left\\|#1\\right\\|}\\newcommand{\\NOrm}[1]{\\biggl\\|#1\\biggr\\|}\\newcommand{\\Brace}[1]{\\left\\{#1\\right\\}}\\newcommand{\\BRace}[1]{\\biggl\\{#1\\biggr\\}}\\newcommand{\\paren}[1]{\\left(#1\\right)}\\newcommand{\\Paren}[1]{\\biggr(#1\\biggl)}\\newcommand{\\brac}[1]{\\langle#1\\rangle}\\newcommand{\\Brac}[1]{\\left\\langle#1\\right\\rangle}\\newcommand{\\BRac}[1]{\\biggl\\langle#1\\biggr\\rangle}\\newcommand{\\bra}[1]{\\left\\langle#1\\right|}\\newcommand{\\ket}[1]{\\left|#1\\right\\rangle}\\newcommand{\\Square}[1]{\\left[#1\\right]}\\newcommand{\\SQuare}[1]{\\biggl[#1\\biggr]}\\newcommand{\\rN}{\\operatorname{N}}\\newcommand{\\ov}[1]{\\overline{#1}}\\newcommand{\\un}[1]{\\underline{#1}}\\newcommand{\\wt}[1]{\\widetilde{#1}}\\newcommand{\\wh}[1]{\\widehat{#1}}\\newcommand{\\pp}[2]{\\frac{\\partial #1}{\\partial #2}}\\newcommand{\\ppp}[3]{\\frac{\\partial #1}{\\partial #2\\partial #3}}\\newcommand{\\dd}[2]{\\frac{d #1}{d #2}}\\newcommand{\\floor}[1]{\\lfloor#1\\rfloor}\\newcommand{\\Floor}[1]{\\left\\lfloor#1\\right\\rfloor}\\newcommand{\\ceil}[1]{\\lceil#1\\rceil}\\newcommand{\\ocinterval}[1]{(#1]}\\newcommand{\\cointerval}[1]{[#1)}\\newcommand{\\COinterval}[1]{\\left[#1\\right)}\\newcommand{\\iso}{\\overset{\\sim}{\\to}}\n",
        "\n",
        "\n",
        "\n",
        "\\newcommand{\\y}{\\b{y}}\\newcommand{\\mi}{\\,|\\,}\\newcommand{\\Mark}{\\mathrm{Mark}}\n",
        "\\newcommand{\\argmax}{\\operatorname*{argmax}}\\newcommand{\\argmin}{\\operatorname*{argmin}}\n",
        "\n",
        "\\newcommand{\\pr}{\\mathrm{pr}}\\newcommand{\\Conv}{\\operatorname{Conv}}\\newcommand{\\cU}{\\mathcal{U}}\n",
        "\\newcommand{\\Map}{\\mathrm{Map}}\\newcommand{\\dom}{\\mathrm{Dom}\\;}\\newcommand{\\cod}{\\mathrm{Cod}\\;}\\newcommand{\\supp}{\\mathrm{supp}\\;}\n",
        "\\newcommand{\\grad}{\\operatorname{grad}}\\newcommand{\\rot}{\\operatorname{rot}}\\renewcommand{\\div}{\\operatorname{div}}\\newcommand{\\tr}{\\operatorname{tr}}\\newcommand{\\Tr}{\\operatorname{Tr}}\\newcommand{\\KL}{\\operatorname{KL}}\\newcommand{\\JS}{\\operatorname{JS}}\\newcommand{\\ESS}{\\operatorname{ESS}}\\newcommand{\\MSE}{\\operatorname{MSE}}\\newcommand{\\erf}{\\operatorname{erf}}\\newcommand{\\arctanh}{\\operatorname{arctanh}}\\newcommand{\\pl}{\\operatorname{pl}}\\newcommand{\\minimize}{\\operatorname{minimize}}\\newcommand{\\subjectto}{\\operatorname{subject to}}\\newcommand{\\sinc}{\\operatorname{sinc}}\\newcommand{\\Ent}{\\operatorname{Ent}}\\newcommand{\\Polya}{\\operatorname{Polya}}\\newcommand{\\Exp}{\\operatorname{Exp}}\\newcommand{\\codim}{\\operatorname{codim}}\\newcommand{\\sgn}{\\operatorname{sgn}}\\newcommand{\\rank}{\\operatorname{rank}}\n",
        "\n",
        "\\newcommand{\\vctr}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\vctrr}[3]{\\begin{pmatrix}#1\\\\#2\\\\#3\\end{pmatrix}}\\newcommand{\\mtrx}[4]{\\begin{pmatrix}#1&#2\\\\#3&#4\\end{pmatrix}}\\newcommand{\\smtrx}[4]{\\paren{\\begin{smallmatrix}#1&#2\\\\#3&#4\\end{smallmatrix}}}\\newcommand{\\Ker}{\\mathrm{Ker}\\;}\\newcommand{\\Coker}{\\mathrm{Coker}\\;}\\newcommand{\\Coim}{\\mathrm{Coim}\\;}\\newcommand{\\lcm}{\\mathrm{lcm}}\\newcommand{\\GL}{\\mathrm{GL}}\\newcommand{\\SL}{\\mathrm{SL}}\\newcommand{\\alt}{\\mathrm{alt}}\n",
        "\n",
        "\\renewcommand{\\Re}{\\mathrm{Re}\\;}\\renewcommand{\\Im}{\\mathrm{Im}\\,}\\newcommand{\\Gal}{\\mathrm{Gal}}\\newcommand{\\PGL}{\\mathrm{PGL}}\\newcommand{\\PSL}{\\mathrm{PSL}}\\newcommand{\\Log}{\\mathrm{Log}\\,}\\newcommand{\\Res}{\\mathrm{Res}\\,}\\newcommand{\\on}{\\mathrm{on}\\;}\\newcommand{\\hatC}{\\widehat{\\C}}\\newcommand{\\hatR}{\\hat{\\R}}\\newcommand{\\PV}{\\mathrm{P.V.}}\\newcommand{\\diam}{\\mathrm{diam}}\\newcommand{\\Area}{\\mathrm{Area}}\\newcommand{\\Lap}{\\Laplace}\\newcommand{\\f}{\\mathbf{f}}\\newcommand{\\cR}{\\mathcal{R}}\\newcommand{\\const}{\\mathrm{const.}}\\newcommand{\\Om}{\\Omega}\\newcommand{\\Cinf}{C^\\infty}\\newcommand{\\ep}{\\epsilon}\\newcommand{\\dist}{\\mathrm{dist}}\\newcommand{\\opart}{\\o{\\partial}}\\newcommand{\\Length}{\\mathrm{Length}}\n",
        "\n",
        "\\newcommand{\\cA}{\\mathcal{A}}\\newcommand{\\cO}{\\mathcal{O}}\\newcommand{\\cW}{\\mathcal{W}}\\renewcommand{\\O}{\\mathcal{O}}\\renewcommand{\\S}{\\mathcal{S}}\\newcommand{\\U}{\\mathcal{U}}\\newcommand{\\V}{\\mathrm{V}}\\newcommand{\\N}{\\mathbb{N}}\\newcommand{\\bN}{\\mathbb{N}}\\newcommand{\\C}{\\mathrm{C}}\\newcommand{\\bC}{\\mathbb{C}}\\newcommand{\\Z}{\\mathcal{Z}}\\newcommand{\\Q}{\\mathbb{Q}}\\newcommand{\\bQ}{\\mathbb{Q}}\\newcommand{\\TV}{\\mathrm{TV}}\\newcommand{\\ORD}{\\mathrm{ORD}}\\newcommand{\\Card}{\\mathrm{Card}\\,}\\newcommand{\\Top}{\\mathrm{Top}}\\newcommand{\\Disc}{\\mathrm{Disc}}\\newcommand{\\Codisc}{\\mathrm{Codisc}}\\newcommand{\\CoDisc}{\\mathrm{CoDisc}}\\newcommand{\\Ult}{\\mathrm{Ult}}\\newcommand{\\ord}{\\mathrm{ord}}\\newcommand{\\bS}{\\mathbb{S}}\\newcommand{\\PConn}{\\mathrm{PConn}}\\newcommand{\\mult}{\\mathrm{mult}}\\newcommand{\\inv}{\\mathrm{inv}}\n",
        "\n",
        "\\newcommand{\\Der}{\\mathrm{Der}}\\newcommand{\\osub}{\\overset{\\mathrm{open}}{\\subset}}\\newcommand{\\osup}{\\overset{\\mathrm{open}}{\\supset}}\\newcommand{\\al}{\\alpha}\\newcommand{\\K}{\\mathbb{K}}\\newcommand{\\Sp}{\\mathrm{Sp}}\\newcommand{\\g}{\\mathfrak{g}}\\newcommand{\\h}{\\mathfrak{h}}\\newcommand{\\Imm}{\\mathrm{Imm}}\\newcommand{\\Imb}{\\mathrm{Imb}}\\newcommand{\\Gr}{\\mathrm{Gr}}\n",
        "\n",
        "\\newcommand{\\Ad}{\\mathrm{Ad}}\\newcommand{\\finsupp}{\\mathrm{fin\\;supp}}\\newcommand{\\SO}{\\mathrm{SO}}\\newcommand{\\SU}{\\mathrm{SU}}\\newcommand{\\acts}{\\curvearrowright}\\newcommand{\\mono}{\\hookrightarrow}\\newcommand{\\epi}{\\twoheadrightarrow}\\newcommand{\\Stab}{\\mathrm{Stab}}\\newcommand{\\nor}{\\mathrm{nor}}\\newcommand{\\T}{\\mathbb{T}}\\newcommand{\\Aff}{\\mathrm{Aff}}\\newcommand{\\rsup}{\\triangleright}\\newcommand{\\subgrp}{\\overset{\\mathrm{subgrp}}{\\subset}}\\newcommand{\\Ext}{\\mathrm{Ext}}\\newcommand{\\sbs}{\\subset}\\newcommand{\\sps}{\\supset}\\newcommand{\\In}{\\mathrm{in}\\;}\\newcommand{\\Tor}{\\mathrm{Tor}}\\newcommand{\\p}{\\b{p}}\\newcommand{\\q}{\\mathfrak{q}}\\newcommand{\\m}{\\mathfrak{m}}\\newcommand{\\cS}{\\mathcal{S}}\\newcommand{\\Frac}{\\mathrm{Frac}\\,}\\newcommand{\\Spec}{\\mathrm{Spec}\\,}\\newcommand{\\bA}{\\mathbb{A}}\\newcommand{\\Sym}{\\mathrm{Sym}}\\newcommand{\\Ann}{\\mathrm{Ann}}\\newcommand{\\Her}{\\mathrm{Her}}\\newcommand{\\Bil}{\\mathrm{Bil}}\\newcommand{\\Ses}{\\mathrm{Ses}}\\newcommand{\\FVS}{\\mathrm{FVS}}\n",
        "\n",
        "\\newcommand{\\Ho}{\\mathrm{Ho}}\\newcommand{\\CW}{\\mathrm{CW}}\\newcommand{\\lc}{\\mathrm{lc}}\\newcommand{\\cg}{\\mathrm{cg}}\\newcommand{\\Fib}{\\mathrm{Fib}}\\newcommand{\\Cyl}{\\mathrm{Cyl}}\\newcommand{\\Ch}{\\mathrm{Ch}}\n",
        "\\newcommand{\\rP}{\\mathrm{P}}\\newcommand{\\rE}{\\mathrm{E}}\\newcommand{\\e}{\\b{e}}\\renewcommand{\\k}{\\b{k}}\\newcommand{\\Christ}[2]{\\begin{Bmatrix}#1\\\\#2\\end{Bmatrix}}\\renewcommand{\\Vec}[1]{\\overrightarrow{\\mathrm{#1}}}\\newcommand{\\hen}[1]{\\mathrm{#1}}\\renewcommand{\\b}[1]{\\boldsymbol{#1}}\n",
        "\n",
        "\\newcommand{\\Inc}{\\mathrm{Inc}}\\newcommand{\\aInc}{\\mathrm{aInc}}\\newcommand{\\HS}{\\mathrm{HS}}\\newcommand{\\loc}{\\mathrm{loc}}\\newcommand{\\Lh}{\\mathrm{L.h.}}\\newcommand{\\Epi}{\\mathrm{Epi}}\\newcommand{\\slim}{\\mathrm{slim}}\\newcommand{\\Ban}{\\mathrm{Ban}}\\newcommand{\\Hilb}{\\mathrm{Hilb}}\\newcommand{\\Ex}{\\mathrm{Ex}}\\newcommand{\\Co}{\\mathrm{Co}}\\newcommand{\\sa}{\\mathrm{sa}}\\newcommand{\\nnorm}[1]{{\\left\\vert\\kern-0.25ex\\left\\vert\\kern-0.25ex\\left\\vert #1 \\right\\vert\\kern-0.25ex\\right\\vert\\kern-0.25ex\\right\\vert}}\\newcommand{\\dvol}{\\mathrm{dvol}}\\newcommand{\\Sconv}{\\mathrm{Sconv}}\\newcommand{\\I}{\\mathcal{I}}\\newcommand{\\nonunital}{\\mathrm{nu}}\\newcommand{\\cpt}{\\mathrm{cpt}}\\newcommand{\\lcpt}{\\mathrm{lcpt}}\\newcommand{\\com}{\\mathrm{com}}\\newcommand{\\Haus}{\\mathrm{Haus}}\\newcommand{\\proper}{\\mathrm{proper}}\\newcommand{\\infinity}{\\mathrm{inf}}\\newcommand{\\TVS}{\\mathrm{TVS}}\\newcommand{\\ess}{\\mathrm{ess}}\\newcommand{\\ext}{\\mathrm{ext}}\\newcommand{\\Index}{\\mathrm{Index}\\;}\\newcommand{\\SSR}{\\mathrm{SSR}}\\newcommand{\\vs}{\\mathrm{vs.}}\\newcommand{\\fM}{\\mathfrak{M}}\\newcommand{\\EDM}{\\mathrm{EDM}}\\newcommand{\\Tw}{\\mathrm{Tw}}\\newcommand{\\fC}{\\mathfrak{C}}\\newcommand{\\bn}{\\boldsymbol{n}}\\newcommand{\\br}{\\boldsymbol{r}}\\newcommand{\\Lam}{\\Lambda}\\newcommand{\\lam}{\\lambda}\\newcommand{\\one}{\\mathbf{1}}\\newcommand{\\dae}{\\text{-a.e.}}\\newcommand{\\das}{\\text{-a.s.}}\\newcommand{\\td}{\\text{-}}\\newcommand{\\RM}{\\mathrm{RM}}\\newcommand{\\BV}{\\mathrm{BV}}\\newcommand{\\normal}{\\mathrm{normal}}\\newcommand{\\lub}{\\mathrm{lub}\\;}\\newcommand{\\Graph}{\\mathrm{Graph}}\\newcommand{\\Ascent}{\\mathrm{Ascent}}\\newcommand{\\Descent}{\\mathrm{Descent}}\\newcommand{\\BIL}{\\mathrm{BIL}}\\newcommand{\\fL}{\\mathfrak{L}}\\newcommand{\\De}{\\Delta}\n",
        "\n",
        "\\newcommand{\\calA}{\\mathcal{A}}\\newcommand{\\calB}{\\mathcal{B}}\\newcommand{\\D}{\\mathcal{D}}\\newcommand{\\Y}{\\mathcal{Y}}\\newcommand{\\calC}{\\mathcal{C}}\\renewcommand{\\ae}{\\mathrm{a.e.}\\;}\\newcommand{\\cZ}{\\mathcal{Z}}\\newcommand{\\fF}{\\mathfrak{F}}\\newcommand{\\fI}{\\mathfrak{I}}\\newcommand{\\rV}{\\mathrm{V}}\\newcommand{\\cE}{\\mathcal{E}}\\newcommand{\\sMap}{\\sigma\\textrm{-}\\mathrm{Map}}\\newcommand{\\cC}{\\mathcal{C}}\\newcommand{\\comp}{\\complement}\\newcommand{\\J}{\\mathcal{J}}\\newcommand{\\sumN}[1]{\\sum_{#1\\in\\N}}\\newcommand{\\cupN}[1]{\\cup_{#1\\in\\N}}\\newcommand{\\capN}[1]{\\cap_{#1\\in\\N}}\\newcommand{\\Sum}[1]{\\sum_{#1=1}^\\infty}\\newcommand{\\sumn}{\\sum_{n=1}^\\infty}\\newcommand{\\summ}{\\sum_{m=1}^\\infty}\\newcommand{\\sumk}{\\sum_{k=1}^\\infty}\\newcommand{\\sumi}{\\sum_{i=1}^\\infty}\\newcommand{\\sumj}{\\sum_{j=1}^\\infty}\\newcommand{\\cupn}{\\cup_{n=1}^\\infty}\\newcommand{\\capn}{\\cap_{n=1}^\\infty}\\newcommand{\\cupk}{\\cup_{k=1}^\\infty}\\newcommand{\\cupi}{\\cup_{i=1}^\\infty}\\newcommand{\\cupj}{\\cup_{j=1}^\\infty}\\newcommand{\\limn}{\\lim_{n\\to\\infty}}\\renewcommand{\\L}{\\mathcal{L}}\\newcommand{\\cL}{\\mathcal{L}}\\newcommand{\\Cl}{\\mathrm{Cl}}\\newcommand{\\cN}{\\mathcal{N}}\\newcommand{\\Ae}{\\textrm{-a.e.}\\;}\\renewcommand{\\csub}{\\overset{\\textrm{closed}}{\\subset}}\\renewcommand{\\csup}{\\overset{\\textrm{closed}}{\\supset}}\\newcommand{\\wB}{\\wt{B}}\\newcommand{\\cG}{\\mathcal{G}}\\newcommand{\\Lip}{\\mathrm{Lip}}\\newcommand{\\AC}{\\mathrm{AC}}\\newcommand{\\Mol}{\\mathrm{Mol}}\n",
        "\n",
        "\\newcommand{\\Pe}{\\mathrm{Pe}}\\newcommand{\\wR}{\\wh{\\mathbb{\\R}}}\\newcommand*{\\Laplace}{\\mathop{}\\!\\mathbin\\bigtriangleup}\\newcommand*{\\DAlambert}{\\mathop{}\\!\\mathbin\\Box}\\newcommand{\\bT}{\\mathbb{T}}\\newcommand{\\dx}{\\dslash x}\\newcommand{\\dt}{\\dslash t}\\newcommand{\\ds}{\\dslash s}\n",
        "\n",
        "\\newcommand{\\round}{\\mathrm{round}}\\newcommand{\\cond}{\\mathrm{cond}}\\newcommand{\\diag}{\\mathrm{diag}}\n",
        "\\newcommand{\\Adj}{\\mathrm{Adj}}\\newcommand{\\Pf}{\\mathrm{Pf}}\\newcommand{\\Sg}{\\mathrm{Sg}}\n",
        "\n",
        "\n",
        "\\newcommand{\\aseq}{\\overset{\\text{a.s.}}{=}}\\newcommand{\\deq}{\\overset{\\text{d}}{=}}\\newcommand{\\cV}{\\mathcal{V}}\\newcommand{\\FM}{\\mathrm{FM}}\\newcommand{\\KR}{\\mathrm{KR}}\\newcommand{\\rba}{\\mathrm{rba}}\\newcommand{\\rca}{\\mathrm{rca}}\\newcommand{\\Prob}{\\mathrm{Prob}}\\newcommand{\\X}{\\mathcal{X}}\\newcommand{\\Meas}{\\mathrm{Meas}}\\newcommand{\\as}{\\;\\text{a.s.}}\\newcommand{\\io}{\\;\\mathrm{i.o.}}\\newcommand{\\fe}{\\;\\text{f.e.}}\\newcommand{\\bF}{\\mathbb{F}}\\newcommand{\\W}{\\mathcal{W}}\\newcommand{\\Pois}{\\mathrm{Pois}}\\newcommand{\\iid}{\\text{i.i.d.}}\\newcommand{\\wconv}{\\rightsquigarrow}\\newcommand{\\Var}{\\mathrm{Var}}\\newcommand{\\xrightarrown}{\\xrightarrow{n\\to\\infty}}\\newcommand{\\au}{\\mathrm{au}}\\newcommand{\\cT}{\\mathcal{T}}\\newcommand{\\wto}{\\overset{\\text{w}}{\\to}}\\newcommand{\\dto}{\\overset{\\text{d}}{\\to}}\\newcommand{\\sto}{\\overset{\\text{s}}{\\to}}\\newcommand{\\pto}{\\overset{\\text{p}}{\\to}}\\newcommand{\\mto}{\\overset{\\text{m}}{\\to}}\\newcommand{\\vto}{\\overset{v}{\\to}}\\newcommand{\\Cont}{\\mathrm{Cont}}\\newcommand{\\stably}{\\mathrm{stably}}\\newcommand{\\Np}{\\mathbb{N}^+}\\newcommand{\\oM}{\\overline{\\mathcal{M}}}\\newcommand{\\fP}{\\mathfrak{P}}\\newcommand{\\sign}{\\mathrm{sign}}\n",
        "\\newcommand{\\Borel}{\\mathrm{Borel}}\\newcommand{\\Mid}{\\,|\\,}\\newcommand{\\middleMid}{\\;\\middle|\\;}\\newcommand{\\CP}{\\mathrm{CP}}\\newcommand{\\bD}{\\mathbb{D}}\\newcommand{\\bL}{\\mathbb{L}}\\newcommand{\\fW}{\\mathfrak{W}}\\newcommand{\\DL}{\\mathcal{D}\\mathcal{L}}\\renewcommand{\\r}[1]{\\mathrm{#1}}\\newcommand{\\rC}{\\mathrm{C}}\\newcommand{\\qqquad}{\\qquad\\quad}\n",
        "\n",
        "\\newcommand{\\bit}{\\mathrm{bit}}\n",
        "\n",
        "\\newcommand{\\err}{\\mathrm{err}}\n",
        "\n",
        "\\newcommand{\\varparallel}{\\mathbin{\\!/\\mkern-5mu/\\!}}\\newcommand{\\Ri}{\\mathrm{Ri}}\\newcommand{\\Cone}{\\mathrm{Cone}}\\newcommand{\\Int}{\\mathrm{Int}}\n",
        "\n",
        "\\newcommand{\\pre}{\\mathrm{pre}}\\newcommand{\\om}{\\omega}\n",
        "\n",
        "\n",
        "\\newcommand{\\del}{\\partial}\n",
        "\\newcommand{\\LHS}{\\mathrm{LHS}}\\newcommand{\\RHS}{\\mathrm{RHS}}\\newcommand{\\bnu}{\\boldsymbol{\\nu}}\\newcommand{\\interior}{\\mathrm{in}\\;}\\newcommand{\\SH}{\\mathrm{SH}}\\renewcommand{\\v}{\\boldsymbol{\\nu}}\\newcommand{\\n}{\\mathbf{n}}\\newcommand{\\ssub}{\\Subset}\\newcommand{\\curl}{\\mathrm{curl}}\n",
        "\n",
        "\\newcommand{\\Ei}{\\mathrm{Ei}}\\newcommand{\\sn}{\\mathrm{sn}}\\newcommand{\\wgamma}{\\widetilde{\\gamma}}\n",
        "\n",
        "\\newcommand{\\Ens}{\\mathrm{Ens}}\n",
        "\n",
        "\\newcommand{\\cl}{\\mathrm{cl}}\\newcommand{\\x}{\\boldsymbol{x}}\n",
        "\n",
        "\\newcommand{\\Do}{\\mathrm{Do}}\\newcommand{\\IV}{\\mathrm{IV}}\n",
        "\n",
        "\\newcommand{\\AIC}{\\mathrm{AIC}}\\newcommand{\\mrl}{\\mathrm{mrl}}\\newcommand{\\dotx}{\\dot{x}}\\newcommand{\\UMV}{\\mathrm{UMV}}\\newcommand{\\BLU}{\\mathrm{BLU}}\n",
        "\n",
        "\\newcommand{\\comb}[2]{\\begin{pmatrix}#1\\\\#2\\end{pmatrix}}\\newcommand{\\bP}{\\mathbb{P}}\\newcommand{\\compsub}{\\overset{\\textrm{cpt}}{\\subset}}\\newcommand{\\lip}{\\textrm{lip}}\\newcommand{\\BL}{\\mathrm{BL}}\\newcommand{\\G}{\\mathbb{G}}\\newcommand{\\NB}{\\mathrm{NB}}\\newcommand{\\oR}{\\ov{\\R}}\\newcommand{\\liminfn}{\\liminf_{n\\to\\infty}}\\newcommand{\\limsupn}{\\limsup_{n\\to\\infty}}\\newcommand{\\esssup}{\\mathrm{ess.sup}}\\newcommand{\\asto}{\\xrightarrow{\\as}}\\newcommand{\\Cov}{\\mathrm{Cov}}\\newcommand{\\cQ}{\\mathcal{Q}}\\newcommand{\\VC}{\\mathrm{VC}}\\newcommand{\\mb}{\\mathrm{mb}}\\newcommand{\\Avar}{\\mathrm{Avar}}\\newcommand{\\bB}{\\mathbb{B}}\\newcommand{\\bW}{\\mathbb{W}}\\newcommand{\\sd}{\\mathrm{sd}}\\newcommand{\\w}[1]{\\widehat{#1}}\\newcommand{\\bZ}{\\mathbb{Z}}\\newcommand{\\Bernoulli}{\\mathrm{Ber}}\\newcommand{\\Ber}{\\mathrm{Ber}}\\newcommand{\\Mult}{\\mathrm{Mult}}\\newcommand{\\BPois}{\\mathrm{BPois}}\\newcommand{\\fraks}{\\mathfrak{s}}\\newcommand{\\frakk}{\\mathfrak{k}}\\newcommand{\\IF}{\\mathrm{IF}}\\newcommand{\\bX}{\\boldsymbol{X}}\\newcommand{\\bx}{\\boldsymbol{x}}\\newcommand{\\indep}{\\perp\\!\\!\\!\\perp}\\newcommand{\\IG}{\\mathrm{IG}}\\newcommand{\\Levy}{\\mathrm{Levy}}\\newcommand{\\MP}{\\mathrm{MP}}\\newcommand{\\Hermite}{\\mathrm{Hermite}}\\newcommand{\\Skellam}{\\mathrm{Skellam}}\\newcommand{\\Dirichlet}{\\mathrm{Dirichlet}}\\renewcommand{\\Beta}{\\operatorname{Beta}}\\newcommand{\\bE}{\\mathbb{E}}\\newcommand{\\bG}{\\mathbb{G}}\\newcommand{\\MISE}{\\mathrm{MISE}}\\newcommand{\\logit}{\\mathtt{logit}}\\newcommand{\\expit}{\\mathtt{expit}}\\newcommand{\\cK}{\\mathcal{K}}\\newcommand{\\dl}{\\dot{l}}\\newcommand{\\dotp}{\\dot{p}}\\newcommand{\\wl}{\\wt{l}}\\newcommand{\\Gauss}{\\mathrm{Gauss}}\\newcommand{\\fA}{\\mathfrak{A}}\\newcommand{\\under}{\\mathrm{under}\\;}\\newcommand{\\whtheta}{\\wh{\\theta}}\\newcommand{\\Em}{\\mathrm{Em}}\\newcommand{\\ztheta}{{\\theta_0}}\n",
        "\\newcommand{\\rO}{\\mathrm{O}}\\newcommand{\\Bin}{\\mathrm{Bin}}\\newcommand{\\rW}{\\mathrm{W}}\\newcommand{\\rG}{\\mathrm{G}}\\newcommand{\\rB}{\\mathrm{B}}\\newcommand{\\rU}{\\mathrm{U}}\\newcommand{\\HG}{\\mathrm{HG}}\\newcommand{\\GAMMA}{\\mathrm{Gamma}}\\newcommand{\\Cauchy}{\\mathrm{Cauchy}}\\newcommand{\\rt}{\\mathrm{t}}\\newcommand{\\rF}{\\mathrm{F}}\n",
        "\\newcommand{\\FE}{\\mathrm{FE}}\\newcommand{\\bV}{\\boldsymbol{V}}\\newcommand{\\GLS}{\\mathrm{GLS}}\\newcommand{\\be}{\\boldsymbol{e}}\\newcommand{\\POOL}{\\mathrm{POOL}}\\newcommand{\\GMM}{\\mathrm{GMM}}\\newcommand{\\MM}{\\mathrm{MM}}\\newcommand{\\SSIV}{\\mathrm{SSIV}}\\newcommand{\\JIV}{\\mathrm{JIV}}\\newcommand{\\AR}{\\mathrm{AR}}\\newcommand{\\ILS}{\\mathrm{ILS}}\\newcommand{\\SLS}{\\mathrm{SLS}}\\newcommand{\\LIML}{\\mathrm{LIML}}\n",
        "\n",
        "\\newcommand{\\Rad}{\\mathrm{Rad}}\\newcommand{\\bY}{\\boldsymbol{Y}}\\newcommand{\\pone}{{(1)}}\\newcommand{\\ptwo}{{(2)}}\\newcommand{\\ps}[1]{{(#1)}}\\newcommand{\\fsub}{\\overset{\\text{finite}}{\\subset}}\n",
        "\n",
        "\n",
        "\\newcommand{\\varlim}{\\varprojlim}\\newcommand{\\Hom}{\\mathrm{Hom}}\\newcommand{\\Iso}{\\mathrm{Iso}}\\newcommand{\\Mor}{\\mathrm{Mor}}\\newcommand{\\Isom}{\\mathrm{Isom}}\\newcommand{\\Aut}{\\mathrm{Aut}}\\newcommand{\\End}{\\mathrm{End}}\\newcommand{\\op}{\\mathrm{op}}\\newcommand{\\ev}{\\mathrm{ev}}\\newcommand{\\Ob}{\\mathrm{Ob}}\\newcommand{\\Ar}{\\mathrm{Ar}}\\newcommand{\\Arr}{\\mathrm{Arr}}\\newcommand{\\Set}{\\mathrm{Set}}\\newcommand{\\Grp}{\\mathrm{Grp}}\\newcommand{\\Cat}{\\mathrm{Cat}}\\newcommand{\\Mon}{\\mathrm{Mon}}\\newcommand{\\Ring}{\\mathrm{Ring}}\\newcommand{\\CRing}{\\mathrm{CRing}}\\newcommand{\\Ab}{\\mathrm{Ab}}\\newcommand{\\Pos}{\\mathrm{Pos}}\\newcommand{\\Vect}{\\mathrm{Vect}}\\newcommand{\\FinVect}{\\mathrm{FinVect}}\\newcommand{\\FinSet}{\\mathrm{FinSet}}\\newcommand{\\FinMeas}{\\mathrm{FinMeas}}\\newcommand{\\OmegaAlg}{\\Omega\\text{-}\\mathrm{Alg}}\\newcommand{\\OmegaEAlg}{(\\Omega,E)\\text{-}\\mathrm{Alg}}\\newcommand{\\Fun}{\\mathrm{Fun}}\\newcommand{\\Func}{\\mathrm{Func}}\n",
        "\n",
        "\\newcommand{\\Stoch}{\\mathrm{Stoch}}\\newcommand{\\FinStoch}{\\mathrm{FinStoch}}\\newcommand{\\Copy}{\\mathrm{copy}}\\newcommand{\\Delete}{\\mathrm{delete}}\n",
        "\\newcommand{\\Bool}{\\mathrm{Bool}}\\newcommand{\\CABool}{\\mathrm{CABool}}\\newcommand{\\CompBoolAlg}{\\mathrm{CompBoolAlg}}\\newcommand{\\BoolAlg}{\\mathrm{BoolAlg}}\\newcommand{\\BoolRng}{\\mathrm{BoolRng}}\\newcommand{\\HeytAlg}{\\mathrm{HeytAlg}}\\newcommand{\\CompHeytAlg}{\\mathrm{CompHeytAlg}}\\newcommand{\\Lat}{\\mathrm{Lat}}\\newcommand{\\CompLat}{\\mathrm{CompLat}}\\newcommand{\\SemiLat}{\\mathrm{SemiLat}}\\newcommand{\\Stone}{\\mathrm{Stone}}\\newcommand{\\Mfd}{\\mathrm{Mfd}}\\newcommand{\\LieAlg}{\\mathrm{LieAlg}}\n",
        "\\newcommand{\\Op}{\\mathrm{Op}}\n",
        "\\newcommand{\\Sh}{\\mathrm{Sh}}\n",
        "\\newcommand{\\Diff}{\\mathrm{Diff}}\n",
        "\\newcommand{\\B}{\\mathcal{B}}\\newcommand{\\cB}{\\mathcal{B}}\\newcommand{\\Span}{\\mathrm{Span}}\\newcommand{\\Corr}{\\mathrm{Corr}}\\newcommand{\\Decat}{\\mathrm{Decat}}\\newcommand{\\Rep}{\\mathrm{Rep}}\\newcommand{\\Grpd}{\\mathrm{Grpd}}\\newcommand{\\sSet}{\\mathrm{sSet}}\\newcommand{\\Mod}{\\mathrm{Mod}}\\newcommand{\\SmoothMnf}{\\mathrm{SmoothMnf}}\\newcommand{\\coker}{\\mathrm{coker}}\\newcommand{\\Ord}{\\mathrm{Ord}}\\newcommand{\\eq}{\\mathrm{eq}}\\newcommand{\\coeq}{\\mathrm{coeq}}\\newcommand{\\act}{\\mathrm{act}}\n",
        "\n",
        "\\newcommand{\\apf}{\\mathrm{apf}}\\newcommand{\\opt}{\\mathrm{opt}}\\newcommand{\\IS}{\\mathrm{IS}}\\newcommand{\\IR}{\\mathrm{IR}}\\newcommand{\\iidsim}{\\overset{\\text{i.i.d.}}{\\sim}}\\newcommand{\\propt}{\\,\\propto\\,}\\newcommand{\\bM}{\\mathbb{M}}\\newcommand{\\cX}{\\mathcal{X}}\\newcommand{\\cY}{\\mathcal{Y}}\\newcommand{\\cP}{\\mathcal{P}}\\newcommand{\\ola}[1]{\\overleftarrow{#1}}\n",
        "\n",
        "\\renewcommand{\\iff}{\\;\\mathrm{iff}\\;}\n",
        "\\newcommand{\\False}{\\mathrm{False}}\\newcommand{\\True}{\\mathrm{True}}\n",
        "\\newcommand{\\otherwise}{\\mathrm{otherwise}}\n",
        "\\newcommand{\\suchthat}{\\;\\mathrm{s.t.}\\;}\n",
        "\n",
        "\\newcommand{\\cM}{\\mathcal{M}}\\newcommand{\\M}{\\mathbb{M}}\\newcommand{\\cF}{\\mathcal{F}}\\newcommand{\\cD}{\\mathcal{D}}\\newcommand{\\fX}{\\mathfrak{X}}\\newcommand{\\fY}{\\mathfrak{Y}}\\newcommand{\\fZ}{\\mathfrak{Z}}\\renewcommand{\\H}{\\mathcal{H}}\\newcommand{\\cH}{\\mathcal{H}}\\newcommand{\\fH}{\\mathfrak{H}}\\newcommand{\\bH}{\\mathbb{H}}\\newcommand{\\id}{\\mathrm{id}}\\newcommand{\\A}{\\mathcal{A}}\n",
        "\\newcommand{\\lmd}{\\lambda}\n",
        "\\newcommand{\\Lmd}{\\Lambda}\n",
        "\\newcommand{\\cI}{\\mathcal{I}}\n",
        "\n",
        "\\newcommand{\\Lrarrow}{\\;\\;\\Leftrightarrow\\;\\;}\n",
        "\\DeclareMathOperator{\\des}{des}\n",
        "\\DeclareMathOperator{\\nd}{nd}\n",
        "\\DeclareMathOperator{\\dsep}{d-sep}\n",
        "\\DeclareMathOperator{\\sep}{sep}\n",
        "\\newcommand{\\rLL}{\\mathrm{LL}}\\newcommand{\\HT}{\\mathrm{HT}}\\newcommand{\\PS}{\\mathrm{PS}}\\newcommand{\\rI}{\\mathrm{I}}\n",
        "$$\n",
        "\n",
        ":::\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "[![「新時代の MCMC を迎えるために」統数研オープンハウス（タップで PDF 閲覧）](../../../static/Posters/ISM-OH2024.jpg){width=50%}](../../../static/Posters/ISM-OH2024.pdf)\n",
        "\n",
        "::: {.callout-tip appearance=\"minimal\"}\n",
        "以下は，5月24日 10:30~12:30 （コアタイム：10:30~11:10）に行われた [2024年度統数研オープンハウス](../../../static/Materials.qmd#sec-ISM-openhouse2024) ポスターセッション（掲載 No. E1）に於て発表されたポスターに関する解説記事です．\n",
        ":::\n",
        "\n",
        "## 導入\n",
        "\n",
        "### MCMC 小史\n",
        "\n",
        "現状，HMC (Hamiltonian Monte Carlo) という約 40 年前に提案された MCMC 手法が，Stan などの確率的プログラミング言語のデフォルト MCMC 手法として採用されています．^[Hamiltonian Monte Carlo の名称は [@Neal2011-HMC] からで，元々は Hybrid Monte Carlo と呼ばれていました．分子動力学法 (Molecular Dynamics) と MCMC のハイブリッド，という意味でした．Stan で実装されている MCMC アルゴリズムについては [こちら](https://mc-stan.org/docs/reference-manual/mcmc.html) を参照．]\n",
        "\n",
        "この手法はもともと [@Duane+1987] が場の量子論に特化した Monte Carlo 法として提案したものであったところを，[@Neal1994] が一般の統計モデルに適用可能な形式に翻訳する形で提案されたものでした．\n",
        "\n",
        "ということで，HMC は，オリジナルの MCMC が物理学者 [@Metropolis+1953] に由るように，物理学において着想された MCMC 手法であったのです．\n",
        "\n",
        "**そのHMC が，提案から 40 年目を迎える前に，更なる効率的な手法によって代替されようとしています**．\n",
        "\n",
        "そのきっかけ [@Peters-deWith2012] も，やはり，物理学（正確には物質科学）からの着想でした．\n",
        "\n",
        "### MCMC とは何か？\n",
        "\n",
        "MCMC とは，確率変数をシミュレーションする際に用いられる汎用的アルゴリズムです．\n",
        "\n",
        "一様分布や正規分布などの名前がついた分布ではない場合，どのようにすればその分布に従う確率変数をシミュレーションできるのか？は，古くからの問題でした．\n",
        "\n",
        "実際，「MCMC では空間を探索するマルコフ連鎖を構成し，その足跡を辿るとちょうど確率変数のシミュレーションになっている」と種明かしを聞いても，「なぜそのような回りくどい方法を使うのか？」「もっと良い方法はないのか？」と思っても当然でしょう．\n",
        "\n",
        "ですが，MCMC を，発明された経緯を辿り，物理学の問題意識から見てみると，実は極めて自然な発想に思えてくるかもしれません．\n",
        "\n",
        "以降，MCMC の起源である物理系のシミュレーション（第 [-@sec-origin] 節）を例に取り，分子動力学法（第 [-@sec-MD] 節），Metropolis 法（第 [-@sec-MH] 節）を復習します．\n",
        "\n",
        "::: {layout-ncol=2}\n",
        "![分子動力学法の出力（第 [-@sec-MD] 節）^[特に収束が遅く，他の手法と比べてイテレーション数を 10　倍にしています．]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-md-output-1.png)\n",
        "\n",
        "![Metropolis 法の出力（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-output-1.png)\n",
        ":::\n",
        "\n",
        "これを基礎として，近年提案された非対称な MCMC 手法（第 [-@sec-LMH] 章），そして最新の連続時間 MCMC 手法（第 [-@sec-PDMP] 章）を紹介します．\n",
        "\n",
        "::: {layout-ncol=2}\n",
        "![非対称 MCMC 法（Lifted Metropolis 法）の出力（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-output-1.png)\n",
        "\n",
        "![連続時間 MCMC 法（Zig-Zag サンプラー）の出力（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-output-1.png)\n",
        ":::\n",
        "\n",
        "### 自己相関・軌跡の一覧 {#sec-figs}\n",
        "\n",
        "::: {layout-ncol=3}\n",
        "![Metropolis 法の自己相関関数（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-auto-output-1.png)\n",
        "\n",
        "![非対称 MCMC 法（Lifted Metropolis 法）の自己相関関数（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-auto-output-1.png)\n",
        "\n",
        "![連続時間 MCMC 法（Zig-Zag サンプラー）の自己相関関数（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-auto-output-1.png)\n",
        ":::\n",
        "\n",
        "::: {layout-ncol=3}\n",
        "![Metropolis 法の軌跡（第 [-@sec-MH] 節）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png)\n",
        "\n",
        "![非対称 MCMC 法（Lifted Metropolis 法）の軌跡（第 [-@sec-LMH] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png)\n",
        "\n",
        "![連続時間 MCMC 法（Zig-Zag サンプラー）の軌跡（第 [-@sec-PDMP] 章）](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-6-output-1.png)\n",
        ":::\n",
        "\n",
        "<!--\n",
        "\n",
        "### Comparison\n",
        "\n",
        "::: {layout-ncol=3}\n",
        "![Autocorrelation of the random walk Metropolis algorithm from section [-@sec-MH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-mh-auto-output-1.png)\n",
        "\n",
        "![Autocorrelation of the lifted Metropolis algorithm from chapter [-@sec-LMH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-lmh-auto-output-1.png)\n",
        "\n",
        "![Autocorrelation of the Zig-Zag sampler from chapter [-@sec-PDMP]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-pdmp-auto-output-1.png)\n",
        ":::\n",
        "\n",
        "::: {layout-ncol=3}\n",
        "![Trajectory of the random walk Metropolis algorithm from section [-@sec-MH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png)\n",
        "\n",
        "![Trajectory of the lifted Metropolis algorithm from chapter [-@sec-LMH]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png)\n",
        "\n",
        "![Trajectory of the Zig-Zag sampler from chapter [-@sec-PDMP]](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-6-output-1.png)\n",
        ":::\n",
        "\n",
        "-->\n",
        "\n",
        "## MCMC の起源 {#sec-origin}\n",
        "\n",
        "::: {.callout-caution title=\"よりみち：どうして MCMC が必要だったのか？\" collapse=\"true\"}\n",
        "\n",
        "[@Metropolis+1953] では，温度 $T$ 一定の条件下で $N$ 粒子系をシミュレートし，任意の物理量 $F$ に対してその相空間上の平均\n",
        "$$\n",
        "\\brac{F}=\\frac{\\int Fe^{-\\frac{E}{kT}}dp}{\\int e^{-\\frac{E}{kT}}dp}\n",
        "$$\n",
        "を効率的に計算する汎用アルゴリズムが提案された．これが現在では Metropolis 法と呼ばれている．^[統計学界隈では [@Hastings1970] を入れて，Metropolis-Hastings 法とも呼ばれる．]\n",
        "\n",
        "[@Metropolis+1953] では $N$ が数百になる場合を考えており（時代を感じるスケール感），当然愚直な数値積分は現代の計算機でも実行可能ではない．そこで Monte Carlo 法を考えることになるが，当時 Monte Carlo 法といえば，一様乱数を用いた計算法の全般を指し，具体的には $\\brac{F}$ を重点サンプリング推定量\n",
        "$$\n",
        "\\wh{F}=\\frac{\\sum_{n=1}^NF(\\om)e^{-\\frac{E(\\om)}{kT}}}{\\sum_{n=1}^Ne^{-\\frac{E(\\om)}{kT}}}\n",
        "$$\n",
        "で推定することを指した．^[ただし，配置 $\\om\\in\\Om$ は空間内にランダム（一様）に粒子 $N$ 個を配置することで生成することとする．]\n",
        "\n",
        "しかしこれでは，高エネルギーな状態・低エネルギーな状態を全く区別せず，状態 $\\om\\in\\Om$ を完全に一様に生成するため，その分だけ非効率である．\n",
        "\n",
        "これを低減することが出来れば Monte Carlo 法の更なる効率改善に繋がる．こうして，Gibbs 分布 $\\frac{1}{Z}e^{-\\frac{E}{kT}}$ から直接的サンプリングする方法が模索されたのである．\n",
        "\n",
        ":::\n",
        "\n",
        "[@Metropolis+1953] では，エネルギー $E$ を持つ系の Boltzmann-Gibbs 分布 $\\frac{1}{Z}e^{-\\frac{E}{kT}}$ から直接サンプリングする方法が探求されました．\n",
        "\n",
        "ここでは簡単のため，１粒子が次のようなポテンシャル\n",
        "$$\n",
        "U(x)=\\frac{x^2}{2}+\\frac{x^4}{4}\n",
        "$$\n",
        "に従って運動する場合を考えましょう：\n",
        "\n",
        "![ポテンシャル $U$ のプロット](Files/potential.svg){width=50% #fig-2}\n",
        "\n",
        "このポテンシャルに関する Boltzmann-Gibbs 分布 $\\pi\\propt e^{-\\beta U}$ は次のような形になります：^[１粒子系なので相互作用はなく，$E=U$．]\n",
        "\n",
        "![ポテンシャル $U$ が定める Botlzmann-Gibbs 分布のプロット](Files/Gibbs.svg){width=50% #fig-3}\n",
        "\n",
        "<!--\n",
        "```\n",
        "\\begin{tikzpicture}\n",
        "\\begin{axis}[\n",
        "    axis lines = middle,\n",
        "    axis line style={->},\n",
        "    xlabel = $x$,\n",
        "    ylabel = {$e^{-\\beta U(x)}$},\n",
        "    xlabel style={at={(ticklabel* cs:1)}, anchor=north west},\n",
        "    ylabel style={at={(ticklabel* cs:1)}, anchor=south west},\n",
        "    xmin=-1.2, xmax=1.2,\n",
        "    ymin=0, ymax=1,\n",
        "    xtick distance=1,\n",
        "    ytick=\\empty,\n",
        "    grid=both,\n",
        "    grid style={gray!30, dashed},\n",
        "    minor tick num=1,\n",
        "    width=10cm,\n",
        "    height=8cm,\n",
        "    legend pos=north east,\n",
        "    legend cell align=left,\n",
        "    legend style={fill=white, fill opacity=0.8, draw opacity=1, text opacity=1, font=\\small},\n",
        "]\n",
        "\\addplot[domain=-2:2, samples=100, smooth, thick, minty] {exp(-x^2 - x^4)};\n",
        "\\addlegendentry{$y = e^{-\\frac{U(x)}{kT}}$}\n",
        "\\end{axis}\n",
        "\\end{tikzpicture}\n",
        "```\n",
        "-->\n",
        "\n",
        "２つのプロットを見比べると，低エネルギー状態ほど出現確率が高く，エネルギーが上がるにつれて急激に出現確率が下がることがわかります．以降，$\\beta=1$ としましょう．^[$\\beta=1$ と約束することは，系の温度を $T=k_B^{-1}$ に固定することにあたります．]\n",
        "\n",
        "### 分子動力学法 {#sec-MD}\n",
        "\n",
        "統計力学によれば，$\\beta=1$ で定まる温度とポテンシャル $U$ を持つ Boltzmann-Gibbs 分布 $e^{-U}$ は，温度 $T=\\frac{1}{k_B\\beta}$ を持つ熱浴に接している力学系を，長時間シミュレーションして時間平均を取ることでサンプリングできるはずです．\n",
        "\n",
        "このように，力学に基づいて物理過程を数値シミュレーションをすることを通じてサンプリングを達成する方法を [**分子動力学法**](https://ja.wikipedia.org/wiki/%E5%88%86%E5%AD%90%E5%8B%95%E5%8A%9B%E5%AD%A6%E6%B3%95) といいます．\n",
        "\n",
        "これを実際にやってみます．図 [-@fig-2] で定めたポテンシャルを持つ粒子を考えます．^[図 [-@fig-2] で定めたポテンシャルを持つ力学系には，代表的なものは（非調和）振動子や，あるいは $U$ の形をした谷を行ったり来たりするボールを考えても構いません．]\n",
        "\n",
        "続いてこれを温度 $T=\\frac{1}{k_B\\beta}$ を持つ熱浴と相互作用させます．例えば，ポテンシャル [-@fig-2] の $x=0$ の位置に半透性の壁を置き，確率 $1/2$ でこの温度 $T$ の壁の粒子と弾性衝突するとします．（残りの確率 $1/2$ では衝突せずに通過する）．\n",
        "\n",
        "壁の粒子の速度は Maxwell の境界条件から与えられるものとすれば，次のようにして粒子の位置 $x$ がシミュレートできます：^[詳しい議論は [@Tartero-Krauth2023] をご参照ください．大変教育的な入門です．]\n"
      ],
      "id": "4e7a4a22"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "\n",
        "np.random.seed(2024)\n",
        "\n",
        "def U(x):\n",
        "    return x**2/2 + x**4/4\n",
        "\n",
        "def pi(x):\n",
        "    return np.exp(-U(x))\n",
        "\n",
        "def md(num_samples, initial_state, initial_velocity, timestep=0.1):\n",
        "    samples = [initial_state]\n",
        "    current_state = initial_state\n",
        "    current_velocity = initial_velocity\n",
        "    current_time = 0\n",
        "\n",
        "    for _ in range(num_samples - 1):\n",
        "        proposed_state = current_state + current_velocity * timestep\n",
        "        current_time += timestep\n",
        "        if current_state * proposed_state < 0 and np.random.rand() < 1/2:\n",
        "            current_velocity = (-1) * np.sign(current_velocity) * np.sqrt(-2 * np.log(np.random.rand() + 1e-7))\n",
        "        else:\n",
        "            current_velocity = current_velocity - ( current_state + current_state ** 3 ) * timestep\n",
        "            current_state = proposed_state\n",
        "        samples.append(current_state)\n",
        "\n",
        "    return np.array(samples)\n",
        "\n",
        "# サンプル数と初期条件を固定\n",
        "num_samples = 10000\n",
        "initial_state = 0.0\n",
        "initial_velocity = 1.0\n",
        "\n",
        "samples_MD = md(num_samples * 10, initial_state, initial_velocity, timestep=0.01)"
      ],
      "id": "e5c15ee2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "ISMblue = \"#2f579c\"\n",
        "SaddleBrown = \"#8b4513\"\n",
        "minty = \"#78C2AD\""
      ],
      "id": "263c84f4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: 分子動力学法からのサンプル\n",
        "#| label: fig-MD\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.hist(samples_MD, bins=50, density=True, alpha=0.7, color=minty)\n",
        "plt.show()"
      ],
      "id": "fig-MD",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "この方法は極めて収束が遅く，イテレーション数を $10^6$ 以上に取らないと目標分布 $e^{-U}$ の良い近似とならないことを思い知りました（上図も $10^6$ サンプルで生成しています）．なお，以降の MCMC 法ではいずれもイテレーション数は一桁少ない $10^5$ としています．\n"
      ],
      "id": "01ad614d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "samples_MD = md(num_samples * 100, initial_state, initial_velocity, timestep=0.01)\n",
        "plt.figure(figsize=(3.5, 3), #facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.hist(samples_MD, bins=50, density=True, alpha=0.7, color=minty)\n",
        "plt.title('Molecular Dynamics with $10^7$ sample', color=minty)\n",
        "# plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.show()"
      ],
      "id": "e592f67a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "たしかに，目標分布 $e^{-U}$ に収束しそうですね．\n",
        "\n",
        "### Metropolis 法 {#sec-MH}\n",
        "\n",
        "もちろん，分布 $e^{-U}$ をサンプリングするために，必ずしも背景にある物理過程まで戻ってシミュレーションをする必要はありません．\n",
        "\n",
        "そこで，シミュレーションは簡単なランダムウォークで行い，その結果を適切に修正することで目標分布に収束させる方法が [@Metropolis+1953] で考えられました．\n",
        "\n",
        "[@Metropolis+1953] の手法は，現在では random walk Metropolis-Hastings 法と呼ばれます．\n",
        "\n",
        "この背後の物理現象から離陸する一歩が，分子動力学法と MCMC 法とを分けるものでした．\n"
      ],
      "id": "5ec8f7c3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "def metropolis(num_samples, initial_state, verbose=False):\n",
        "    samples = [initial_state]\n",
        "    current_state = initial_state\n",
        "\n",
        "    accept = []\n",
        "\n",
        "    for _ in range(num_samples - 1):\n",
        "        proposed_state = current_state + np.random.uniform(-2,2)\n",
        "        acceptance_ratio = pi(proposed_state) / pi(current_state)\n",
        "        if np.random.rand() < acceptance_ratio:\n",
        "            current_state = proposed_state\n",
        "            accept.append(True)\n",
        "        samples.append(current_state)\n",
        "\n",
        "    if verbose:\n",
        "        rate = len(accept) / num_samples\n",
        "        print(f'acceptance rate : {rate}')\n",
        "\n",
        "    return np.array(samples)"
      ],
      "id": "19f46531",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: Metropolis 法からのサンプル\n",
        "#| label: fig-MH\n",
        "samples_MH = metropolis(num_samples, initial_state, verbose=False)\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.hist(samples_MH, bins=50, density=True, alpha=0.7, color=minty)\n",
        "plt.show()"
      ],
      "id": "fig-MH",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "サンプル数は分子動力学法の $1/10$ であるにも拘らず，目標分布 $e^{-U}$ の良い近似を得ています．\n",
        "\n",
        "一般に，MCMC からのサンプルの質の良さは，[自己相関関数](https://ja.wikipedia.org/wiki/%E8%87%AA%E5%B7%B1%E7%9B%B8%E9%96%A2) を見ることで評価できます．^[自己相関関数が大きいほど，その Markov 連鎖を用いて構成した Monte Carlo 推定量の漸近分散が大きくなります．加えて，自己相関関数の裾が重すぎると，例えエルゴード性を持っており大数の法則が成り立とうとも，中心極限定理が成り立たなくなります．換言すれば，$n^{-1/2}$ よりも遅い収束レートになってしまいます．]\n",
        "\n",
        "Metropolis 法の自己相関関数を計算してみると，横軸の Lag が大きくなればなるほど Autocorrelation の値は小さくなっています．\n"
      ],
      "id": "eecf02ea"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: Metropolis 法の自己相関関数\n",
        "#| label: fig-MH-auto\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.acorr(samples_MH - np.mean(samples_MH), maxlags=10, color=minty)\n",
        "plt.xlim(-0.5, 10.5)\n",
        "#plt.ylim(-0.5,0.85)\n",
        "# グラフの装飾\n",
        "plt.title('Metropolis', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('Lag', color=ISMblue)\n",
        "plt.ylabel('Autocorrelation', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('MH_auto.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-MH-auto",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: Metropolis 法の軌跡\n",
        "#| label: fig-1\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.plot(samples_MH[0:50], range(50), color=minty)\n",
        "plt.ylim(-0.5, 49.5)\n",
        "#plt.xlim(-1.2,1.2)\n",
        "# グラフの装飾\n",
        "plt.title('Metropolis', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('X-axis', color=ISMblue)\n",
        "plt.ylabel('Step', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('MH_traj.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "上図は Metropolis 法で構成される Markov 連鎖の軌跡を表しています．行ったり来たりしているのがわかります．棄却率は５割弱です．^[一般には，ランダムウォーク MH 法において，採択率を $0.2\\le\\al\\le0.4$ 前後に抑えるのが良いとされています [@Roberts+1997]．これは状態空間の次元が無限に漸近する設定下での，漸近論的な結果ですが，低次元の場合でも極めて良い指標になることが [@Gelman+1996] で実証されています．また今回も，１次元であるにも拘らず，たしかに棄却率が半分を越さないほうが，自己相関が小さくなる傾向が確認されました．しかし今回は対象分布の裾が極めて軽いので，あまり大きなムーブは要らず，ステップサイズの最大値を $2$，採択率は $0.5$ 近くにしました．他の手法，LMH と Zig-Zag もステップサイズの最大値が $2$ になるように統一しました．]\n",
        "\n",
        "### 統計学への応用\n",
        "\n",
        "こうして MCMC が発明されれば，すぐにイノベーションとして理解されたかというとそうではありませんでした．\n",
        "\n",
        "この Metropolis の手法が極めて賢いシミュレーション手法であることは一目瞭然でも，一般の確率分布からのサンプリングに使える汎用アルゴリズムになっているという抽象的な観点が得られるまでには時間を要しました．これを成し遂げたのが [@Hastings1970] でした．^[\"While [@Metropolis+1953] proposed the use of MCMC sampling to compute particular integrals in statistical mechanics, **it was the Hastings paper that elevated the concept to a general one, and introduced it to the broader statistics community**.\" [@Martin+2024 p.7] 3.5節．]\n",
        "\n",
        "さらに，Hastings のこの結果も見過ごされたと言って良いでしょう．真にMCMC を統計学界隈に広め，現代におけるベイズ統計学の興隆の契機となったのは階層モデリングにおける Gibbs サンプリングの有用性を強調した [@Gelfand-Smith1990] だと言われます．^[[@Martin+2024 p.8] 4節，[@Robert-Casella2011 p.102] など．]\n",
        "\n",
        "当時，代替手法としては複雑な数値アルゴリズムしかなかったベイズ統計学において，MCMC は汎用的で実装も容易であることが周知され，ベイズ統計学が普及するきっかけとなりました．\n",
        "\n",
        "## 非対称化への試み {#sec-LMH}\n",
        "\n",
        "### 対称性という制約\n",
        "\n",
        "ここでもう一度 Metropolis 法の軌跡 @fig-1 を見てみましょう．\n",
        "\n",
        "![@fig-1 Metropolis 法の軌跡](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-1-output-1.png){width=230pt}\n",
        "\n",
        "最初の 50 サンプルしか表示していませんから，運が悪いとうまく見つからないかもしれませんが，「一度歩んだルートを，その後すぐに逆に戻ってしまう」という事象が発生しやすいことが観察できますでしょうか？\n",
        "\n",
        "これを **対称性** (reversibility) または **可逆性** と言います．\n",
        "\n",
        "Metropolis 法は構成上，この対称性を持つことが必要ですが，対称であるが故に一箇所に長時間とどまってしまうことが多くなります．\n",
        "\n",
        "その結果，対象分布が複雑で多峰性を持つ場合は，もっといろんなモード（峰）からもサンプリングをしてほしいのに，長時間１つの峰から離れられずにいることがあります．\n",
        "\n",
        "コーヒーに砂糖を溶かすことを考えてみましょう．砂糖の粒が拡散するのに任せておくと，最終的には均一に溶けるでしょうが，莫大な時間がかかります．スプーンで混ぜるなどして，砂糖が元の場所にとどまらずに移動し続けるようにすれば，はるかに速く平衡状態に到達できるでしょう．\n",
        "\n",
        "これが **非対称化** のアイデアです．数ある Metropolis 法の改良の方向の中でも，この対称性を破るという試みは特に注目されてきました．\n",
        "\n",
        "### リフティング\n",
        "\n",
        "Metropolis 法を非対称化するアプローチに，**リフティング** [@Chen+1999] と呼ばれる方法があります．\n",
        "\n",
        "これは，元々の状態空間を２つの「モード」$+1$ と $-1$ に分裂させ，$+1$ のモードではひたすら右側に，$-1$ のモードではひたすら左側に移動するようする方法です．\n",
        "\n",
        "２つのモード $+1,-1$ の間を遷移する確率を調整することで，最終的な不変分布は変わらないようにすることができます．\n",
        "\n",
        "こうすることで，対称性を破り，一度「この方向に行く！」と決めたら行き続けるようにしながら，収束先は変わらないように変更することが出来るのです．\n",
        "\n",
        "実際に Metropolis 法に適用した Lifted Metropolis-Hastings 法 [@Turitsyn+2011] を実装してみましょう：\n"
      ],
      "id": "eeaac689"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "def lifted_metropolis(num_samples, initial_state, verbose=False):\n",
        "    samples = [initial_state]\n",
        "    current_state = initial_state\n",
        "    lifting_variable = 1\n",
        "    accept = []\n",
        "\n",
        "    for _ in range(num_samples - 1):\n",
        "        delta = np.random.uniform(0,2)\n",
        "        proposed_state = current_state + lifting_variable * delta\n",
        "        acceptance_ratio = pi(proposed_state) / pi(current_state)\n",
        "\n",
        "        if np.random.rand() < acceptance_ratio:\n",
        "            current_state = proposed_state\n",
        "            accept.append(True)\n",
        "        else:\n",
        "            lifting_variable = (-1) * lifting_variable\n",
        "\n",
        "        samples.append(current_state)\n",
        "    \n",
        "    if verbose:\n",
        "        rate = len(accept) / num_samples\n",
        "        print(f'acceptance rate : {rate}')\n",
        "\n",
        "    return np.array(samples)"
      ],
      "id": "8b92c39a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "新しく追加されたリフティング変数 $\\sigma\\in\\{\\pm1\\}$ に依存して，$\\sigma=+1$ の場合には右方向に，$\\sigma=-1$ の場合は左方向にしか提案を出さない MH 法と見れます．\n"
      ],
      "id": "f5580477"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: 非対称 Metropolis 法からのサンプル\n",
        "#| label: fig-LMH\n",
        "samples_LMH = lifted_metropolis(num_samples, initial_state)\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.hist(samples_LMH, bins=50, density=True, alpha=0.7, color=minty)\n",
        "plt.show()"
      ],
      "id": "fig-LMH",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: 非対称 Metropolis 法の自己相関関数\n",
        "#| label: fig-LMH-auto\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.acorr(samples_LMH - np.mean(samples_LMH), maxlags=10, color=minty)\n",
        "plt.xlim(-0.5, 10.5)\n",
        "#plt.ylim(-0.5,0.85)\n",
        "# グラフの装飾\n",
        "plt.title('Lifted Metropolis-Hastings', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('Lag', color=ISMblue)\n",
        "plt.ylabel('Autocorrelation', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('LMH_auto.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-LMH-auto",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "自己相関関数を見ると，Metropolis 法よりも急速に減衰していることがわかります．むしろ，過減衰のように自己相関関数が負になっていることもあります．\n",
        "\n",
        "これは，一度「この方向に行く！」と決めたら行き続けるように設計したために，正の値が出たしばらくあとは負の値が，負の値が出たしばらくあとは正の値が出やすいようになってしまっているためです．\n",
        "\n",
        "したがってこれは１次元の分布を考えていることに起因するため，殊更問題とすべきではないでしょう．\n"
      ],
      "id": "09db9699"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: 非対称 Metropolis 法の軌跡\n",
        "#| label: fig-4\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.plot(samples_LMH[0:50], range(50), color=minty)\n",
        "plt.ylim(-0.5, 49.5)\n",
        "#plt.xlim(-1.2,1.2)\n",
        "# グラフの装飾\n",
        "plt.title('Lifted Metropolis-Hastings', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('X-axis', color=ISMblue)\n",
        "plt.ylabel('Step', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('LMH_traj.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### リフティングの有用性\n",
        "\n",
        "今回のような単純なポテンシャル $U$ （[@fig-2]） だけでなく，統計力学における磁性体のモデルである Curie-Weiss モデルのハミルトニアン\n",
        "\n",
        "$$\n",
        "H_n(x)=-\\frac{d\\beta}{2n}\\sum_{i,j=1}^nx_ix_j-h\\sum_{i=1}^nx_i,\n",
        "$$\n",
        "$$\n",
        "h\\in\\R,x\\in\\{\\pm1\\}^n,\\quad n,d=1,2,\\cdots\n",
        "$$\n",
        "\n",
        "が定める Boltzmann-Gibbs 分布 $e^{-H}$ に対する Lifted Metropolis-Hastings も，単純な Metropolis-Hastings 法よりも効率的であることが知られています．^[ただし，$e^{-H}$ が多峰性を示す低温領域では，LMH の方が効率的であるというはっきりとした理論保証はまだありません．]\n",
        "\n",
        "具体的には，モデルのパラメータ数 $n$ に対して，緩和時間を $\\sqrt{n}$ のオーダーだけ改善することが，[@Turitsyn+2011] では数値実験で，[@Bierkens-Roberts2017] では理論的に検証されているのです．\n",
        "\n",
        "<!--\n",
        "\n",
        "### HMC\n",
        "\n",
        "Hamiltonian Monte Carlo 法も一種のリフティングと見ることができ，\n",
        "\n",
        "-->\n",
        "\n",
        "## 新たな MCMC {#sec-PDMP}\n",
        "\n",
        "<!--\n",
        "\n",
        "こうして MCMC は物理学者から物質科学者，そして統計学者から機械学習家まで，多くの人が幅広く用いる手法になりました．\n",
        "\n",
        "その結果，多くの同一の手法が違う名前で呼ばれていることも多く，現状の最先端ではどのようなことが起こっているのか見極めるのが困難です．\n",
        "\n",
        "ここでは，上述のすべての分野に渡って共通して起こりつつある大きな地殻変動を紹介します．キーワードは **連続時間 MCMC** です．^[[@Fearnhead+2018-PDMC] から取った用語です．コンピュータシミュレーションである以上，結局は離散化するのですが，粒子の動きは（従来の Metropolis-Hastings 法のような）Markov 連鎖であるというより，連続時間確率過程のような動きをする手法群であることには間違いありません．]\n",
        "\n",
        "-->\n",
        "\n",
        "### 背後の物理現象からの更なる離陸\n",
        "\n",
        "第 [-@sec-origin] 章で，分子動力学法（第 [-@sec-MD] 節）から，提案分布を背後の物理現象とは全く関係ないランダムウォークとすることで，Metropolis 法（第 [-@sec-MH] 節）は一気に効率的なサンプリング法となったことを見ました．\n",
        "\n",
        "しかし，Metropolis 法はまだ思考が物理に引っ張られているのかも知れません．平衡統計力学において，ミクロの状態は等価で，ミクロなダイナミクスは可逆と考えられます．その前提が，知らず知らずのうちにまだ埋め込まれたままだと言えるでしょう．\n",
        "\n",
        "そこで，スプーンでかき混ぜるように，遷移を非対称にすることで，より効率的なサンプリング法となることを前章 [-@sec-LMH] で見ました．\n",
        "\n",
        "ここでは，さらに暗黙の思い込みから解き放たれようとします．それは，**シミュレーションするにあたって，必ずしも離散時間ステップに囚われる必要はない** ということです．\n",
        "\n",
        "もう一度，Lifted Metropolis-Hastings 法の軌跡を見てみましょう：\n",
        "\n",
        "![@fig-4 非対称 Metropolis 法の軌跡](../../../docs/posts/2024/Computation/MCMC_files/figure-html/fig-4-output-1.png){width=230pt}\n",
        "\n",
        "この軌跡から得られる情報のほとんどは，「どこで折り返したか？」です．\n",
        "\n",
        "ですから，この軌跡をシミュレーションするにあたって，一歩一歩採択-棄却のステップを繰り返す必要はなく，「どこで折り返すか？」を先に計算できてしまえば，あとは好きなステップサイズで切り出してサンプルとすれば良いのです．\n",
        "\n",
        "実は，「折り返す地点だけを効率的に計算する」ことが可能であり，それが **連続時間 MCMC** のアイデアです．\n",
        "\n",
        "### 連続時間 MCMC\n",
        "\n",
        "Lifted Metropolis-Hastings の適切な連続時間極限 $\\Delta t\\to0$ を考えることで，「折り返す」という事象（が起こった回数）は Poisson 過程に従うことが導けます．\n",
        "\n",
        "すると，「折り返す」事象が起こるまでの待ち時間 (interarrival time) は指数分布に従うことがわかります．これに基づいて，「折り返す」事象が起こる時刻を計算し，そこまでの軌跡を直線で補間すれば，Lifted Metropolis-Hastings 法（の連続時間極限）の軌跡が模倣できることになります．\n",
        "\n",
        "最終的に得られる過程は，ランダムな時刻に「折り返す」事象が起こり，その間は確定的な動き（等速直線運動）をするというもので，このような過程を **区分確定的 Markov 過程** (PDMP: Piecewise Deterministic Markov Process) と呼びます．\n",
        "\n",
        "このような PDMP は，Lifted Metropolis-Hastings 以外にも種々の MCMC 法の極限から見つかっており，その中でも特に有名なのが次の **Zig-Zag sampler** です：\n"
      ],
      "id": "1393b141"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "import math\n",
        "\n",
        "def zigzag(num_samples, initial_state, step=1):\n",
        "    samples = [initial_state]\n",
        "    trajectory = [initial_state]\n",
        "    current_state = initial_state\n",
        "    lifting_variable = 1\n",
        "    t = 0\n",
        "\n",
        "    while t < num_samples * step:\n",
        "        state_event = lifting_variable * np.sqrt(-1 + np.sqrt( 1 - 4 * np.log(np.random.rand()) ))\n",
        "        t_event = t + np.abs(state_event - current_state)\n",
        "        for _ in np.arange(np.ceil(t/step)*step, np.ceil(t_event/step)*step, step):\n",
        "              samples.append(current_state + lifting_variable * (_ - t))\n",
        "        current_state = state_event\n",
        "        trajectory.append(current_state)\n",
        "        lifting_variable = (-1) * lifting_variable\n",
        "        t = t_event\n",
        "\n",
        "    return np.array(samples), np.array(trajectory)"
      ],
      "id": "fc135eed",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "<!--\n",
        "自己相関関数こんなに spiky になるっけ？\n",
        "いや，多分この設定だと zig-zag は普通に悪いんだろうな．\n",
        "棄却率が高くて７割くらいある LMH に負けるのが「正しい」のかも知れない．\n",
        "\n",
        "そして１次元なのに等間隔でサンプリングしているから，自己相関関数は sine curve に（むしろ）なるべきなのか！\n",
        "-->\n"
      ],
      "id": "6cedde41"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| fig-cap: Zig-Zag サンプラーからのサンプル\n",
        "#| label: fig-PDMP\n",
        "samples_zigzag, trajectory_zigzag = zigzag(num_samples, initial_state, step=2)\n",
        "plt.figure(figsize=(3.5, 3))\n",
        "plt.hist(samples_zigzag, bins=50, density=True, alpha=0.7, color=minty)\n",
        "plt.show()"
      ],
      "id": "fig-PDMP",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: Zig-Zag サンプラーの自己相関関数\n",
        "#| label: fig-PDMP-auto\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.acorr(samples_zigzag - np.mean(samples_zigzag), maxlags=10, color=minty)\n",
        "plt.xlim(-0.5, 10.5)\n",
        "#plt.ylim(-0.5,0.85)\n",
        "# グラフの装飾\n",
        "plt.title('Zig-Zag sampler', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('Lag', color=ISMblue)\n",
        "plt.ylabel('Autocorrelation', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('zigzag_auto.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-PDMP-auto",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "自己相関関数は，Lifted Metropolis-Hastings 法と同様に急激に下がって負の値に突き抜けたあとは，少し振動が残っているのがわかります．\n",
        "\n",
        "全３サンプラーの比較は第 [-@sec-figs] 節をご覧ください．\n",
        "\n",
        "次の軌跡を見て分かる通り，モードである $x=0$ を中心に激しく往復するので，直後のサンプルとは負の相関が出やすいようです．\n"
      ],
      "id": "f6d9f786"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-cap: Zig-Zag サンプラーの軌跡\n",
        "#| label: fig-6\n",
        "plt.figure(figsize=(3.5, 3), facecolor=\"#F0F1EB\"\n",
        ")\n",
        "plt.plot(trajectory_zigzag[0:50], range(50), color=minty)\n",
        "plt.ylim(-0.5, 49.5)\n",
        "#plt.xlim(-1.2,1.2)\n",
        "# グラフの装飾\n",
        "plt.title('Zig-Zag sampler', color=minty)\n",
        "plt.tick_params(axis='x', colors=ISMblue)\n",
        "plt.tick_params(axis='y', colors=ISMblue)\n",
        "plt.xlabel('X-axis', color=ISMblue)\n",
        "plt.ylabel('Step', color=ISMblue)\n",
        "plt.gca().set_facecolor('#F0F1EB')\n",
        "plt.savefig('zigzag_traj.svg', format='svg')\n",
        "plt.show()"
      ],
      "id": "fig-6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "連続時間極限 $\\Delta t\\to0$ をとっているということは，「極めて小さいステップサイズでの random walk Metropolis 法（第 [-@sec-MH] 節）」に相当します．従って，一度折り返したら，原点 $x=0$ を超えるまでは絶対に棄却されません．\n",
        "\n",
        "そのため，このように往復するような軌跡が得られます．\n",
        "\n",
        "### 連続時間 MCMC の美点 {#sec-PDMP-advantages}\n",
        "\n",
        "前節では，必ずしも PDMP 法である Zig-Zag sampler が，Lifted Metropolis-Hastings 法より，自己相関関数の観点で良いとは言い切れないことを見ました．\n",
        "\n",
        "しかし，今回の設定は１次元という特殊な条件下であることを考慮に入れる必要があります．\n",
        "\n",
        "１次元なので Zig-Zag サンプラーは行き来することしか出来ていませんが，^[今回は対象分布の減衰が極めて激しかったために差が現れにくかったのだと考えられます．Zig-Zag サンプラーは１次元でも，（広い設定の下で）（そして特に目標分布の裾が重いときに）ランダムウォーク・メトロポリス法や Metripolis-adjusted Langevin algorithm よりも速い収束レートを持ちます [@Vasdekis-Roberts2022]，] ２次元以上，特に高次元の場合は，Zig-Zag サンプラーは極めて効率的に状態空間を探索できることが期待されます．\n",
        "\n",
        "例えば，標準正規分布に対する２次元での軌跡は次の通りです：\n",
        "\n",
        "![Zig-Zag Sampler in $\\R^2$](./Files/ZigZag_2d.png){#fig-5}\n",
        "\n",
        "そして何より，軌道が効率的な空間の探索に有利であるだけでなく，正確なサブサンプリングを取り入れることが可能です．すなわち，ほとんどの他手法と違って，**バイアスを導入することなく**，データの一部のみを用いてアルゴリズムを走らせることができます．\n",
        "\n",
        "したがって，従来の MCMC 法が採択-棄却のステップにおいて尤度を評価する必要があり，データサイズ $n$ に対して $O(n)$ の計算量を要するのに対して，$O(n)$ に比例する焼き入れのステップを除けば，$O(1)$ の複雑でほとんど i.i.d. なサンプルを得ることができます [@Bierkens+2019]．\n",
        "\n",
        "<!-- \n",
        "\n",
        "### 筆者の目標：新時代のサンプラーの開発\n",
        "\n",
        "情報通信機器の発達によりデータが複雑で大規模化する現代では，モデルも同様に大規模で複雑化していく必要があります．OpenAI の ChatGPT や Sora，Anthropic の Claude-3 などの **基盤モデル** はその象徴と言えるでしょう．\n",
        "\n",
        "筆者は，その中で **新時代の MCMC** の開発を目標としています．\n",
        "\n",
        "高次元空間上の複雑な分布からも効率的にサンプリングできる MCMC 手法が開発された際には，多くの人が自分のノートパソコンで気軽にできるベイズ統計分析の幅が大きく広がることでしょう．\n",
        "\n",
        "それこそ，ニューラルネットワークの表現力をフルに活用するだけでなく，ベイズ手法の強みも併せて，小規模データでも鮮やかな分析が簡単に出来るようになるかもしれません．\n",
        "\n",
        "そのような世界線こそ，AI 技術の民主化と呼ぶにふさわしい，来るべき未来だと筆者は信じています．\n",
        "\n",
        "また，基盤モデルの Bayes 的な理解を進めることも，実は壮大ながらも，筆者の最終的な目標の一つであります．\n",
        "\n",
        "-->\n",
        "\n",
        "## 終わりに {.appendix}\n",
        "\n",
        "こうみると，MCMC は物理学の問題意識から生まれた手法でありながら，背後の物理現象を模倣することから離れていくことで，計算手法としての効率を高めていく一途を辿っていることがわかります．\n",
        "\n",
        "そう見ると，新時代の大規模データと大規模モデルが課す MCMC の次なる脱皮は，連続時間 MCMC で間違いないような気がしてくるのですが……．まだ筆者にははっきりとは見えてきません．\n",
        "\n",
        "また本稿では１つの流れしか取り上げておらず，例えば HMC とその非対称化がどのような位置づけにあるかもまだ考慮中です．\n",
        "\n",
        "統計力学，統計学，機械学習が交差するなんとも面白いテーマです．\n",
        "\n",
        "### 執筆のきっかけ {.appendix}\n",
        "\n",
        "本ポスター，そして本解説記事の執筆のきっかけは，[MLSS でのポスター発表](../Particles/PF.qmd) で連続時間 MCMC のことが機械学習の界隈では全く知られていないことを知ったことと，情報統計力学の研究集会に出席し，連続時間 MCMC が物理学の方からも研究されていることを知ったことでした．\n",
        "\n",
        "統計界隈では（本稿で解説しました通り） PDMP や連続時間 MCMC と呼ばれる手法は，物理学界隈では event-based simulation，rejection-free と呼ばれる手法群の１つとして活発に研究されていました．\n",
        "\n",
        "全く同じ問題を解こうとしているのに，用語法が全く異なることに驚かされました．\n",
        "\n",
        "２つの分野の相互理解と知見の交換が進むことを目指し，これからも研究していきたいと考えます．\n",
        "\n",
        "### アルゴリズムのステップサイズについて {.appendix}\n",
        "\n",
        "コードからわかります通り，提案分布のスケールは次のようになっています：\n",
        "\n",
        "| 手法 | 提案分布 | 平均移動距離^[提案分布の．実際の軌跡の１ステップでの移動距離とは違う．] |\n",
        "|:----:|:----:|:----:|\n",
        "| MH | $\\rU([-2,2])$ | $1$ |\n",
        "| LMH | $\\rU([0,2])$ | $1$ |\n",
        "| Zig-Zag | なし | $2$ |\n",
        "\n",
        ": ３手法のスケーリング {.striped .hover .responsive-sm tbl-colwidths=\"[20,20,20]\"}\n",
        "\n",
        "ですので，平均した隣接（提案）サンプル間距離について，Zig-Zag サンプラーはズルをしているともいえます．\n",
        "\n",
        "しかし，必ずしもアンフェアな比較をしていたわけではありません．\n",
        "\n",
        "もし，３手法で計算量を揃えるならば，Zig-Zag サンプラーにとっての１回のループは方向転換をするまでであり，２つの方向転換の間の平均距離はだいたい $1.93$ になります．\n"
      ],
      "id": "d5e28c55"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "diffs = np.diff(trajectory_zigzag)\n",
        "abs_diffs = np.abs(diffs)\n",
        "mean_abs_diff = np.mean(abs_diffs)\n",
        "print(mean_abs_diff)"
      ],
      "id": "ee68ce96",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "MH, LMH については，ほとんど最適なスケーリングになるように調節してありますが，Zig-Zag サンプラーにおいては最適なスケーリングという概念は存在しません．あらかじめ @fig-6 の軌跡があり，どれくらい距離を空けてサンプルとするか，という問題しかありません．\n",
        "\n",
        "ここでは，アルゴリズムのループ１回が１回のサンプリングになるように，３つの手法を揃えて比較の根拠としました．\n",
        "\n",
        "なお，このように，Zig-Zag サンプラーなどの連続時間 MCMC と，従来の離散時間 MCMC の直接の性能比較は，微妙な問題が多く，筆者もまだ十分に説明できる準備はありません．\n",
        "\n",
        "しかし，次年度以降のオープンハウスで，より詳細な解説を行う予定です．\n"
      ],
      "id": "a3ff683d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "samples_zigzag1, trajectory_zigzag1 = zigzag(num_samples, initial_state, step=1)\n",
        "samples_zigzag2, trajectory_zigzag2 = zigzag(num_samples, initial_state, step=1.5)\n",
        "fig, axs = plt.subplots(1, 2, figsize=(6, 3))\n",
        "axs[0].acorr(samples_zigzag1 - np.mean(samples_zigzag1), maxlags=10, color=minty)\n",
        "axs[0].set_xlim(-0.5, 10.5)\n",
        "axs[0].set_title('Step = 1', color=minty)\n",
        "axs[0].tick_params(axis='x', colors=ISMblue)\n",
        "axs[0].tick_params(axis='y', colors=ISMblue)\n",
        "axs[0].set_xlabel('Lag', color=ISMblue)\n",
        "axs[0].set_ylabel('Autocorrelation', color=ISMblue)\n",
        "\n",
        "# 2つ目のプロット：任意のプロット（例として軌跡をプロット）\n",
        "axs[1].acorr(samples_zigzag2 - np.mean(samples_zigzag2), maxlags=10, color=minty)\n",
        "axs[1].set_xlim(-0.5, 10.5)\n",
        "axs[1].set_title('Step = 1.5', color=minty)\n",
        "axs[1].tick_params(axis='x', colors=ISMblue)\n",
        "axs[1].tick_params(axis='y', colors=ISMblue)\n",
        "axs[1].set_xlabel('Lag', color=ISMblue)\n",
        "\n",
        "# グラフを表示\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "2ac67c54",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Zig-Zag サンプラーのサンプリングステップを $1$ や $1.5$ にすると，たしかに自己相関は悪化します．\n",
        "\n",
        "## 参考文献 {.appendix}\n",
        "\n",
        "本稿では，用いたコードの導出を一切触れませんでした．これについては，文献 [@Tartero-Krauth2023] をご参照ください．非調和振動子を系にとり，正準集団とみなすことで，分子動力学法，メトロポリス法からそのリフティングまで，種々のサンプラーを同じ題材で比較するアイデアをもらいました．こんなにわかりやすい解析ができるのかと心底驚きました．\n",
        "\n",
        "続いて，Metropolis-Hastings 法 → 非対称 MCMC → 連続時間 MCMC という発展の過程を，背後の物理過程の模倣からの離陸という視点で統一的に捉えることが出来るということは，[@Turitsyn+2011] の魅力的なイントロダクションで気付かされました．本文献はリフティングによる MCMC の非可逆化を抽象的に定式化して数値実験で検証したものであり，「ねじれ詳細釣り合い条件」を導入した点で，アイデアの宝庫といえます．\n",
        "\n",
        "リフティングによる Metropolis 法の非対称化について，[@酒井佑士2017] は貴重な日本語文献です．当該文献の第３章（の第２節）にここで紹介した内容が詳しくまとめられています．\n",
        "\n",
        "第 [-@sec-PDMP-advantages] 節で紹介しましたように，Zig-Zag サンプラーを用いたサンプリングではそのスケーラビリティが魅力です．この点については，Zig-Zag サンプラーが提案された論文 [@Bierkens+2019] でも，前面に押し出して解説されています．"
      ],
      "id": "716e2a5d"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/hirofumi48/Library/Jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}