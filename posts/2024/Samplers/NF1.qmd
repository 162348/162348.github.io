---
title: "ニューラル微分方程式"
subtitle: "シミュレーションなしの拡散モデルとしての連続正則化流"
author: "司馬 博文"
date: 2/14/2024
date-modified: 8/19/2024
categories: [Deep, Sampling]
bibliography: 
    - ../../../assets/mathematics.bib
    - ../../../assets/bib.bib
    - ../../../assets/bib1.bib
csl: ../../../assets/apalike.csl
abstract-title: 概要
abstract: Gauss 分布からデータ分布までの変換を，可逆なニューラルネットワークでモデリングする正則化流は，ODE に基づいて設計することもできる．この方法は Neural ODE や連続な正則化流 (CNF) ともいう．
listing: 
    -   id: flow-listing
        type: grid
        sort: false
        contents:
            - "NF.qmd"
            - "DiscreteDiffusion.qmd"
            - "NF2.qmd"
            - "Diffusion.qmd"
            - "NF3.qmd"
            - "SM1.qmd"
        date-format: iso
        fields: [title,image,date,subtitle]
---

{{< include ../../../assets/_preamble.qmd >}}

### 関連ページ {.unnumbered .unlisted}

::: {#flow-listing}
:::

## 連続時間正則化流 (CNF) {#sec-CNF}

### はじめに

ベクトル場 $F:\R^d\times[0,T]\to\R^d$ に関して ODE
$$
\dd{x_t}{t}=F(x_t,t)
$$
を満たす曲線 $(x_t)$ を積分曲線，またはフローという．

CNF では，$(x_t)$ はデータ分布とノイズ分布を結ぶダイナミクスとし，適切な $F$ をニューラルネットによって学習することが考えられる．

### 実装

$F$ を学習しさえすれば，Euler の方法によりフロー $(x_t)$ を数値計算できる：
$$
x_{t+\ep}=x_t+\ep F(x_t,t).
$$

さらに尤度の評価のためにはフロー $(f_t)$ の Jacobian が必要であるが，これは
$$
\dd{L}{t}(t)=\Tr\Paren{J_{F_t}(x_t)},\qquad L(t):=\log\abs{\det J_{f_t}(x_0)}
$$
を利用することで，$L$ の微分関数として得ることができる．

こうして，$(x_t)$ のシミュレーションと $(f_t)$ の Jacobian の計算が，いずれも $F$ が定める ODE の数値解を求めることに帰着された．

### Neural ODE [@Chen+2018]



### FFJORD [@Grathwohl+2019]

この方法では，$\Tr(J_{F_t}(x_t))$ の計算に Hutchinson の跡推定量を用いる．これにより計算は加速されるというのである．

### フローマッチング [@Lipman+2023]

フローマッチング [@Lipman+2023], rectified flow [@Liu+2023-Flow]

## 確率的補間

[@Albergo-Vanden-Eijnden2023] により提案されたもので，SiT (Scalable Interpolant Transformer) [@Ma+2024] でも用いられている技術である．

[@Albergo+2023]