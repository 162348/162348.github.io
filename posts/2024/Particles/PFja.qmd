---
title: "粒子フィルターの連続モデルへの適用（未完）"
author: "司馬 博文"
date: 1/24/2024
categories: [Particles, Computation]
toc: true
number-sections: true
code-block-bg: true
code-block-border-left: "#5AB5BA"
code-overflow: wrap
code-fold: true
bibliography: 
    - ../../../mathematics.bib
    - ../../../bib.bib
csl: ../../../apa.csl
crossref:
    sec-prefix: 節
    eq-prefix: 式
    def-prefix: 定義
    def-title: 定義
    thm-prefix: 定理
    thm-title: 定理
    fig-prefix: 図
    fig-title: 図
abstract-title: 概要
abstract: 粒子フィルターを，拡散過程に対して適用することを考える．未完です．すみません……．
---

{{< include ../../../_preamble.qmd >}}

## 導入：粒子フィルターとは何か？

粒子フィルターとは，逐次モンテカルロ法とも呼ばれ，あらゆる状態空間モデル（非線型・非Gaussでも！）に適用可能なサンプリングベースの非線型フィルタリングアルゴリズムとして，[@Gordon+1993] と [@Kitagawa1993] により独立に提案された．^[[@Kitagawa1996] は粒子という用語を用いていたが，**粒子フィルター** の名前は [@Carpenter+1999] による．] Kalman フィルターベースの手法の難点を克服したのである．

フィルタリング分布を，粒子と呼ばれる有限個の重み付けられたサンプルで近似し，そのサンプルを更新していくことで，逐次的にフィルタリング分布を近似する手法であるため，粒子フィルターと呼ばれる．

## リサンプリング：粒子フィルターの最重要メカニズム

逐次重点サンプリングとの違いは，表現する分布は変えずに，定期的に荷重を一様に均す **リサンプリング** という機構を導入しているために，荷重の縮退と呼ばれる，時間経過と共に有効サンプル数が極めて小さくなってしまう問題を回避している点にある．

粒子フィルターの妙は，そのサンプリング段階にあると言える．

## 粒子フィルターの適用範囲の拡大

しかし，粒子フィルターは時系列構造を持ったグラフィカルモデルに限った推論アルゴリズムではなく，**極めて汎用的な手法** であることがわかってきた．だから「逐次モンテカルロ法」という，「マルコフ連鎖モンテカルロ法」を連想させる名前も付いているのである．

複雑な目標分布 $\pi$ からサンプリングすることは，機械学習において重要な問題の一つであるが，テンパリングの発想で，これを近似する列
$$
\pi_1,\pi_2,\cdots,\pi_n=\pi
$$
を構成し，これを逐次的に近似する粒子フィルターを構成することで，多峰性にも強いサンプリング手法として使うこともでき，これを SMC サンプラーと呼ぶ [@DelMoral+2006]．

この粒子フィルターの逐次的な構造と，テンパリングを組み合わせる手法は，多くの設定で MCMC よりも安定性のある推論手法を提供する．

本稿も粒子フィルターの適用先を拡張する試みの一つであり，粒子フィルターを拡散過程に対して適用した場合の，リサンプリング効率と収束性について考察したものである．

## 連続モデルへの適用のモチベーション

区分確定的マルコフ過程 (PDMP: Piecewise Deterministic Markov Process) [@Davis1984] とは，ジャンプのみをランダムな要素とし，それ以外の期間では決定論的な動きをする確率過程である．

論文 [@Peters-deWith2012] において，Metropolis アルゴリズムの連続極限として PDMP が導入された．これを取り上げ，_Bouncy Particle Sampler_ (BPS) として一般化して提示したのが [@Bouchard-Cote+2018-BPS] である．

これらのサンプラーは次のように動く：

```{r}
library(RZigZag)
library(ggplot2)
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
x0 <- c(0,0)
result <- BPSGaussian(V, mu, n_iter = 100, x0 = x0)
ggplot() +
   geom_path(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#2F579C") +
   geom_point(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#2F579C") +
   labs(x="", y="", title="Bouncy Particle Sampler") +
   theme_void() +
   theme(text=element_text(size=12), axis.title=element_text(color="#2F579C"), plot.title=element_text(color="#2F579C"))
```

他の PDMP によるサンプリング法には，_Zig-Zag_ sampler [@Bierkens+2019-ZigZag] がある：

```{r}
V <- matrix(c(3,1,1,3),nrow=2)
mu <- c(2,2)
result <- ZigZagGaussian(V, mu, 100)
ggplot() +
   geom_path(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#2F579C") +
   geom_point(aes(x=result$Positions[1,], y=result$Positions[2,]), color="#2F579C") +
   labs(x="", y="", title="Zig-Zag Sampler") +
   theme_void() +
   theme(text=element_text(size=12), axis.title=element_text(color="#2F579C"), plot.title=element_text(color="#2F579C"))
```

これらのサンプラーは，離散時間の MCMC アルゴリズムよりも効率が上がることが知られている．

> Interestingly, continuous-time algorithms seem particularly well suited to Bayesian analysis in big-data settings as **they need only access a small sub-set of data points at each iteration**, and yet are still guaranteed to target the true posterior distribution. [@Fearnhead+2018-PDMC]

Radford Neal がニューラルネットワークにおけるパラメータの事後分布を近似するために Hamiltonian Monte Carlo を導入したように [@Neal1996]，連続時間の MCMC アルゴリズムは Bayes 深層学習に対する有力な手法となる可能性がある．^[[@Cobb-Jalaian2021] は HMC の拡張をしている．]

こうして，連続時間の MCMC アルゴリズムの持つ魅力的な性質が明らかになってきた．本稿は，その発見の過程を SMC において模倣し，粒子フィルターを連続モデルに適用してその連続極限に関して考察するものである．

## 粒子フィルターのアルゴリズム的描写

## 粒子フィルターの拡散過程への適用

