---
title: "動き出す次世代サンプラー"
subtitle: "区分確定的モンテカルロ"
author:
  - name: "司馬博文"
    affiliations: 
      - name: "総合研究大学院大学（５年一貫博士課程）"
date: "2/6/2025"
categories: [Slide, PDMP, Julia]
image: PDMPs/ZigZag_SlantedGauss2D_横長.gif
format:
  # html: default
  revealjs: 
    output-file: IRT-ZigZag_Slides.html
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: ../../../assets/profile.jpg
    css: ../../../assets/slides.css
    footer: |
      [学生研究発表会 司馬博文](IRT-ZigZag.qmd)
    scrollable: true
    smaller: true
    controls: true
    controls-layout: bottom-right
    self-contained-math: true
    shift-heading-level-by: -1
    toc: true
    toc-depth: 1
    toc-title: 目次
    number-sections: true
    theme: serif
    show-slide-number: all
    include-in-header: ../../../assets/forSlides.html
    tbl-cap-location: bottom
    margin: 0.05
bibliography: 
    - ../../../assets/2023.bib
    - ../../../assets/2024.bib
    - ../../../assets/2025.bib
csl: ../../../assets/apalike.csl
description: |
  スライドは[[こちら]{.underline}](Master_Slides.html)．
comment: false
code-fold: false
execute:
    cache: true
html-math-method: katex
abstract-title: 概要
abstract: |
  統計数理研究所．
  スライドは[[こちら]{.underline}](Master_Slides.html)．
slide:
  event-title: 学生研究発表会（統数研）
  place: 統数研２階大会議室
  time: 16:50-17:10
  pdf: ../posts/2025/Slides/学生研究発表会.pdf
---

## 区分確定的マルコフ過程 PDMP

![発表者開発の `PDMPFlux.jl` パッケージより．](PDMPs/ZigZag_SlantedGauss2D_横長.gif)

{{< include ../../../assets/_preamble.qmd >}}

### [P]{.color-unite}iecewise [D]{.color-unite}eterministic [M]{.color-unite}arkov [P]{.color-unite}rocess

![](IRT-ZigZag/IRT-ZigZag.001.png)

<!-- 
dX_t&=a(X_t)\,dt+\textcolor{ParisBlue}{b(X_t)\,dB_t}\\[+5pt]
dY_t&=a(Y_t)\,dt\hphantom{+b(X_t)\,dB_t}+\textcolor{unite}{\int_{\R^d}c(Y_{t-},u)\eta(dtdu)}
-->
### モンテカルロ法小史 1/2

![](IRT-ZigZag/IRT-ZigZag.002.png)

### モンテカルロ法小史 2/2

![](IRT-ZigZag/IRT-ZigZag.003.png)

### 拡散過程の何がダメなのか？ {auto-animate=true}

:::: {.columns}
::: {.column width="40%"}
![](PDMPs/Langevin.gif)
:::

::: {.column width="60%"}
::: {.callout-tip title="物理のくびき" icon="false"}
* 拡散過程は孤立系の平衡ダイナミクス

  [例]{.color-minty}：コーヒーの中に入れた砂糖粒子
* 必ずしもこれを模倣する必要はない．

  [例]{.color-minty}：コーヒーに砂糖を入れたあと混ぜずに見つめている人はいない
:::
::: {.callout-tip title="アルゴリズムのくびき" icon="false"}
* 拡散過程は正確にシミュレートできない．

  [{{< fa arrow-right >}}]{.color-minty} 離散化をし，数値誤差を Metropolis-Hastings ステップで補正する．

  [{{< fa arrow-right >}}]{.color-minty} アルゴリズムが重くなる．
:::
:::
::::

### PDMP の何が良いのか？ {auto-animate=true}

:::: {.columns}
::: {.column width="40%"}
![](PDMPs/ZigZag_SlantedGauss2D.gif)
:::

::: {.column width="60%"}
::: {.callout-tip title="物理：非可逆なダイナミクス" icon="false"}
* 「棄却」されるまで一直線に猛進

  [≒]{.color-minty} スプーンで混ぜる行為の模倣
* [人工的な対称性]{.color-unite}（例：詳細釣り合い）がない

  [{{< fa arrow-right >}}]{.color-minty} 収束が速い<br>
  [@Andrieu-Livingstone2021]
:::
::: {.callout-tip title="アルゴリズム：棄却フリー" icon="false"}
* PDMP は数値誤差なくシミュレートできる

  [{{< fa arrow-right >}}]{.color-minty} Metropolis-Hastings の棄却-採択の枠組みが要らない
:::
:::
::::

### PDMP の何が[難しい]{.color-unite}のか？ {auto-animate=true}

:::: {.columns}
::: {.column width="40%"}
![](PDMPs/ZigZag_SlantedGauss2D.gif)
:::

::: {.column width="60%"}
::: {.callout-tip title="[物理：非可逆なダイナミクス]{style='color: lightgray;'}" icon="false"}
* [「棄却」されるまで一直線に猛進]{style="color: lightgray;"}

  [≒ スプーンで混ぜる行為の模倣]{style="color: lightgray;"}
* [人工的な対称性]{.color-unite}（例：詳細釣り合い）がない

  [{{< fa arrow-right >}}]{.color-unite} 問題ごとにアルゴリズムを設計する必要<br>
  [{{< fa xmark >}}]{.color-unite} 汎用パッケージがない

:::
::: {.callout-tip title="[アルゴリズム：棄却フリー]{style='color: lightgray;'}" icon="false"}
* [PDMP は数値誤差なくシミュレートできる]{style="color: lightgray;"}

  [{{< fa arrow-right >}} Metropolis-Hastings の棄却-採択の枠組みが要らない]{style="color: lightgray;"}
:::
:::
::::

### 初の PDMP 汎用パッケージ

:::: {.columns}
::: {.column width="50%"}
Python パッケージ（Charly Andral）
![](PDMPs/pdmp_jax.png)
```zsh
pip install pdmp-jax
```
:::

::: {.column width="50%"}
Julia パッケージ（申請者開発）
![](PDMPs/PDMPFlux.png)
```julia
] add PDMPFlux
```
:::
::::

### 例 1/3 （申請者開発のパッケージより）

:::: {.columns}
::: {.column width="50%"}
![[@Bouchard-Cote+2018-BPS]](PDMPs/BPS_SlantedGauss2D.gif)
:::

::: {.column width="50%"}
![[@Bierkens+2019]](PDMPs/ZigZag_SlantedGauss2D.gif)
:::
::::

<!--
::: aside
目標分布は
$$
\rN(0,\Sigma),\qquad\Sigma=\frac{4}{3}\mtrx{1}{1/2}{1/2}{1}.
$$
:::
-->

### 例 2/3 （申請者開発のパッケージより）

:::: {.columns}
::: {.column width="50%"}
![[@Bierkens+2020]](PDMPs/Boomerang_SlantedGauss2D.gif)
:::

::: {.column width="50%"}
![[@Michel+2020]](PDMPs/ForwardECMC_StandardGauss2D.gif)
:::
::::

### 例 3/3 （申請者開発のパッケージより）

:::: {.columns}
::: {.column width="50%"}
![[@Vasdekis-Roberts2023]](PDMPs/SUZZ_SlantedGauss2D.gif)
:::

::: {.column width="50%"}
![[@Bierkens+2023]](PDMPs/StickyZigZag.gif)
:::
::::

## PDMP のシミュレーション

## 参考 {.unnumbered .unlisted visibility="uncounted"}

::: {#refs}
:::

### HMC との関係 {.unnumbered .unlisted visibility="uncounted"}

* Metropolis-Hastings ステップで，尤度の比が $1$ ならば棄却されない．
* そこで尤度の等高線をなぞることを考える．
* 運動量をランダムにサンプリングすることでエルゴード性を担保する．

ただし尤度の等高線をなぞることは数値計算の問題になり難しいが，ハイパーパラメータをうまくチューニングすることでほとんど独立なサンプルを得る．

* PDMP は HMC の一般化：運動量がリフレッシュされるまでは決定論的に動く
* HMC は PDMP の洗練：尤度の等高線をなぞることで多峰性に強い
